//     version: 2.1.46            - April 8, 2016
//									added cvjs_versionNumber, method cvjs_version()
//									tip[cvjs_active_floorplan_div_nr].css : +document.body.scrollLeft +document.body.scrollTop
//     version: 2.1.47            - April 11, 2016
//									DoTouchEnd(), 	DoTouchStart(), DoTouchMove, DoMouseDown, DoMouseUp +document.body.scrollLeft +document.body.scrollTop
//									stickynote, zoomWindow: +document.body.scrollLeft +document.body.scrollTop
//									adjustment of tooltip
//     version: 2.1.48-49         - April 15, 2016
//									various print controls
//     version: 2.1.50            - April 30, 2016
//									method: cvjs_AddTextAndTBorderOnSpaceObjectNode  with clipping controls added. SVG mask implemented in the same shape as room polygon
//     version: 2.1.51            - May 3, 2016
//									methods added: cvjs_setCustomToolTipValue(), cvjs_setCustomToolTip(), cvjs_getSpaceObjectIdList(), text objects in labels made invisible for mouse interaction
//     version: 2.1.52            - May 4, 2016
//									methods added: cvjs_NameObjectClicked
//     version: 2.1.53            - May 9, 2016
//									methods added: cvjs_setNoModalMode()   , hiding modals, but still keep system in standard highlight mode (not creation mode for admin)
//     version: 2.1.54            - May 12, 2016
//									methods added: cvjs_addMouseWheelControls()  , Safari: clear drawing when loading subsequent pages in multipage file
//     version: 2.1.55, 56,57     - May 12, 2016
//									methods added: wait_looper controls, wait_looper html embedded in init
//     version: 2.1.60            - May 18, 2016
//									methods added: check for tooltipLast >-1  , license key generation separated into MAKELICENSE js file
//     version: 2.1.61            - May 20-23, 2016
//									methods added: license key generation separated into MAKELICENSE js file
//        						    added prior to OnLoadEnd: cvjs_rPaper[cvjs_active_floorplan_div_nr].selectAll('text').attr({"stroke-width":"0"}); checkLicense() moved internally in code
//     version: 2.1.62            - May 24, 2016
//									methods added: moved redlines handling into main js files
//									methods added: cvjs_setPhpSaveRedlineUrlLocation through cvjs_deleteAllRedlines
//     version: 2.1.63-65           May 25-31, June 1-4,  2016
//									methods added: conversion through REST Api, added to check license key prior to rest conversion call
//     version: 2.1.66              June, 6-7,  2016
//									methods added: pinch controls for hyperlinks, cvjs_ApplyPatternOnUrl
//     version: 2.1.67-68           June, 10-12,  2016
//									methods added: cvjs_highlightURL
//									June, 13-16,  2016 methods added: handling of PNG direct load
//     version: 2.1.69           	July, 13,  2016
//									redesign: var a = 1, b = 2, c = 3, d = 4;
//     version: 2.1.70           	August 1-5,  2016
//									methods added: cvjs_LayerList, cvjs_setBackgroundColorHex();
//     version: 2.1.71           	August 7-16,  2016
//									methods added: text message handling xampp php error messages;
//     version: 2.1.72-73           August 16-19,  2016
//									methods added: redline commands, fixed bugs in repetitive save-load of redlines and stickynotes
//     version: 2.1.74              August 19,  2016
//									methods added: background color modal, user access controls
//     version: 2.1.75              August 22,  2016
//									methods added: controls of hidden and locked users
//     version: 2.1.76              August 22,  2016
//									methods added: modal html generation moved to js files
//     version: 2.1.77              August 23,  2016
//									methods added: click handler for redlines for delete
//     version: 2.1.78-79           August 23-26,  2016
//									methods added: multipage redlining, pagechange, save and load handling, dragable, changeable icon menu
//     version: 2.1.80-81           August 27- September 2,  2016
//									methods added: redline text, modals moved into js files, measurement commands, scaling of arrows
//     version: 2.1.82-84           September 2 - 4,  2016
//									methods added: modals and image maps encapsulated in js files, controls for which pages to display
//     version: 2.1.85-86           September 5 - 7,  2016
//									methods added: redline text, multipage redline bug fixes, messageModal implemented, version information added
//     version: 2.1.87           	September 8 - 9,  2016
//									methods added: first implementation of adjust line thickness
//     version: 2.1.88 -2.2.01      September 10 - 15,  2016
//									methods added: file loader, redline loader, 3rd page Space Management methods - first implementation
//     version: 2.3.01           		September 16 - 15,  2016
//									methods added: file loader, redline loader, 3rd page Space Management methods - first implementation
//     version: 2.3.04           	September 17 - 19,  2016
//									methods added: page name navigator, encapsulation of all file modals
//     version: 2.3.06           	September 19 - 22,  2016
//									methods added: svgz loading, external hooks for customer implementations in svg
//     version: 2.3.07           	September 23,  2016
//									methods added: external set color menu
//     version: 2.3.09           	September 27,  2016
//									methods added: line thickness modal added
//     version: 2.3.10-13           September 27-28,  2016
//									methods added: print of bitmaps, print on IE
//     version: 2.3.14-18           September 29-30,  2016
//									methods added: close print-modal after use, print for IE, redone calculation for print canvas
//     version: 2.3.19-26           October 2-3,  2016
//									methods added: magnifying glass completed, image location first draft,
//     version: 2.3.27           	October 4-7,  2016
//									methods added: print optimization
//     version: 2.3.28           	October 8-10,  2016
//									methods added: date check added to license key, fixed print of bitmaps with redlines in zoomed state
//     version: 2.3.29           	October 11-12,  2016
//									methods added: added US Leger, US Legal paper formats
//     version: 2.3.30-33           October 11-16,  2016
//									methods added: Optimized all modals for size, redesign of all modals, printobject up to 5.7Mb
//     version: 2.3.34-35           October 18-20,  2016
//									methods added: Fixed setting of print object for SVG/SVGZ in portrait mode, reorder print
//     version: 2.3.36           	October 20,     2016
//									methods added: POST mode for server php communication, updated PHP scripts,
// 									set php server file load to use POST instead of JSONP GET
//									cvjs_setServerAccessToPost(true);
//     version: 2.3.37-38           October 21-26,  2016
//									methods added: structure to control print via servlet, control redline save via servlet
//									methods added: cvjs_setServerHandlersPath, cvjs_setPrintObjectPath, cvjs_setPrintObjectPathAbsolute, cvjs_setServerSaveFileHandler, cvjs_setServerAppendFileHandler, cvjs_setServerDeleteFileHandler
//     version: 2.3.39              October 30-31,  2016
//									methods added:  B/W icons command
//     version: 2.3.40              November 2-7,   2016
//									methods added:  image object load and management, upload of images to folder
//									methods added:  servlet controls, save and load redlines
//     version: 2.3.41              November 8-17,  2016
//									methods added: icons for image upload and insert
//									methods added: image note datasctructure for save and load
//      							methods added: check count methods
//     version: 2.3.41              November 21,  2016
//									methods added: CAFM creation interface, initial work
//     version: 2.3.42              November 21-25,  2016
//									methods added: CAFM creation interface, global scope on vqXXX variables in .js files
//     version: 2.3.43              November 28 - Dec 4,  2016
//									methods added: controls for minimum classic skin zoom buttons, beginning of CAFM interface
//     version: 2.3.44-45           Dec 5-12,  2016
//									methods added: controls for minimum classic skin zoom buttons, beginning of CAFM interface
//									methods added: experiment with clipping of cones (heat emmision with walls)
//     version: 2.3.46-47           Dec 14-22,  2016:
//     version: 2.3.48-49           Jan 4-12, 16,  2017:
//									methods added: Localization, all modals any tooltips, re-formatting of all modals, localization of edit modals in file loader
//                                  methods added: Added absolute paths for fileload, redline, and imagefolder
//									methods added: cvjs_imageObjectServerName so a unique path corresponding to each image object can added
//     version: 2.3.50              Jan 18-19,  2017:
//									methods added: console.log changed to console.log
//									methods added: cvjs_SVGGroup = cvjs_rPaper[cvjs_active_floorplan_div_nr].svg(0,0, wid, hgt), wid and hgt are set high to avoid clipping -cvjs_masterbackground[cvjs_active_floorplan_div_nr] is adjusted afterwards -
//     version: 2.3.51              Jan 23,  2017:
//									methods added: access control for cross domain handling , updated clearCurrentRedline to not clear locked redlines
//     version: 2.3.52              Jan 30-Feb 08,  2017:
//									methods added: not delete locked redlines when clearing redlines, update algorithm so save and load afterwards works
//									methods added: check for php document for ax2017, change executable to ax2017
//
//     version: 2.3.53              Feb 12 - Feb 21,  2017:
//									methods added: adding placeholder for datamaps in Space Management display mode  - intial work
//
//     version: 2.3.54              March 6 - 14 ,  2017:
//									methods added: adding placeholder for datamaps in Space Management display mode
//									methods added: cvjs_setCustomCallbackMethodOnLoadEnd(true, myOnLoadEndMethod)
//									methods added: escapeUnicode() for all -layout commands, will allow AX to convert view/layout in Unicode
//									methods added: try-catch around cvjs_OnLoadEnd() and cvjs_OnLoadEndRedlines()
//     version: 2.3.55              March 20 - 29 ,  2017:
//									methods added: save screen image to server, produce two thumbnails, add file with stickynote content
//									methods added: loop over list of drawings, load them, make screen image, send to server, at end of loop merge files into pdf file
//									methods added: single pdf creation of screen image
//     version: 2.3.56              March 30 - April 4 ,  2017:
//									methods added: redone structure with /app folder to be able to load content in space management case, converters folder for more
//                                                 general structured case
//     version: 2.3.56          	April 5 - April 18 ,  2017: SVG click handler structure implemented: cvjs_addSVGClickHandler_onLoad(), adding list-directory handler cvjs_setServerListDirectoryHandler(),
//															    adding ability to create Multipage SVG through php and Servlet, cvjs_buildMultiPageSVG(directory)
//															    adding ability to convert Multipage PDF through pdfbox and batik
//     version: 2.3.57-59          	April 24 -April  2017: adding ability to convert Multipage PDF through pdfbox and batik
//     version: 2.3.60          	April 25: 	Updated into new release version. Set up for call-Api_Conversion
//     version: 2.3.61          	April 25 - May 17: 	Change of folder tcftp to tcpdf, script implementations on Linux
//     version: 2.3.61          	May   23 - June xx:  Updated SNAP library, added CAFM detect and add polygon command
//     version: 2.3.63-4          	May   June 1 - June xx: Made CAFM commands generic, data_host_connector structure, reorganized CAFM page
//     version: 2.3.64          	May   June 20 - June xx: implemented cvjs_initMasterBackground controls for file overlay
//     version: 2.3.65          	May   June 26 - June 27: callback variable cvjs_ajaxPostStatus for success when saved via ajax
//     version: 2.3.66          	June 29: remove id="dummy1" from images in modals
//     version: 2.3.67          	June 29 - July 2:  implemted cvjs_setInformationModalType(2); modals to be changed between bootstrap and non-bootstrap information modal mode
//     version: 2.3.68          	July 4 - July 6:  Init JS, clear modal and svg object, NOTE: Not working properly for hyperlink modals
//     version: 2.3.68          	July 7 - July 8:  Load multiple redlines; introduction work + immplemented: cvjs_loadMultipleRedlinesStickyNotes
//     version: 2.4.01          	July 9 - July 10:  Load&save multiple redlines; new structure to push and pop cvjs_stickyNotesRedlines, method cvjs_setLoadMultipleRedlinesStickyNotes() implemented
// 	   version: 2.4.02				July 11: Implemented controls cvjs_serverListDirectoryControllerRedlines to filter only .js files in file menu
// 	   version: 2.4.03				July 11:  Added cvjs_fileSaverRedlineMode , so that there can be dual modes for redline save/load, in which redlines can be loaded in sequence
// 	   version: 2.4.04				July 18:  Rearranged 3rd standard icon desk to be able to add comparison icons.
// 	   version: 2.4.05				July 19 - July 25:  Collaboration icons addeed, methods implemented

// 	   version: 2.5.01				August 1 - August 02:  Set up SVG mode in call-Api_Conversions.php, set up page-change to handle SVG page change, specify variable set in <metadata> section of SVG to replace JS variable declaration
// 	   version: 2.5.01 -				     - August 03:  SVG LayerList and change page arrays based on <metadata> variables, SVG for thickness change based on cv_ ID in SVG

// 	   version: 2.5.20 -			August 6 - 	        :  Trapping hyperlinks in SVG and create custom highligh and pass through methods
// 	   version: 2.5.20 -			August 15 - 	    :  Adding handling of DGN files, both .dgn and .pcf
// 	   version: 2.5.21 -			August 17 - 	    :  Click handler of -rl -tl setup in SVG files, new setup based on changed data structure in SVG files
//														:  cvjs: namespace controls all structural elements in clickable definitions in SVG, cvjs:node, cvjs:roomId, etc.
// 	   version: 2.5.22 - 27			August 18 - Sep 10	:  building key recognition for Esc for redline commands , flag	cvjs_interactiveMethod_Active[cvjs_active_floorplan_div_nr] to control double click or trying to call multiple methods
// 	                                                    :  replacing href with onclick in iconmenu
//														:  redoing array generation for file/load save modals redlines and files
//														:  unicode in layer id/class files, remove \ over all layers id and parsing layerNames for unicode
//														:  increased number of files entry in file-modal 20->40, increased split-size in print to 8550000 (+950000)
//														:  changed cvjs_masterbackground[cvjs_active_floorplan_div_nr] definition for SVG files, allowing zoom extents to work properly
//														:  added ability to parse current HTML url for parameters, for use in visualQuery applications for execute on load
//														:  added linecap on higlight areas, updated user display mode, console log more as debug mode
// 	   version: 2.5.28 - 			Sep 14  - Sep 17 	:  change b/w for SVG, change background color white/black. movrd draggable modals into main class
// 	   version: 2.5.29 - 			Sep 22   			:  callback from PNG generation

// 	   version: 2.6.01 - 			Sep 26-   			:  French language file, removed x in cvjs_masterbackground[cvjs_active_floorplan_div_nr] for bitmaps
// 	   version: 2.6.02 - 			Sep 26-  Oct 12  	:  Server side path setting in loading of .rw file. , added updated French language file, added SVG click API commande
// 	   version: 2.6.03 - 			Oct 13-  Oct 22   	:  Added flag to send Print as PDF down to server as ajax call. Flag added to only load cvjs_addMouseWheelControls once
//														:  Tomcat implementation including conversion servlet and controls. Servlets to work for Url and File.
// 	   version: 2.6.04 - 			Oct 23-  Oct    	:  Added parsing of drawing coordinate matrix, added methods for cvjs_SVGtoOriginal_X_coord, cvjs_SVGtoOriginal_Y_coord
// 	   version: 2.6.05 - 			Oct 30-  Nov 5    	:  Url encoding of json rest parameter for Tomcat 8
// 	  											    	:  Added controls for SharePoint server file loading cvjs_fileLoadFromSharePointServer(true); , programming of rest call + update of php code
// 	   version: 2.6.06 - 			Nov 8 -  Nov 12   	:  Sharepoint API programming. method added, cvjs_printToPdf_windowRelativeSize() for pdf print popup window control
//														:  Added method: cvjs_storeFillColors(), cvjs_layerNamefromObjectID(myObjectID) for SVG click handler, 
// 	   version: 2.6.07 - 			Nov 17 - Nov 30   	:  Added handlers for SVG hyperlink trapping and coloring: cvjs_InitializeSVGHyperlinkClick(), cvjs_colorSingleSVGHyperlink(), cvjs_resetSVGHyperlinkColors()
//														:  Added parsing for: AutoCAD Handle room polygons:  new methods: cvjs_makeLegendUpperRight() , cvjs_changeText_On_BlockHandle()
//														:  Added parsing for: trapping of layers from block layers, moving these layers into existing layer, if present, parsing for unicode layers and classnames
// 	   version: 2.6.10 - 			Dec 1  - Dec3    	:  Changed tooltip to be based on their position, tip[cvjs_active_floorplan_div_nr].css() , based on floorPlan embedded in div or external free 
//														:  Changed wait_looper location based on either embedded or free
// 	   version: 2.6.11 - 			Dec 4  - Dec 7   	:  Added: cvjs_addedObjectsToExtents for zoomextents based on canvas objects, not inital content, added: cvjs_zoomHere_ObjectId(rmid, factor)
// 	   version: 2.6.12a - 			Dec 7   - Dec 11 	:  Defined rPaper, masterBackground as arrays, defined counter for active floorplan number cvjs_active_floorplan_div_nr
//														:  implemented multipe version of gmenu, basic zoom desk
// 	   version: 2.6.12b - 			Dec 7    - Dec 11 	:  Defined rPaper, masterBackground as arrays, defined counter for active floorplan number cvjs_active_floorplan_div_nr
// 	   version: 2.6.12c - 			Dec 12   - Dec 15 	:  Added _floorplan_div to all modals
// 	   version: 2.6.12d - 			Dec 15   - Dec 31 	:  Enable all modals in single floorplan_div environment.  
//														:  to Fix zoom issue on PDF Batik SVG files, to Fix cross-domain error on SVG load of Batik SVG files
//														:  cvjs_resetZoomPan_SetMasterBackground, zoom to bounding box, one instance before onLoadEnd with update of masterbackground, update actualLL? x4 , and scalefactor on redlines
//														:  load of multipage PDF to SVG via php, 
//														:  xmlns:NS , for printing on IE before passing over to canvg , the svg has to be parsed for added namespaces, also TMS namespace references has been removed
//														:  A,B,C remove : for pagechange on IE 11, added myNode.removeChild loop to get rid of previous SVG file in DOM
//														:   cvjs_InitCADViewerJS_app_highLight() implemented, to control style of highlight objects 
//														:  Added cvjs_getAllRedlines_UserIdList(), cvjs_getAllRedlines_TextList(), cvjs_hideAllRedlines_ExceptUser(userId), cvjs_lockAllRedlines_ExceptUser(userId)
//														:  Added conditional flag for SharePoint loading of bitmaps and pdf files:   cvjs_LoadDrawingPDF_base(FileNamePath), SetUpVqPngDefault_base(fileName)
// 	   version: 2.6.12e - 			Jan 7   - Jan xx 	:  Updated all modals to be css class based instead of css id based
// 	   version: 2.6.12f - 			Jan 7   - Jan xx 	:  Updated all modals to be css class based instead of css id based
// 	   version: 2.6.12g - 			Jan 7   - Jan xx 	:  Updated all modals to be css class based instead of css id based
// 	   version: 2.6.12h - n			Jan 7   - Jan xx 	:  Updated all modals to be css class based instead of css id based
// 	   version: 2.6.12o				Jan 19  - Jan 23 	:  Updated page change for multi instances, updated redlines for multi instances
// 	   version: 2.6.12p				Jan 19  - Jan 23 	:  Updated page change for multi instances, updated redlines for multi instances
// 	   version: 2.6.12q				Jan 27  - Jan 29 	:  All tables updated for control of size and colors cvjs_74.css.  (file load missing)
// 	   version: 2.6.12r				Jan 30  - Jan  		:  Updates for internal resize after load , not relying on jQuery(window).resize(); 
// 	   version: 2.6.12s				Jan 31  - Feb 1  	:  Creation of Stamp command, rewrite of bitmap load method.  Still drag + tooltips not properly implemented.  
// 	   version: 2.6.12t-u-v			Feb 2   - Feb 6  	:  Implementation of Load/Save of Stamp SVG files, general SVG layer save/load. Optimization of bitmap load, cross domain issue  
// 	   version: 2.6.12t-u-v			Feb 6   - Feb 6  	:  floorplan_div_Array is now being initialized at initalization, not at load.  
// 	   version: 2.6.14  		    Feb 7   - Feb 8  	:  make timer when loading two drawings simultaniously, make conversion parameters to each floorplan_div  
// 	   version: 2.6.14a  		    Feb 9   - Feb 10  	:  removed references to init.js at LoadDrawing  
// 	   version: 2.6.14b  		    Feb 14     			:  Redline load error, current page uninitialized at save,  removed reference to init.js at load 
// 	   version: 2.6.14c  		    Feb 14    			:  floorplan_div_Array is now being initialized at initalization, not at load.  
// 	   version: 2.6.14d  		    Feb 14    			:  extended bitmap print to check extents of custom layer and use those extents to include (stamps) in printing, cvjs_customLayerContentAdded
// 	   version: 2.6.14e  		    Feb 16  - Feb 20  	:  Scalefactor on masterbackground to make drag on extended canvas possible, scaling of handleGroup for drawing of redlines
// 	   version: 2.6.14f  		    Feb 21  - Feb   	:  allow load of jpeg files, previously only jpg allowed.
// 	   version: 2.6.14g-h  		    Feb 23  - Feb   	:  methods to extract and save all stickynotes as text  (separation of methods already done for thumb generation for calan)
// 	   version: 2.6.14i  		    Mar 3  -  Mar 6   	:  For PDF reading added java class to detect number of pages, generate list of pages, and then added timer to wait for page to be converted,
//														:  Updated PHP config, php code and new batch files and java code    
//														:  Added parser to read old type redlines.
// 	   version: 2.6.14j  		    Mar 7  -     		:  Added scale matrix to masterbackground, added scale matrix for handlegroup for all redlines and Zoom Window.
// 	   version: 2.6.15b  		    Mar 10 -     		:  Added cvjs_setCustomPdfFolder, so a pre-converted pdf can be loaded in instead of converting from scratch each time 
// 	   version: 2.6.15c  		    Mar 12 -     		:  Multi-user SharePoint integration, use -Xmx1424m" for pdf creation, in php.ini set: post_max_size=40M
// 	   version: 2.6.15d  		    Mar 13 - Mar 14    	:  Mousewheel zoom in 2.5% increments, zoom in/out in 10% increments
//														:  containment of modals: cvjs_containmentModalLeft, cvjs_containmentModalTop, cvjs_containmentModalRight, cvjs_containmentModalBottom
//														:  cvjs_SVG_multiPagesFlag[cvjs_active_floorplan_div_nr] = false; in non-pdf branches for page change icons
//														:  page change by input documentPageChangeModal_ added with update in cvjs_74.css to set it up properly 
// 	   version: 2.6.15e  		    Mar 14    			:  On loading sticky notes, check for maximum index instead of number of notes
// 	   version: 2.6.15f  		    Mar 15 - Mar 16     :  Bug fix,cvjs_changePageByNumber.  Save stickyNotes, scale them to 0.01 , Load StickyNotes, cvjs_setUpVqStickyNotes_currentNode_vqIndex_passedInstanceonly(), apply transformation and data ID, the software (?) takes care of the rest 
//														:  cvjs_updateDrawingRedlines(), added redlines layer object, stickynote now are interactive as after master_, but vqRooms lost
//														:  added: x = x+document.body.scrollLeft+factor, based on scale; to make note to insert into pdf, for create note and move note, cannot move behind handleGroup										
//														:  removed translation after insertion, notes now inserts correctly 
//	   version: 2.6.15g  		    Mar 17   			:  Added: cvjs_getCurrentPage()
//	   version: 2.6.15h  		    Mar 19   			:  Added, internal reorder of cvjs_SVGGroup to group objects to allow rotation of canvas
//	   version: 2.6.20a  		    Mar 20   			:  Build new user controls to rotate files on canvas.
//	   					  		    Mar 20   			:  New control pageChange_05.png, updated in cvjs_75.css , rotate backwards and forwards as icons on control
//	   					  		    Mar 20   			:  cvjs_saveStickyNoteInfo(), XML syntax <StickyNote> </StickyNote>
//	   version: 2.6.20b  		    Mar 21   			:  Page change keep redlines activated for DWG, PDF, redone zoom extents scaling, based on cvjs_customLayerContent
//	   version: 2.6.20c  		    Mar 21   			:  Implemented into redline format:  drawingRotation: -90, automated rotation when pagechange function cvjs_updateDrawingRedlines() 
//	   version: 2.6.20d  		    Mar 23   			:  SharePoint interface functionality, upload of files, methods initiated
//	    		    				Mar 25   			:  Change encapsulating svg from 3500 ->10000, clipped vector/bitmap (siemens) sample,
//	   version: 2.6.20e  		    April 2   			:  Implemented cvjs_saveFloorplanAsPDFtoSharePoint(), cvjs_makeStampUpperRight() modified for rotation, modified for line thickness
//	   version: 2.6.20f  		    April 6   			:  Implemented php, ajax calls to Merge and Split PDF files. Split embedded in load pdf file code. Java+php+js code
//	   version: 2.6.30a  		    April 8   			:  Implemented 5 icon pages, page 3 for pdf publish command
//	   version: 2.6.30b  		    April 8   			:  PDF Publish command part programming
//	   version: 2.6.30b  		    April 11   			:  PDF Publish command part programming
//	   version: 2.6.40a  		    April 12  			:  Change in interface, zoom in/zoom extents moved to top navigation bar, pdf download moved to page 2, page 3...
//	   version: 2.6.40b  		    April 13  			:  temp file on server to have same name as with datestamp, make html pdf encapsulation on server on server and then load
//	   version: 2.6.40c  		    April 16  			:  Flag to not include Print as PDF in Print Command,cvjs_PrintModal_PrintPDF. 
//	     		    				April 16  			:  Rewrote print method to be based on Style settings for: media=\"print\"
//	     		    				         			:  Old rotation mode for Landscape, for IE, Firefox, Edge
//	     		    				        			:  New media=print mode for all browsers in Portrait, but width adjustment for Chrome
//	   version: 2.6.40d  		    April 17 			:  Added fontSize to redline Text modal, cache issue for .js files: createjscssfile(newfilename+"?dummy="+Math.random(), filetype); 
//														:  also for: loadJSbase(file)
//	   version: 2.6.40e  		    April 18 			:  cvjs_updateDrawingRedlines(redlineStickyNoteLayer); // removed creation part for Arrow, it was placed out double on the canvas, and would not delete
//	   version: 2.6.41a  		    April 18 			:  updated algorithm for mouse-wheel coordinates: (viewBoxWidth[cvjs_active_floorplan_div_nr] - vBWo)*(x_offset);
//	   version: 2.6.41b  		    April 20 			:  built: cvjs_setLooperPosition() for load. Tooltip cvjs_showStickynoteTip fixed,  
//	   version: 2.6.50a  		    April 23-24 		:  implementation of DXF output for Redlines, first part
//	   version: 2.6.50b  		    April 25 			:  Tooltips when cvjs_windowResize_fixedSize(), redone and removed methods, ensured all modals open inside floorPlan div
//	   version: 2.6.50c  		    April 25 			:  Redline polyline, added thickness scalefactor. 
//														:  DXF: Added handle, line thickness, closed polygon in RedlineFillPolygon, 
//	   version: 2.6.51a  		    April 26 			:  Rewrite DXF output to be based on DraftSight template
//	   version: 2.6.51b  		    April 27 			:  DXF output. Add xdata attributes
//	   version: 3.0.10a  		    May   02 			:  Renamed for AX2019 upload and release
//	   version: 3.0.10b 		    May   02 			:  Reformatted for Google Closure, both .js files now compiled over to single cadviewer.min.js 
//	   version: 3.0.10c 		    May   02 			:  Updated .php configuration and main call-Api_Conversion for AX2019 conversion.
//	   version: 3.0.10d-g 		    May   02-03 		:  Replaced $ with jQuery   $.  $(
//	   					 		    May   02-03 		:  Page change command vjs_changeToIconPage fixed, fadeout 1500 ms on redline modal when saving redlines
//	   					 		    May   02-03 		:  Add pagename to redlines, so they can be individually turned on/off in model/paperspace
//	   version: 3.0.10h 		    May   04 			:  Put remove files after print as default, updated patch settings cvjs_setServerLocationURL) and removed print settings from demo pages
//														:   
//	   version: 3.0.11a-b 		    May   05 - 06		:  Rewritten Compare methods to be based on DWG files, cvjs_OnLoadEndCompareDrawings(), variable secondLoading, controls if SVG 
//														:  is loaded into #main_master_"+floorplan_div_Array[cvjs_active_floorplan_div_nr]+"_secondfile"
//	   version: 3.0.11c 		    May   06 - 07		:  for xlink hyperlinks, position masterbackground in back: 			cvjs_SVGGroup[cvjs_active_floorplan_div_nr].before(cvjs_masterBackground[cvjs_active_floorplan_div_nr]);
//	   version: 3.0.11d 		    May   08 - 			:  Set cvjs_setCustomPdfFolder() in LoadDrawing when loading second PDF file from FileModal
//	   							    May   09 - 			:  Setting of print entire document in Publish PDF, included functionality to merge PDF
//	   							    May   09 - 			:  in each cvjs_removeHandleFunc_ : then save redline screen as PDF if FileName.indexOf(".pdf")>-1 && cvjs_customPdfFolderFlag
//														:  What to do about php loaded files?  think OK, because name in ? &name= 
//														:  StickyNote insertion, stroke on text too fat. Adjusted
//	   version: 3.0.11e 		    May   09 - 			:  Clear current redline before load of new drawing from filemenu
//														:  cvjs_InitializeSVGHyperlinkClick(floorplan_div) extended to handle drag of xlink hyperlinks
//	   version: 3.0.11f 		    May   09 - 			:  xlink, drag improvements
//	   version: 3.0.11g 		    May   09 - 			:  Setting SVGGroup to use masterBackground drag ,  cvjs_SVGGroup[cvjs_active_floorplan_div_nr].drag(dragMove, dragStart, dragEnd);
//	   version: 3.0.12a 		    May   10 - 			:  For: cvjs_customMethodForOnLoadEnd , set cvjs_loadInProgress flag.
//	   version: 3.0.12b - h 		May   11 - 15   	:  Moved dragStart, dragEnd, dragMove externally , changed cvjs_InitializeSVGHyperlinkClick() to be similar to vqRooms setup
//	   version: 3.0.12n 			May   17   			:  moved borders around highlights in cvjs_InitializeSVGHyperlinkClick
//	   version: 3.0.13a 			May   17   			:  Threshold for xlink pinch operation
//	   version: 3.0.13a 			May   17   			:  Border thickness on xlink objects 
//	   version: 3.0.13b 			May   17   			:  Parsing of non formatted layers. Added layer URLs off to cvjs_InitializeSVGHyperlinkClick 
//	   version: 3.0.13c 			May   17   			:  Updated arrays for cvjs_colorSingleSVGHyperlink and cvjs_resetSVGHyperlinkColors
//	   version: 3.0.13d 			May   21   			:  cvjs_layerOff, cvjs_LayerOn, added code for handling layername (layer list all on/off would stall on individual _block layers)
//	   version: 3.0.13e 			May   21 - 24  		:  Add original file array,  e-mail interface, PDF publishing  
//	    							May   21 - 24  		:  cvjs_serverSendPDFEmailController, cvjs_emailScreenAsPDFwithRedlines()
//	   version: 3.0.13f 			May   25 - 28		:  text_move1, redline text, transformation would make Acrobat Standalone crash  
//														:  cvjs_setLooperPosition , cvjs_windowResize_position()
//	   version: 3.0.13g 			May   28			:  adjustment of QuickCount symbol, ImageObject tooltips implemented
//	   version: 3.0.13h 			May   28 - 			:  adjustment of QuickCount symbol, ImageObject tooltips implemented
//	   version: 3.0.13i 			May   30 - 			:  All layer off at layer parsing, then layers on. Extents issue for JPMC DWG drawing, works on all browsers besides Chrome! (extents on several layers are off)
//     version: 3.0.13j             May   30 -          :  in cvjs_resetZoomPan_SetMasterBackground(active_floorplan_div_nr) added cvjs_checkLicense()
//														:  in cvjs_setLicenseKeyDirect, parse for json
//														:  change trial mode to be based on bbox extents in masterbackground
//     version: 3.0.13k             May   30 - 31       :  cvjs_SVGGroup[cvjs_active_floorplan_div_nr].add(notLicensed)
//														:  only license key check at creation of masterbackground
//     version: 3.0.14a             June  1   			:  added direct SVG load under sharepoint server
//     version: 3.0.14a             June  1   			:  in cvjs_publishPDFViaButton(), changed to tcpdf creation library, note! new php files!
//     version: 3.0.14c             June  4   			:  changed init AX version for servlet based conversion
//     version: 3.0.14d             June  7-8   		:  replace cvjs_serverDeleteFileController globally for delete-file.php
//														:  implementing custom method cvjs_dragBackgroundToFront_SVG() 
//														:  PNG, masterbackground to front + mouse drag handler activated
//														:  If PDF, we put masterbackground on top (bitmaps in documents) 
//     version: 3.0.14e             June  8   			:  new method cvjs_AddTextAndTBorderOnSpaceObjectId_GlobalHeight
//     version: 3.0.14e             June  11   			:  vqRooms[cvjs_active_floorplan_div_nr]. in Space, SpaceLayerList, 
//     version: 3.0.14f             June  18   			:  panWithThumb, try/catch on zoomWindow 
//     version: 3.0.14f             June  19 -June 21 	:  various stuff for space object activation, see custom_host_parser.js 
//     version: 3.0.14g             June  25 			:  Debug for cvjs_rPaper after second initialization
//     version: 3.0.14g             June  25 			:  Download Space Object processed SVG, iconpage 5, cvjs_saveAsSVG(floorplan_div)
//     version: 3.0.14g             June  26 			:  cvjs_getStickyNotesRedlineXML()
//     version: 3.0.15a             July  1 			:  XML DXF merge added to interface
//     version: 3.0.15a             July  2 -3			:  cvjs_mergeDXFViaButton(floorplan_div) with all associated functions
//														:  /merged/ folder and /converters/dwgmerge2019/ folder
//														:  /br/ in text objects
//     version: 3.0.15b             July  10			:  download_link() implemented
//     version: 3.0.15c             July  24			:  fix of multipage PDF loading from within Sharepoint structure, when setting op a fixed /conversion/pdf/ folder
//     version: 3.0.15d             July  27			:  (labelled as 15c in comments):  ALL interface methods has been updated 
//     													:  so they can be called through external API with floorplan_div as parameter
//     version: 3.0.16a             Aug   07-09			:  API methods to extract and set scale information , cvjs_setCurrentMeasurementUnits(), cvjs_getSvgToWorldUnits(), cvjs_getCurrentMeasurementUnit()
//     version: 3.0.16a             					:  cvjs_resetInitialization_FloorplanDiv()  , pane change UNI Stuttgart application
//     version: 3.1.20b            NEW VERSION NR		:  returns false if cvjs_resetZoomPan(); is not called with a floorplan_div
//     version: 3.1.20b             					:  updated: cvjs_loadStickyNotesRedlines(floorplan_div_Array[cvjs_active_floorplan_div_nr]);
//														:  cvjs_saveStickyNotesRedlines(floorplan_div_Array[cvjs_active_floorplan_div_nr] )
//														:  cvjs_clearCurrentRedline( floorplan_div_Array[cvjs_active_floorplan_div_nr] )
//														:  cvjs_insertImageLink(floorplan_div)
//														:  cvjs_openFileLoadToServer(floorplan_div_Array[cvjs_active_floorplan_div_nr])
//     version: 3.1.20c            Aug 15 - 			:  cvjs_setLooperPosition()
//														:  cvjs_CalibrateMeasurementCallback() 
//     version: 3.1.20d            Aug 15 - 			:  cvjs_QuickCountCallback() , renamed method, seems to calculate double click twice, esc works. 
//     version: 3.1.20e            Aug 16 - 21			:  Added: FileNamePath.indexOf('fileName=')>-1 for preconverted .svg load through asp, php, etc. 
//														:  for all page-change methods, added "fileName=" check for asp type page change
//														:  added: cvjs_getFileController, for page change when loading pdf	
// 
//     version: 3.1.20f            Aug 22				:  cvjs_PageChangeList() , similar to CADViewer Pro page change list
//     version: 3.1.20g            Aug 24				:  if (cvname == "cvjs:area") cvjsArea = this.value;
//     version: 3.1.20h            Aug 28-29			:  if (cvname == "cvjs:area") cvjsArea = this.value;
//														:  cvjs_AddTextAndTBorderOnSpaceObject  , var i=0;
//     version: 3.1.20i            Aug 31				:  fixed double click eescape process in QuickCount
//														:  cvjs_MeasurementCallback();
//     version: 3.1.21a-b          Sep 8 -13			:  Implemented area measurement command
//     version: 3.1.21c            Sep 15				:  Controls of server side print path to php cvjs_setServerLocationURL , so pdf is saved in the same location path as fileLoader
//     version: 3.1.21d            Sep 20				:  
//     version: 3.1.21e            Sep 20  23			:  Make ellipse redline  cvjs_drawSpaceObject_RedlineEllipse(),  cvjs_drawSpaceObject_RedlineEllipseCloud()
//     version: 3.1.21f            Sep 25				:  Implemented cvjs_setDragBackgroundOnTop(floorplan_div) to enable drag on image and text rich pdf files
//     version: 3.1.21g            Sep 26				:  Cloud is generated interactively on drag. Ellipse implemented in save redline.js file redline (xml not yet implemented)
//     version: 3.1.21h            Sep 27-28			:  cvjs_closeAreaMeasurement() and MeasurementModal is extended with button to close measurement polygon
//     version: 3.1.21i            Oct 1				:  cvjs_svgToWorldUnits = cvjs_get_dwg_scaled_value(1.0, ) based on cvjs_drawingCoordinates
// 								   Oct 1				:  Implemented: cvjs_buildFolderTree(FileLocation, "floorPlan"); for generation of right side menu tree
//     version: 3.1.21j            Oct 2				:  Implemented cvjs_CleanLayout(floorplan_div), 
//														:  added: variable cvjs_buildFolderTree_crossDomain, cvjs_selectPageFromList(floorplan_div)
//								   Oct 3				:  mouseup_stickynote() changed transformation, mousedown_movestickynote, mousedown_imagelink, 
//								   Oct 3                :   .appendTo('body'); on all modals for initial positioning 
//     version: 3.1.21k            Oct 4				:  changed transformation in: changed transformation, mousedown_movestickynote, mousedown_imagelink
//														:  function cvjs_showIconnoteTip modified .appendTo('body'); for imagenotes
//														:  added scrollLeft scrollTop for imagenotes , changed all .appendTo('body'); to .css({position: "fixed"});
//					l									:  add_file_object_image() modification	
//     version: 3.2.01a            Oct 8				:  renamed for new release and upload
//     version: 3.2.01b            Oct 10				:  renamed for new release and upload
//     version: 3.2.01b            Oct 14				:  only uri encoding for conversion when % not present in filename, works for ServerLocation, ServerUrl on Servlets
//     	           				   Oct 14				:  works for ServerLocation, ServerUrl on Servlets
//  							   Oct 14               :  conversion content paths,  replace \\ for / in all originating content .replace(/\\/g, "/");
//                                 Oct 18				:  cvjs_setBackgroundColorHex() , changed to work for floorplan_div   (adding _svg)
//                                 Oct 18				:  Added KO-KR , language with translation
//     version: 3.2.01c            Oct 18				:  Updated language file for other languages, made sure all changed are carried into french, spanish and portuguese
//     version: 3.2.01d            Oct 19				:  Editing Merge PDF, Upload, use current path from foldertree/latest converted file.
//								   Oct 19 				:  Implemented cvjs_serverCopyFileController, cvjs_setServerCopyFileHandler 	 
//								   Oct 22 				:  Added cvjs_setCustomMergedEmailHandler, cvjs_serverMergeDWGHandler
//								   Oct 23				:  Added code for cvjs_screenToPDF_Controller   - servlet code
//     version: 3.2.01e            Nov 6				:  Styled selection boxes, 3.2.0.css file: cvjs_paperSize, cvjs_paperOrientation, cvjs_unitForScale 
//								   Nov 8                :  id_data_connector, location changed, now based on cvjs_ServerUrl, updated to /space/html/nav_user_SpaceObjects_A_1_10.html
//														:  added: cvjs_buildCustom_4_dropdownMenu, cvjs_buildCustom_5_dropdownMenu
//														:  added: var cvjs_jsTreeSelectionCurrentData = ""; var cvjs_jsTreeSelectionCurrentDataLength =0; cvjs_custom_jsTreeSelection, for including tree structure in maximo case
//     version: 3.2.01f            Nov 15				:  batch print pdf: sendServerStringToServer, updated cvjs_serverSavePrintModeController == 2 to be a server path. 
//														:  Note: setting done in method, not as an inital control parameter
//								   Nov 16			    :  in finish_measurement(),added flag to clean out removeHandleFunc if Area
//								   Nov 16			    :  cvjs_measurearea_checkbox added removeHandleFunc depending on area/length
//								   Nov 19			    :  updated cvjs_buildFolderTree() to check string length of server path
//     version: 3.2.01g    Nov 20	:  3.2.01g   - change to cvjs_add_file_object  and have the file element element as parameter
//								 	: <div style='height: 0px;width: 0px; overflow:hidden;'><input id="cvjs_upfile_2" type="file" multiple onchange="cvjs_add_file_object('cvjs_upfile_2');"/></div>
//  
//									:  when axupload is finish:  we add a try-catch refresh of the #tree , jstree for service implementations
//									: 	fixed onFineChange:\'cvjs_setBackgroundColorHex(this)\'}   // bug in backgroundchange
//									:   added HandleLayer to Space Layer modal, so dual processing -hl  and -rl/-tl
//						   Nov 22   :   To make consistant with service added variables rest_serviceCall, rest_applicationPlatform - rest_ServiceToken;
//									:   added cvjs_conversion_setApplicationServiceParameters(), and updated 
//									:  	added rest_leaveStreamOnServer controls
//									:   Russian language file
//     version: 3.2.01h   	Dec 04	:   Added Malaysian language translation
//         					Dec 05	:   Added Chinese-Simplified language translation
//     version: 3.2.01i   	Dec 10	:   change_space_fixed_location() added cvjs_ in cvjs_active_floorplan_div_nr);
//									:   new floor_plan objects, tip[cvjs_active_floorplan_div_nr].css({ position:'fixed'});
//     version: 3.2.02a   	Dec 13	:   function cvjs_drawSpaceObject_CustomRectangle(svgImagePath, spaceObjectId) to add custom space content with background (HVAC case)
//     version: 3.2.02b   	Dec 14	:   updated call using in all method calls, currentNode_attributeStatus = "unpopulated";  // 3.2.02b
//     								:   added: cvjs_addRectangleCustomSpaceObject() method, including sorting of background objects, added behind last cv_ object.
//     version: 3.2.02c   	Jan 07	:   cvjs_AddTextAndTBorderOnSpaceObjectId()   - added to cvjs_setCreationMode
//				2019		Jan 08	:   // AUTOCAD HANDLE PARSING  - cvjs:xdata handling added to branch
//							Jan 08  :   id_main_data_template_type added in custom settings and in  cvjs_setCreationMode
//									:   added: creationModeModal_   and cvjs_creationInputType , to control input type
//									:   /space/html/nav_admin_SpaceObjects_C_1_06.html
//     version: 3.2.02d   	Jan 09	:   setting worldUnits.units =cvjs_units=mm as default. Include cvjs:area branch to calculate unit, display and store as m2 (shall this be changed?)
//							Jan 10-13  :   cvjs_batchConvertDrawingsToPDF_CustomReport()  implemented
//     version: 3.2.02e   	Jan 14	:   introduced an handle: cvjsHandle into node structure to be able to update original drawing with xdata
//
//										<cvjsAddXdataToHandle>
//											<totalUpdateHandles>1</totalUpdateHandles>
//											<updateHandle>
//												<handle>2901</handle>
//												<altName>myNewHandle_01</altName>
//											</updateHandle>
//										</cvjsAddXdataToHandle>
//
//     version: 3.2.02f   	Jan 16	:  all parameters around icon interface show/hide as array of floorplan_div: cvjs_iconInterfaceDisabled[]
//							Jan 25  :  Quick count adjusted for doubleclick 
//							Jan 25  :  Save of .rw files in asp.net or servlet mode 
//     version: 3.2.02g   	Jan 26	:  CreationModeModal: added to all other languages (not translated)
//							Jan 26  :  cvjs_PrintIconDisabled  , Enable/ cvjs_DisablePrintIcon("floorPlan");
//							Jan 30  :  nav_user_SpaceObjects_A_1_12, added cvjs_hideInformationModal(floorplan_div), cvjs_displayInformationModal(floorplan_div, textString, modalHeight)
//							Feb 04  :  cvjs:area  added "in"/inch in area calculation
//							Feb 05  :  adjustment: cvjs_displayInformationModal
//     version: 3.2.02h   	Feb 06	:  cvjs_units -> cvjs_units[] , cvjs_svgToWorldUnits[]
//        					Feb 07	:  
//							Feb 10  :  Added flag to be able to demo change handle ID, demoonly_customHandleChange; 
//							Feb 12  :  Set to default color when leaving the Space, setUpVqRooms()


//     version: 3.3.01a   	Feb 12	:  Start on new interface design
//							Feb 13-14: Implementing topIconMenu, new Icon controller
//							Feb		 :  changed class: controls_min  to position minimum icon menu to topIconMenu
//							Feb 14   :  Added tooltip to minimumDisk
//									 :  Adding placeholders to topIconBar
//     version: 3.3.01b   	Feb 15	 :  Added text string. 	NextMenuPage: 'Next Menu Page'
//     								 :  Extended programming in cvjs_3.3.0.css   - topIconMenu settings for highlight
//									 :  Setting text object on topIconBar navigation bar: #floatpagemenuText1_topBar_, #floatpagemenuText2_topBar_
//							Feb 16   :  Removed "pages" from nav_user_SpaceObjects_A_3_3_01
//     version: 3.3.01c   	Feb 17	 :  Added xml to js parser
// 							Feb 18   :  cvjs_LoadTopIconMenuXML() implemented
//									 :  hideOnlyPop(), set  vqRoomMouseSelect = false;, and set vqRooms, so with modal active, highlight is permanent	
//     version: 3.3.01d   	Feb 19	 :  based location of topMenu as function of <div> location, updated _resize methods
//									 :  display:'inline-block'  for tooltip on top menu items
//							Feb 20   :   cvjs_windowResize_position_WidthHeight , updated to return if <div> not intialized, reposition topNavigation bar
//     version: 3.3.01e   	Feb 20	 :  implemented _resizeWindow_ methods, removing boolean variable, exchanged in all samples
//									 :  cvjs_floorPlanInsertImageEncapsulate  , given init location  
//							Feb 27   :  cvjs_makeStampUpperRight()  - updated code 
//							Feb 27- Mar 1   :  floodfill algorithm
//     version: 3.3.01f   	Mar 1	 :  second canvas object
//							Mar 5    : cvjs_serverSavePrintModeController = 6;  to make a bitmap image of floodfill spaces
//     version: 3.3.01g   	Mar 7	 : assignment of at load: cvjs_svgToWorldUnits[cvjs_active_floorplan_div_nr], cvjs_units[cvjs_active_floorplan_div_nr] 
//     version: 3.3.01h   	Mar 10	 : update cvjs_LoadTopIconMenuXML() for space menu XML input
//                          Mar 12   : cvjs_connectTextInstances(textString1, textInstance1, textString2, textInstance2, lengthfactor1, lengthfactor2)
//                          Mar 15   : cvjs_LayerListSpaceObject() added mode 3 for floodfill - Space ID 
//							Mar 15   : moved all cvjs_floodfill() processing into 3.3.01h
//     version: 3.3.02a   	Mar 15	 : .mouseout() in cvjs_setUpVqRooms_currentNode()
//     version: 3.3.02b   	Mar 20	 : cvjs_serverSavePrintModeController = 7, callback after a png has been created
//							Mar 22   : Adjusted gMenu top location  (not changed width + height)
//     version: 3.3.02c     Mar 26   : cvjs_swapLayersInDrawing  missing in XML parser  
//     version: 3.3.02d     Apr 05   : change_space_fixed_location controls popup of modals in vqRooms
//                                   : when adding cvjs_addRectangleCustomSpaceObject() introducing new parameter: cvjs_supressPopUpModal_callback_JS
//									 : for callback and no modal popup  
// 									 : stop_cvjs_create_custom_rectangle , updated to put external svg embedded image back in svg 
//                          Apr 08   : cvjs_addPinMarker(floorplan_div, spaceObjectId, spaceObjectName, spaceObjectType, spaceObjectLayer) defined  
// 							Apr 09   : updated cvjs_LoadTopIconMenuXML , with PinMarker

// 		version: 3.3.02e  	Apr 15   :  printDebugFlag = false;  this variable is needed true when applying floodfill algorithm
  
// 		version: 3.3.02f  	Apr 25   :  print to scale start
//                          Apr 30   : added cvjs_PrintToScale
//                          May  1   : printOnLoadedDocumentRotated_Server_PrintToScale, printOnLoadedDocument_Server_PrintToScale
//									 : adding content to .printModal
//		version: 3.3.02g	May	 2	 : cvjs_PrintModal_PrintToScale 
//                          May  9   : cvjs_customFileLoad, .., cvjs_mergeQR  added as new graphics placeholders

//		version: 3.3.04a	May	 9	 : moving a sub version 
//							May 10   : topDownloadButtonPane implemented,   mergeQR externally implemented
//		version: 3.3.04b	May	13	 : making a new download mode to DWGMerge 
//		version: 3.3.04c	May	14	 : encapsulating all DWGMergeCode mergQR code into 04c, qrcode.js source file in /app/js 
//		version: 3.3.04d	May	20	 :  
//		version: 3.3.04e	May	21	 : added: jQuery("body").on('DOMSubtreeModified', "#cvjs_qrcode_"+floorplan_div, function(  
//		version: 3.3.04e	May	22	 : added: cvjs_directFileLoad and fileLoad callback in  cvjs_add_file_object()
//		version: 3.3.05a	May	23	 : Simplyfying topDownloadButtonPane call for redline merge
//                                   : changing MergeDwgServlet.java to include "<customoutfilename>"+outFile.substring(outFile.lastIndexOf("/")+1)+"</customoutfilename>";
//									 : parsing for this in QR class and mode=4, merge download
//		version: 3.3.05b	May	27	 : Implemented:  cvjs_CompareFiles_CustomFileModalContent ,  cvjs_CompareFiles_CustomFileModalContent_flag, to control the content of the 
//									 : file menu modal for compare drawings
//		version: 3.3.05b	May	28	 : updated call to GetQRCodeController, to include filename in case file is not dwg.
//		version: 3.3.05c	May	28	 : rewritten cvjs_navigationMenuItemHighlight(),  cvjs_insertSingleIconImage()
//			 						 : made topIconMenu_placeholder_2, topIconMenu_placeholder_1 draggable
//		version: 3.3.05d	May	29	 : for dragging, topIconMenu_placeholder_1 needs to have width set dynamically, cvjs_LoadTopIconMenuXML, cvjs_LoadTopIconMenu
//									 : added cvjs_customCommand_xx to cvjs_LoadTopIconMenuXML  , extended XML to include tooltip text to custom commands
//									 : 	<customcommand>
//									 :		<tooltip>This is the highlight text for customCommand 01</tooltip>
//		version: 3.3.05e	June 03	 : custom control of icon menu width
//							June 04  : jQuery("#topIconMenu_placeholder_1), adjusted in cvjs_resize_postion , change tip[cvjs_active_floorplan_div_nr] in cvjs_insertSingleIconImage()
//									 : in .xml, added: <icons_per_row>0</icons_per_row>	<icon_page_left_x>0</icon_page_left_x>	<icon_page_left_y>0</icon_page_left_y>
//		version: 3.3.05f	June 04	 : cvjs_loadFileWithDataOverlays(filename,10); // 3.3.05f  
// 									 : cvjs_CompareFiles_setFileModalContent()
//		version: 3.3.06a	June 04	 : encapulate all jQuery('#1floor1').mouseover(function() in one method
//		version: 3.3.06b	June 04	 : cvjs_setModalSingleFileItems(number)   - optimized modal creation process
//		version: 3.3.06c	June 05	 : position of zoom disk in xml, cvjs_gMenu_pos_x , cvjs_gMenu_pos_y
//		version: 3.3.06d	June 05	 : exit condition cvjs_CompareFiles_setFileModalContent(); 
//							June 10  : vjs_gMenu_pos_x, y init values
//		version: 3.3.06e	June 10	 : setUpVqRoomsGeneric();
//									 :  change default in cvjs_addRectangleSpaceObject() x4
//									 :  defined cvjs_changeSpaceObject_ManualCreationMode  , created new icon structure in standard, non XML case
//		version: 3.3.07a    June 11  : cvjs_createSpaceOutput_JSfile(), cvjs_createSpaceOutput_JSfile_Legacy() 
//									 : added cvjs_loadSpaceObjectsUser()
//									 : added cvjs_setSpaceObjectsAbsolutePath(path,serverPath) 
//									 : cvjs_setSpaceObjectUrl(file) , cvjs_loadSpaceObjects(floorplan_div)
//		version: 3.3.07a    June 18  : add extra icon space for info-command on page 1
//		version: 4.1.01a    June 19  : Set up for - AX2020
//		version: 4.1.01b    June 20  : Compare file box implemented, compareDrawingName_11.png
//		version: 4.1.01c    June 24  : Compare file box &uarr; , &darr; 
//									 : CompareDrawingName_11B
//		version: 4.1.01d    June 25  : placeholderwidth adjust, i-icon 
//		version: 4.1.01e-f  June 26  : compare check for &filename=  , added copy of content of custom_modal_dir_listing to compare name modal
//		version: 4.1.01g  	June 26  : Asp.net, use cvjs_serverSaveFileControllerRedlines for save space objects
//		version: 4.1.01h  	July 3   : function cvjs_supressPopUpModalMode(modal_mode)
//		version: 4.1.01j  	July 4-9 : QR code , added js_data['zip_output'] = "true"; js_data['QR_code'] = "true";
//		version: 4.1.01k  	July 15  : thingable Remove check for direct upload of same drawing multiple times. , $document.getElementById(myElement).value = "";
//		version: 4.1.02a  	July 20  : <customoutfilename>  return url in addition to filename, cvjs_getStickyNotesRedlineXML(false) for Merge to remove sticky notes

//		version: 4.1.02b  	Aug 1    : js_data['zip_output'] updated for mergeRedlines, allowed custom callback, added waitlooper to QRcode
//		version: 4.1.02c  	Aug 3    : Added standard case QR code, when no <customoutfilename>
//		version: 4.1.02d  	Aug 5    : cvjs_displaySpaceObjectsStructure() rewrite to new icon layout. Note tha users can control layout in custom pulldown from data_host_connector
//		  					Aug 5    : <no_QR_code_available> as return call in cvjs_serverGetQRCodeController
//		version: 4.1.02e-f  Aug 7    : cvjs_deleteSpaceImageObject(floorplan_div)
//		version: 4.1.02g-h  Aug 8    :  SearchCustomModal , missing in all languages, IconPage_p5_8 missing in some languages
//                          Aug 8    :  NextMenuPage not translated in all languages
//							Aug 8    : icon_command_active == 34 , cvjs_resizeSpaceImageObject("floorPlan");
//		version: 4.1.02i    Aug 9    : port of all Space Image code to .js file 
//		version: 4.1.02j    Aug 15   : in cvlicense.js, document.body.appendChild is asynchronious, so have to put the check at the end of the onload End
//									 : alternatively, have the license defined in top part of document	
//									 : cvjs_maxfiles = 60;  
//		version: 4.1.02k-l  Aug 22-26: 	jQuery("#"+floorplan+"_svg").position() as function of _svg.
// 									 :  resize_Position, cvjs_insertSingleIconImage, cvjs_navigationMenuItemHighlight
//		version: 4.1.03a    Aug 27 -29   :  Angular JS implementation, cvjs_setImagesLocationPathDirect(imagePath)
//									 : 	cvjs_InitCADViewerJS_app() , added imagePath  , implemented nodejs server.js
//                          Sep 2 -  :  cvjs_NodeJSserver implemented to control NodeJS  temp_print?file=
//		version: 4.1.03a    Sep 3    :  cvjs_saveAsSVGOnServer -> cvjs_saveAsSVG in sensor insert + xml, "download SVG" swap to  /assets  in Angular 
//      version: 4.1.03b    Sep 9    :  Ionic, background color bug, added: try {document.getElementById('cvjs_backgroundPickerValue')
//  	version: 4.1.03d    Sep 9    :  cvjs_insertSingleIconImage(), cvjs_navigationMenuItemHighlight(), tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'}); + rewrite

// 		version v5.01.03e   Oct 10    . Flag for 3D drawings

// 		version v5.01.03f   Oct 31    . <use_as_QR_code_bitmap>
// 		version v5.01.03g   Oct 31    . <use_as_QR_code_bitmap>

// 		version v5.01.03h   Dec 3    : 

// 		version v5.01.03i-k   Jan 24 -25   :  debug for compare in FileAgo on AWS
// 		version v5.01.04a   Jan 28 -29     :  PowerSouth - ZW class added for thickness control  
//										   :  jQuery("*[id] .ZW").each(function()
 


var printDebugFlag = false;
var cvjs_versionNumber = "CADViewer JS - v5.1.04a ";


// 5.1.03e  
var cvjs_3Ddrawings = false;    // flag for 3D drawings, OpenDesign structure



// 4.1.03a
var cvjs_NodeJSserver = false;

// 3.3.05b

var custom_modal_dir_listing = [
	{ filename: "My file - revision1.dwg", url: "http://server/path/myfile-revison1.dwg", path: "/serverx/path/myfile-revison1.dwg"  },
	{ filename: "My file - revision2.dwg", url: "http://server/path/myfile-revison2.dwg", path: "/serverx/path/myfile-revison2.dwg" },
	{ filename: "My file - revision3.dwg", url: "http://server/path/myfile-revison3.dwg", path: "/serverx/path/myfile-revison3.dwg" },
	{ filename: "My file - revision4.dwg", url: "http://server/path/myfile-revison4.dwg", path: "/serverx/path/myfile-revison4.dwg" }
];

var cvjs_CompareFiles_CustomFileModalContent_flag = false;
var cvjs_CompareFiles_CustomFileModalContent = [];

// 3.3.05b


// 3.3.04e
var cvjs_directFileLoad = false;
var cvjs_directFileLoadPath = "";

// 3.3.04b
var cvjs_mergeDXFDWG_downloadMode = false;



// v3.02.02h
var demoonly_customHandleChange = false;


// 3.2.02g
var cvjs_PrintIconDisabled = [false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false];

// 3.2.01g
var rest_serviceCall = false;
var rest_applicationPlatform = ""; 
var rest_applicationPlatformUsername = ""; 
var rest_applicationPlatformUserID = ""; 
var rest_ServiceToken = "";
var rest_leaveStreamOnServer = 0;

 
var cvjs_preConversionFileExtension = new Array();

var cvjs_interactiveMethod_Active = [false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false];
var cvjs_devMode = false;
var fileExtensionLower = "";
var cvjs_custom_print_to_pdf = false;
var cvjs_encodeURIcall_server = true;

var cvjs_currentFileFromJSTreeFolder = "";

var	cvjs_PrintModal_PrintPDF = true;
var	cvjs_PrintModal_PrintToScale = true;

var cvjs_saveRedlinesAsDXF = false;
var cvjs_saveRedlinesAsXML = false;

var cvjs_print_to_pdf_windowRelativeSize = 0.4;
var cvjs_addedObjectsToExtents = false;

var cvjs_multipagePDFtoSVG_PhpLoadFlag = false;

//var rPaper;
//var masterBackground;

var cvjs_bitmapFileNameIsServerPath_flag = false;
var cvjs_bitmapLoadFlag  = false;

var cvjs_last_FileName_PDF = "";


var cvjs_rPaper = new Array();
var cvjs_masterBackground = new Array();
var cvjs_active_floorplan_div_nr = 0;

var floorplans_divs_Initialized = ["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""];
var cvjs_loaddrawing_FileNamePath  = ["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""];


var cvjs_loadDrawing_conversionMode = false;
var cvjs_conversion_originatingFile = ["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""];
var cvjs_conversion_originatingFileNameNoExtension = ["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""];
var cvjs_conversion_originatingUsername = ["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""];
var cvjs_conversion_originatingPassword = ["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""];


var cvjs_loadInProgress = false;


var layers_all;


var multiPages = [{ multiPages: 1,
                   currentPage:1,
                   pages : [
                        { fileName:"default", pageName:"Single Page"}
                   ]
},{ multiPages: 1,
                   currentPage:1,
                   pages : [
                        { fileName:"default", pageName:"Single Page"}
                   ]
},{ multiPages: 1,
                   currentPage:1,
                   pages : [
                        { fileName:"default", pageName:"Single Page"}
                   ]
},{ multiPages: 1,
                   currentPage:1,
                   pages : [
                        { fileName:"default", pageName:"Single Page"}
                   ]
},{ multiPages: 1,
                   currentPage:1,
                   pages : [
                        { fileName:"default", pageName:"Single Page"}
                   ]
},{ multiPages: 1,
                   currentPage:1,
                   pages : [
                        { fileName:"default", pageName:"Single Page"}
                   ]
},{ multiPages: 1,
                   currentPage:1,
                   pages : [
                        { fileName:"default", pageName:"Single Page"}
                   ]
},{ multiPages: 1,
                   currentPage:1,
                   pages : [
                        { fileName:"default", pageName:"Single Page"}
                   ]
},{ multiPages: 1,
                   currentPage:1,
                   pages : [
                        { fileName:"default", pageName:"Single Page"}
                   ]
},{ multiPages: 1,
                   currentPage:1,
                   pages : [
                        { fileName:"default", pageName:"Single Page"}
                   ]
},{ multiPages: 1,
                   currentPage:1,
                   pages : [
                        { fileName:"default", pageName:"Single Page"}
                   ]
}];



var actualURX = [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1];
var actualURY = [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1];
var actualLLX = [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1];
var actualLLY = [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1];

var rpWidth = [100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100];
var rpHeight = [100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100];


//var	viewBoxWidth[cvjs_active_floorplan_div_nr] = 100;
//var	viewBoxHeight[cvjs_active_floorplan_div_nr] = 100;
var	viewBox = [{ X:0, Y:0, width: 100, height:100},{ X:0, Y:0, width: 100, height:100},{ X:0, Y:0, width: 100, height:100},{ X:0, Y:0, width: 100, height:100},{ X:0, Y:0, width: 100, height:100},{ X:0, Y:0, width: 100, height:100},{ X:0, Y:0, width: 100, height:100},{ X:0, Y:0, width: 100, height:100},{ X:0, Y:0, width: 100, height:100},{ X:0, Y:0, width: 100, height:100},{ X:0, Y:0, width: 100, height:100},{ X:0, Y:0, width: 100, height:100},{ X:0, Y:0, width: 100, height:100},{ X:0, Y:0, width: 100, height:100},{ X:0, Y:0, width: 100, height:100},{ X:0, Y:0, width: 100, height:100},{ X:0, Y:0, width: 100, height:100},{ X:0, Y:0, width: 100, height:100},{ X:0, Y:0, width: 100, height:100},{ X:0, Y:0, width: 100, height:100},{ X:0, Y:0, width: 100, height:100},{ X:0, Y:0, width: 100, height:100}];

var viewBoxWidth = [100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100];
var viewBoxHeight = [100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100];


var	viewBox_initX = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
var	viewBox_initY = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
var viewBoxWidth_init = [100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100];
var viewBoxHeight_init = [100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100];


var cvjs_fileLoadingFromSharePointServer = false;

var cvjs_debug_stickynotes = false;
var cvjs_drawingCoordinates = new Array();


// CAFM variables are getting global scope
// Local scope works fine when loading

//2017-08-01

var buildings;
var vqBuilding = "BUILDING_NAME_GOES_HERE";
var vqFloor = "FLOOR_NAME_GOES_HERE";
var vqRooms = new Array();
var vqTBorder  = new Array();
var vqText  = new Array();
var vqURLs  = new Array();
var layerTable = ["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""];

//var tip;   // placeholder for: = jQuery("#tip");
var tip = new Array();   // placeholder for: = jQuery("#tip");   2018-01-15




var cvjs_SVG_outputFormatInAXConversions = true;

var cvjs_collab_mode = false;
var cvjs_collabPresenter = false;

var cvjs_loadMultipleRedlinesStickyNotes = false;
var cvjs_stickyNotesRedlines = new Array();

var cvjs_ajaxPostStatus_thumbNails = false;

var cvjs_initMasterBackground = true;
var cvjs_printModal_content;
var cvjs_textSearchModal_content;
var cvjs_infoMessageModal_content;
var cvjs_redlineThicknessModal_content;
var cvjs_redlineColorModal_content;
var cvjs_publishPDFModal_content;
var cvjs_backgroundColorModal_content;
var cvjs_redlinetextModal_content;
var cvjs_lineThicknessModal_content;
var cvjs_calibrateModal_content;
var cvjs_birdseyeModal_content;
var cvjs_layerlistModal_content;
var cvjs_layerlistspaceModal_content;

var cvjs_pagechangeListModal_content;



var cvjs_collabStartModal_content;


var cvjs_PDFloadFlag = false;

var cvjs_currentLanguage = 0;   // default is English
var lTable = {

	numberOfLanguages: 9,
	languages : [

				{ 	languageCode : "EN-US",
					thisLanguage : "English",

					PrintModal: {
						Header : 'CADViewer JS Print Settings',
						Paper : 'Paper Size:',
						Orientation : 'Orientation:',
						Resolution : 'Resolution:',
						ResolutionText : '(min 75dpi, standard 300dpi)',
						Print : 'Print',
						Grayscale : 'Grayscale',
						PrintPDF : 'Print as PDF',
						PrintToScale : 'Print to Scale',
						EnterScale : 'Scale:'
					},

					SearchTextModal: {
					  	Header: 'Search Text',
					  	SearchText: 'Search Text:',
					  	Zoom: 'Zoom Level:',
					  	Search: 'Search'
					},

					SearchCustomModal: {
					  	Header: 'Search',
					  	SearchText: 'Search Text:',
					  	Search: 'Search'
					},
										
					
					InfoMessageModal: {
					  	Header: 'Information',
					  	Version: 'This version number is: ',
					  	ComingSoon: 'Coming Soon!',
					  	NoUnits: 'No units defined in drawing, please use command Calibrate Measurement first.',
					  	UnitLess: 'The originating drawing is unitless, please use command Calibrate Measurement first.',
					  	QuickCountSingle: 'Number of Quick Counts is: ',
					  	QuickCountMultiple: 'Number of Quick Counts are: ',
					  	RedlinesLocked: 'Redlines are locked for User: ',
					  	LicensePath: 'Could not find license key at path: ',
					  	LicenseNotFound: 'License key not found',
					  	SelectTwoPoints: 'Please select two points in the drawing with the mouse first, then enter unit and distance, finally press OK.',
					  	ReferenceDistance: 'Please enter a reference distance.',
					  	RedlinesSaved: 'Redlines Saved',
					  	SinglePage : 'Single page drawing - no change of page',
					  	FirstPage : 'The current page is the first page in a multipage drawing - no change of page',
					  	LastPage: 'The current page is the last page in a multipage drawing - no change of page',
					  	OutOfRange: 'The page number entered is outside of the range of pages - no change of page',
					  	FileLoadThroughApp: 'NOTE: File Load enabled only through the encapsulating application',
					  	ErrorConnectingToHost: 'Error when connecting to Host. Go to the Settings Pane and check your Network Settings!',
					  	ConnectToHostFirst: 'Please go to the Settings Pane, check your Network Settings and click Save Changes to connect to your Network Host to retrieve the data structure used when mapping locations.',
					  	NoObjectSelected: 'Please select a Space Object.',
					  	PaperSizePDFPrintOnly: 'Please select "Print as PDF" for large paper sizes size. Large papersizes are A1 and A0, as well as US Arch D and above.',
					  	ServerSideFormatForPDFPrint: 'PDF print requires an original file in formats DWG, DWF, DXF or DGN or PCF. Please upload a file in these formats or select a smaller papersize for direct print. Direct print papersizes are A4-A2 or US Letter through ANSI C',
						PrintDisabled: 'NOTE: Print Disabled',
						NoQRCode: 'No QR Code received from Server!',
					},

					FileLoadModal: {
					  	Header: 'CADViewer JS - File Manager',
					  	DrawingFilename: 'DRAWING / FILENAME',
						EditFloorplanInfo: 'Edit Floor Plan Info',
					},

					SaveRedlineModal: {
					  	Header: 'CADViewer JS - Save Redline',
					  	RedlineFilename: 'REDLINE / FILENAME',
						EditRedlineInfo: 'Edit Redline Info',
						Upload: 'UPLOAD:',
					},

					OpenRedlineModal: {
					  	Header: 'CADViewer JS - Open Redline',
					  	RedlineFilename: 'REDLINE / FILENAME',
						EditRedlineInfo: 'Edit Redline Info',
					},

					OpenSpaceObjectModal: {
					  	Header: 'CADViewer JS - Open Space Objects',
					  	SpaceObjectFilename: 'SPACE OBJECT / FILENAME',
						EditSpaceObjectInfo: 'Edit Space Object Info',
					},
										
					RedlineThicknessModal: {
					  	Header: 'Select Redline Thickness',
					  	Thickness: 'Thickness:',
						OK: 'OK'
					},

					DocumentPageChangeModal: {
					  	Header: 'Select Document Page',
					  	Page: 'Page:',
						OK: 'OK'
					},
										
					CollaborationStartModal: {
					  	Header: 'Enter Collaboration Session',
					  	Session: 'Session Name:',
						OK: 'OK'
					},

					PublishPDFModal: {
					  	Header: 'Publish Redlined Screen Content to PDF',
					  	SelectMode: 'Select Mode:',
					  	Mode1: 'Print/Download',
					  	Mode2: 'Send as e-mail',
					  	Mode3: 'Upload to Server',
					  	EntireDoc: 'Publish Entire Document:',
						OK: 'OK',
						Recipient: 'E-mail:',
						Title: 'Title:',
						Message: 'Message:',
					},

					MergeDXFModal: {
					  	Header: 'Merge Redline with Source DWG',
					  	SelectMode: 'Select Mode:',
					  	Mode1: 'Download',
					  	Mode2: 'Send as e-mail',
					  	Mode3: 'Upload to Server',
					  	EntireDoc: 'Publish Entire Document:',
						OK: 'OK',
						Recipient: 'E-mail:',
						Title: 'Title:',
						Message: 'Message:',
					},
					
					
					RedlineColorModal: {
					  	Header: 'Select Redline Color',
					  	PickColor: 'Pick Color:',
					  	SelectColor: 'Select:',
					  	Blue: 'Blue',
					  	Red: 'Red',
					  	Yellow: 'Yellow',
					  	Orange: 'Orange',
					  	Green: 'Green',
					  	Purple: 'Purple',
					  	Brown: 'Brown',
					  	Gray: 'Gray',
						OK: 'OK'
					},

					RedlineEllipseModal: {
					  	Header: 'Select Redline Shape',
					  	SelectType: 'Select:',
					  	Ellipse: 'Ellipse',
					  	Cloud: 'Cloud',
						OK: 'OK'
					},

					CreationModeModal: {
					  	Header: 'Select Space ID source',
					  	SelectType: 'Select:',
					  	DataSource: 'From Data Source via API',
					  	Manually: 'Enter Manually',
						OK: 'OK'
					},
					
					BackgroundColorModal: {
					  	Header: 'Select Background Color',
					  	PickColor: 'Pick Color:',
					  	SelectColor: 'Select:',
					  	White: 'White',
					  	Black: 'Black',
					  	Azure: 'Azure',
					  	Pink: 'Pink',
					  	Snow: 'Snow',
					  	Silver: 'Silver',
					  	Gray: 'Gray',
					  	Brown: 'Brown',
						OK: 'OK'
					},

					RedlineTextModal: {
					  	Header: 'Redline Text',
					  	FontSize: 'Font Size:',
					  	OK: 'OK',
					  	Text: 'Enter text, click OK and select the insertion point in the drawing.',
					},

					LineThicknessModal: {
					  	Header: 'Adjust Line Thickness',
					  	LineThickness: 'Line Thickness:',
					},

					CalibrateModal: {
					  	Header: 'Calibrate Measurement',
					  	Unit: 'Unit:',
					  	Distance: 'Distance:',
					  	OK: 'OK',
					  	Text: 'Select two points in the drawing with the mouse first, then enter unit and distance and press OK.',
					},

					MeasurementModal: {
					  	Header: 'Measurement',
					  	Distance: 'Distance: ',
					  	MeasureAgain: 'Measure Again',						
						ClosePolygon: 'Close Area Polygon',
					  	Text: 'Select two points in the drawing for distance.',
					  	TextArea: 'Select a sequence of points. Doubleclick, Esc or "Close Area" button for area.',
						Area: "Area",
					},

					BirdsEyeModal: {
					  	Header: 'Birds-Eye Window',
					},

					ImageObjectModal: {
					  	Header: 'Image Object Nr. ',
					  	LoadImage: 'Load New Image',
					  	RemoveImageNote: 'Remove Image Note',
					  	MinimizeImageNote: 'Minimize Image Note',
					},

					LayerListModal: {
					  	Header: 'Layer List',
					  	Search: 'Search',
					  	Sort: 'Sort by Layer',
					  	AllLayerOn: 'All Layer On',
					  	AllLayerOff: 'All Layer Off',
						SwapLayers: 'Swap All Layers',
						On: 'ON',
						Off: 'OFF',
					},

					PageChangeListModal: {
					  	Header: 'Change Drawing Page',
					  	Search: 'Search',
					  	Sort: 'Sort by Name',
						On: 'ON',
						Off: 'OFF',
					},
					
					
					LayerListSpaceModal: {
					  	Header: 'Layer List - Space Objects',
					  	Search: 'Search',
					  	Sort: 'Sort by Layer',
					  	AllLayerOn: 'All Layer On',
					  	AllLayerOff: 'All Layer Off',
						SwapLayers: 'Swap All Layers',
						On: 'ON',
						Off: 'OFF',
						NotAssigned: 'Not Assigned',
						TextLayer: 'Text Layer',
						RoomLayer: 'Room Layer',
						HandleLayer: 'Active Layer',
						FloodfillLayer: 'SpaceID Layer',
					},

					IconPage_p1_8: {
					  	PreviousPage: 'Previous Menu Page',  // Previous Icon Page   3.3.01a
					  	NextPage: 'Next Icon Page',  //   Next Icon Page  3.3.01a
					  	NextMenuPage: 'Next Menu Page',  //   Next Icon Page  3.3.01a
					  	LayerList: 'Layer List',
					  	Print: 'Print',
					  	ZoomIn: 'Zoom In',
					  	ZoomOut: 'Zoom Out',
					  	ZoomExtents: 'Zoom Extents',
					  	ZoomWindow: 'Zoom Window',
					  	Toggle: 'Toggle Black/White',
					  	Background: 'Background Color',
					  	FileLoad: 'File Load',
					  	Search: 'Search Text',
					  	About: 'About',
					  	LayerOff: 'Layer Off',
					  	SwapLayers: 'Swap Layers',
					  	AllLayersOn: 'All Layers On',
					  	Measurement: 'Measurement',
					  	Calibrate: 'Calibrate Measurement',
					  	BirdsEye: 'Toggle Birds-Eye Window',
					  	LineThickness: 'Adjust Line Thickeness',
					},

					IconPage_p2_8: {
					  	PreviousPage: 'Previous Icon Page',
					  	NextPage: 'Next Icon Page',
					  	SaveRedline: 'Save Redline',
					  	LoadRedline: 'Load Redline',
					  	DeleteSingle: 'Delete Single Redline',
					  	DeleteLast: 'Delete Last Redline',
					  	Color: 'Redline Color',
					  	Thickness: 'Redline Thickness',
					  	StickyNote: 'Make StickyNote',
					  	ClearAll: 'Clear Visible Redlines',
					  	Freehand: 'Freehand Redline',
					  	Cloud: 'Redline Ellipse/Cloud',
					  	FilledPolygon: 'Redline Filled Polygon',
					  	Polyline: 'Redline Polyline',
					  	Polygon: 'Redline Polygon',
					  	FilledRectangle: 'Filled Redline Rectangle',
					  	Rectangle: 'Redline Rectangle',
					  	Arrow: 'Redline Arrow',
					  	Text: 'Redline Text',
					  	PublishAsPDF: 'Publish as PDF',
					  	MergeAsDXF: 'Merge Redline with Source DWG',
						Free: 'Free',
					  	MergeWithQR: 'Merge QR code with source DWG',
					},

					IconPage_p3_8: {
					  	PreviousPage: 'Previous Icon Page',
					  	NextPage: 'Next Icon Page',
					  	PublishAsPDF: 'Publish as PDF',
					  	Free: 'Free',
					  	LoadLink: 'Load All Image Links',
					  	InsertLink: 'Insert Image Link',
					  	SaveLink: 'Save All Image Links',
					  	ClearLink: 'Clear All Image Links',
					  	QuickCount: 'Quick Count',
					  	CountSum: 'Summary Quick Count',
					  	ClearCount: 'Clear Quick Count',
					  	LayerOff: 'Layer Off',
					  	SwapLayers: 'Swap Layers',
					  	AllLayersOn: 'All Layers On',
					  	ZoomExtents: 'Zoom Extents',
					  	ZoomWindow: 'Zoom Window',
					},


					IconPage_p4_8: {
					  	PreviousPage: 'Previous Icon Page',
					  	NextPage: 'Next Icon Page',
					  	Free: 'Free',
					  	CompareLoad: 'Load Second Drawing for Compare',
					  	CompareToggle: 'Toggle Drawings individually',
					  	CompareToggleOverlay: 'Toggle overlaid Drawings',
					  	CompareExit: 'Exit Compare Drawings',
					  	CollaborationJoinSession: 'Join Collaboration Session',
					  	CollaborationTakeControl: 'Take Control over Collaboration Session',
					  	CollaborationClearSession: 'Clear Redlines in Collaboration Session',
					  	CollaborationLeaveSession: 'Leave Collaboration Session',
					  	LayerOff: 'Layer Off',
					  	SwapLayers: 'Swap Layers',
					  	AllLayersOn: 'All Layers On',
					  	ZoomExtents: 'Zoom Extents',
					  	ZoomWindow: 'Zoom Window',
					},

					IconPage_p5_8: {
						InsertSpaceImage: 'Insert Space Image Object',
						DragSpaceImage: 'Drag Space Image Object',
						ResizeSpaceImage: 'Resize Space Image Object',
						LoadSpaceObjects: 'Load Space Objects',
					  	PreviousPage: 'Previous Icon Page',
					  	NextPage: 'Next Icon Page',
					  	Publish: 'View Space Object Structure in User Display Mode',
					  	DownloadSVG: 'Download processed SVG drawing',
					  	Load: 'Load Floorplan and pre-process Space Objects',
					  	Settings: 'Settings',
					  	SelectObject: 'Select Object',
					  	Rect: 'Rectangle Space Object',
					  	Polygon: 'Polygon Space Object',
					  	Circle: 'Circle Space Object',
					  	CopyCircle: 'Copy Circle Space Object',
					  	Delete: 'Delete Space Object',
					  	LayerList: 'Layer List',
					  	Mode: 'Toggle Space Object Display and Edit Mode',
					  	Free: 'Free',
					  	SelectPolygon: 'Generate Space Object on closed polygon',
					  	LayerOff: 'Layer Off',
					  	SwapLayers: 'Swap Layers',
					  	AllLayersOn: 'All Layers On',
					  	ZoomExtents: 'Zoom Extents',
					  	ZoomWindow: 'Zoom Window',
					},

					IconPage_p6_1: {
					  	PinMarker: 'Add Pin Marker',
					},
					
					PageModal: {
						SelectPageFromList: 'Select Drawing Page From List',
					  	EnterPage: 'Enter page number',
					  	RotateBack: 'Rotate 90 degrees counter clockwise',
					  	RotateForward: 'Rotate 90 degrees clockwise',
					  	First: 'Load First Page in Drawing',
					  	Previous: 'Load Previous Page in Drawing',
					  	Next: 'Load Next Page in Drawing',
					  	Last: 'Load Last Page in Drawing',
					  	ZoomExtents: 'Zoom Extents',
					  	ZoomWindow: 'Zoom Window',
					},

					StickyNote: {
					  	MoveNote: 'Move Note',
					  	EditNote: 'Edit Note',
					  	DeleteNote: 'Delete Note',
					  	MinimizeNote: 'Minimize Note',
					  	Inactive: 'Inactive',
					  	SaveNote: 'Save Note',
					  	Cancel: 'Cancel Edit Note',
					},

					ImageObject: {
					  	InsertReplace: 'Replace or Insert Image',
					  	Delete: 'Delete Image and Associated Icon',
					  	Minimize: 'Minimize Image Object',
					},

					DeleteModal: {
					  	Header: 'Delete',
					  	Text1: 'This action will remove',
					  	Text2: 'and disable access to the floor plan for all users.',

					},

					UnlinkModal: {
					  	Header: 'Unlink',
					  	Text1: 'This action will remove all metadata from',
					  	Text2: 'Location objects will remain unchanged.',
					},

					ClearModal: {
					  	Header: 'Clear',
					  	Text1: 'This action will remove all metadata and location objects from',
					},

					FileLoadSpaceModal: {
					  	Header: 'CADViewer JS: Space Management File Loader',
					  	DrawingFilename: 'DRAWING / FILENAME',
						EditFloorplanInfo: 'Edit Floor Plan Info',
						BuildRoomTextHyperlinks: 'Build ROOM/TEXT Layer Hyperlinks on Load',
					},

					LoadingModal: {
					  	Loading: 'Loading',
					},

					DataMaps: {
					  	Map: [ 'Data Maps - User Map 1', 'Data Maps - User Map 2', 'Data Maps - User Map 3', 'Data Maps - User Map 4' ]
//					  	Map2: 'Data Maps - User Map 2',
//					  	Map3: 'Data Maps - User Map 3',
//					  	Map4: 'Data Maps - User Map 4',
					},

					HeaderObjectLayers: {
					  	ObjectLayer: ['Spaces - User Layer 1', 'Assets - User Layer 2' ]
//					  	ObjectLayer2: 'Assets - User Layer 2',
					},

					WaitModal: {
					  	Printing: 'Printing',
					  	Thumbnails: 'Saving',
					  	BatchPDF: 'Print to PDF',
						MergeDWG: 'Merging',
						
					},


				},

				{   languageCode : "FR-FR",
					thisLanguage : "French",

					PrintModal: {
					Header : "CADViewer JS Param&#232;tres d'impression",  // CADViewer JS Print Settings
					Paper : 'Taille de papier:', // Paper Size
					Orientation : 'Orientation:',  // Orientation
					Resolution : 'R&#233;solution:',  // Resolution
					ResolutionText : '(min 75dpi, standard 300dpi)',  // (min 75dpi, standard 300dpi)
					Print : 'Imprimer', // Print
					Grayscale : 'Niveaux de gris', // Grayscale
					PrintPDF : 'Imprimer en PDF' // Print as PDF
					},

					SearchTextModal: {
							  Header: 'Recherche de texte',   // Search Text
							  SearchText: 'Recherche de texte:', // Search Text
							  Zoom: 'Niveau de zoom:', // Zoom Level
							  Search: 'Chercher' // Search
					},


					SearchCustomModal: {
					  	Header: 'Search',
					  	SearchText: 'Search Text:',
					  	Search: 'Search'
					},

					InfoMessageModal: {
							  Header: 'Information', //  Information
							  Version: 'Num&#233;ro de version : ', // This version number is
							  ComingSoon: 'Prochainement!', // Coming Soon
							 NoUnits: 'Aucune unit&#233; d&#233;finie dans le dessin, veuillez utiliser la commande Calibrer la mesure d&#39;abord.', // No units defined in drawing, please use command Calibrate Measurement first
							  UnitLess: "Le dessin d'origine est sans unit&#233;, utilisez la commande Calibrer la mesure d&#39;abord.", // The originating drawing is unitless, please use command Calibrate Measurement first
							  QuickCountSingle: 'Le nombre de compteurs rapides est: ', // Number of Quick Counts is
							  QuickCountMultiple: 'Nombre de compteurs rapides sont: ', // Number of Quick Counts are
							  RedlinesLocked: "Les annotations sont verrouill&#233;es pour l'utilisateur: ", // Redlines are locked for User
							  LicensePath: "Impossible de trouver la cl&#233; de licence pour le chemin d'acc&#232;s: ", // Could not find license key at path
							  LicenseNotFound: "Cl&#233; de licence non trouv&#233;e", // License key not found
							  SelectTwoPoints: "S&#233;lectionnez d&#39;abord deux points dans le dessin avec la souris, puis entrez l'unit&#233; et la distance, puis appuyez sur OK..", // Please select two points in the drawing with the mouse first, then enter unit and distance, finally press OK.
							  ReferenceDistance: 'Entrez une distance de r&#233;f&#233;rence.', // Please enter a reference distance
							  RedlinesSaved: 'Annotations enregistr&#233;es', // Redlines Saved
							  SinglePage : 'Dessin de page unique - pas de changement de page', // Single page drawing - no change of page
							  FirstPage : 'La page actuelle est la premi&#232;re page dans un dessin multipage - pas de changement de page', // The current page is the first page in a multipage drawing - no change of page
							  LastPage: 'La page actuelle est la derni&#232;re page dans un dessin multipage - pas de changement de page', // The current page is the last page in a multipage drawing - no change of page
								OutOfRange: 'The page number entered is outside of the range of pages - no change of page',
							  FileLoadThroughApp: "REMARQUE: Le chargement du fichier n'est permis que via l'application d'encapsulation", // NOTE: File Load enabled only through the encapsulating application
							  ErrorConnectingToHost: "Erreur lors de la connexion à l'h&#244;te. Accédez au volet Param&#232;tres et v&#233;rifiez vos param&#232;tres r&#233;seau!", // Error when connecting to Host. Go to the Settings Pane and check your Network Settings
							  ConnectToHostFirst: 'Accédez au volet Param&#232;tres, vérifiez vos param&#232;tres r&#233;seau et cliquez sur Enregistrer les modifications pour vous connecter &#224; votre h&#244;te r&#233;seau pour récup&#233;rer la structure de données utilis&#233;e lors de la localisation des cartes.', // Please go to the Settings Pane, check your Network Settings and click Save Changes to connect to your Network Host to retrieve the data structure used when mapping locations
							  NoObjectSelected: "S&#233;lectionnez un objet d'espace.", // Please select a Space Object
							  PaperSizePDFPrintOnly: 'S&#233;lectionnez «Imprimer au format PDF» pour obtenir de grandes tailles de papier. Les grandes tailles de papier sont A1 et A0, ainsi que US Arch D et ci-dessus.', // Please select "Print as PDF" for large paper sizes size. Large papersizes are A1 and A0, as well as US Arch D and above
							  ServerSideFormatForPDFPrint: "L'impression PDF n&#233;cessite un fichier original dans les formats DWG, DWF, DXF ou DGN ou PCF. Veuillez t&#233;l&#233;charger un fichier dans ces formats ou s&#233;lectionner un document plus petit pour l'impression directe. Les papiers d'impression directe sont A4-A2 ou US Letter via ANSI C", // PDF print requires an original file in formats DWG, DWF, DXF or DGN or PCF. Please upload a file in these formats or select a smaller papersize for direct print. Direct print papersizes are A4-A2 or US Letter through ANSI C
							PrintDisabled: 'NOTE: Print Disabled',
						NoQRCode: 'No QR Code received from Server!',

					},

					FileLoadModal: {
							  Header: 'CADViewer JS - Gestionnaire de fichiers', //  File Manager
							  DrawingFilename: 'DESSIN / NOM DU FICHIER', //  DRAWING / FILENAME
					EditFloorplanInfo: "Modifier l'information sur le plan d'&#233;tage", // Edit Floor Plan Info
					},

					SaveRedlineModal: {
							  Header: "CADViewer JS - Enregistrer l'annotation", //  Save Redline
							  RedlineFilename: 'ANNOTATION / NOM DU FICHIER', // REDLINE / FILENAME
					EditRedlineInfo: "Modifier les infos de l'annotation", // Edit Redline Info
					Upload: 'T&#201;L&#201;CHARGER:', // UPLOAD
					},

					OpenRedlineModal: {
							  Header: 'CADViewer JS - Annotation Ouverte', // Open Redline
							  RedlineFilename: 'ANNOTATION / NOM DU FICHIER', // REDLINE / FILENAME
					EditRedlineInfo: "Modifier les infos de l'annotation", // Edit Redline Info
					},

					OpenSpaceObjectModal: {
					  	Header: 'CADViewer JS - Open Space Objects',
					  	SpaceObjectFilename: 'SPACE OBJECT / FILENAME',
						EditSpaceObjectInfo: 'Edit Space Object Info',
					},
										

					RedlineThicknessModal: {
							  Header: "&#201;paisseur d'annotation", // Select Redline Thickness
							  Thickness: '&#201;paisseur:', // Thickness
					OK: 'OK' //  OK
					},

					DocumentPageChangeModal: {
					  	Header: 'Sélectionner la page',
					  	Page: 'Page:',
						OK: 'OK'
					},
					
										
					CollaborationStartModal: {
							  Header: 'Entrez la session de collaboration', //Enter Collaboration Session
							  Session: 'Nom de la session:', //Session Name
					OK: 'OK' //
					},

					PublishPDFModal: {
					  	Header: "Publier le contenu de l'écran redigné au format PDF",
					  	SelectMode: 'Sélectionnez:',
					  	Mode1: 'Imprimer/Charger',
					  	Mode2: 'e-mail',
					  	Mode3: 'Télécharger serveur',
					  	EntireDoc: 'Publier le document entiert:',
						OK: 'OK',
						Recipient: 'E-mail:',
						Title: 'Titre:',
						Message: 'Message:',
					},

					MergeDXFModal: {
					  	Header: 'Fusionner Redline avec le fichier DWG source',
					  	SelectMode: 'Sélectionnez:',
					  	Mode1: 'Imprimer/Charger',
					  	Mode2: 'e-mail',
					  	Mode3: 'Télécharger serveur',
					  	EntireDoc: 'Publier le document entiert:',
						OK: 'OK',
						Recipient: 'E-mail:',
						Title: 'Titre:',
						Message: 'Message:',
					},
									
					RedlineColorModal: {
							  Header: "S&#233;lectionnez la couleur d'annotation", //Select Redline Color
							  PickColor: 'Choisir:', // Pick Color
							  SelectColor: 'S&#233;lectionner:', //Select
							  Blue: 'Bleu', //Blue
							  Red: 'Rouge', //Red
							  Yellow: 'Jaune', //Yellow
							  Orange: 'Orange', //Orange
							  Green: 'Vert', //Green
							  Purple: 'Violet', //Purple
							  Brown: 'Marron', //Brown
							  Gray: 'Gris', //Gray
					OK: 'OK' //
					},

					RedlineEllipseModal: {
					  	Header: 'Sélectionner une forme Redline',
					  	SelectType: 'Sélectionner:',
					  	Ellipse: 'Ellipse',
					  	Cloud: 'Nuage',
						OK: 'OK'
					},
					
					CreationModeModal: {
					  	Header: 'Select Space ID source',
					  	SelectType: 'Select:',
					  	DataSource: 'From Data Source via API',
					  	Manually: 'Enter Manually',
						OK: 'OK'
					},
					
					
					BackgroundColorModal: {
							  Header: 'S&#233;lectionnez la couleur de fond', //Select Background Color
							  PickColor: 'Choisir:', //Pick Color
							  SelectColor: 'S&#233;lectionner:', //Select
							  White: 'Blanc', //White
							  Black: 'Noir', //Black
							  Azure: 'Azur', //Azure
							  Pink: 'Rose', //Pink
							  Snow: 'Neige', //Snow
							  Silver: 'Argent', // Silver
							  Gray: 'Gris', //Gray
							  Brown: 'Marron', //Brown
					OK: 'OK' //
					},

					RedlineTextModal: {
							  Header: "Texte d'annotation", //Redline Text
							  OK: 'OK', //
							  Text: "Entrez le texte, cliquez sur OK et s&#233;lectionnez le point d'insertion dans le dessin.", // Enter text, click OK and select the insertion point in the drawing
					},

					LineThicknessModal: {
							  Header: "Ajuster l'&#233;paisseur de la ligne", // Adjust Line Thickness
							  LineThickness: '&#201;paisseur de ligne:', // Line Thickness
					},

					CalibrateModal: {
							  Header: 'Calibrer la mesure', // Calibrate Measurement
							  Unit: 'Unit&#233;:', // Unit
							  Distance: 'Distance:', // Distance
							  OK: 'OK', //
							  Text: "S&#233;lectionnez deux points sur le dessin avec la souris d&#39;abord, puis saisissez l'unit&#233; et la distance et appuyez sur OK.", // Select two points in the drawing with the mouse first, then enter unit and distance and press OK
					},

					MeasurementModal: {
							  Header: 'Mesurer la distance', // Measurement
							  Distance: 'Distance: ', // Distance
							  MeasureAgain: 'Mesurer &#224; nouveau', // Measure Again
							  Text: 'S&#233;lectionnez deux points dans le dessin pour la distance.', // Select two points in the drawing for distance
					  	TextArea: 'Sélectionnez une séquence de points. Doubleclick, Esc ou "Polygone proche" bouton pour la zone.',
						Area: "Surface",
						ClosePolygon: 'Polygone proche',
					},

					BirdsEyeModal: {
							  Header: 'Fen&#234;tre Oiseaux', // Birds-Eye Window
					},

					ImageObjectModal: {
							  Header: "Num&#233ro d'objet d'image. ", // Image Object Nr
							LoadImage: 'Charger une nouvelle image',
							RemoveImageNote: "Supprimer la note d'image",
							MinimizeImageNote: "Réduire la note d'image",
							  
					},

					LayerListModal: {
							  Header: 'Liste des couches', // Layer List
							  Search: 'Chercher', // Search
							  Sort: 'Trier par couche', // Sort by Layer
							  AllLayerOn: 'Toutes', // All Layer On
							  AllLayerOff: 'Aucune', // All Layer Off
					SwapLayers: 'Inverser', // Swap All Layers
					On: 'AFFICH&#201;E', // ON
					Off: 'MASQU&#201;E', // OFF
					},
					
					PageChangeListModal: {
					  	Header: 'Changer de page de dessin',
					  	Search: 'Chercher',
					  	Sort: 'Trier par nom',
					On: 'AFFICH&#201;E', // ON
					Off: 'MASQU&#201;E', // OFF
					},					
					
								
					LayerListSpaceModal: {
							  Header: 'Liste des couches - Objets Spatiaux', // Layer List - Space Objects
							  Search: 'Chercher', // Search
							  Sort: 'Trier par couche', // Sort by Layer
							  AllLayerOn: 'Toutes', // All Layer On
							  AllLayerOff: 'Aucune', // All Layer Off
					SwapLayers: 'Inverser', // Swap All Layers
					On: 'AFFICH&#201;E', // ON
					Off: 'MASQU&#201;E', // OFF
					NotAssigned: 'Non assign&#233;', // Not Assigned
					TextLayer: 'Couche de texte', // Text Layer
					RoomLayer: 'Couche de pi&#232;ce', // Room Layer
						HandleLayer: 'Active Layer',
						FloodfillLayer: 'SpaceID Layer',
					
					},

					IconPage_p1_8: {
							  PreviousPage: "Fonctionnalit&#233;s pr&#233;c&#233;dentes", // Previous Icon Page
							  NextPage: "Fonctionnalit&#233;s suivantes", // Next Icon Page
					  	NextMenuPage: 'Page de menu suivante',  //   Next Icon Page  3.3.01a
							  LayerList: 'Liste des couches', // Layer List
							  Print: 'Impression', //Print
							  ZoomIn: 'Zoomer', //Zoom In
							  ZoomOut: 'D&#233;zoomer', //Zoom Out
							  ZoomExtents: 'Extension de zoom', //Zoom Extents
							  ZoomWindow: 'Fen&#234;tre Zoom', //Zoom Window
							  Toggle: 'Basculer Noir/Blanc', // Toggle Black/White
							  Background: 'Couleur de fond', // Background Color
							  FileLoad: 'Charger un fichier', // File Load
							  Search: 'Recherche de texte', // Search Text
							  About: 'A propos', // About
							  LayerOff: 'Masquer les couches', // Layer Off
							  SwapLayers: 'Inverser des couches', // Swap Layers
							  AllLayersOn: 'Afficher les couches', // All Layers On
							  Measurement: 'Mesurer', // Measurement
							  Calibrate: 'Calibrer la mesure', // Calibrate Measurement
							  BirdsEye: 'Basculer Fen&#234;tre Oiseaux', // Togge Birds-Eye Window
							  LineThickness: "Ajuster l'&#233;paisseur de ligne", // Adjust Line Thickeness
					},

					IconPage_p2_8: {
							  PreviousPage: "Fonctionnalit&#233;s pr&#233;c&#233;dentes", // Previous Icon Page
							  NextPage: "Fonctionnalit&#233;s suivantes", // Next Icon Page
							  SaveRedline: "Enregistrer l'annotation", //Save Redline
							  LoadRedline: "Charger l'annotation", //Load Redline
							  DeleteSingle: 'Supprimer une annotation unique', //Delete Single Redline
							  DeleteLast: 'Supprimer la derni&#232;re annotation', //Delete Last Redline
							  Color: "Couleur d'annotation", //Redline Color
							  Thickness: "&#201;paisseur d'annotation", //Redline Thickness
							  StickyNote: 'Ajouter une note', //Make StickyNote
							  ClearAll: 'Effacer les annotations visibles', //Clear Visible Redlines
							  Freehand: 'Annotation &#224; main lev&#233;e', //Freehand Redline
							  Cloud: "Nuage", //Redline Cloud
							  FilledPolygon: 'Polygone plein', //Redline Filled Polygon
							  Polyline: 'Polyligne', //Redline Polyline
							  Polygon: 'Polygone', //Redline Polygon
							  FilledRectangle: 'Rectangle plein', //Filled Redline Rectangle
							  Rectangle: 'Rectangle', //Redline Rectangle
							  Arrow: 'Fl&#232;che', //Redline Arrow
							  Text: 'Texte', //Redline Text
	PublishAsPDF: 'Publier en PDF',
  	MergeAsDXF: 'Fusionner Redline avec le fichier DWG source',
	MergeWithQR: 'Merge QR code with source DWG',

					
						Free: 'Free',
					},

					IconPage_p3_8: {
							  PreviousPage: "Fonctionnalit&#233;s pr&#233;c&#233;dentes", // Previous Icon Page
							  NextPage: "Fonctionnalit&#233;s suivantes", // Next Icon Page
	PublishAsPDF: 'Publier en PDF',
							  LoadLink: "Charger tous les liens d'image", //Load All Image Links
							  InsertLink: "Ins&#233;rer le lien d'image", //Insert Image Link
							  SaveLink: "Enregistrer tous les liens d'image", //Save All Image Links
							  ClearLink: "Effacer tous les liens d'image", //Clear All Image Links
							  Free: 'Libre', //Free
							  QuickCount: 'Nombre rapide', //Quick Count
							  CountSum: 'Compte rapide sommaire', //Summary Quick Count
							  ClearCount: 'Effacez le compte rapide', //Clear Quick Count
							  CompareLoad: 'Comparer: Chargez le deuxi&#232;me dessin', //Load Second Drawing for Compare
							  CompareToggle: 'Basculer individuellement les dessins', //Toggle Drawings individually
							  CompareToggleOverlay: 'Basculer les dessins superpos&#233;s', //Toggle overlaid Drawings
							  CompareExit: 'Sortie comparer dessins', //Exit Compare Drawings
							  CollaborationJoinSession: 'Rejoindre la session de collaboration', //Join Collaboration Session
							  CollaborationTakeControl: 'Prenez le contr&#244;le de la session de collaboration', //Take Control over Collaboration Session
							  CollaborationClearSession: 'Effacer les annotations en session de collaboration', //Clear Redlines in Collaboration Session
							  CollaborationLeaveSession: 'Quitter la session de collaboration', //Leave Collaboration Session
							  LayerOff: 'Masquer les couches', // Layer Off
							  SwapLayers: 'Inverser des couches', // Swap Layers
							  AllLayersOn: 'Afficher les couches', // All Layers On
							  ZoomExtents: 'Extension de zoom', //Zoom Extents
							  ZoomWindow: 'Fen&#234;tre de zoom', //Zoom Window
					},


					IconPage_p4_8: {
							  PreviousPage: "Fonctionnalit&#233;s pr&#233;c&#233;dentes", // Previous Icon Page
							  NextPage: "Fonctionnalit&#233;s suivantes", // Next Icon Page
							  Publish: "Voir la structure de l'objet espace dans le mode d'affichage de l'utilisateur", //View Space Object Structure in User Display Mode
							  Load: 'Charger le plancher et pr&#233;processer des objets spatiaux', //Load Floorplan and pre-process Space Objects
							  Settings: 'Param&#232;tres', //Settings
							  SelectObject: 'S&#233;lectionnez un objet', //Select Object
							  Rect: 'Rectangle Objet Spatial', //Rectangle Space Object
							  Polygon: 'Polygone Objet Spatial', //Polygon Space Object
							  Circle: 'Cercle Objet Spatial', //Circle Space Object
							  CopyCircle: 'Copie Cercle Objet Spatial', //Copy Circle Space Object
							  Delete: 'Effacer Objet Spatial', //Delete Space Object
							  LayerList: 'Liste des couches', // Layer List
							  Mode: "Basculer Affichage de l'objet &#224; / mode &#233;dition", //Toggle Space Object Display and Edit Mode
							  Free: 'Libre', //Free
							  SelectPolygon: "G&#233;n&#233;rer un objet d'espace sur un polygone ferm&#233;", //Generate Space Object on closed polygon
							  LayerOff: 'Masquer les couches', // Layer Off
							  SwapLayers: 'Inverser des couches', // Swap Layers
							  AllLayersOn: 'Afficher les couches', // All Layers On
							  ZoomExtents: 'Extension de zoom', //Zoom Extents
							  ZoomWindow: 'Fen&#234;tre de zoom', //Zoom Window
					},

					IconPage_p5_8: {
						InsertSpaceImage: 'Insert Space Image Object',
						DragSpaceImage: 'Drag Space Image Object',
						ResizeSpaceImage: 'Resize Space Image Object',
						LoadSpaceObjects: 'Load Space Objects',
					  	PreviousPage: 'Previous Icon Page',
					  	NextPage: 'Next Icon Page',
					  	Publish: 'View Space Object Structure in User Display Mode',
					  	DownloadSVG: 'Download processed SVG drawing',
					  	Load: 'Load Floorplan and pre-process Space Objects',
					  	Settings: 'Settings',
					  	SelectObject: 'Select Object',
					  	Rect: 'Rectangle Space Object',
					  	Polygon: 'Polygon Space Object',
					  	Circle: 'Circle Space Object',
					  	CopyCircle: 'Copy Circle Space Object',
					  	Delete: 'Delete Space Object',
					  	LayerList: 'Layer List',
					  	Mode: 'Toggle Space Object Display and Edit Mode',
					  	Free: 'Free',
					  	SelectPolygon: 'Generate Space Object on closed polygon',
					  	LayerOff: 'Layer Off',
					  	SwapLayers: 'Swap Layers',
					  	AllLayersOn: 'All Layers On',
					  	ZoomExtents: 'Zoom Extents',
					  	ZoomWindow: 'Zoom Window',
					},

					IconPage_p6_1: {
					  	PinMarker: 'Add Pin Marker',
					},

					PageModal: {
						SelectPageFromList: 'Sélectionner une page de dessin dans la liste',
					  	EnterPage: 'Entrez le numéro de page',						
					  	RotateBack: 'Faire pivoter de 90 degrés dans le sens antihoraire',
					  	RotateForward: "Faire pivoter de 90 degrés dans le sens des aiguilles d'une montre",
						First: 'Charger la premi&#232;re page dans le dessin', //Load First Page in Drawing
						Previous: 'Charger la page pr&#233;c&#233;dente dans le dessin', //Load Previous Page in Drawing
					    Next: 'Charger la page suivante dans le dessin', //Load Next Page in Drawing
					    Last: 'Charger la derni&#232;re page dans le dessin', //Load Last Page in Drawing
					  	ZoomExtents: 'Étendue du zoom',
					  	ZoomWindow: 'Fenêtre de zoom',
					},

					StickyNote: {
							  MoveNote: 'D&#233;placer la note', //Move Note
							  EditNote: 'Modifier la note', //Edit Note
							  DeleteNote: 'Supprimer la note', //Delete Note
							  MinimizeNote: 'Réduire la note', //Minimize Note
							  Inactive: 'Inactif', //Inactive
							  SaveNote: 'Enregistrer la note', //Save Note
							  Cancel: "Annuler la modification de la note", //Cancel Edit Note
					},

					ImageObject: {
							  InsertReplace: 'Remplacer ou ins&#233;rer une image', //Replace or Insert Image
							  Delete: "Supprimer l'image et l'ic&#244;ne associ&#233;e", //Delete Image and Associated Icon
							  Minimize: "Réduire l'objet d'image", //Minimize Image Object
					},

					DeleteModal: {
							  Header: 'Effacer', // Delete
							  Text1: 'Cette action supprimera', // This action will remove
							  Text2: "et d&#233;sactivera l'acc&#232;s au plan d'&#233;tage pour tous les utilisateurs.", // and disable access to the floor plan for all users

					},

					UnlinkModal: {
							  Header: 'S&#233;parer', // Unlink
							  Text1: 'Cette action supprimera toutes les m&#233;tadonn&#233;es de', // This action will remove all metadata from
							  Text2: 'Les objets de localisation resteront inchang&#233;s.', // Location objects will remain unchanged
					},

					ClearModal: {
							  Header: 'Nettoyer', // Clear
							  Text1: 'Cette action supprimera tous les objets de m&#233;tadonn&#233;es et de localisation de', // This action will remove all metadata and location objects from
					},

					FileLoadSpaceModal: {
							  Header: "CADViewer JS: Chargeur de fichiers de gestion de l'espace", // Space Management File Loader
							  DrawingFilename: 'DESSIN / NOM DU FICHIER', //  DRAWING / FILENAME
					EditFloorplanInfo: "Modifier l'information sur le plan d'&#233;tage", // Edit Floor Plan Info
					BuildRoomTextHyperlinks: 'Construire les liens entre les couches PIECES/TEXTE au chargement', // Build ROOM/TEXT Layer Hyperlinks on Load
					},

					LoadingModal: {
							  Loading: 'Chargement', // Loading
					},

					DataMaps: {
							  Map: [ 'Data Maps - User Map 1', 'Data Maps - User Map 2', 'Data Maps - User Map 3', 'Data Maps - User Map 4' ] //
					//                                                  Map2: 'Data Maps - User Map 2',
					//                                                  Map3: 'Data Maps - User Map 3',
					//                                                  Map4: 'Data Maps - User Map 4',
					},

					HeaderObjectLayers: {
							  ObjectLayer: ['Spaces - User Layer 1', 'Assets - User Layer 2' ] //
					//                                                  ObjectLayer2: 'Assets - User Layer 2', //
					},

					WaitModal: {
							  Printing: 'Imprimer', // Printing
							  Thumbnails: 'Enregistrer', // Saving
							  BatchPDF: 'Imprimer en PDF', // Print to PDF
						MergeDWG: 'Fusionner',
					},


				}
				,
/*

				,
				{ 	languageCode : "FR-FR",
					thisLanguage : "French",

					PrintModal: {
						Header : "CADViewer JS Param&#232;tres d'impression",  // CADViewer JS Print Settings
						Paper : 'Taille de papier:', // Paper Size
						Orientation : 'Orientation:',  // Orientation
						Resolution : 'R&#233;solution:',  // Resolution
						ResolutionText : '(min 75dpi, standard 300dpi)',  // (min 75dpi, standard 300dpi)
						Print : 'Imprimer', // Print
						Grayscale : 'Niveaux de gris', // Grayscale
						PrintPDF : 'Imprimer en PDF' // Print as PDF
					},

					SearchTextModal: {
					  	Header: 'Texte de recherche',   // Search Text
					  	SearchText: 'Texte de recherche:', // Search Text
					  	Zoom: 'Niveau de zoom:', // Zoom Level
					  	Search: 'Chercher' // Search
					},

					SearchCustomModal: {
					  	Header: 'Search',
					  	SearchText: 'Search Text:',
					  	Search: 'Search'
					},

					InfoMessageModal: {
					  	Header: 'Information', //  Information
					  	Version: 'Ce num&#233;ro de version est: ', // This version number is
					  	ComingSoon: 'Arrive bient&#244;t!', // Coming Soon
					  	NoUnits: 'Aucune unit&#233; d&#233;finie dans le dessin, veuillez utiliser la commande Calibrer la mesure en premier.', // No units defined in drawing, please use command Calibrate Measurement first
					  	UnitLess: "Le dessin d'origine est sans unit&#233;, utilisez la commande Calibrer la mesure d&#39;abord.", // The originating drawing is unitless, please use command Calibrate Measurement first
					  	QuickCountSingle: 'Le nombre de compteurs rapides est: ', // Number of Quick Counts is
					  	QuickCountMultiple: 'Nombre de compteurs rapides sont: ', // Number of Quick Counts are
					  	RedlinesLocked: "Redlines sont verrouill&#233;s pour l'utilisateur: ", // Redlines are locked for User
					  	LicensePath: "Impossible de trouver la cl&#233; de licence sur le chemin d'acc&#232;s: ", // Could not find license key at path
					  	LicenseNotFound: "La cl&#233; de licence n'est pas trouv&#233;e", // License key not found
					  	SelectTwoPoints: "S&#233;lectionnez d&#39;abord deux points dans le dessin avec la souris, puis entrez l'unit&#233; et la distance, puis appuyez sur OK..", // Please select two points in the drawing with the mouse first, then enter unit and distance, finally press OK.
					  	ReferenceDistance: 'Entrez une distance de r&#233;f&#233;rence.', // Please enter a reference distance
					  	RedlinesSaved: 'Annotation enregistr&#233;es', // Redlines Saved
					  	SinglePage : 'Dessin de page unique - pas de changement de page', // Single page drawing - no change of page
					  	FirstPage : 'La page actuelle est la premi&#232;re page dans un dessin multipage - pas de changement de page', // The current page is the first page in a multipage drawing - no change of page
					  	OutOfRange: 'The page number entered is outside of the range of pages - no change of page',
					  	LastPage: 'La page actuelle est la derni&#232;re page dans un dessin multipage - pas de changement de page', // The current page is the last page in a multipage drawing - no change of page
					  	FileLoadThroughApp: "REMARQUE: la charge de fichier est activ&#233;e uniquement via l'application d'encapsulation", // NOTE: File Load enabled only through the encapsulating application
					  	ErrorConnectingToHost: "Erreur lors de la connexion à l'h&#244;te. Accédez au volet Param&#232;tres et v&#233;rifiez vos param&#232;tres r&#233;seau!", // Error when connecting to Host. Go to the Settings Pane and check your Network Settings
					  	ConnectToHostFirst: 'Accédez au volet Param&#232;tres, vérifiez vos param&#232;tres r&#233;seau et cliquez sur Enregistrer les modifications pour vous connecter &#224; votre h&#244;te r&#233;seau pour récup&#233;rer la structure de données utilis&#233;e lors de la localisation des cartes.', // Please go to the Settings Pane, check your Network Settings and click Save Changes to connect to your Network Host to retrieve the data structure used when mapping locations
					  	NoObjectSelected: "S&#233;lectionnez un objet d'espace.", // Please select a Space Object
					  	PaperSizePDFPrintOnly: 'S&#233;lectionnez «Imprimer en format PDF» pour obtenir de grandes tailles de papier. Les grandes tailles de papier sont A1 et A0, ainsi que US Arch D et ci-dessus.', // Please select "Print as PDF" for large paper sizes size. Large papersizes are A1 and A0, as well as US Arch D and above
					  	ServerSideFormatForPDFPrint: "L'impression PDF n&#233;cessite un fichier original dans les formats DWG, DWF, DXF ou DGN ou PCF. Veuillez t&#233;l&#233;charger un fichier dans ces formats ou s&#233;lectionner un document plus petit pour l'impression directe. Les papiers d'impression directe sont A4-A2 ou US Letter via ANSI C", // PDF print requires an original file in formats DWG, DWF, DXF or DGN or PCF. Please upload a file in these formats or select a smaller papersize for direct print. Direct print papersizes are A4-A2 or US Letter through ANSI C
							PrintDisabled: 'NOTE: Print Disabled',
						NoQRCode: 'No QR Code received from Server!',

					},

					FileLoadModal: {
					  	Header: 'CADViewer JS - Gestionnaire de fichiers', //  File Manager
					  	DrawingFilename: 'DESSIN / NOM DU FICHIER', //  DRAWING / FILENAME
						EditFloorplanInfo: "Modifier l'information sur le plan d'&#233;tage", // Edit Floor Plan Info
					},

					SaveRedlineModal: {
					  	Header: "CADViewer JS - Enregistrer l'annotation", //  Save Redline
					  	RedlineFilename: 'ANNOTATION / NOM DU FICHIER', // REDLINE / FILENAME
						EditRedlineInfo: "Modifier les infos de l'annotation", // Edit Redline Info
						Upload: 'T&#201;L&#201;CHARGER:', // UPLOAD
					},

					OpenRedlineModal: {
					  	Header: 'CADViewer JS - Annotation Ouverte', // Open Redline
					  	RedlineFilename: 'ANNOTATION / NOM DU FICHIER', // REDLINE / FILENAME
						EditRedlineInfo: "Modifier les infos de l'annotation", // Edit Redline Info
					},

					OpenSpaceObjectModal: {
					  	Header: 'CADViewer JS - Open Space Objects',
					  	SpaceObjectFilename: 'SPACE OBJECT / FILENAME',
						EditSpaceObjectInfo: 'Edit Space Object Info',
					},

					RedlineThicknessModal: {
					  	Header: "&#201;paisseur d'annotation", // Select Redline Thickness
					  	Thickness: '&#201;paisseur:', // Thickness
						OK: 'OK' //  OK
					},

					DocumentPageChangeModal: {
					  	Header: 'Select Document Page',
					  	Page: 'Page:',
						OK: 'OK'
					},
					

					CollaborationStartModal: {
					  	Header: 'Entrez la session de collaboration', //Enter Collaboration Session
					  	Session: 'Nom de la session:', //Session Name
						OK: 'OK' //
					},

										PublishPDFModal: {
					  	Header: 'Publish Redlined Screen Content to PDF',
					  	SelectMode: 'Select Mode:',
					  	Mode1: 'Print/Download',
					  	Mode2: 'Send as e-mail',
					  	Mode3: 'Upload to Server',
					  	EntireDoc: 'Publish Entire Document:',
						OK: 'OK',
						Recipient: 'E-mail:',
						Title: 'Title:',
						Message: 'Message:',
					},

					MergeDXFModal: {
					  	Header: 'Merge Redline with Source DWG',
					  	SelectMode: 'Select Mode:',
					  	Mode1: 'Download',
					  	Mode2: 'Send as e-mail',
					  	Mode3: 'Upload to Server',
					  	EntireDoc: 'Publish Entire Document:',
						OK: 'OK',
						Recipient: 'E-mail:',
						Title: 'Title:',
						Message: 'Message:',
					},
					

					RedlineColorModal: {
					  	Header: "S&#233;lectionnez la couleur d'annotation", //Select Redline Color
					  	PickColor: 'Choisir:', // Pick Color
					  	SelectColor: 'S&#233;lectionner:', //Select
					  	Blue: 'Bleu', //Blue
					  	Red: 'Rouge', //Red
					  	Yellow: 'Jaune', //Yellow
					  	Orange: 'Orange', //Orange
					  	Green: 'Vert', //Green
					  	Purple: 'Violet', //Purple
					  	Brown: 'Marron', //Brown
					  	Gray: 'Gris', //Gray
						OK: 'OK' //
					},
					
					RedlineEllipseModal: {
					  	Header: 'Select Redline Shape',
					  	SelectType: 'Select:',
					  	Ellipse: 'Ellipse',
					  	Cloud: 'Cloud',
						OK: 'OK'
					},

					CreationModeModal: {
					  	Header: 'Select Space ID source',
					  	SelectType: 'Select:',
					  	DataSource: 'From Data Source via API',
					  	Manually: 'Enter Manually',
						OK: 'OK'
					},

					BackgroundColorModal: {
					  	Header: 'S&#233;lectionnez la couleur de fond', //Select Background Color
					  	PickColor: 'Choisir:', //Pick Color
					  	SelectColor: 'S&#233;lectionner:', //Select
					  	White: 'Blanc', //White
					  	Black: 'Noir', //Black
					  	Azure: 'Azur', //Azure
					  	Pink: 'Rose', //Pink
					  	Snow: 'Neige', //Snow
					  	Silver: 'Argent', // Silver
					  	Gray: 'Gris', //Gray
					  	Brown: 'Marron', //Brown
						OK: 'OK' //
					},

					RedlineTextModal: {
					  	Header: "Texte d'annotation", //Redline Text
					  	OK: 'OK', //
					  	Text: "Entrez le texte, cliquez sur OK et s&#233;lectionnez le point d'insertion dans le dessin.", // Enter text, click OK and select the insertion point in the drawing
					},

					LineThicknessModal: {
					  	Header: "Ajuster l'&#233;paisseur de la ligne", // Adjust Line Thickness
					  	LineThickness: '&#201;paisseur de ligne:', // Line Thickness
					},

					CalibrateModal: {
					  	Header: 'Calibrer la mesure', // Calibrate Measurement
					  	Unit: 'Unit&#233;:', // Unit
					  	Distance: 'Distance:', // Distance
					  	OK: 'OK', //
					  	Text: "S&#233;lectionnez deux points sur le dessin avec la souris d&#39;abord, puis entre unit&#233;et distance et appuyez sur OK.", // Select two points in the drawing with the mouse first, then enter unit and distance and press OK
					},

					MeasurementModal: {
					  	Header: 'Mesurer la distance', // Measurement
					  	Distance: 'Distance: ', // Distance
					  	MeasureAgain: 'Mesurer &#224; nouveau', // Measure Again
					  	Text: 'S&#233;lectionnez deux points dans le dessin pour la distance.', // Select two points in the drawing for distance
					  	TextArea: 'Select a sequence of points. Doubleclick, Esc or "Close Area" button for area.',
						Area: "Area",
					},

					BirdsEyeModal: {
					  	Header: 'Fen&#234;tre Oiseaux', // Birds-Eye Window
					},

					ImageObjectModal: {
					  	Header: "Num&#233ro d'objet d'image. ", // Image Object Nr
					  	LoadImage: 'Load New Image',
					  	RemoveImageNote: 'Remove Image Note',
					  	MinimizeImageNote: 'Minimize Image Note',
						
					},

					LayerListModal: {
					  	Header: 'Liste des couches', // Layer List
					  	Search: 'Chercher', // Search
					  	Sort: 'Trier par couche', // Sort by Layer
					  	AllLayerOn: 'Tout sur', // All Layer On
					  	AllLayerOff: 'Tout &#224; fait', // All Layer Off
						SwapLayers: '&#201;changez tous', // Swap All Layers
						On: 'SUR', // ON
						Off: 'HORS', // OFF
					},

					LayerListSpaceModal: {
					  	Header: 'Liste des couches - Objets Spatiaux', // Layer List - Space Objects
					  	Search: 'Chercher', // Search
					  	Sort: 'Trier par couche', // Sort by Layer
					  	AllLayerOn: 'Tout sur', // All Layer On
					  	AllLayerOff: 'Tout &#224; fait', // All Layer Off
						SwapLayers: '&#201;changez tous', // Swap All Layers
						On: 'SUR', // ON
						Off: 'CASHER', // OFF
						NotAssigned: 'Non assign&#233;', // Not Assigned
						TextLayer: 'Couche de texte', // Text Layer
						RoomLayer: 'Couche de chambre', // Room Layer
						HandleLayer: 'Active Layer',
						FloodfillLayer: 'SpaceID Layer',
						
					},

					IconPage_p1_8: {
					  	PreviousPage: "Page d'Ic&#244;ne pr&#233;c&#233;dente", // Previous Icon Page
					  	NextPage: "Page de l'ic&#244;ne suivante", // Next Icon Page
					  	LayerList: 'Liste des couches', // Layer List
					  	Print: 'Impression', //Print
					  	ZoomIn: 'Agrandir', //Zoom In
					  	ZoomOut: 'D&#233;zoomer', //Zoom Out
					  	ZoomExtents: 'Extension de zoom', //Zoom Extents
					  	ZoomWindow: 'Fen&#234;tre Zoom', //Zoom Window
					  	Toggle: 'Basculer Noir/Blanc', // Toggle Black/White
					  	Background: 'Couleur de fond', // Background Color
					  	FileLoad: 'Charge de fichier', // File Load
					  	Search: 'Texte de recherche', // Search Text
					  	About: 'Sur', // About
					  	LayerOff: 'Couche hors', // Layer Off
					  	SwapLayers: '&#201;changer des couches', // Swap Layers
					  	AllLayersOn: 'Toutes les couches sur', // All Layers On
					  	Measurement: 'La mesure', // Measurement
					  	Calibrate: 'Calibrer la mesure', // Calibrate Measurement
					  	BirdsEye: 'Basculer Fen&#234;tre Oiseaux', // Togge Birds-Eye Window
					  	LineThickness: "Ajuster l'&#233;paisseur de la ligne", // Adjust Line Thickeness
					},

					IconPage_p2_8: {
					  	PreviousPage: "Page d'Ic&#244;ne pr&#233;c&#233;dente", // Previous Icon Page
					  	NextPage: "Page de l'ic&#244;ne suivante", // Next Icon Page
					  	SaveRedline: "Enregistrer l'annotation", //Save Redline
					  	LoadRedline: "Charger l'annotation", //Load Redline
					  	DeleteSingle: 'Supprimer une annotation unique', //Delete Single Redline
					  	DeleteLast: 'Supprimer la derni&#232;re annotation', //Delete Last Redline
					  	Color: "Couleur d'annotation", //Redline Color
					  	Thickness: "&#201;paisseur d'annotation", //Redline Thickness
					  	StickyNote: 'Faire une note collante', //Make StickyNote
					  	ClearAll: 'Efface toutes les annotations visibles', //Clear Visible Redlines
					  	Freehand: 'Annotation &#224; main lev&#233;e', //Freehand Redline
					  	Cloud: "Nuage d'annotation", //Redline Cloud
					  	FilledPolygon: 'Annotation de polygone remplie', //Redline Filled Polygon
					  	Polyline: 'Annotation polyligne', //Redline Polyline
					  	Polygon: 'Annotation du polygone', //Redline Polygon
					  	FilledRectangle: 'Annotation rectangulaire remplie', //Filled Redline Rectangle
					  	Rectangle: 'Annotation rectangle', //Redline Rectangle
					  	Arrow: 'Annotation de fl&#232;che', //Redline Arrow
					  	Text: 'Annotation de texte', //Redline Text
					  	ZoomExtents: 'Extension de zoom', //Zoom Extents
					  	ZoomWindow: 'Fen&#234;tre de zoom', //Zoom Window
					  	PublishAsPDF: 'Publish as PDF',
						Free: 'Free',
					},

					IconPage_p3_8: {
					  	PreviousPage: "Page d'Ic&#244;ne pr&#233;c&#233;dente", // Previous Icon Page
					  	NextPage: "Page de l'ic&#244;ne suivante", // Next Icon Page
					  	PublishAsPDF: 'Publish as PDF',
					  	LoadLink: "Charger tous les liens d'image", //Load All Image Links
					  	InsertLink: "Ins&#233;rer le lien d'image", //Insert Image Link
					  	SaveLink: "Enregistrer tous les liens d'image", //Save All Image Links
					  	ClearLink: "Effacer tous les liens d'image", //Clear All Image Links
					  	Free: 'Libre', //Free
					  	QuickCount: 'Nombre rapide', //Quick Count
					  	CountSum: 'Compte rapide sommaire', //Summary Quick Count
					  	ClearCount: 'Effacez le compte rapide', //Clear Quick Count
					  	CompareLoad: 'Comparer: Chargez le deuxi&#232;me dessin', //Load Second Drawing for Compare
					  	CompareToggle: 'Basculer individuellement les dessins', //Toggle Drawings individually
					  	CompareToggleOverlay: 'Basculer les dessins superpos&#233;s', //Toggle overlaid Drawings
					  	CompareExit: 'Sortie comparer dessins', //Exit Compare Drawings
					  	CollaborationJoinSession: 'Rejoindre la session de collaboration', //Join Collaboration Session
					  	CollaborationTakeControl: 'Prenez le contr&#244;le de la session de collaboration', //Take Control over Collaboration Session
					  	CollaborationClearSession: 'Effacer les annotations en session de collaboration', //Clear Redlines in Collaboration Session
					  	CollaborationLeaveSession: 'Quitter la session de collaboration', //Leave Collaboration Session
					  	LayerOff: 'Couche hors', // Layer Off
					  	SwapLayers: '&#201;changer des couches', // Swap Layers
					  	AllLayersOn: 'Toutes les couches sur', // All Layers On
					  	ZoomExtents: 'Extension de zoom', //Zoom Extents
					  	ZoomWindow: 'Fen&#234;tre de zoom', //Zoom Window
					},


					IconPage_p4_8: {
					  	PreviousPage: "Page d'Ic&#244;ne pr&#233;c&#233;dente", // Previous Icon Page
					  	NextPage: "Page de l'ic&#244;ne suivante", // Next Icon Page
					  	Publish: "Voir la structure de l'objet espace dans le mode d'affichage de l'utilisateur", //View Space Object Structure in User Display Mode
					  	Load: 'Charger le plancher et pr&#233;processer des objets spatiaux', //Load Floorplan and pre-process Space Objects
					  	Settings: 'Param&#232;tres', //Settings
					  	SelectObject: 'S&#233;lectionnez un objet', //Select Object
					  	Rect: 'Rectangle Objet Spatial', //Rectangle Space Object
					  	Polygon: 'Polygone Objet Spatial', //Polygon Space Object
					  	Circle: 'Cercle Objet Spatial', //Circle Space Object
					  	CopyCircle: 'Copie Cercle Objet Spatial', //Copy Circle Space Object
					  	Delete: 'Effacer Objet Spatial', //Delete Space Object
					  	LayerList: 'Liste des couches', // Layer List
					  	Mode: "Affichage de l'objet &#224; bascule et mode d'&#233;dition", //Toggle Space Object Display and Edit Mode
					  	Free: 'Libre', //Free
					  	SelectPolygon: "G&#233;n&#233;rer un objet d'espace sur un polygone ferm&#233;", //Generate Space Object on closed polygon
					  	LayerOff: 'Couche hors', // Layer Off
					  	SwapLayers: '&#201;changer des couches', // Swap Layers
					  	AllLayersOn: 'Toutes les couches sur', // All Layers On
					  	ZoomExtents: 'Extension de zoom', //Zoom Extents
					  	ZoomWindow: 'Fen&#234;tre de zoom', //Zoom Window
					},

					IconPage_p5_8: {
						InsertSpaceImage: 'Insert Space Image Object',
						DragSpaceImage: 'Drag Space Image Object',
						ResizeSpaceImage: 'Resize Space Image Object',
						LoadSpaceObjects: 'Load Space Objects',
					  	PreviousPage: 'Previous Icon Page',
					  	NextPage: 'Next Icon Page',
					  	Publish: 'View Space Object Structure in User Display Mode',
					  	DownloadSVG: 'Download processed SVG drawing',
					  	Load: 'Load Floorplan and pre-process Space Objects',
					  	Settings: 'Settings',
					  	SelectObject: 'Select Object',
					  	Rect: 'Rectangle Space Object',
					  	Polygon: 'Polygon Space Object',
					  	Circle: 'Circle Space Object',
					  	CopyCircle: 'Copy Circle Space Object',
					  	Delete: 'Delete Space Object',
					  	LayerList: 'Layer List',
					  	Mode: 'Toggle Space Object Display and Edit Mode',
					  	Free: 'Free',
					  	SelectPolygon: 'Generate Space Object on closed polygon',
					  	LayerOff: 'Layer Off',
					  	SwapLayers: 'Swap Layers',
					  	AllLayersOn: 'All Layers On',
					  	ZoomExtents: 'Zoom Extents',
					  	ZoomWindow: 'Zoom Window',
					},

					IconPage_p6_1: {
					  	PinMarker: 'Add Pin Marker',
					},

					PageModal: {
						SelectPageFromList: 'Select Drawing Page From List',
					  	EnterPage: 'Enter page number',
					  	RotateBack: 'Rotate 90 degrees counter clockwise',
					  	RotateForward: 'Rotate 90 degrees clockwise',
					  	First: 'Charger la premi&#232;re page dans le dessin', //Load First Page in Drawing
					  	Previous: 'Charger la page pr&#233;c&#233;dente dans le dessin', //Load Previous Page in Drawing
					  	Next: 'Charger la page suivante dans le dessin', //Load Next Page in Drawing
					  	Last: 'Charger la derni&#232;re page dans le dessin', //Load Last Page in Drawing
					},

					StickyNote: {
					  	MoveNote: 'D&#233;placer la note', //Move Note
					  	EditNote: 'Modifier la note', //Edit Note
					  	DeleteNote: 'Supprimer la note', //Delete Note
					  	MinimizeNote: 'Minimiser la note', //Minimize Note
					  	Inactive: 'Inactif', //Inactive
					  	SaveNote: 'Enregistrer la note', //Save Note
					  	Cancel: "Annuler l'&#233;dition de la note", //Cancel Edit Note
					},

					ImageObject: {
					  	InsertReplace: 'Remplacer ou ins&#233;rer une image', //Replace or Insert Image
					  	Delete: "Supprimer l'image et l'ic&#244;ne associ&#233;e", //Delete Image and Associated Icon
					  	Minimize: "Minimiser l'objet d'image", //Minimize Image Object
					},

					DeleteModal: {
					  	Header: 'Effacer', // Delete
					  	Text1: 'Cette action supprimera', // This action will remove
					  	Text2: "et d&#233;sactiver l'acc&#232;s au plan d'&#233;tage pour tous les utilisateurs.", // and disable access to the floor plan for all users

					},

					UnlinkModal: {
					  	Header: 'D&#233;bloquer', // Unlink
					  	Text1: 'Cette action supprimera toutes les m&#233;tadonn&#233;es de', // This action will remove all metadata from
					  	Text2: 'Les objets de localisation resteront inchang&#233;s.', // Location objects will remain unchanged
					},

					ClearModal: {
					  	Header: 'Claires', // Clear
					  	Text1: 'Cette action supprimera tous les objets de m&#233;tadonn&#233;es et de localisation de', // This action will remove all metadata and location objects from
					},

					FileLoadSpaceModal: {
					  	Header: "CADViewer JS: Chargeur de fichiers de gestion de l'espace", // Space Management File Loader
					  	DrawingFilename: 'DESSIN / NOM DU FICHIER', //  DRAWING / FILENAME
						EditFloorplanInfo: "Modifier l'information sur le plan d'&#233;tage", // Edit Floor Plan Info
						BuildRoomTextHyperlinks: 'Construire le ROOM/TEXT Hyperliens de couche sur la charge', // Build ROOM/TEXT Layer Hyperlinks on Load
					},

					LoadingModal: {
					  	Loading: 'Chargement', // Loading
					},

					DataMaps: {
					  	Map: [ 'Data Maps - User Map 1', 'Data Maps - User Map 2', 'Data Maps - User Map 3', 'Data Maps - User Map 4' ] //
//					  	Map2: 'Data Maps - User Map 2',
//					  	Map3: 'Data Maps - User Map 3',
//					  	Map4: 'Data Maps - User Map 4',
					},

					HeaderObjectLayers: {
					  	ObjectLayer: ['Spaces - User Layer 1', 'Assets - User Layer 2' ] //
//					  	ObjectLayer2: 'Assets - User Layer 2', //
					},

					WaitModal: {
					  	Printing: 'Imprimer', // Printing
					  	Thumbnails: 'Enregistrer', // Saving
					  	BatchPDF: 'Imprimer sur PDF', // Print to PDF
						MergeDWG: 'Merging',
					},


				}
*/


				{ 	languageCode : "ES-ES",
					thisLanguage : "Spanish",

					PrintModal: {
						Header : 'CADViewer JS Configuraci&#243;n de impresi&#243;n',  // CADViewer JS Configuración de impresión
						Paper : 'Tama&#241;o de papel:',  // Tamaño de papel
						Orientation : 'Orientaci&#243;n:',  // Orientación
						Resolution : 'Resoluci&#243;n:',  // Resolución
						ResolutionText : '(m&#237;nimo 75dpi, est&#225;ndar 300dpi)',  // Mínimo 75dpi, estándar 300dpi
						Print : 'Imprimir',  // Impresión
						Grayscale : 'Escala de Grises',
						PrintPDF : 'Imprimir como PDF'
					},

					SearchTextModal: {
					  	Header: 'Buscar Texto',
					  	SearchText: 'Buscar Texto:',
					  	Zoom: 'Zoom:',
					  	Search: 'Buscar'
					},

					SearchCustomModal: {
					  	Header: 'Search',
					  	SearchText: 'Search Text:',
					  	Search: 'Search'
					},

					InfoMessageModal: {
					  	Header: 'Informaci&#243;n',  // Información
					  	Version: 'N&#250;mero de versi&#243;n: ',  // Este número de versión es:
					  	ComingSoon: 'Pr&#243;ximamente!', // Próximamente
					  	NoUnits: 'No hay unidades definidas en el dibujo, por favor utilice el comando calibrar la medici&#243;n primero.', // No hay unidades definidas en el dibujo, por favor utilice el comando calibrar la medición primero
					  	// CG
					  	UnitLess: 'Sin unidad de medida definida. Por favor, use el comando "Calibrar la  medici&#243;n" primero.', // El dibujo de origen es la unidad menos, por favor, utilice el comando calibrar la medición primero
					  	QuickCountSingle: 'El n&#250;mero de cuentas r&#225;pidas es: ',  // El número de cuentas rápidas es
					  	QuickCountMultiple: 'N&#250;mero de cuentas r&#225;pidas: ', // Número de cuentas rápidas
					  	// CG
					  	RedlinesLocked: 'Anotaciones bloqueadas para el usuario: ', // Las líneas rojas están bloqueadas para el usuario
					  	LicensePath: 'No se encontró la clave de licencia en la ruta: ', //
					  	LicenseNotFound: 'Clave de licencia no encontrada',  // No se encontró clave de licencia
					  	SelectTwoPoints: 'Primero seleccione dos puntos en el dibujo con el rat&#243;n, ingrese unidad y distancia y finalmente pulse OK.',  // Seleccione dos puntos en el dibujo con el ratón primero, luego ingrese unidad y distancia, finalmente presione OK
					  	ReferenceDistance: 'Introduzca una distancia de referencia.', //
					  	// CG
					  	RedlinesSaved: 'Anotaciones guardadas',  // Líneas rojas guardadas
					  	SinglePage : 'Dibujo de una p&#225;gina - sin cambio de p&#225;gina',  // Dibujo de una página - sin cambio de página
					  	FirstPage : 'La p&#225;gina actual es la primera p&#225;gina de un dibujo de varias p&#225;ginas - no hay cambio de p&#225;gina',  // La página actual es la primera página de un dibujo de varias páginas - no hay cambio de página
					  	LastPage: 'La p&#225;gina actual es la &#250;ltima p&#225;gina de un dibujo de varias p&#225;ginas - no hay cambio de p&#225;gina',  // La página actual es la última página de un dibujo de varias páginas - no hay cambio de página
					  	OutOfRange: 'The page number entered is outside of the range of pages - no change of page',
						// CG
					  	FileLoadThroughApp: 'NOTA: Carga de archivos activa s&#243;lo a trav&#233;s de la aplicaci&#243;n encapsulada.', // NOTA: Carga de archivos activada sólo a través de la aplicación de encapsulación
					  	ErrorConnectingToHost: 'Vaya al panel de configuración y verifique su configuración de red!',
					  	ConnectToHostFirst: 'Vaya al Panel de configuración, verifique su Configuración de red y haga clic en Guardar cambios para conectarse a su Host de red para recuperar la estructura de datos utilizada al asignar ubicaciones.',

					  	NoObjectSelected: 'Por favor seleccione un objeto espacial.',
					  	PaperSizePDFPrintOnly: 'Seleccione "Imprimir como PDF" para tamaños de papel grandes. Los tamaños de papel grandes son A1 y A0, así como también el Arco D de EE. UU. Y superior.',
					  	ServerSideFormatForPDFPrint: 'La impresión en PDF requiere un archivo original en formatos DWG, DWF, DXF o DGN o PCF. Cargue un archivo en estos formatos o seleccione un tamaño de papel más pequeño para impresión directa. Los tamaños de papel de impresión directa son A4-A2 o Carta EE. UU. A través de ANSI C',
							PrintDisabled: 'NOTE: Print Disabled',
						NoQRCode: 'No QR Code received from Server!',

					},

					FileLoadModal: {
					  	Header: 'CADViewer JS - Administrador de archivos',
					  	DrawingFilename: 'DIBUJO / NOMBRE DEL ARCHIVO',
						EditFloorplanInfo: 'Editar informaci&#243;n del plano de planta',  // Editar información del plan de planta
					},

					SaveRedlineModal: {
						// CG
					  	Header: 'CADViewer JS - Guardar anotaci&#243;n',  // CADViewer JS - Guardar línea roja
					  	// CG
					  	RedlineFilename: 'ANOTACION / NOMBRE DEL ARCHIVO',  // LÍNEA ROJA / NOMBRE DEL ARCHIVO
					  	// CG
						EditRedlineInfo: 'Editar informaci&#243;n de anotaci&#243;n', // Editar información de línea roja
						Upload: 'CARGAR:',
					},

					OpenRedlineModal: {
						// CG
					  	Header: 'CADViewer JS - Cargar anotaci&#243;n',  // CADViewer JS - Abrir las líneas rojas
					  	// CG
					  	RedlineFilename: 'ANOTACION / NOMBRE DEL ARCHIVO',  // LÍNEA ROJA / NOMBRE DEL ARCHIVO
					  	// CG
						EditRedlineInfo: 'Editar informaci&#243;n de anotaci&#243;n', // Editar información de línea roja
					},

					OpenSpaceObjectModal: {
					  	Header: 'CADViewer JS - Open Space Objects',
					  	SpaceObjectFilename: 'SPACE OBJECT / FILENAME',
						EditSpaceObjectInfo: 'Edit Space Object Info',
					},

					RedlineThicknessModal: {
						// CG
					  	Header: 'Seleccione grosor anotaci&#243;n',  // Seleccione Ancho de línea roja
					  	Thickness: 'Grosor:',
						OK: 'OK'
					},

					DocumentPageChangeModal: {
					  	Header: 'Página de documento',
					  	Page: 'Página:',
						OK: 'OK'
					},
					
					
					CollaborationStartModal: {
					  	Header: 'Entrar en sesión de colaboración',
					  	Session: 'Nombre de sesión:',
						OK: 'OK'
					},

					PublishPDFModal: {
					  	Header: 'Publicar el contenido de la pantalla en rojo en PDF',
					  	SelectMode: 'Seleccionar:',
					  	Mode1: 'Imprimir/Salvar',
					  	Mode2: 'E-mail',
					  	Mode3: 'Subir al servidor',
					  	EntireDoc: 'Publicar todo el documento:',
						OK: 'OK',
						Recipient: 'E-mail:',
						Title: 'Título:',
						Message: 'Mensaje:',
					},

					MergeDXFModal: {
					  	Header: 'Combinar Redline con Source DWG',
						SelectMode: 'Seleccionar:',
					  	Mode1: 'Imprimir/Salvar',
					  	Mode2: 'E-mail',
					  	Mode3: 'Subir al servidor',
					  	EntireDoc: 'Publicar todo el documento:',
						OK: 'OK',
						Recipient: 'E-mail:',
						Title: 'Título:',
						Message: 'Mensaje:',
							},
					
					
					RedlineColorModal: {
						// CG
					  	Header: 'Seleccione el color de la anotaci&#243;n', // Seleccione el color de la línea roja
					  	PickColor: 'Elegir:',
					  	SelectColor: 'Seleccionar:',
					  	Blue: 'Azul',
					  	Red: 'Rojo',
					  	Yellow: 'Amarillo',
					  	Orange: 'Naranja',
					  	Green: 'Verde',
					  	Purple: 'P&#250;rpura',  // Púrpura
					  	Brown: 'Marr&#243;n',  // marrón
					  	Gray: 'Gris',  // Gris
						OK: 'OK'
					},

					RedlineEllipseModal: {
					  	Header: 'Seleccionar forma de línea roja',
					  	SelectType: 'Seleccionar:',
					  	Ellipse: 'Elipse',
					  	Cloud: 'Nube',
						OK: 'OK'
					},

					CreationModeModal: {
					  	Header: 'Select Space ID source',
					  	SelectType: 'Select:',
					  	DataSource: 'From Data Source via API',
					  	Manually: 'Enter Manually',
						OK: 'OK'
					},
					
					BackgroundColorModal: {
					  	Header: 'Seleccione el color de fondo',
					  	PickColor: 'Elegir:',
					  	SelectColor: 'Seleccionar:',
					  	White: 'Blanco',
					  	Black: 'Negro',
					  	Azure: 'Azur',
					  	Pink: 'Rosado',
					  	Snow: 'Nieve',
					  	Silver: 'Plata',
					  	Gray: 'Gris',
					  	Brown: 'Marr&#243;n',  // marrón
						OK: 'OK'
					},

					RedlineTextModal: {
						// CG
					  	Header: 'Texto de anotaci&#243;n', // Texto de línea roja
					  	OK: 'OK',
					  	Text: 'Introduzca texto, haga clic en Aceptar y seleccione el punto de inserci&#243;n en el dibujo.',  // Introduzca texto, haga clic en Aceptar y seleccione el punto de inserción en el dibujo.
					},

					LineThicknessModal: {
					  	Header: 'Ajuste del grosor de l&#237;nea',  // Ajuste del espesor de línea
					  	LineThickness: 'Grosor de la l&#237;nea:',  // Grosor de la línea
					},

					CalibrateModal: {
					  	Header: 'Calibrar la medici&#243;n',  // Calibrar la medición
					  	Unit: 'Unidad:',
					  	Distance: 'Distancia:',
					  	OK: 'OK',
					  	Text: 'Seleccione dos puntos en el dibujo con el rat&#243;n primero, luego ingrese unidad y distancia y presione OK.',  // Seleccione dos puntos en el dibujo con el ratón primero, luego ingrese unidad y distancia y presione OK
					},

					MeasurementModal: {
					  	Header: 'Medici&#243;n',   // Medición
					  	Distance: 'Distancia: ',
					  	MeasureAgain: 'Medir de nuevo',
					  	Text: 'Seleccione dos puntos en el dibujo para obtener la distancia.',
					  	TextArea: 'Seleccione una secuencia de puntos. Haga doble clic, Esc o botón "Cerrar área" para el área.',
						Area: "Área",
						ClosePolygon: 'Cerrar área',
												
					},

					BirdsEyeModal: {
					  	Header: 'Ventana vista de p&#225;jaro',  // Ventana de ojos de pájaros
					},

					ImageObjectModal: {
					  	Header: 'N&#250;mero de objeto de la imagen: ',  // Número de objeto de la imagen
					  	LoadImage: 'Cargar nueva imagen',
					  	RemoveImageNote: 'Eliminar nota de imagen',
					  	MinimizeImageNote: 'Minimizar nota de imagen',
						
					},

					LayerListModal: {
					  	Header: 'Lista de capas',
					  	Search: 'Buscar',
					  	Sort: 'Ordenar Capa',
					  	AllLayerOn: 'Capas Activas',
					  	AllLayerOff: 'Desactivar Capas',
						SwapLayers: 'Intercambiar',
						On: 'ACTIVAR',
						Off: 'DESACTIVAR',
					},

					PageChangeListModal: {
					  	Header: 'Cambiar página de dibujo',
					  	Search: 'Buscar',
					  	Sort: 'Ordenar',
						On: 'ACTIVAR',
						Off: 'DESACTIVAR',
					},
					
					
					LayerListSpaceModal: {
					  	Header: 'Lista de capas - Objetos espaciales',
					  	Search: 'Buscar',
					  	AllLayerOn: 'Capas Activas',
					  	AllLayerOff: 'Desactivar Capas',
						SwapLayers: 'Intercambiar',
						On: 'ACTIVAR',
						Off: 'DESACTIVAR',
						NotAssigned: 'No asignado',
						TextLayer: 'Capa de texto',
						RoomLayer: 'Capa espacial',
						FloodfillLayer: 'SpaceID Layer',
					},

					IconPage_p1_8: {
					  	PreviousPage: 'P&#225;gina anterior',  // Página del icono anterior
					  	NextPage: 'Siguiente p&#225;gina',  //  Siguiente página de icono
					  	NextMenuPage: 'Página de menú siguiente',  //   Next Icon Page  3.3.01a
					  	LayerList: 'Lista de capas',
					  	Print: 'Impresi&#243;n',  // Impresión
						// CG
					  	ZoomIn: 'Acercar',
						// CG
					  	ZoomOut: 'Alejar',
					  	// CG
					  	ZoomExtents: 'Encuadrar',
					  	ZoomWindow: 'Ventana de zoom',
					  	Toggle: 'Alternar Negro / Blanco',
					  	Background: 'Color de fondo',
					  	// CG
					  	FileLoad: 'Cargar archivo',
					  	Search: 'Buscar texto',
					  	About: 'Acerca de',
					  	LayerOff: 'Desactivar capa',
					  	SwapLayers: 'Intercambiar capas',
					  	AllLayersOn: 'Activar todas las capas',
					  	Measurement: 'Medici&#243;n',  // medición
					  	Calibrate: 'Calibrar la medici&#243;n', // Calibrar la medición
					  	BirdsEye: 'Ventana vista de p&#225;jaro',  // Cambiar la ventana de los ojos de pájaros
					  	LineThickness: 'Ajustar grosor de l&#237;nea',  // Ajuste del espesor de línea
					},

					IconPage_p2_8: {
					  	PreviousPage: 'P&#225;gina anterior',  // Página del icono anterior
					  	NextPage: 'P&#225;gina siguiente',  //  Siguiente página de icono
					  	// CG
					  	SaveRedline: 'Guardar anotaci&#243;n',  // Guardar línea roja
					  	// CG
					  	LoadRedline: 'Carga anotaci&#243;n',  // Carga línea roja
					  	// CG
					  	DeleteSingle: 'Eliminar anotaci&#243;n', // Eliminar línea roja única
					  	// CG
					  	DeleteLast: 'Eliminar la &#250;ltima anotaci&#243;n', // Eliminar la última línea roja
					  	// CG
					  	Color: 'Color de anotaci&#243;n', // Color de la línea roja
					  	// CG
					  	Thickness: 'Grosor de anotaci&#243;n',  // Espesor de la línea roja
					  	StickyNote: 'Nota adhesiva', //
					  	// CG
					  	ClearAll: 'Borrar todas las anotaciones', // Borrar líneas rojas visibles
					  	// CG
					  	Freehand: 'Anotaci&#243;n libre', // Línea roja a mano libre
					  	// CG
					  	Cloud: 'Anotaci&#243;n nube',  // Nube de línea roja
					  	// CG
					  	FilledPolygon: 'Anotaci&#243;n pol&#237;gono relleno', // Polígono lleno de línea roja
					  	// CG
					  	Polyline: 'Anotaci&#243;n polil&#237;nea', // Línea roja polilínea
					  	// CG
					  	Polygon: 'Anotaci&#243;n pol&#237;gono', // Línea roja polígono
					  	// CG
					  	FilledRectangle: 'Anotaci&#243;n rect&#225;ngulo con relleno', // Rectángulo de línea roja relleno
					  	// CG
					  	Rectangle: 'Anotaci&#243;n rect&#225;ngulo', // Rectángulo de la línea roja
					  	// CG
					  	Arrow: 'Anotaci&#243;n flecha', // Flecha de la línea roja
					  	// CG
					  	Text: 'Texto de anotaci&#243;n', // Texto de línea roja
					  	ZoomExtents: 'Extensiones de zoom',
					  	ZoomWindow: 'Ventana de zoom',
	PublishAsPDF: 'Publicar como PDF',
  	MergeAsDXF: 'Combinar Redline con Source DWG',		
	MergeWithQR: 'Merge QR code with source DWG',
						Free: 'Libre',
					},

					IconPage_p3_8: {
					  	PreviousPage: 'P&#225;gina anterior',  // Página del icono anterior
					  	NextPage: 'Siguiente p&#225;gina de icono',  //  Siguiente página de icono
					  	PublishAsPDF: 'Publish as PDF',
					  	LoadLink: 'Cargar todos los v&#237;nculos de imagen',  // Cargar todos los vínculos de imagen
					  	InsertLink: 'Insertar enlace de imagen', // Insertar enlace de imagen
					  	SaveLink: 'Guardar todos los v&#237;nculos de imagen', // Guardar todos los vínculos de imagen
					  	ClearLink: 'Borrar todos los v&#237;nculos de imagen', // Borrar todos los vínculos de imagen
					  	Free: 'Libre',
					  	QuickCount: 'Cuenta r&#225;pida',  // Cuenta rápida
					  	CountSum: 'Cuenta r&#225;pida de resumen', // Cuenta rápida de resumen
					  	ClearCount: 'Claro cuenta r&#225;pida',  // Claro Cuenta rápida
					  	CompareLoad: 'Load Second Drawing for Compare',
					  	CompareToggle: 'Toggle Drawings individually',
					  	CompareToggleOverlay: 'Toggle overlaid Drawings',
					  	CompareExit: 'Exit Compare Drawings',
					  	CollaborationJoinSession: 'Join Collaboration Session',
					  	CollaborationTakeControl: 'Take Control over Collaboration Session',
					  	CollaborationClearSession: 'Clear Redlines in Collaboration Session',
					  	CollaborationLeaveSession: 'Leave Collaboration Session',
					  	LayerOff: 'Desactivar la capa',
					  	SwapLayers: 'Intercambiar capas',
					  	AllLayersOn: 'Todas las capas activas',
					  	ZoomExtents: 'Extensiones de zoom',
					  	ZoomWindow: 'Ventana de zoom',
					},


					IconPage_p4_8: {
					  	PreviousPage: 'P&#225;gina anterior',  // Página del icono anterior
					  	NextPage: 'P&#225;gina siguiente',  //  Siguiente página de icono
					  	Publish: 'Modo de visualizaci&#243;n del usuario de estructuras de objetos espaciales',  // Estructura de objetos de espacio de publicación para el modo de visualización del usuario
					  	Load: 'Planos de carga y objetos espaciales previos al proceso',  //
					  	Settings: 'Ajustes',
					  	SelectObject: 'Seleccionar objeto',
					  	Rect: 'Rect&#225;ngulo objeto espacio',  // Rectángulo Objeto Espacio
					  	Polygon: 'Objeto espacial de pol&#237;gono',  // Objeto espacial de polígono
					  	Circle: 'Objeto de espacio de c&#237;rculo', // Objeto de espacio de círculo
					  	CopyCircle: 'Copia espacio c&#237;rculo objeto',  // Copia espacio círculo objeto
					  	Delete: 'Eliminar objeto de espacio',  //
					  	LayerList: 'Lista de capas',
					  	Mode: 'Cambiar la visualizaci&#243;n de objetos espaciales y el modo de edici&#243;n', // Cambiar la visualización de objetos espaciales y el modo de edición
					  	Free: 'Vacio',
					  	SelectPolygon: 'Generate Space Object on closed polygon',
					  	LayerOff: 'Desactivar la capa',
					  	SwapLayers: 'Intercambiar capas',
					  	AllLayersOn: 'Todas las capas activas',
					  	ZoomExtents: 'Extensiones de zoom',
					  	ZoomWindow: 'Ventana de zoom',
					},

					IconPage_p5_8: {
						InsertSpaceImage: 'Insert Space Image Object',
						DragSpaceImage: 'Drag Space Image Object',
						ResizeSpaceImage: 'Resize Space Image Object',
						LoadSpaceObjects: 'Load Space Objects',
					  	PreviousPage: 'Previous Icon Page',
					  	NextPage: 'Next Icon Page',
					  	Publish: 'View Space Object Structure in User Display Mode',
					  	DownloadSVG: 'Download processed SVG drawing',
					  	Load: 'Load Floorplan and pre-process Space Objects',
					  	Settings: 'Settings',
					  	SelectObject: 'Select Object',
					  	Rect: 'Rectangle Space Object',
					  	Polygon: 'Polygon Space Object',
					  	Circle: 'Circle Space Object',
					  	CopyCircle: 'Copy Circle Space Object',
					  	Delete: 'Delete Space Object',
					  	LayerList: 'Layer List',
					  	Mode: 'Toggle Space Object Display and Edit Mode',
					  	Free: 'Free',
					  	SelectPolygon: 'Generate Space Object on closed polygon',
					  	LayerOff: 'Layer Off',
					  	SwapLayers: 'Swap Layers',
					  	AllLayersOn: 'All Layers On',
					  	ZoomExtents: 'Zoom Extents',
					  	ZoomWindow: 'Zoom Window',
					},

					IconPage_p6_1: {
					  	PinMarker: 'Add Pin Marker',
					},

					PageModal: {
						SelectPageFromList: 'Seleccionar página de dibujo de la lista',
					  	EnterPage: 'Ingrese el número de página',
					  	RotateBack: 'Girar 90 grados a la izquierda',
					  	RotateForward: 'Girar 90 grados a la derecha',
					  	First: 'Primera p&#225;gina',  // Cargar la primera página en el dibujo
					  	Previous: 'P&#225;gina anterior', // Cargar página anterior en el dibujo
					  	Next: 'Siguiente p&#225;gina', // Cargar la siguiente página en el dibujo
					  	Last: '&#250;ltima p&#225;gina',
					  	ZoomExtents: 'Extensiones de zoom',
					  	ZoomWindow: 'Ventana de zoom',
					},

					StickyNote: {
					  	MoveNote: 'Mover nota',
					  	EditNote: 'Editar nota',
					  	DeleteNote: 'Eliminar nota',
					  	MinimizeNote: 'Minimizar nota',
					  	Inactive: 'Inactivo',
					  	SaveNote: 'Guardar nota',
					  	Cancel: 'Cancelar edici&#243;n de nota',
					},

					ImageObject: {
					  	InsertReplace: 'Reemplazar o insertar imagen',
					  	Delete: 'Eliminar imagen e icono asociado',
					  	Minimize: 'Minimizar objeto de imagen',
					},

					DeleteModal: {
					  	Header: 'Borrar',
					  	Text1: 'Esta acci&#243;n eliminar&#225;',     // Esta acción eliminará
					  	Text2: 'y deshabilitar el acceso al plano de planta para todos los usuarios.',

					},

					UnlinkModal: {
					  	Header: 'Desconectar',
					  	Text1: 'Esta acci&#243;n eliminar&#225; todos los metadatos de',  // Esta acción eliminará todos los metadatos de
					  	Text2: 'Los objetos de ubicaci&#243;n permanecer&#225;n sin cambios.',  // Los objetos de ubicación permanecerán sin cambios.
					},

					ClearModal: {
					  	Header: 'Aclarar',
					  	Text1: 'Esta acci&#243;n eliminar&#225; todos los objetos de metadatos y',  // Esta acción eliminará todos los objetos de metadatos y
					},

					FileLoadSpaceModal: {
					  	Header: 'CADViewer JS: Cargador de archivos Espacio',
					  	DrawingFilename: 'DIBUJO / NOMBRE DEL ARCHIVO',
						EditFloorplanInfo: 'Editar informaci&#243;n del plano de planta',  // Editar información del plan de planta
						BuildRoomTextHyperlinks: 'Construir HORARIO/TEXTO Hiperv&#237;nculos en Carga',  // Construir HORARIO / TEXTO Hipervínculos en Carga
					},

					LoadingModal: {
					  	Loading: 'Cargando',
					},

					DataMaps: {
					  	Map: [ 'Data Maps - User Map 1', 'Data Maps - User Map 2', 'Data Maps - User Map 3', 'Data Maps - User Map 4' ]
//					  	Map2: 'Data Maps - User Map 2',
//					  	Map3: 'Data Maps - User Map 3',
//					  	Map4: 'Data Maps - User Map 4',
					},

					HeaderObjectLayers: {
					  	ObjectLayer: ['Spaces - User Layer 1', 'Assets - User Layer 2' ]
//					  	ObjectLayer2: 'Assets - User Layer 2',
					},

					WaitModal: {
					  	Printing: 'Impresión',
					  	Thumbnails: 'Salvar',
					  	BatchPDF: 'Imprimir en PDF',
						MergeDWG: 'Fusionando',
					},


				}
				,


				{ 	languageCode : "PT-PT",
					thisLanguage : "Portuguese",

					PrintModal: {
						Header : 'CADViewer JS Configura&#231;&#245;es de impress&#227;o',   // CADViewer JS Configurações de impressão
						Paper : 'Tamanho:',   // Tamanho do papel
						Orientation : 'Orienta&#231;&#227;o:', // Orientação
						Resolution : 'Resolu&#231;&#227;o:',   // Resolução
 						ResolutionText : '(em 75dpi, 300dpi padr&#227;o)',  //  (em 75dpi, 300dpi padrão)
						Print : 'Entrar',
						Grayscale : 'Cinzento',
						PrintPDF : 'Imprimir como PDF'
					},

					SearchTextModal: {
					  	Header: 'Pesquisar texto',      //  Pesquisar texto
					  	SearchText: 'Pesquisar texto:',      // Pesquisar texto
					  	Zoom: 'N&#237;vel de zoom:',		// Nível de zoom
					  	Search: 'Entrar'   //      Entrar
					},

					SearchCustomModal: {
					  	Header: 'Search',
					  	SearchText: 'Search Text:',
					  	Search: 'Search'
					},

					InfoMessageModal: {
					  	Header: 'Informa&#231;&#227;o',  // informação
					  	Version: 'Este n&#250;mero de vers&#227;o &#233;: ',  // Este número de versão é:
					  	ComingSoon: 'Em breve',
					  	NoUnits: 'Nenhuma unidade definida no desenho, por favor, use o comando Calibrar a Medi&#231;&#227;o primeiro.',  // Nenhuma unidade definida no desenho, por favor, use o comando Calibrar a Medição primeiro.
					  	UnitLess: 'O desenho de origem &#233; unitless, por favor, use comando calibrar primeiro.',  // O desenho de origem é unitless, por favor, use comando calibrar primeiro.
					  	QuickCountSingle: 'N&#250;mero de contagens r&#225;pidas &#233;: ',  // Número de contagens rápidas é:
					  	QuickCountMultiple: 'N&#250;mero de contagens r&#225;pidas s&#227;o: ',  // Número de contagens rápidas são:
					  	RedlinesLocked: 'Redlines s&#227;o bloqueados para Usu&#225;rio: ',  // Redlines são bloqueados para Usuário:
					  	LicensePath: 'N&#227;o foi possível localizar a chave de licen&#231;a no caminho: ',  // Não foi possível localizar a chave de licença no caminho:
					  	LicenseNotFound: 'Chave de licen&#231;a n&#227;o encontrada',  // Chave de licença não encontrada
					  	SelectTwoPoints: 'Selecione dois pontos no desenho com o mouse primeiro, depois entre na unidade e na dist&#226;ncia, finalmente pressione OK.', // Selecione dois pontos no desenho com o mouse primeiro, depois entre na unidade e na distância, finalmente pressione OK.
					  	ReferenceDistance: 'Insira uma dist&#226;nci de refer&#234;ncia.',  // Insira uma distância de referência.
					  	RedlinesSaved: 'Redlines salvos', //
					  	SinglePage : 'Desenho de p&#225;gina &#250;nica - sem altera&#231;&#227;o de p&#225;gina',  // Desenho de página única - sem alteração de página
					  	FirstPage : 'A p&#225;gina atual &#233; a primeira p&#225;gina de um desenho de v&#225;rias p&#225;ginas - nenhuma altera&#231;&#227;o de p&#225;gina',  // A página atual é a primeira página de um desenho de várias páginas - nenhuma alteração de página
					  	LastPage: 'A p&#225;gina atual &#233; a &#250;ltima p&#225;gina de um desenho de v&#225;rias p&#225;ginas - nenhuma altera&#231;&#227;o de p&#225;gina',  // A página atual é a última página em um desenho de várias páginas - nenhuma alteração de página
					  	OutOfRange: 'O número da página inserido está fora do intervalo de páginas - sem alteração de página',
					  	FileLoadThroughApp: 'NOTA: File Load activado apenas atrav&#233;s da aplica&#231;&#227;o de encapsulamento',  // NOTA: File Load activado apenas através da aplicação de encapsulamento
					  	ErrorConnectingToHost: 'Erro ao conectar-se ao host. Vá para o Painel de configurações e verifique suas configurações de rede!',
					  	ConnectToHostFirst: 'Vá para o Painel de configurações, verifique suas configurações de rede e clique em Salvar alterações para se conectar ao seu host de rede para recuperar a estrutura de dados usada ao mapear locais.',

					  	NoObjectSelected: 'Por favor, selecione um objeto de espaço.',
					  	PaperSizePDFPrintOnly: 'Por favor, selecione "Imprimir como PDF" para tamanho de tamanhos de papel grande. Os papéis grandes são A1 e A0, assim como o US Arch D e acima.',
					  	ServerSideFormatForPDFPrint: 'A impressão em PDF requer um arquivo original nos formatos DWG, DWF, DXF ou DGN ou PCF. Faça o upload de um arquivo nesses formatos ou selecione um tamanho menor para impressão direta. Os papersizes de impressão direta são A4-A2 ou US Letter através de ANSI C',
							PrintDisabled: 'NOTE: Print Disabled',
						NoQRCode: 'No QR Code received from Server!',

					},

					FileLoadModal: {
					  	Header: 'CADViewer JS - Gerenciador de arquivos',
					  	DrawingFilename: 'DESENHO / NOME DO FICHEIRO',
						EditFloorplanInfo: 'Editar informa&#231;&#245;es do plano de piso'   //Editar informações do plano de piso
					},

					SaveRedlineModal: {
					  	Header: 'CADViewer JS - Salvar linha vermelha',
					  	RedlineFilename: 'LINHA VERMELHA / NOME DO FICHEIRO',
						EditRedlineInfo: 'Editar informa&#231;&#245;es da linha vermelha',  // Editar informações da linha vermelha
						Upload: 'ENVIO:',
					},

					OpenRedlineModal: {
					  	Header: 'CADViewer JS - Abrir linha vermelha',
					  	RedlineFilename: 'LINHA VERMELHA / NOME DO FICHEIRO',
						EditRedlineInfo: 'Editar informa&#231;&#245;es da linha vermelha',  // Editar informações da linha vermelha
					},

					OpenSpaceObjectModal: {
					  	Header: 'CADViewer JS - Open Space Objects',
					  	SpaceObjectFilename: 'SPACE OBJECT / FILENAME',
						EditSpaceObjectInfo: 'Edit Space Object Info',
					},

					RedlineThicknessModal: {
					  	Header: 'Selecione Espessura Redline',
					  	Thickness: 'Espessura:',
						OK: 'OK'
					},

					DocumentPageChangeModal: {
					  	Header: 'Selecione a página',
					  	Page: 'Página:',
						OK: 'OK'
					},
					

					CollaborationStartModal: {
					  	Header: 'Entre na sessão de colaboração',
					  	Session: 'Nome da sessão:',
						OK: 'OK'
					},

					PublishPDFModal: {
					  	Header: 'Publicar conteúdo de tela redefinido em PDF',
					  	SelectMode: 'Modo:',
					  	Mode1: 'Imprimir/Baixar',
					  	Mode2: 'e-mail',
					  	Mode3: 'Upload para o servidor',
					  	EntireDoc: 'Publicar documento inteiro:',
						OK: 'OK',
						Recipient: 'E-mail:',
						Title: 'Título:',
						Message: 'Mensagem:',
					},

					MergeDXFModal: {
					  	Header: 'Mesclar Redline com Source DWG',
					  	SelectMode: 'Modo:',
					  	Mode1: 'Imprimir/Baixar',
					  	Mode2: 'e-mail',
					  	Mode3: 'Upload para o servidor',
					  	EntireDoc: 'Publicar documento inteiro:',
						OK: 'OK',
						Recipient: 'E-mail:',
						Title: 'Título:',
						Message: 'Mensagem:',
					},
					
					
					RedlineColorModal: {
					  	Header: 'Selecionar cor Redline',
					  	PickColor: 'Escolher:',
					  	SelectColor: 'Selecionar:',
					  	Blue: 'Azul',
					  	Red: 'Vermelho',
					  	Yellow: 'Amarelo',
					  	Orange: 'Laranja',
					  	Green: 'Verde',
					  	Purple: 'Roxa',
					  	Brown: 'Castanho',
					  	Gray: 'Cinzento',
						OK: 'OK'
					},

					RedlineEllipseModal: {
					  	Header: 'Selecione a forma redline',
					  	SelectType: 'Selecione:',
					  	Ellipse: 'Elipse',
					  	Cloud: 'Nuvem',
						OK: 'OK'
					},

					CreationModeModal: {
					  	Header: 'Select Space ID source',
					  	SelectType: 'Select:',
					  	DataSource: 'From Data Source via API',
					  	Manually: 'Enter Manually',
						OK: 'OK'
					},
					
					BackgroundColorModal: {
					  	Header: 'Selecionar cor de fundo',
					  	PickColor: 'Escolher:',
					  	SelectColor: 'Selecionar:',
					  	White: 'Branco',
					  	Black: 'Negro',
					  	Azure: 'Azul',
					  	Pink: 'Rosa',
					  	Snow: 'Neve',
					  	Silver: 'Prata',
					  	Gray: 'Cenzento',
					  	Brown: 'Castanho',
						OK: 'OK'
					},

					RedlineTextModal: {
					  	Header: 'Redline texto',
					  	OK: 'OK',
					  	Text: 'Digite o texto, clique em OK e selecione o ponto de inser&#231;&#227;o no desenho.', // Digite o texto, clique em OK e selecione o ponto de inserção no desenho.
					},

					LineThicknessModal: {
					  	Header: 'Ajuste a espessura da linha',
					  	LineThickness: 'Espessura da linha:',
					},

					CalibrateModal: {
					  	Header: 'Calibrar a medi&#231;&#227;o',  // Calibrar a medição
					  	Unit: 'Unidade:',
					  	Distance: 'Dist&#226;ncia:',  // Distância
					  	OK: 'OK',
					  	Text: 'Selecione dois pontos no desenho com o mouse primeiro, depois entre unidade e dist&#226;ncia e pressione OK.', // Selecione dois pontos no desenho com o mouse primeiro, depois entre unidade e distância e pressione OK.
					},

					MeasurementModal: {
					  	Header: 'Medi&#231;&#227;o',  // Medição
					  	Distance: 'Dist&#226;ncia: ',  //Distância
					  	MeasureAgain: 'Me&#231;a novamente',  // Meça novamente
					  	Text: 'Selecione dois pontos no desenho para a dist&#226;ncia.',  // Selecione dois pontos no desenho para a distância.
					  	TextArea: 'Selecione uma sequência de pontos. DoubleClick, Esc ou botão "Fechar área" para área.',
						Area: "Área",
						ClosePolygon: 'Área fechada',
						
						},

					BirdsEyeModal: {
					  	Header: 'Janela de olhos de p&#225;ssaros',  // Janela de olhos de pássaros
					},

					ImageObjectModal: {
					  	Header: 'N&#250;mero de objeto da imagem: ',  // Número de objeto da imagem
					  	LoadImage: 'Carregar nova imagem',
					  	RemoveImageNote: 'Remover nota de imagem',
					  	MinimizeImageNote: 'Minimizar nota de imagem',
						
					},


					LayerListModal: {
					  	Header: 'Lista de camadas',
					  	Search: 'Pesquisa',
					  	Sort: 'Classificar',
					  	AllLayerOn: 'Tudo em cima',
					  	AllLayerOff: 'Tudo fora',
						SwapLayers: 'Trocar Trodas',
						On: 'EM',
						Off: 'FORA',
					},
					
					PageChangeListModal: {
					  	Header: 'Alterar página de desenho',
					  	Search: 'Procurar',
					  	Sort: 'Ordenar',
						On: 'EM',
						Off: 'FORA',
					},
					

					LayerListSpaceModal: {
					  	Header: 'Lista de camadas - Objetos espaciais',
					  	Search: 'Pesquisa',
					  	Sort: 'Classificar',
					  	AllLayerOn: 'Tudo em cima',
					  	AllLayerOff: 'Tudo fora',
						SwapLayers: 'Trocar Trodas',
						On: 'EM',
						Off: 'FORA',
						NotAssigned: 'N&#227;o atribu&#237;do', // Não atribuído
						TextLayer: 'Camada Texto',
						RoomLayer: 'Camada Quarto',
						FloodfillLayer: 'SpaceID Layer',

					},


					IconPage_p1_8: {
					  	PreviousPage: 'P&#225;gina de &#205;cone Anterior', // Página de Ícone Anterior
					  	NextPage: 'Pr&#243;xima  &#205;conecone P&#225;gina', // Próxima Ícone Página
					  	NextMenuPage: 'Próxima página do menu',  //   Next Icon Page  3.3.01a
					  	LayerList: 'Lista de camadas',
					  	Print: 'Impress&#227;o',   // Impressão
					  	ZoomIn: 'Mais Zoom',
					  	ZoomOut: 'Reduzir',
					  	ZoomExtents: 'Extens&#245;es de zoom',  // Extensões de zoom
					  	ZoomWindow: 'Janela de zoom',  //
					  	Toggle: 'Alternar preto/branco',
					  	Background: 'Cor de fundo',
					  	FileLoad: 'Carregar arquivo',
					  	Search: 'Pesquisar texto',
					  	About: 'Sobre',
					  	LayerOff: 'Camada desligada',
					  	SwapLayers: 'Alternar camadas',
					  	AllLayersOn: 'Todas as camadas em',
					  	Measurement: 'Medi&#231;&#227;o',  // Medição
					  	Calibrate: 'Calibrar a medi&#231;&#227;o',  // Calibrar a medição
					  	BirdsEye: 'Alternar janela de olhos de p&#225;ssaros',   //  Alternar janela de olhos de pássaros
					  	LineThickness: 'Ajuste a espessura da linha',
					},

					IconPage_p2_8: {
					  	PreviousPage: 'P&#225;gina de &#205;cone Anterior', // Página de Ícone Anterior
					  	NextPage: 'Pr&#243;xima  &#205;conecone P&#225;gina', // Próxima Ícone Página
					  	SaveRedline: 'Salvar linhas vermelhas', //
					  	LoadRedline: 'Carregar linhas vermelhas',
					  	DeleteSingle: 'Excluir &#250;nica linha vermelha',  // Excluir única linha vermelha
					  	DeleteLast: 'Excluir &#250;ltima linha vermelha',  //
					  	Color: 'Cor da linha vermelha',
					  	Thickness: 'Espessura da linha vermelha',
					  	StickyNote: 'Fa&#231;a uma nota pegajosa',  // Faça uma nota pegajosa
					  	ClearAll: 'Limpar linhas vermelhas vis&#237;veis',  //   Limpar linhas vermelhas visíveis
					  	Freehand: 'Linha vermelha livre',  //
					  	Cloud: 'Nuvem de linha vermelha',
					  	FilledPolygon: 'Linha vermelha Pol&#237;gono preenchido',  // Linha vermelha Polígono preenchido
					  	Polyline: 'Polilinha linha vermelha',
					  	Polygon: 'Pol&#237;gono linha vermelha',  // Polígono Redline
					  	FilledRectangle: 'Ret&#226;ngulo preenchido de linha vermelha',  // Retângulo preenchido de Redline
					  	Rectangle: 'Ret&#226;ngulo de linha vermelha',
					  	Arrow: 'Seta de linha vermelha', //
					  	Text: 'Texto de linha vermelha',
					  	ZoomExtents: 'Extens&#245;es de zoom',  // Extensões de zoom
					  	ZoomWindow: 'Janela de zoom',  //
	PublishAsPDF: 'Publicar como PDF',
  	MergeAsDXF: 'Mesclar Redline com Source DWG',
	MergeWithQR: 'Merge QR code with source DWG',
						Free: 'Livre',
					},

					IconPage_p3_8: {
					  	PreviousPage: 'P&#225;gina de &#205;cone Anterior', // Página de Ícone Anterior
					  	NextPage: 'Pr&#243;xima  &#205;conecone P&#225;gina', // Próxima Ícone Página
	PublishAsPDF: 'Publicar como PDF',
					  	LoadLink: 'Carregar todas os links da imagem',  //hiperliga&#231;&#245;es  Carregar todas as hiperligações da imagem
					  	InsertLink: 'Inserir link de imagem',
					  	SaveLink: 'Salvar todos os links de imagem',
					  	ClearLink: 'Limpar todos os links de imagem',
					  	Free: 'Livre',
					  	QuickCount: 'Contagem r&#225;pida',  // Contagem rápida
					  	CountSum: 'Contagem r&#225;pida de resumo',  // Contagem rápida de resumo
					  	ClearCount: 'Limpar contagem r&#225;pida',  // Limpar contagem rápida
					  	CompareLoad: 'Load Second Drawing for Compare',
					  	CompareToggle: 'Toggle Drawings individually',
					  	CompareToggleOverlay: 'Toggle overlaid Drawings',
					  	CompareExit: 'Exit Compare Drawings',
					  	CollaborationJoinSession: 'Join Collaboration Session',
					  	CollaborationTakeControl: 'Take Control over Collaboration Session',
					  	CollaborationClearSession: 'Clear Redlines in Collaboration Session',
					  	CollaborationLeaveSession: 'Leave Collaboration Session',
					  	LayerOff: 'Camada desligada',
					  	SwapLayers: 'Alternar camadas',
					  	AllLayersOn: 'Todas as camadas em',
					  	ZoomExtents: 'Extens&#245;es de zoom',  // Extensões de zoom
					  	ZoomWindow: 'Janela de zoom',  //
					},

					IconPage_p4_8: {
					  	PreviousPage: 'P&#225;gina de &#205;cone Anterior', // Página de Ícone Anterior
					  	NextPage: 'Pr&#243;xima  &#205;conecone P&#225;gina', // Próxima Ícone Página
					  	Publish: 'Estrutura do objeto de espa&#231;o de publica&#231;&#227;o', //  Estrutura do objeto de espaço de publicação
					  	Load: 'Planejamento de carga e pr&#233;-processamento de objetos espaciais',  // Planejamento de carga e pré-processamento de objetos espaciais
					  	Settings: 'Configura&#231;&#245;es',   // Configurações
					  	SelectObject: 'Selecionar Objeto',
					  	Rect: 'Objeto Espa&#231;o Ret&#226;ngulo',
					  	Polygon: 'Objeto Espa&#231;o Pol&#237;gono',  // Objeto Espaço Polígono
					  	Circle: 'Objeto de espa&#231;o em c&#237;rculo', // Objeto de espaço em círculo
					  	CopyCircle: 'Copiar C&#237;rculo Espa&#231;o Objeto', // Copiar círculo espaço objeto
					  	Delete: 'Eliminar objecto de Espa&#231;o',  // Eliminar objecto de espaço
					  	LayerList: 'Lista de camadas',
					  	Mode: 'Alterar o modo de exibi&#231;&#227;o do objeto de espa&#231;o', // Alterar o modo de exibição do objeto de espaço  Alternar Exibição de Objeto Espacial e Modo de Edição
					  	Free: 'Livre',
					  	SelectPolygon: 'Generate Space Object on closed polygon',
					  	LayerOff: 'Camada desligada',
					  	SwapLayers: 'Alternar camadas',
					  	AllLayersOn: 'Todas as camadas em',
					  	ZoomExtents: 'Extens&#245;es de zoom',  // Extensões de zoom
					  	ZoomWindow: 'Janela de zoom',  //
					},


					IconPage_p5_8: {
						InsertSpaceImage: 'Insert Space Image Object',
						DragSpaceImage: 'Drag Space Image Object',
						ResizeSpaceImage: 'Resize Space Image Object',
						LoadSpaceObjects: 'Load Space Objects',
					  	PreviousPage: 'Previous Icon Page',
					  	NextPage: 'Next Icon Page',
					  	Publish: 'View Space Object Structure in User Display Mode',
					  	DownloadSVG: 'Download processed SVG drawing',
					  	Load: 'Load Floorplan and pre-process Space Objects',
					  	Settings: 'Settings',
					  	SelectObject: 'Select Object',
					  	Rect: 'Rectangle Space Object',
					  	Polygon: 'Polygon Space Object',
					  	Circle: 'Circle Space Object',
					  	CopyCircle: 'Copy Circle Space Object',
					  	Delete: 'Delete Space Object',
					  	LayerList: 'Layer List',
					  	Mode: 'Toggle Space Object Display and Edit Mode',
					  	Free: 'Free',
					  	SelectPolygon: 'Generate Space Object on closed polygon',
					  	LayerOff: 'Layer Off',
					  	SwapLayers: 'Swap Layers',
					  	AllLayersOn: 'All Layers On',
					  	ZoomExtents: 'Zoom Extents',
					  	ZoomWindow: 'Zoom Window',
					},

					IconPage_p6_1: {
					  	PinMarker: 'Add Pin Marker',
					},

					PageModal: {
						SelectPageFromList: 'Selecione a página de desenho da lista',
					  	EnterPage: 'Digite o número da página',
					  	RotateBack: 'Rodar 90 graus no sentido contrário ao dos ponteiros do relógio',
					  	RotateForward: 'Girar 90 graus no sentido horário',
					  	Previous: 'Carregar P&#225;gina Anterior no Desenho',  // Carregar página anterior no desenho
					  	Next: 'Carregar P&#225;gina Seguinte no Desenho',  // Carregar Página Seguinte no Desenho
					  	Last: 'Carregar &#218;ltima P&#225;gina no Desenho',  // Carregar última página no desenho
					  	ZoomExtents: 'Extens&#245;es de zoom',  // Extensões de zoom
					  	ZoomWindow: 'Janela de zoom',  //
					},

					StickyNote: {
					  	MoveNote: 'Mover Nota',
					  	EditNote: 'Editar Nota',
					  	DeleteNote: 'Apagar Nota',
					  	MinimizeNote: 'Minimizar Nota',
					  	Inactive: 'Inativo',
					  	SaveNote: 'Guardar Nota',
					  	Cancel: 'Cancelar Editar Nota',
					},

					ImageObject: {
					  	InsertReplace: 'Substituir ou inserir imagem',
					  	Delete: 'Excluir imagem e &#237;cone associado',  // Excluir imagem e ícone associado
					  	Minimize: 'Minimizar o objeto de imagem',
					},


					DeleteModal: {
					  	Header: 'Excluir',
					  	Text1: 'Esta a&#231;&#227;o remover&#225;',   // Esta ação removerá
					  	Text2: 'e desabilitar o acesso &#224; planta para todos os usu&#225;rios.',  // e desabilitar o acesso à planta para todos os usuários

					},

					UnlinkModal: {
					  	Header: 'Desassociar',
					  	Text1: 'Esta a&#231;&#227;o remover&#225; todos os metadados',  // Esta ação removerá todos os metadados
					  	Text2: 'Os objetos de localiza&#231;&#227;o permanecer&#227;o inalterados.', // Os objetos de localização permanecerão inalterados
					},

					ClearModal: {
					  	Header: 'Claro',
					  	Text1: 'Essa a&#231;&#227;o remover&#225; todos os objetos de metadados e',  // Essa ação removerá todos os objetos de metadados e
					},


					FileLoadSpaceModal: {
					  	Header: 'CADViewer JS: Carregador de arquivos Espa&#231;o',  // Espaço
					  	DrawingFilename: 'DESENHO / NOME DO FICHEIRO',
						EditFloorplanInfo: 'Editar informa&#231;&#245;es do plano de piso',   //Editar informações do plano de piso
						BuildRoomTextHyperlinks: 'Criar hiperliga&#231;&#245;es da camada ROOM/TEXT na carga',   // Criar hiperligações da camada ROOM / TEXT na carga
					},

					LoadingModal: {
					  	Loading: 'Carregando',
					},

					DataMaps: {
					  	Map: [ 'Data Maps - User Map 1', 'Data Maps - User Map 2', 'Data Maps - User Map 3', 'Data Maps - User Map 4' ]
//					  	Map2: 'Data Maps - User Map 2',
//					  	Map3: 'Data Maps - User Map 3',
//					  	Map4: 'Data Maps - User Map 4',
					},

					HeaderObjectLayers: {
					  	ObjectLayer: ['Spaces - User Layer 1', 'Assets - User Layer 2' ]
//					  	ObjectLayer2: 'Assets - User Layer 2',
					},

					WaitModal: {
					  	Printing: 'Impressão',
					  	Thumbnails: 'Salvando',
					  	BatchPDF: 'Imprimir para PDF',
						MergeDWG: 'Mesclando',
					},



				},


				{
					languageCode: "PT-BR",
					thisLanguage: "Portuguese (Brazil)",

					PrintModal: {
						Header: "CADViewer JS Configura&#231;&#245;es de impress&#227;o",
						Paper: "Tamanho:",
						Orientation: "Orienta&#231;&#227;o:",
						Resolution: "Resolu&#231;&#227;o:",
						ResolutionText: "(em 75dpi, 300dpi padr&#227;o)",
						Print: "Entrar",
						Grayscale: "Acizentado",
						PrintPDF : 'Print as PDF'
					},

					SearchTextModal: {
						Header: "Pesquisar texto",
						SearchText: "Pesquisar texto:",
						Zoom: "N&#237;vel de zoom:",
						Search: "Entrar"
					},

					SearchCustomModal: {
					  	Header: 'Search',
					  	SearchText: 'Search Text:',
					  	Search: 'Search'
					},

					InfoMessageModal: {
						Header: "Informa&#231;&#227;o",
						Version: "Esta vers&#227;o &#233;: ",
						ComingSoon: "Em breve",
						NoUnits: "Nenhuma unidade definida no desenho, por favor, use primeiro o comando Calibrar a Medi&#231;&#227;o.",
						UnitLess: "O desenho de origem &#233; unitless, por favor, use primeiro o comando Calibrar.",
						QuickCountSingle: "N&#250;mero de contagens r&#225;pidas &#233;: ",
						QuickCountMultiple: "N&#250;mero de contagens r&#225;pidas s&#227;o: ",
						RedlinesLocked: "Redlines s&#227;o bloqueados para Usu&#225;rio: ",
						LicensePath: "N&#227;o foi poss&#237;vel localizar a chave de licen&#231;a no caminho: ",
						LicenseNotFound: "A chave de licen&#231;a n&#227;o encontrada",
						SelectTwoPoints: "Selecione primeiro dois pontos no desenho com o mouse, depois entre na unidade e na dist&#226;ncia, e finalmente pressione OK.",
						ReferenceDistance: "Insira uma dist&#226;nci de refer&#234;ncia.",
						RedlinesSaved: "Redlines salvos",
						SinglePage: "Desenho de p&#225;gina &#250;nica - sem altera&#231;&#227;o de p&#225;gina",
						FirstPage: "A p&#225;gina atual &#233; a primeira p&#225;gina de um desenho de v&#225;rias p&#225;ginas - nenhuma altera&#231;&#227;o de p&#225;gina",
						LastPage: "A p&#225;gina atual &#233; a &#250;ltima p&#225;gina de um desenho de v&#225;rias p&#225;ginas - nenhuma altera&#231;&#227;o de p&#225;gina",
					  	OutOfRange: 'The page number entered is outside of the range of pages - no change of page',
						FileLoadThroughApp: "OBSERVA&#199;&#195;O: Leitura de arquivo &#233; apenas ativado atrav&#233;s da aplica&#231;&#227;o de encapsulamento",
					  	ErrorConnectingToHost: 'Erro ao conectar-se ao host. Vá para o Painel de configurações e verifique suas configurações de rede!',
					  	ConnectToHostFirst: 'Vá para o Painel de configurações, verifique suas configurações de rede e clique em Salvar alterações para se conectar ao seu host de rede para recuperar a estrutura de dados usada ao mapear locais.',

					  	NoObjectSelected: 'Por favor, selecione um objeto de espaço.',
					  	PaperSizePDFPrintOnly: 'Por favor, selecione "Imprimir como PDF" para tamanho de tamanhos de papel grande. Os papéis grandes são A1 e A0, assim como o US Arch D e acima.',
					  	ServerSideFormatForPDFPrint: 'A impressão em PDF requer um arquivo original nos formatos DWG, DWF, DXF ou DGN ou PCF. Faça o upload de um arquivo nesses formatos ou selecione um tamanho menor para impressão direta. Os papersizes de impressão direta são A4-A2 ou US Letter através de ANSI C',

							PrintDisabled: 'NOTE: Print Disabled',
						NoQRCode: 'No QR Code received from Server!',

					},
										
					FileLoadModal: {
						Header: "CADViewer JS - Gerenciador de arquivos",
						DrawingFilename: "DESENHO / NOME DO ARQUIVO",
						EditFloorplanInfo: "Editar informa&#231;&#245;es do plano de piso"
					},

					SaveRedlineModal: {
						Header: "CADViewer JS - Salvar marca&#231;&#227;o",
						RedlineFilename: "MARCA&#199;&#195;O / NOME DO ARQUIVO",
						EditRedlineInfo: "Editar informa&#231;&#245;es da marca&#231;&#227;o",
						Upload: "ENVIO:"
					},

					OpenRedlineModal: {
						Header: "CADViewer JS - Abrir marca&#231;&#227;o",
						RedlineFilename: "MARCA&#199;&#195;O / NOME DO ARQUIVO",
						EditRedlineInfo: "Editar informa&#231;&#245;es da marca&#231;&#227;o"
					},

					OpenSpaceObjectModal: {
					  	Header: 'CADViewer JS - Open Space Objects',
					  	SpaceObjectFilename: 'SPACE OBJECT / FILENAME',
						EditSpaceObjectInfo: 'Edit Space Object Info',
					},

					RedlineThicknessModal: {
						Header: "Selecione a espessura do Redline",
						Thickness: "Espessura:",
						OK: "OK"
					},

					DocumentPageChangeModal: {
					  	Header: 'Selecione a página',
					  	Page: 'Página:',
						OK: 'OK'
					},
					
					
					CollaborationStartModal: {
					  	Header: 'Entre na sessão de colaboração',
					  	Session: 'Nome da sessão:',
						OK: 'OK'
					},

					PublishPDFModal: {
					  	Header: 'Publicar conteúdo de tela redefinido em PDF',
					  	SelectMode: 'Modo:',
					  	Mode1: 'Imprimir/Baixar',
					  	Mode2: 'e-mail',
					  	Mode3: 'Upload para o servidor',
					  	EntireDoc: 'Publicar documento inteiro:',
						OK: 'OK',
						Recipient: 'E-mail:',
						Title: 'Título:',
						Message: 'Mensagem:',
					},

					MergeDXFModal: {
					  	Header: 'Mesclar Redline com Source DWG',
					  	SelectMode: 'Modo:',
					  	Mode1: 'Imprimir/Baixar',
					  	Mode2: 'e-mail',
					  	Mode3: 'Upload para o servidor',
					  	EntireDoc: 'Publicar documento inteiro:',
						OK: 'OK',
						Recipient: 'E-mail:',
						Title: 'Título:',
						Message: 'Mensagem:',
					},
										
					RedlineColorModal: {
						Header: "Selecionar a cor do Redline",
						PickColor: "Escolha:",
						SelectColor: "Selecione:",
						Blue: "Azul",
						Red: "Vermelho",
						Yellow: "Amarelo",
						Orange: "Laranja",
						Green: "Verde",
						Purple: "Roxa",
						Brown: "Castanho",
						Gray: "Cinza",
						OK: "OK"
					},

					RedlineEllipseModal: {
					  	Header: 'Selecione a forma redline',
					  	SelectType: 'Selecione:',
					  	Ellipse: 'Elipse',
					  	Cloud: 'Nuvem',
						OK: 'OK'
					},

					CreationModeModal: {
					  	Header: 'Select Space ID source',
					  	SelectType: 'Select:',
					  	DataSource: 'From Data Source via API',
					  	Manually: 'Enter Manually',
						OK: 'OK'
					},
					
					BackgroundColorModal: {
						Header: "Selecione a cor de fundo",
						PickColor: "Escolha:",
						SelectColor: "Selecione:",
						White: "Branco",
						Black: "Negro",
						Azure: "Azul",
						Pink: "Rosa",
						Snow: "Neve",
						Silver: "Prata",
						Gray: "Cinza",
						Brown: "Castanho",
						OK: "OK"
					},

					RedlineTextModal: {
						Header: "Redline texto",
						OK: "OK",
						Text: "Digite o texto, clique em OK e selecione o ponto de inser&#231;&#227;o no desenho."
					},

					LineThicknessModal: {
						Header: "Ajuste a espessura da linha",
						LineThickness: "Espessura da linha:"
					},

					CalibrateModal: {
						Header: "Calibrar a medi&#231;&#227;o",
						Unit: "Unidade:",
						Distance: "Dist&#226;ncia:",
						OK: "OK",
						Text: "Selecione dois pontos no desenho com o mouse primeiro, depois entre unidade e dist&#226;ncia e pressione OK."
					},

					MeasurementModal: {
					  	Header: 'Medi&#231;&#227;o',  // Medição
					  	Distance: 'Dist&#226;ncia: ',  //Distância
					  	MeasureAgain: 'Me&#231;a novamente',  // Meça novamente
					  	Text: 'Selecione dois pontos no desenho para a dist&#226;ncia.',  // Selecione dois pontos no desenho para a distância.
					  	TextArea: 'Selecione uma sequência de pontos. DoubleClick, Esc ou botão "Fechar área" para área.',
						Area: "Área",
						ClosePolygon: 'Área fechada',
						
					},

					BirdsEyeModal: {
						Header: "Janela de olhos de p&#225;ssaros"
					},

					ImageObjectModal: {
					  	Header: 'N&#250;mero de objeto da imagem: ',  // Número de objeto da imagem
					  	LoadImage: 'Carregar nova imagem',
					  	RemoveImageNote: 'Remover nota de imagem',
					  	MinimizeImageNote: 'Minimizar nota de imagem',
						
					},
					
						
					LayerListModal: {
						Header: "Lista de camadas",
						Search: "Pesquisa",
						Sort: "Classificar",
						AllLayerOn: "Mostrar todas",  // Mostrar todas as camadas
						AllLayerOff: "Esconder todas",  // Esconder todas as camadas
						SwapLayers: "Alternar camadas",
						On: "LIGADO",
						Off: "DESLIGADO"
					},

					PageChangeListModal: {
					  	Header: 'Alterar página de desenho',
					  	Search: 'Procurar',
					  	Sort: 'Ordenar',
						On: 'EM',
						Off: 'FORA',
					},
					

					LayerListSpaceModal: {
						Header: "Lista de camadas - Objetos espaciais",
						Search: "Pesquisa",
						Sort: "Classificar",
						AllLayerOn: "Mostrar todas", // Mostrar todas as camadas
						AllLayerOff: "Esconder todas", // Esconder todas as camadas
						SwapLayers: "Alternar camadas",
						On: "LIGADO",
						Off: "DESLIGADO",
						NotAssigned: "N&#227;o atribu&#237;do",
						TextLayer: "Camada Texto",
						RoomLayer: "Camada Quarto",
						FloodfillLayer: 'SpaceID Layer',
					},

					IconPage_p1_8: {
						PreviousPage: "P&#225;gina de &#205;cone Anterior",
						NextPage: "Pr&#243;xima  &#205;conecone P&#225;gina",
					  	NextMenuPage: 'Próxima página do menu',  //   Next Icon Page  3.3.01a
						LayerList: "Lista de camadas",
						Print: "Impress&#227;o",
						ZoomIn: "Mais Zoom",
						ZoomOut: "Reduzir",
						ZoomExtents: "Extens&#245;es de zoom",
						ZoomWindow: "Janela de zoom",
						Toggle: "Alternar preto/branco",
						Background: "Cor de fundo",
						FileLoad: "Carregar arquivo",
						Search: "Pesquisar texto",
						About: "Sobre",
						LayerOff: "Camada desligada",
						SwapLayers: "Alternar camadas",
						AllLayersOn: "Todas as camadas em",
						Measurement: "Medi&#231;&#227;o",
						Calibrate: "Calibrar a medi&#231;&#227;o",
						BirdsEye: "Alternar janela de olhos de p&#225;ssaros",
						LineThickness: "Ajuste a espessura da linha"
					},

					IconPage_p2_8: {
						PreviousPage: "P&#225;gina de &#205;cone Anterior",
						NextPage: "Pr&#243;xima  &#205;conecone P&#225;gina",
						SaveRedline: "Salvar marca&#231;&#245;es",
						LoadRedline: "Carregar marca&#231;&#245;es",
						DeleteSingle: "Excluir &#250;nica marca&#231;&#227;o",
						DeleteLast: "Excluir &#250;ltima marca&#231;&#227;o",
						Color: "Cor da marca&#231;&#227;o",
						Thickness: "Espessura da marca&#231;&#227;o",
						StickyNote: "Fa&#231;a uma nota pegajosa",
						ClearAll: "Limpar marca&#231;&#245;es vis&#237;veis",
						Freehand: "Marca&#231;&#227;o livre",
						Cloud: "Nuvem de marca&#231;&#227;o",
						FilledPolygon: "Marca&#231;&#227;o Pol&#237;gono preenchido",
						Polyline: "Polilinha marca&#231;&#227;o",
						Polygon: "Pol&#237;gono marca&#231;&#227;o",
						FilledRectangle: "Ret&#226;ngulo preenchido de marca&#231;&#227;o",
						Rectangle: "Ret&#226;ngulo de marca&#231;&#227;o",
						Arrow: "Seta de marca&#231;&#227;o",
						Text: "Texto de marca&#231;&#227;o",
						ZoomExtents: "Extens&#245;es de zoom",
						ZoomWindow: "Janela de zoom",
	PublishAsPDF: 'Publicar como PDF',
  	MergeAsDXF: 'Mesclar Redline com Source DWG',
	MergeWithQR: 'Merge QR code with source DWG',
					
						Free: 'Livre',
					},

					IconPage_p3_8: {
						PreviousPage: "P&#225;gina de &#205;cone Anterior",
						NextPage: "Pr&#243;xima  &#205;conecone P&#225;gina",
	PublishAsPDF: 'Publicar como PDF',
						LoadLink: "Carregar todas os links da imagem",
						InsertLink: "Inserir link de imagem",
						SaveLink: "Salvar todos os links de imagem",
						ClearLink: "Limpar todos os links de imagem",
						Free: "Livre",
						QuickCount: "Contagem r&#225;pida",
						CountSum: "Contagem r&#225;pida de resumo",
						ClearCount: "Limpar contagem r&#225;pida",
					  	CompareLoad: 'Load Second Drawing for Compare',
					  	CompareToggle: 'Toggle Drawings individually',
					  	CompareToggleOverlay: 'Toggle overlaid Drawings',
					  	CompareExit: 'Exit Compare Drawings',
					  	CollaborationJoinSession: 'Join Collaboration Session',
					  	CollaborationTakeControl: 'Take Control over Collaboration Session',
					  	CollaborationClearSession: 'Clear Redlines in Collaboration Session',
					  	CollaborationLeaveSession: 'Leave Collaboration Session',
						LayerOff: "Camada desligada",
						SwapLayers: "Alternar camadas",
						AllLayersOn: "Todas as camadas em",
						ZoomExtents: "Extens&#245;es de zoom",
						ZoomWindow: "Janela de zoom"
					},

					IconPage_p4_8: {
						PreviousPage: "P&#225;gina de &#205;cone Anterior",
						NextPage: "Pr&#243;xima  &#205;conecone P&#225;gina",
						Publish: "Estrutura do objeto de espa&#231;o de publica&#231;&#227;o",
						Load: "Planejamento de carga e pr&#233;-processamento de objetos espaciais",
						Settings: "Configura&#231;&#245;es",
						SelectObject: "Selecionar Objeto",
						Rect: "Objeto Espa&#231;o Ret&#226;ngulo",
						Polygon: "Objeto Espa&#231;o Pol&#237;gono",
						Circle: "Objeto de espa&#231;o em c&#237;rculo",
						CopyCircle: "Copiar C&#237;rculo Espa&#231;o Objeto",
						Delete: "Eliminar objecto de Espa&#231;o",
						LayerList: "Lista de camadas",
						Mode: "Alterar o modo de exibi&#231;&#227;o do objeto de espa&#231;o",
						Free: "Livre",
					  	SelectPolygon: 'Generate Space Object on closed polygon',
						LayerOff: "Camada desligada",
						SwapLayers: "Alternar camadas",
						AllLayersOn: "Todas as camadas em",
						ZoomExtents: "Extens&#245;es de zoom",
						ZoomWindow: "Janela de zoom"
					},

					IconPage_p5_8: {
						InsertSpaceImage: 'Insert Space Image Object',
						DragSpaceImage: 'Drag Space Image Object',
						ResizeSpaceImage: 'Resize Space Image Object',
						LoadSpaceObjects: 'Load Space Objects',
					  	PreviousPage: 'Previous Icon Page',
					  	NextPage: 'Next Icon Page',
					  	Publish: 'View Space Object Structure in User Display Mode',
					  	DownloadSVG: 'Download processed SVG drawing',
					  	Load: 'Load Floorplan and pre-process Space Objects',
					  	Settings: 'Settings',
					  	SelectObject: 'Select Object',
					  	Rect: 'Rectangle Space Object',
					  	Polygon: 'Polygon Space Object',
					  	Circle: 'Circle Space Object',
					  	CopyCircle: 'Copy Circle Space Object',
					  	Delete: 'Delete Space Object',
					  	LayerList: 'Layer List',
					  	Mode: 'Toggle Space Object Display and Edit Mode',
					  	Free: 'Free',
					  	SelectPolygon: 'Generate Space Object on closed polygon',
					  	LayerOff: 'Layer Off',
					  	SwapLayers: 'Swap Layers',
					  	AllLayersOn: 'All Layers On',
					  	ZoomExtents: 'Zoom Extents',
					  	ZoomWindow: 'Zoom Window',
					},

					IconPage_p6_1: {
					  	PinMarker: 'Add Pin Marker',
					},

					PageModal: {
						SelectPageFromList: 'Selecione a página de desenho da lista',
					  	EnterPage: 'Digite o número da página',
					  	RotateBack: 'Rodar 90 graus no sentido contrário ao dos ponteiros do relógio',
					  	RotateForward: 'Girar 90 graus no sentido horário',
					  	Previous: 'Carregar P&#225;gina Anterior no Desenho',  // Carregar página anterior no desenho
					  	Next: 'Carregar P&#225;gina Seguinte no Desenho',  // Carregar Página Seguinte no Desenho
					  	Last: 'Carregar &#218;ltima P&#225;gina no Desenho',  // Carregar última página no desenho
					  	ZoomExtents: 'Extens&#245;es de zoom',  // Extensões de zoom
					  	ZoomWindow: 'Janela de zoom',  //
					},

					StickyNote: {
						MoveNote: "Mover Nota",
						EditNote: "Editar Nota",
						DeleteNote: "Apagar Nota",
						MinimizeNote: "Minimizar Nota",
						Inactive: "Inativo",
						SaveNote: "Guardar Nota",
						Cancel: "Cancelar Editar Nota"
					},

					ImageObject: {
						InsertReplace: "Substituir ou inserir imagem",
						Delete: "Excluir imagem e &#237;cone associado",
						Minimize: "Minimizar o objeto de imagem"
					},

					DeleteModal: {
						Header: "Excluir",
						Text1: "Esta a&#231;&#227;o remover&#225;", // Esta a&#231;&#227;o removerá
						Text2: "e desabilitar o acesso &#224; planta para todos os usu&#225;rios." // e desabilitar o acesso à planta para todos os usuários
					},

					UnlinkModal: {
						Header: "Desassociar",
						Text1: "Esta a&#231;&#227;o remover&#225; todos os metadados", // Esta a&#231;&#227;o removerá todos os metadados
						Text2: "Os objetos de localiza&#231;&#227;o permanecer&#227;o inalterados." // Os objetos de localiza&#231;&#227;o permanecer&#227;o inalterados
					},

					ClearModal: {
						Header: "Claro",
						Text1: "Essa a&#231;&#227;o remover&#225; todos os objetos de metadados e" // Essa a&#231;&#227;o removerá todos os objetos de metadados e
					},

					FileLoadSpaceModal: {
						Header: "CADViewer JS: Carregador de arquivos Espa&#231;o", // Espa&#231;o
						DrawingFilename: "DESENHO / NOME DO FICHEIRO",
						EditFloorplanInfo: "Editar informa&#231;&#245;es do plano de piso", //Editar informa&#231;&#245;es do plano de piso
						BuildRoomTextHyperlinks: "Criar hiperliga&#231;&#245;es da camada ROOM/TEXT na carga" // Criar hiperliga&#231;&#245;es da camada ROOM / TEXT na carga
					},

					LoadingModal: {
					  	Loading: 'Carregando',
					},


					DataMaps: {
					  	Map: [ 'Data Maps - User Map 1', 'Data Maps - User Map 2', 'Data Maps - User Map 3', 'Data Maps - User Map 4' ]
//					  	Map2: 'Data Maps - User Map 2',
//					  	Map3: 'Data Maps - User Map 3',
//					  	Map4: 'Data Maps - User Map 4',
					},

					HeaderObjectLayers: {
					  	ObjectLayer: ['Spaces - User Layer 1', 'Assets - User Layer 2' ]
//					  	ObjectLayer2: 'Assets - User Layer 2',
					},

					WaitModal: {
					  	Printing: 'Impressão',
					  	Thumbnails: 'Salvando',
					  	BatchPDF: 'Imprimir para PDF',
						MergeDWG: 'Mesclando',
					},


				}


				
   , {
            languageCode: "KO-KR",
            thisLanguage: "Korean",

            PrintModal: {                       // no need to transcode !!!!!!
                Header: 'CADViewer JS &#52636;&#47141; &#49444;&#51221;', // '출력 설정', // 'CADViewer JS Print Settings',
                Paper: '용지 크기:',  //   '출력 설정', // 'Paper Size:',
                Orientation: '&#50857;&#51648; &#48169;&#54693;:',// '용지 방향:', // 'Orientation:',
                Resolution: '&#54644;&#49345;&#46020;:',//'해상도:', // 'Resolution:',
                ResolutionText: '(&#52572;&#49548; 75dpi, &#44592;&#48376; 300dpi)', //'(최소 75dpi, 기본 300dpi)', // '(min 75dpi, standard 300dpi)',
                Print: '&#52636;&#47141;',// '출력', // 'Print',
                Grayscale: '&#55121;&#48177;',// '흑백', // 'Grayscale',
                PrintPDF: 'PDF&#47196; &#52636;&#47141;',//'PDF로 출력' // 'Print as PDF'
            },

            SearchTextModal: {
                Header: 'CADViewer JS 문자열 검색', // 'Search Text',
                SearchText: '조회 문자열:', // 'Search Text:',
                Zoom: '줌 레벨:', // 'Zoom Level:',
                Search: '조회' // 'Search'
            },

					SearchCustomModal: {
					  	Header: 'Search',
					  	SearchText: 'Search Text:',
					  	Search: 'Search'
					},

            InfoMessageModal: {
                Header: '정보', // 'Information',
                Version: '이 버전 번호는: ', // 'This version number is: ',
                ComingSoon: '곧 출시 예정!', // 'Coming Soon!',
                NoUnits: '도면에 정의 된 단위가 없으므로 먼저 명령 계측을 사용하십시오.', // 'No units defined in drawing, please use command Calibrate Measurement first.',
                UnitLess: '원고 도면은 단위가 없으므로 먼저 측정 보정 명령을 사용하십시오.', // 'The originating drawing is unitless, please use command Calibrate Measurement first.',
                QuickCountSingle: '빠른 카운트 수: ', // 'Number of Quick Counts is: ',
                QuickCountMultiple: '빠른 카운트 수: ', // 'Number of Quick Counts are: ',
                RedlinesLocked: '사용자에 대한 적색 선이 잠김: ', // 'Redlines are locked for User: ',
                LicensePath: '경로에서 라이센스 키를 찾을 수 없습니다: ', // 'Could not find license key at path: ',
                LicenseNotFound: '라이센스 키를 찾을 수 없음', // 'License key not found',
                SelectTwoPoints: '도면에서 마우스로 먼저 두 점을 선택한 다음 단위와 거리를 입력하고 마지막으로 OK를 누릅니다.', // 'Please select two points in the drawing with the mouse first, then enter unit and distance, finally press OK.',
                ReferenceDistance: '참조 거리를 입력하십시오..', // ReferenceDistance: 'Please enter a reference distance.',
                RedlinesSaved: '수정 지시 사항 저장 됨', // 'Redlines Saved',
                SinglePage: '한 페이지 드로잉 - 페이지 변경 없음', // : 'Single page drawing - no change of page',
                FirstPage: '현재 페이지는 다중 페이지 드로잉의 첫 번째 페이지이며 페이지가 변경되지 않습니다.', // 'The current page is the first page in a multipage drawing - no change of page',
                LastPage: '현재 페이지는 다중 페이지 드로잉의 마지막 페이지이며 페이지는 변경되지 않습니다', // 'The current page is the last page in a multipage drawing - no change of page',
                OutOfRange: '입력 한 페이지 번호가 페이지 범위를 벗어났습니다. 페이지가 변경되지 않았습니다', // 'The page number entered is outside of the range of pages - no change of page',
                FileLoadThroughApp: '참고 : 파일로드는 캡슐화 된 응용 프로그램을 통해서만 가능합니다.', // 'NOTE: File Load enabled only through the encapsulating application',
                ErrorConnectingToHost: '호스트에 연결할 때 오류가 발생했습니다. 설정 창으로 가서 네트워크 설정을 확인하십시오!', // 'Error when connecting to Host. Go to the Settings Pane and check your Network Settings!',
                ConnectToHostFirst: '설정 창으로 이동하여 네트워크 설정을 확인하고 변경 사항 저장을 클릭하여 네트워크 호스트에 연결하여 위치 매핑시 사용되는 데이터 구조를 검색하십시오.', // 'Please go to the Settings Pane, check your Network Settings and click Save Changes to connect to your Network Host to retrieve the data structure used when mapping locations.',
                NoObjectSelected: '공간 객체를 선택하십시오', // 'Please select a Space Object.',
                PaperSizePDFPrintOnly: '대형 용지 크기의 경우 "PDF로 인쇄"를 선택하십시오. 큰 종이 크기는 A1과 A0이며 미국 아치 D 이상입니다.', // 'Please select "Print as PDF" for large paper sizes size. Large papersizes are A1 and A0, as well as US Arch D and above.',
                ServerSideFormatForPDFPrint: 'PDF 인쇄에는 DWG, DWF, DXF 또는 DGN 또는 PCF 형식의 원본 파일이 필요합니다. 이 형식으로 파일을 업로드하거나 직접 인쇄물을 위해 더 작은 크기의 서류를 선택하십시오. 직접 인쇄 용지 크기는 ANSI C를 통해 A4-A2 또는 US Letter입니다.', // 'PDF print requires an original file in formats DWG, DWF, DXF or DGN or PCF. Please upload a file in these formats or select a smaller papersize for direct print. Direct print papersizes are A4-A2 or US Letter through ANSI C',
							PrintDisabled: 'NOTE: Print Disabled',
						NoQRCode: 'No QR Code received from Server!',

            },

            FileLoadModal: {
                Header: 'CADViewer JS - 파일 관리자', // 'CADViewer JS - File Manager',
                DrawingFilename: '그림 / 파일 이름', // 'DRAWING / FILENAME',
                EditFloorplanInfo: '평면도 정보 편집', // 'Edit Floor Plan Info',
            },

            SaveRedlineModal: {
                Header: 'CADViewer JS - 레드 라인 저장', // 'CADViewer JS - Save Redline',
                RedlineFilename: '레드 라인 / 파일 이름', // 'REDLINE / FILENAME',
                EditRedlineInfo: '레드 라인 정보 수정', // 'Edit Redline Info',
                Upload: '업로드:', // 'UPLOAD:',
            },

            OpenRedlineModal: {
                Header: 'CADViewer JS - 레드 라인 열기', // 'CADViewer JS - Open Redline',
                RedlineFilename: '레드 라인 / 파일 이름', // 'REDLINE / FILENAME',
                EditRedlineInfo: '레드 라인 정보 수정', // 'Edit Redline Info',
            },

			OpenSpaceObjectModal: {
				Header: 'CADViewer JS - Open Space Objects',
				SpaceObjectFilename: 'SPACE OBJECT / FILENAME',
				EditSpaceObjectInfo: 'Edit Space Object Info',
			},

            RedlineThicknessModal: {
                Header: '레드 라인 두께 선택', // 'Select Redline Thickness',
                Thickness: '두께:', // 'Thickness:',
                OK: '승인', // 'OK'
            },

            DocumentPageChangeModal: {
                Header: '문서 페이지 선택', // 'Select Document Page',
                Page: '페이지:', // 'Page:',
                OK: '승인' // 'OK'
            },

            CollaborationStartModal: {
                Header: '협업 세션 시작', // 'Enter Collaboration Session',
                Session: '세션 이름:', // 'Session Name:',
                OK: '승인' // 'OK'
            },

            PublishPDFModal: {
                Header: '수정 된 화면 내용을 PDF로 게시', // 'Publish Redlined Screen Content to PDF',
                SelectMode: '선택 모드:', // 'Select Mode:',
                Mode1: '인쇄 / 다운로드', // 'Print/Download',
                Mode2: '전자 메일로 보내기', // 'Send as e-mail',
                Mode3: '서버에 업로드', // 'Upload to Server',
                EntireDoc: '전체 문서 게시:', // 'Publish Entire Document:',
                OK: '승인', // 'OK',
                Recipient: '이메일:', // 'E-mail:',
                Title: '표제:', // 'Title:',
                Message: '메시지:', // 'Message:',
            },

            MergeDXFModal: {
                Header: '레드 라인과 소스 DWG 병합', // 'Merge Redline with Source DWG',
                SelectMode: '선택 모드:', // 'Select Mode:',
                Mode1: '다운로드', // 'Download',
                Mode2: '전자 메일로 보내기', // 'Send as e-mail',
                Mode3: '서버에 업로드', // 'Upload to Server',
                EntireDoc: '전체 문서 게시:', // 'Publish Entire Document:',
                OK: '승인', // 'OK',
                Recipient: '이메일:', // 'E-mail:',
                Title: '표제:', // 'Title:',
                Message: '메시지:', // 'Message:',
            },


            RedlineColorModal: {
                Header: '레드 라인 색상 선택', // 'Select Redline Color',
                PickColor: '색상 선택:', // 'Pick Color:',
                SelectColor: '고르다:', // 'Select:',
                Blue: '푸른', // 'Blue',
                Red: '빨간', // 'Red',
                Yellow: '노랑', // 'Yellow',
                Orange: '주황색', // 'Orange',
                Green: '녹색', // 'Green',
                Purple: '자', // 'Purple',
                Brown: '갈색', // 'Brown',
                Gray: '회색', // 'Gray',
                OK: '승인' // 'OK'
            },

            RedlineEllipseModal: {
                Header: '레드 라인 모양 선택', // 'Select Redline Shape',
                SelectType: '고르다:', // 'Select:',
                Ellipse: '타원', // 'Ellipse',
                Cloud: '구름', // 'Cloud',
                OK: '승인' // 'OK'
            },

			CreationModeModal: {
				Header: 'Select Space ID source',
				SelectType: 'Select:',
				DataSource: 'From Data Source via API',
				Manually: 'Enter Manually',
				OK: 'OK'
			},
			
            BackgroundColorModal: {
                Header: 'CADViewer JS 배경색을 선택하세요.', // 'Select Background Color',
                PickColor: '설정된 색:', // 'Pick Color:',
                SelectColor: '선택:', // 'Select:',
                White: '화이트', // 'White',
                Black: '검은', // 'Black',
                Azure: '하늘빛', // 'Azure',
                Pink: '담홍색', // 'Pink',
                Snow: '눈', // 'Snow',
                Silver: '은', // 'Silver',
                Gray: '회색', // 'Gray',
                Brown: '갈색', // 'Brown',
                OK: '승인' // 'OK'
            },

            RedlineTextModal: {
                Header: 'CADViewer JS 줄 바꿈 텍스트', // 'Redline Text',
                FontSize: '폰트 크기:', // 'Font Size:',
                OK: '승인', // 'OK',
                Text: '텍스트를 입력하고 확인을 클릭하고 도면에서 삽입 점을 선택합니다.', // 'Enter text, click OK and select the insertion point in the drawing.',
            },

            LineThicknessModal: {
                Header: 'CADViewer JS 선 두깨 조절', // 'Adjust Line Thickness',
                LineThickness: '선 두께:', // 'Line Thickness:',
            },

            CalibrateModal: {
                Header: 'CADViewer JS 측정 단위 설정', // 'Calibrate Measurement',
                Unit: '단위:', // 'Unit:',
                Distance: '거리:', // 'Distance:',
                OK: '승인', // 'OK',
                Text: '도면위에 마우스로 두 점을 먼저 선택한 다음, 그 때까지와 거리를 입력하고 확인을 누릅니다.', // 'Select two points in the drawing with the mouse first, then enter unit and distance and press OK.',
            },

            MeasurementModal: {
                Header: 'CADViewer JS 측점', // 'Measurement',
                Distance: '거리: ', // 'Distance: ',
                MeasureAgain: '다시 측정', // 'Measure Again',												
                ClosePolygon: '면적측정 도형 폐합', // 'Close Area Polygon',
                Text: '도면에서 거리에 대한 두 점을 선택합니다.', // 'Select two points in the drawing for distance.',
                TextArea: '점 순서를 선택합니다. 영역을 두 번 클릭하거나 ESC 또는 "면적 다각형 폐합" 버튼을 클릭합니다.', // 'Select a sequence of points. Doubleclick, Esc or "Close Area" button for area.',
                Area: '면적', // 'Area',
            },

            BirdsEyeModal: {
                Header: '조감도 창', // 'Birds-Eye Window',
            },

            ImageObjectModal: {
                Header: '이미지 개체 번호. ', // 'Image Object Nr. ',
                LoadImage: '새 이미지로드', // 'Load New Image',
                RemoveImageNote: '이미지 노트 제거e', // 'Remove Image Note',
                MinimizeImageNote: '이미지 노트 최소화', // 'Minimize Image Note',
            },

            LayerListModal: {
                Header: '레이어 목록', // 'Layer List',
                Search: '조회', // 'Search',
                Sort: '레이어 정렬', // 'Sort by Layer',
                AllLayerOn: '모든 레이어 On', // 'All Layer On',
                AllLayerOff: '모든 레이어 Off', // 'All Layer Off',
                SwapLayers: '모든 레이어 토글', // 'Swap All Layers',
                On: '에', // 'ON',
                Off: '오프', // 'OFF',
            },

            PageChangeListModal: {
                Header: '그림 그리기 페이지 변경', // 'Change Drawing Page',
                Search: '수색', // 'Search',
                Sort: '이름으로 분류하다', // 'Sort by Name',
                On: '에', // 'ON',
                Off: '오프', // 'OFF',
            },


            LayerListSpaceModal: {
                Header: '레이어 목록 - 공간 객체', // 'Layer List - Space Objects',
                Search: '수색', // 'Search',
                Sort: '레이어별로 정렬', // 'Sort by Layer',
                AllLayerOn: '모든 레이어 켜기', // 'All Layer On',
                AllLayerOff: '모든 레이어 끄기', // 'All Layer Off',
                SwapLayers: 'Swap All Layers', // 'Swap All Layers',
                On: '에', // 'ON',
                Off: '오프', // 'OFF',
                NotAssigned: '할당되지 않음', // 'Not Assigned',
                TextLayer: '텍스트 레이어', // 'Text Layer',
                RoomLayer: '룸 레이어', // 'Room Layer',
						HandleLayer: 'Active Layer',
						FloodfillLayer: 'SpaceID Layer',
				
            },

            IconPage_p1_8: {
                PreviousPage: '이전 아이콘 페이지', // 'Previous Icon Page',
                NextPage: '다음 아이콘 페이지', // 'Next Icon Page',
					  	NextMenuPage: '다음 메뉴 페이지',  //   Next Icon Page  3.3.01a
                LayerList: '레이어 목록', // 'Layer List',
                Print: '출력', // 'Print',
                ZoomIn: '확대', // 'Zoom In',
                ZoomOut: '축소', // 'Zoom Out',
                ZoomExtents: '익스텐트 확대', // 'Zoom Extents',
                ZoomWindow: '확대 / 축소 창', // 'Zoom Window',
                Toggle: '토글 블랙 / 화이트', // 'Toggle Black/White',
                Background: '배경색', // 'Background Color',
                FileLoad: '파일로드', // 'File Load',
                Search: '텍스트 검색', // 'Search Text',
                About: '약', // 'About',
                LayerOff: '레이어 끄기', // 'Layer Off',
                SwapLayers: '스왑 레이어', // 'Swap Layers',
                AllLayersOn: '모든 레이어 켜기', // 'All Layers On',
                Measurement: '측정', // 'Measurement',
                Calibrate: '측정 계측', // 'Calibrate Measurement',
                BirdsEye: '토글 조감도 창', // 'Toggle Birds-Eye Window',
                LineThickness: '선 두께 조정', // 'Adjust Line Thickeness',
            },

            IconPage_p2_8: {
                PreviousPage: '이전 아이콘 페이지', // 'Previous Icon Page',
                NextPage: '다음 아이콘 페이지', // 'Next Icon Page',
                SaveRedline: '레드 라인 저장', // 'Save Redline',
                LoadRedline: '레드 라인로드', // 'Load Redline',
                DeleteSingle: '단일 레드 라인 삭제e', // 'Delete Single Redline',
                DeleteLast: '마지막 줄 지우기 삭제', // 'Delete Last Redline',
                Color: '레드 라인 색상', // 'Redline Color',
                Thickness: '적목선의 두께', // 'Redline Thickness',
                StickyNote: '스티커 메모 만들기', // 'Make StickyNote',
                ClearAll: '보이는 빨간 선 지우기', // 'Clear Visible Redlines',
                Freehand: '프리 핸드 레드 라인', // 'Freehand Redline',
                Cloud: '레드 라인 타원 / 구름', // 'Redline Ellipse/Cloud',
                FilledPolygon: '레드 라인 채워진 다각형', // 'Redline Filled Polygon',
                Polyline: '레드 라인 폴리 라인', // 'Redline Polyline',
                Polygon: '레드 라인 폴리곤', // 'Redline Polygon',
                FilledRectangle: '채워진 빨강 직사각형', // 'Filled Redline Rectangle',
                Rectangle: '레드 라인 직사각형', // 'Redline Rectangle',
                Arrow: '레드 라인 화살표', // 'Redline Arrow',
                Text: '줄 바꿈 텍스트', // 'Redline Text',
                PublishAsPDF: 'PDF로 게시', // 'Publish as PDF',
                MergeAsDXF: '레드 라인과 소스 DWG 병합', // 'Merge Redline with Source DWG',
                Free: '빈', // 'Free',
 	MergeWithQR: 'Merge QR code with source DWG',
           },

            IconPage_p3_8: {
                PreviousPage: '이전 아이콘 페이지', // 'Previous Icon Page',
                NextPage: '다음 아이콘 페이지', // 'Next Icon Page',
                PublishAsPDF: 'PDF로 게시', // 'Publish as PDF',
                Free: '빈', // 'Free',
                LoadLink: '모든 이미지 링크로드', // 'Load All Image Links',
                InsertLink: '이미지 링크 삽입', // 'Insert Image Link',
                SaveLink: '모든 이미지 링크 저장', // 'Save All Image Links',
                ClearLink: '모든 이미지 링크 지우기', // 'Clear All Image Links',
                QuickCount: '빠른 카운트', // 'Quick Count',
                CountSum: '요약 빠른 집계', // 'Summary Quick Count',
                ClearCount: '빠른 카운트 지우기', // 'Clear Quick Count',
                LayerOff: '레이어 끄기', // 'Layer Off',
                SwapLayers: '스왑 레이어', // 'Swap Layers',
                AllLayersOn: '모든 레이어 켜기', // 'All Layers On',
                ZoomExtents: '익스텐트 확대', // 'Zoom Extents',
                ZoomWindow: '확대 / 축소 창', // 'Zoom Window',
            },


            IconPage_p4_8: {
                PreviousPage: '이전 아이콘 페이지', // 'Previous Icon Page',
                NextPage: '다음 아이콘 페이지', // 'Next Icon Page',
                Free: '빈', // 'Free',
                CompareLoad: '비교를 위해 두 번째 도면로드', // 'Load Second Drawing for Compare',
                CompareToggle: '개별적으로 도면 토글', // 'Toggle Drawings individually',
                CompareToggleOverlay: '오버레이 된 도면 토글', // 'Toggle overlaid Drawings',
                CompareExit: '도면 비교 종료', // 'Exit Compare Drawings',
                CollaborationJoinSession: '협업 세션에 참여하십시오.', // 'Join Collaboration Session',
                CollaborationTakeControl: '공동 작업 세션을 통해 장악', // 'Take Control over Collaboration Session',
                CollaborationClearSession: '공동 작업 세션에서 레드 라인 삭제', // 'Clear Redlines in Collaboration Session',
                CollaborationLeaveSession: '협업 세션을 남겨주세요', // 'Leave Collaboration Session',
                LayerOff: '레이어 끄기', // 'Layer Off',
                SwapLayers: '스왑 레이어', // 'Swap Layers',
                AllLayersOn: '모든 레이어 켜기', // 'All Layers On',
                ZoomExtents: '익스텐트 확대', // 'Zoom Extents',
                ZoomWindow: '확대 / 축소 창', // 'Zoom Window',
            },

            IconPage_p5_8: {
						InsertSpaceImage: 'Insert Space Image Object',
						DragSpaceImage: 'Drag Space Image Object',
						ResizeSpaceImage: 'Resize Space Image Object',
				LoadSpaceObjects: 'Load Space Objects',
                PreviousPage: '이전 아이콘 페이지', // 'Previous Icon Page',
                NextPage: '다음 아이콘 페이지', // 'Next Icon Page',
                Publish: '사용자 디스플레이 모드에서 공간 객체 구조보기', // 'View Space Object Structure in User Display Mode',
                DownloadSVG: '처리 된 SVG 도면 다운로드g', // 'Download processed SVG drawing',
                Load: '바닥 평면로드 및 공간 객체 사전 처리', // 'Load Floorplan and pre-process Space Objects',
                Settings: '설정', // 'Settings',
                SelectObject: '개체 선택', // 'Select Object',
                Rect: '사각형 공간 객체', // 'Rectangle Space Object',
                Polygon: '다각형 공간 객체', // 'Polygon Space Object',
                Circle: '원 공간 개체', // 'Circle Space Object',
                CopyCircle: '원 공간 개체 복사', // 'Copy Circle Space Object',
                Delete: '공간 객체 삭제', // 'Delete Space Object',
                LayerList: '레이어 목록', // 'Layer List',
                Mode: '공간 객체 표시 및 편집 모드 전환', // 'Toggle Space Object Display and Edit Mode',
                Free: '빈', // 'Free',
                SelectPolygon: '닫힌 다각형에 공간 객체 생성', // 'Generate Space Object on closed polygon',
                LayerOff: '레이어 끄기', // 'Layer Off',
                SwapLayers: '스왑 레이어', // 'Swap Layers',
                AllLayersOn: '모든 레이어 켜기', // 'All Layers On',
                ZoomExtents: '익스텐트 확대', // 'Zoom Extents',
                ZoomWindow: '확대 / 축소 창', // 'Zoom Window',
            },
			
			IconPage_p6_1: {
				PinMarker: 'Add Pin Marker',
			},
					
			

            PageModal: {
                SelectPageFromList: '목록에서 그림 그리기 페이지 선택', // 'Select Drawing Page From List',
                EnterPage: '페이지 번호 입력', // 'Enter page number',
                RotateBack: '반 시계 방향으로 90도 회전', // 'Rotate 90 degrees counter clockwise',
                RotateForward: '시계 방향으로 90도 회전', // 'Rotate 90 degrees clockwise',
                First: '그림에서 첫 페이지로드', // 'Load First Page in Drawing',
                Previous: '도면의 이전 페이지로드', // 'Load Previous Page in Drawing',
                Next: '그림에서 다음 페이지로드', // 'Load Next Page in Drawing',
                Last: '도면의 마지막 페이지로드', // 'Load Last Page in Drawing',
                ZoomExtents: '익스텐트 확대', // 'Zoom Extents',
                ZoomWindow: '확대 / 축소 창', // 'Zoom Window',
            },

            StickyNote: {
                MoveNote: '메모 이동', // 'Move Note',
                EditNote: '메모 편집', // 'Edit Note',
                DeleteNote: '메모 삭제', // 'Delete Note',
                MinimizeNote: '메모 최소화', // 'Minimize Note',
                Inactive: '비활성', // 'Inactive',
                SaveNote: '메모 저장', // 'Save Note',
                Cancel: '메모 편집 취소', // 'Cancel Edit Note',
            },

            ImageObject: {
                InsertReplace: '이미지 바꾸기 또는 삽입', // 'Replace or Insert Image',
                Delete: '이미지 및 연결된 아이콘 삭제', // 'Delete Image and Associated Icon',
                Minimize: '이미지 개체 최소화', // 'Minimize Image Object',
            },

            DeleteModal: {
                Header: '지우다', // 'Delete',
                Text1: '이 작업을 수행하면', //  'This action will remove',
                Text2: '모든 사용자의 평면도에 대한 액세스를 사용 중지합니다.', // 'and disable access to the floor plan for all users.',

            },

            UnlinkModal: {
                Header: '풀리다', // 'Unlink',
                Text1: '이 작업을 수행하면 모든 메타 데이터가 제거됩니다.', // 'This action will remove all metadata from',
                Text2: '위치 객체는 변경되지 않고 유지됩니다.', // 'Location objects will remain unchanged.',
            },

            ClearModal: {
                Header: 'Clear', // 'Clear',
                Text1: 'This action will remove all metadata and location objects from', // 'This action will remove all metadata and location objects from',
            },

            FileLoadSpaceModal: {
                Header: 'CADViewer JS: Space Management File Loader', // 'CADViewer JS: Space Management File Loader',
                DrawingFilename: 'DRAWING / FILENAME', // 'DRAWING / FILENAME',
                EditFloorplanInfo: 'Edit Floor Plan Info', // 'Edit Floor Plan Info',
                BuildRoomTextHyperlinks: 'Build ROOM/TEXT Layer Hyperlinks on Load', // 'Build ROOM/TEXT Layer Hyperlinks on Load',
            },

            LoadingModal: {
                Loading: '로딩중', // 'Loading',
            },

            DataMaps: {
                Map: ['Data Maps - User Map 1', 'Data Maps - User Map 2', 'Data Maps - User Map 3', 'Data Maps - User Map 4'] // [ 'Data Maps - User Map 1', 'Data Maps - User Map 2', 'Data Maps - User Map 3', 'Data Maps - User Map 4' ]
                //					  	Map2: 'Data Maps - User Map 2',
                //					  	Map3: 'Data Maps - User Map 3',
                //					  	Map4: 'Data Maps - User Map 4',
            },

            HeaderObjectLayers: {
                ObjectLayer: ['Spaces - User Layer 1', 'Assets - User Layer 2'] // ['Spaces - User Layer 1', 'Assets - User Layer 2' ]
                //					  	ObjectLayer2: 'Assets - User Layer 2',
            },

            WaitModal: {
                Printing: '출력중', // 'Printing',
                Thumbnails: '저장중', // 'Saving',
                BatchPDF: 'PDF로 출력', // 'Print to PDF',
                MergeDWG: 'Merging', // 'Merging',

            }
        }
 				

 , {
            languageCode: "RU-RU",
            thisLanguage: "Russian",

            PrintModal: {                       // no need to transcode !!!!!!
                Header: 'CADViewer JS Настройки печати', // 'CADViewer JS Print Settings',
                Paper: 'Размер бумаги:',  //  // 'Paper Size:',
                Orientation: 'Ориентация:',// // 'Orientation:',
                Resolution: 'Разрешение:',//// 'Resolution:',
                ResolutionText: '(мин 75dpi, типичный 300dpi)', // '(min 75dpi, standard 300dpi)',
                Print: 'печать',// 'Print',
                Grayscale: 'Оттенки серого',// 'Grayscale',
                PrintPDF: 'Печать в формате PDF', // 'Print as PDF'
            },

            SearchTextModal: {
                Header: 'CADViewer JS Поиск текста', // 'Search Text',
                SearchText: 'Поиск текста:', // 'Search Text:',
                Zoom: 'Увеличить:', // 'Zoom Level:',
                Search: 'Поиск' // 'Search'
            },

					SearchCustomModal: {
					  	Header: 'Search',
					  	SearchText: 'Search Text:',
					  	Search: 'Search'
					},

            InfoMessageModal: {
                Header: 'Информация', // 'Information',
                Version: 'Этот номер версии: ', // 'This version number is: ',
                ComingSoon: 'Скоро будет!', // 'Coming Soon!',
                NoUnits: 'Никаких единиц, определенных в чертеже, сначала используйте команду «Калибровать измерение».', // 'No units defined in drawing, please use command Calibrate Measurement first.',
                UnitLess: 'Исходный чертеж без единиц, пожалуйста, сначала используйте команду «Калибровать измерение».', // 'The originating drawing is unitless, please use command Calibrate Measurement first.',
                QuickCountSingle: 'Количество быстрых подсчетов: ', // 'Number of Quick Counts is: ',
                QuickCountMultiple: 'Количество быстрых подсчетов: ', // 'Number of Quick Counts are: ',
                RedlinesLocked: 'Красные линии заблокированы для пользователя: ', // 'Redlines are locked for User: ',
                LicensePath: 'Не удалось найти лицензионный ключ по пути: ', // 'Could not find license key at path: ',
                LicenseNotFound: 'Лицензионный ключ не найден', // 'License key not found',
                SelectTwoPoints: 'Сначала выберите две точки на чертеже с помощью мыши, затем введите единицы измерения и расстояние, затем нажмите OK.', // 'Please select two points in the drawing with the mouse first, then enter unit and distance, finally press OK.',
                ReferenceDistance: 'Введите контрольное расстояние.', // ReferenceDistance: 'Please enter a reference distance.',
                RedlinesSaved: 'Сохраненные красные линии', // 'Redlines Saved',
                SinglePage: 'Одностраничный чертеж - без изменения страницы', // : 'Single page drawing - no change of page',
                FirstPage: 'Текущая страница является первой страницей в многостраничном чертеже - без изменения страницы.', // 'The current page is the first page in a multipage drawing - no change of page',
                LastPage: 'Текущая страница - последняя страница в многостраничном чертеже - без изменения страницы', // 'The current page is the last page in a multipage drawing - no change of page',
                OutOfRange: 'Введенный номер страницы находится за пределами диапазона страниц - без изменения страницы', // 'The page number entered is outside of the range of pages - no change of page',
                FileLoadThroughApp: 'ПРИМЕЧАНИЕ: Загрузка файлов включена только через инкапсулирующее приложение.', // 'NOTE: File Load enabled only through the encapsulating application',
                ErrorConnectingToHost: 'Ошибка при подключении к хосту. Перейдите в панель настроек и проверьте настройки сети!', // 'Error when connecting to Host. Go to the Settings Pane and check your Network Settings!',
                ConnectToHostFirst: 'Перейдите в панель настроек, проверьте настройки сети и нажмите «Сохранить изменения», чтобы подключиться к сетевому узлу, чтобы получить структуру данных, используемую при сопоставлении местоположений.', // 'Please go to the Settings Pane, check your Network Settings and click Save Changes to connect to your Network Host to retrieve the data structure used when mapping locations.',
                NoObjectSelected: 'Выберите космический объект', // 'Please select a Space Object.',
                PaperSizePDFPrintOnly: 'Пожалуйста, выберите «Печать в формате PDF» для больших размеров бумаги. Большие документы - A1 и A0, а также US Arch D и выше.', // 'Please select "Print as PDF" for large paper sizes size. Large papersizes are A1 and A0, as well as US Arch D and above.',
                ServerSideFormatForPDFPrint: 'Для печати в формате PDF требуется исходный файл в форматах DWG, DWF, DXF или DGN или PCF. Загрузите файл в этих форматах или выберите меньшую документацию для прямой печати. Прямая печать документов - A4-A2 или письмо США через ANSI C.', // 'PDF print requires an original file in formats DWG, DWF, DXF or DGN or PCF. Please upload a file in these formats or select a smaller papersize for direct print. Direct print papersizes are A4-A2 or US Letter through ANSI C',
							PrintDisabled: 'NOTE: Print Disabled',
						NoQRCode: 'No QR Code received from Server!',

            },

            FileLoadModal: {
                Header: 'CADViewer JS - Файловый менеджер', // 'CADViewer JS - File Manager',
                DrawingFilename: 'Рисование / Имя файла', // 'DRAWING / FILENAME',
                EditFloorplanInfo: 'Изменить информацию о плане', // 'Edit Floor Plan Info',
            },

            SaveRedlineModal: {
                Header: 'CADViewer JS - Сохранить красную линию', // 'CADViewer JS - Save Redline',
                RedlineFilename: 'Красная линия / Имя файла', // 'REDLINE / FILENAME',
                EditRedlineInfo: 'Изменить информацию о красной линии', // 'Edit Redline Info',
                Upload: 'Загрузить:', // 'UPLOAD:',
            },

            OpenRedlineModal: {
                Header: 'CADViewer JS - Открытая красная линия', // 'CADViewer JS - Open Redline',
                RedlineFilename: 'Красная линия / Имя файла', // 'REDLINE / FILENAME',
                EditRedlineInfo: 'Изменить информацию о красной линии', // 'Edit Redline Info',
            },

			OpenSpaceObjectModal: {
				Header: 'CADViewer JS - Open Space Objects',
				SpaceObjectFilename: 'SPACE OBJECT / FILENAME',
				EditSpaceObjectInfo: 'Edit Space Object Info',
			},

            RedlineThicknessModal: {
                Header: 'Выберите красную толщину', // 'Select Redline Thickness',
                Thickness: 'Толщина:', // 'Thickness:',
                OK: 'OK', // 'OK'
            },

            DocumentPageChangeModal: {
                Header: 'Выберите страницу документа', // 'Select Document Page',
                Page: 'Страница:', // 'Page:',
                OK: 'OK' // 'OK'
            },

            CollaborationStartModal: {
                Header: 'Введите сеанс совместной работы', // 'Enter Collaboration Session',
                Session: 'Название сеанса:', // 'Session Name:',
                OK: 'OK' // 'OK'
            },

            PublishPDFModal: {
                Header: 'Публикация содержимого экрана в PDF', // 'Publish Redlined Screen Content to PDF',
                SelectMode: 'Режим:', // 'Select Mode:',
                Mode1: 'Печать/Скачать', // 'Print/Download',
                Mode2: 'е-мейл', // 'Send as e-mail',
                Mode3: 'Загрузить на сервер', // 'Upload to Server',
                EntireDoc: 'Публикация всего документа:', // 'Publish Entire Document:',
                OK: 'OK', // 'OK',
                Recipient: 'е-мейл:', // 'E-mail:',
                Title: 'заглавие:', // 'Title:',
                Message: 'Сообщение:', // 'Message:',
            },

            MergeDXFModal: {
                Header: 'Слияние Redline с исходным DWG', // 'Merge Redline with Source DWG',
                SelectMode: 'Режим:', // 'Select Mode:',
                Mode1: 'Печать/Скачать', // 'Print/Download',
                Mode2: 'е-мейл', // 'Send as e-mail',
                Mode3: 'Загрузить на сервер', // 'Upload to Server',
                EntireDoc: 'Публикация всего документа:', // 'Publish Entire Document:',
                OK: 'OK', // 'OK',
                Recipient: 'е-мейл:', // 'E-mail:',
                Title: 'заглавие:', // 'Title:',
                Message: 'Сообщение:', // 'Message:',
            },


            RedlineColorModal: {
                Header: 'Выберите цвет красной линии', // 'Select Redline Color',
                PickColor: 'Выбирать:', // 'Pick Color:',
                SelectColor: 'отбирать:', // 'Select:',
                Blue: 'синий', // 'Blue',
                Red: 'красный', // 'Red',
                Yellow: 'желтый', // 'Yellow',
                Orange: 'апельсин', // 'Orange',
                Green: 'зеленый', // 'Green',
                Purple: 'пурпур', // 'Purple',
                Brown: 'карий', // 'Brown',
                Gray: 'Серый', // 'Gray',
                OK: 'OK' // 'OK'
            },

            RedlineEllipseModal: {
                Header: 'выбрать форму', // 'Select Redline Shape',
                SelectType: 'Выбрать:', // 'Select:',
                Ellipse: 'эллипс', // 'Ellipse',
                Cloud: 'облако', // 'Cloud',
                OK: 'OK' // 'OK'
            },

			
			CreationModeModal: {
				Header: 'Select Space ID source',
				SelectType: 'Select:',
				DataSource: 'From Data Source via API',
				Manually: 'Enter Manually',
				OK: 'OK'
			},
			
            BackgroundColorModal: {
                Header: 'CADViewer JS Выберите цвет фона.', // 'Select Background Color',
                PickColor: 'Выбирать:', // 'Pick Color:',
                SelectColor: 'отбирать:', // 'Select:',
                White: 'белый', // 'White',
                Black: 'черный', // 'Black',
                Azure: 'лазурь', // 'Azure',
                Pink: 'розовый', // 'Pink',
                Snow: 'Снег', // 'Snow',
                Silver: 'серебро', // 'Silver',
                Gray: 'Серый', // 'Gray',
                Brown: 'карий', // 'Brown',
                OK: 'OK' // 'OK'
            },

            RedlineTextModal: {
                Header: 'CADViewer JS Красная строка', // 'Redline Text',
                FontSize: 'Размер шрифта:', // 'Font Size:',
                OK: 'OK', // 'OK',
                Text: 'Введите текст, нажмите «ОК» и выберите точку вставки на чертеже.', // 'Enter text, click OK and select the insertion point in the drawing.',
            },

            LineThicknessModal: {
                Header: 'CADViewer JS толщины линии', // 'Adjust Line Thickness',
                LineThickness: 'Толщина линии:', // 'Line Thickness:',
            },

            CalibrateModal: {
                Header: 'CADViewer JS Калибровка измерений', // 'Calibrate Measurement',
                Unit: 'единица:', // 'Unit:',
                Distance: 'Расстояние:', // 'Distance:',
                OK: 'OK', // 'OK',
                Text: 'Сначала выберите две точки на чертеже, затем введите единицы измерения и расстояние и нажмите OK..', // 'Select two points in the drawing with the mouse first, then enter unit and distance and press OK.',
            },

            MeasurementModal: {
                Header: 'CADViewer JS измерение', // 'Measurement',
                Distance: 'Расстояние: ', // 'Distance: ',
                MeasureAgain: 'Мера снова', // 'Measure Again',												
                ClosePolygon: 'Полигональная область', // 'Close Area Polygon',
                Text: 'Выберите две точки на чертеже для расстояния.', // 'Select two points in the drawing for distance.',
                TextArea: 'Выберите последовательность точек. Дважды щелкните мышью, Esc или кнопку Close Area для области..', // 'Select a sequence of points. Doubleclick, Esc or "Close Area" button for area.',
                Area: 'Площадь', // 'Area',
            },

            BirdsEyeModal: {
                Header: 'Птичье глазное окно', // 'Birds-Eye Window',
            },

            ImageObjectModal: {
                Header: 'Объект изображения Nr. ', // 'Image Object Nr. ',
                LoadImage: 'Загрузить новое изображение', // 'Load New Image',
                RemoveImageNote: 'Удалить заметку об изображении', // 'Remove Image Note',
                MinimizeImageNote: 'Минимизировать изображение', // 'Minimize Image Note',
            },

            LayerListModal: {
                Header: 'Список слоев', // 'Layer List',
                Search: 'Поиск', // 'Search',
                Sort: 'Сортировать', // 'Sort by Layer',
                AllLayerOn: 'Слой на', // 'All Layer On',
                AllLayerOff: 'Слой от', // 'All Layer Off',
                SwapLayers: 'своп', // 'Swap All Layers',
                On: 'На', // 'ON',
                Off: 'от', // 'OFF',
            },

            PageChangeListModal: {
                Header: 'Изменить страницу чертежа', // 'Change Drawing Page',
                Search: 'Поиск', // 'Search',
                Sort: 'Сортировать', // 'Sort by Name',
                On: 'На', // 'ON',
                Off: 'от', // 'OFF',
            },


            LayerListSpaceModal: {
                Header: '레이어 목록 - 공간 객체', // 'Layer List - Space Objects',
                Search: 'Поиск', // 'Search',
                Sort: 'Сортировать', // 'Sort by Layer',
                AllLayerOn: 'Слой на', // 'All Layer On',
                AllLayerOff: 'Слой от', // 'All Layer Off',
                SwapLayers: 'своп', // 'Swap All Layers',
                On: 'На', // 'ON',
                Off: 'от', // 'OFF',
                NotAssigned: 'Не назначен', // 'Not Assigned',
                TextLayer: 'Текстовый слой', // 'Text Layer',
                RoomLayer: 'комнатный слой', // 'Room Layer',
				HandleLayer: 'Активный слой',
						FloodfillLayer: 'SpaceID Layer',
				
            },

            IconPage_p1_8: {
                PreviousPage: 'Предыдущая страница значков', // 'Previous Icon Page',
                NextPage: 'Следующая страница значка', // 'Next Icon Page',
					  	NextMenuPage: 'Следующая страница меню',  //   Next Icon Page  3.3.01a
                LayerList: 'Список слоев', // 'Layer List',
                Print: 'Распечатать', // 'Print',
                ZoomIn: 'Приблизить', // 'Zoom In',
                ZoomOut: 'Уменьшить', // 'Zoom Out',
                ZoomExtents: 'Масштабирование', // 'Zoom Extents',
                ZoomWindow: 'Окно масштабирования', // 'Zoom Window',
                Toggle: 'Переключить черный / белый', // 'Toggle Black/White',
                Background: 'Фоновый цвет', // 'Background Color',
                FileLoad: 'Загрузка файла', // 'File Load',
                Search: 'Поиск текста', // 'Search Text',
                About: 'Около', // 'About',
                LayerOff: 'Слой выключен', // 'Layer Off',
                SwapLayers: 'Слои подкачки', // 'Swap Layers',
                AllLayersOn: 'Все слои на', // 'All Layers On',
                Measurement: 'измерение', // 'Measurement',
                Calibrate: 'Калибровка измерений', // 'Calibrate Measurement',
                BirdsEye: 'Переключить окно с птичьим глазом', // 'Toggle Birds-Eye Window',
                LineThickness: 'Отрегулировать толщину линии', // 'Adjust Line Thickeness',
            },

            IconPage_p2_8: {
                PreviousPage: 'Предыдущая страница значков', // 'Previous Icon Page',
                NextPage: 'Следующая страница значка', // 'Next Icon Page',
                SaveRedline: 'Сохранить красную линию', // 'Save Redline',
                LoadRedline: 'Загрузить красную линию', // 'Load Redline',
                DeleteSingle: 'Удалить одиночную красную линию', // 'Delete Single Redline',
                DeleteLast: 'Удалить последнюю красную линию', // 'Delete Last Redline',
                Color: 'Цвет красной линии', // 'Redline Color',
                Thickness: 'Толщина красной линии', // 'Redline Thickness',
                StickyNote: 'Сделайте заметку', // 'Make StickyNote',
                ClearAll: 'Очистить видимые красные линии', // 'Clear Visible Redlines',
                Freehand: 'Ручная красная линия', // 'Freehand Redline',
                Cloud: 'Красная линия эллипса / облака', // 'Redline Ellipse/Cloud',
                FilledPolygon: 'Многоугольник с красной линией', // 'Redline Filled Polygon',
                Polyline: 'Красная линия полилинии', // 'Redline Polyline',
                Polygon: 'Многоугольник с красной линией', // 'Redline Polygon',
                FilledRectangle: 'Заполненный прямоугольник с красной линией', // 'Filled Redline Rectangle',
                Rectangle: 'прямоугольник с красной линией', // 'Redline Rectangle',
                Arrow: 'красная стрелка', // 'Redline Arrow',
                Text: 'красноватый текст', // 'Redline Text',
                PublishAsPDF: 'Опубликовать в формате PDF', // 'Publish as PDF',
                MergeAsDXF: 'Объединить красную линию с исходным DWG', // 'Merge Redline with Source DWG',
                Free: 'Свободно', // 'Free',
 	MergeWithQR: 'Merge QR code with source DWG',
           },

            IconPage_p3_8: {
                PreviousPage: 'Предыдущая страница значков', // 'Previous Icon Page',
                NextPage: 'Следующая страница значка', // 'Next Icon Page',
                PublishAsPDF: 'Опубликовать в формате PDF', // 'Publish as PDF',
                Free: 'Свободно', // 'Free',
                LoadLink: 'Загрузить все ссылки на изображения', // 'Load All Image Links',
                InsertLink: 'Вставить ссылку для изображения', // 'Insert Image Link',
                SaveLink: 'Сохранить все ссылки на изображения', // 'Save All Image Links',
                ClearLink: 'Очистить все ссылки на изображения', // 'Clear All Image Links',
                QuickCount: 'Быстрый подсчет', // 'Quick Count',
                CountSum: 'Резюме Быстрый счет', // 'Summary Quick Count',
                ClearCount: 'Очистить счетчик', // 'Clear Quick Count',
                LayerOff: 'Слой выключен', // 'Layer Off',
                SwapLayers: 'Слои подкачки', // 'Swap Layers',
                AllLayersOn: 'Все слои на', // 'All Layers On',
                ZoomExtents: 'Масштабирование', // 'Zoom Extents',
                ZoomWindow: 'Окно масштабирования', // 'Zoom Window',
            },


            IconPage_p4_8: {
                PreviousPage: 'Предыдущая страница значков', // 'Previous Icon Page',
                NextPage: 'Следующая страница значка', // 'Next Icon Page',
                Free: 'Свободно', // 'Free',
                CompareLoad: 'Загрузите второй чертеж для сравнения', // 'Load Second Drawing for Compare',
                CompareToggle: 'Переключить чертежи отдельно', // 'Toggle Drawings individually',
                CompareToggleOverlay: 'Переключить накладные чертежи', // 'Toggle overlaid Drawings',
                CompareExit: 'Выйти Сравнить рисунки', // 'Exit Compare Drawings',
                CollaborationJoinSession: 'Присоединиться к сессии совместной работы', // 'Join Collaboration Session',
                CollaborationTakeControl: 'Возьмите контроль над сеансом совместной работы', // 'Take Control over Collaboration Session',
                CollaborationClearSession: 'Четкие красные линии в сеансе совместной работы', // 'Clear Redlines in Collaboration Session',
                CollaborationLeaveSession: 'Оставить сессию совместной работы', // 'Leave Collaboration Session',
                LayerOff: 'Слой выключен', // 'Layer Off',
                SwapLayers: 'Слои подкачки', // 'Swap Layers',
                AllLayersOn: 'Все слои на', // 'All Layers On',
                ZoomExtents: 'Масштабирование', // 'Zoom Extents',
                ZoomWindow: 'Окно масштабирования', // 'Zoom Window',
            },

            IconPage_p5_8: {
						InsertSpaceImage: 'Insert Space Image Object',
						DragSpaceImage: 'Drag Space Image Object',
						ResizeSpaceImage: 'Resize Space Image Object',
				LoadSpaceObjects: 'Load Space Objects',
                PreviousPage: 'Предыдущая страница значков', // 'Previous Icon Page',
                NextPage: 'Следующая страница значка', // 'Next Icon Page',
                Publish: 'Просмотр структуры космического объекта в режиме отображения пользователей', // 'View Space Object Structure in User Display Mode',
                DownloadSVG: 'Загрузите обработанный SVG-рисунок', // 'Download processed SVG drawing',
                Load: 'Загрузка Плана этажей и предварительных процессов Космические объекты', // 'Load Floorplan and pre-process Space Objects',
                Settings: 'настройки', // 'Settings',
                SelectObject: 'Выберите объект', // 'Select Object',
                Rect: 'Прямоугольный космический объект', // 'Rectangle Space Object',
                Polygon: 'Объект многоугольника', // 'Polygon Space Object',
                Circle: 'Круглый космический объект', // 'Circle Space Object',
                CopyCircle: 'Копировать круглый космический объект', // 'Copy Circle Space Object',
                Delete: 'Удалить космический объект', // 'Delete Space Object',
                LayerList: 'Список слоев', // 'Layer List',
                Mode: 'Переключить экран пространственных объектов и режим редактирования', // 'Toggle Space Object Display and Edit Mode',
                Free: 'Свободно', // 'Free',
                SelectPolygon: 'Генерировать космический объект на замкнутом многоугольнике', // 'Generate Space Object on closed polygon',
                LayerOff: 'Слой выключен', // 'Layer Off',
                SwapLayers: 'Слои подкачки', // 'Swap Layers',
                AllLayersOn: 'Все слои на', // 'All Layers On',
                ZoomExtents: 'Масштабирование', // 'Zoom Extents',
                ZoomWindow: 'Окно масштабирования', // 'Zoom Window',
            },

			IconPage_p6_1: {
				PinMarker: 'Add Pin Marker',
			},
			
            PageModal: {
                SelectPageFromList: 'Выберите страницу чертежа из списка', // 'Select Drawing Page From List',
                EnterPage: 'Введите номер страницы', // 'Enter page number',
                RotateBack: 'Повернуть на 90 градусов против часовой стрелки', // 'Rotate 90 degrees counter clockwise',
                RotateForward: 'Повернуть на 90 градусов по часовой стрелке', // 'Rotate 90 degrees clockwise',
                First: 'Загрузка первой страницы в чертеж', // 'Load First Page in Drawing',
                Previous: 'Загрузить предыдущую страницу в чертеже', // 'Load Previous Page in Drawing',
                Next: 'Загрузить следующую страницу в чертеже', // 'Load Next Page in Drawing',
                Last: 'Загрузить последнюю страницу в чертеже', // 'Load Last Page in Drawing',
                ZoomExtents: 'Масштабирование', // 'Zoom Extents',
                ZoomWindow: 'Окно масштабирования', // 'Zoom Window',
            },

            StickyNote: {
                MoveNote: 'Переместить заметку', // 'Move Note',
                EditNote: 'Редактировать примечание', // 'Edit Note',
                DeleteNote: 'Удалить примечание', // 'Delete Note',
                MinimizeNote: 'Минимизировать примечание', // 'Minimize Note',
                Inactive: 'Неактивный', // 'Inactive',
                SaveNote: 'Сохранить примечание', // 'Save Note',
                Cancel: 'Отменить Редактировать примечание', // 'Cancel Edit Note',
            },

            ImageObject: {
                InsertReplace: 'Заменить или вставить изображение', // 'Replace or Insert Image',
                Delete: 'Удалить изображение и связанный значок', // 'Delete Image and Associated Icon',
                Minimize: 'Минимизировать объект изображения', // 'Minimize Image Object',
            },

            DeleteModal: {
                Header: 'удалять', // 'Delete',
                Text1: 'Это действие удалит', //  'This action will remove',
                Text2: 'и отключить доступ к этажному плану для всех пользователей.', // 'and disable access to the floor plan for all users.',

            },

            UnlinkModal: {
                Header: 'Отменить ссылки', // 'Unlink',
                Text1: 'Это действие удалит все метаданные из', // 'This action will remove all metadata from',
                Text2: 'Объекты размещения останутся без изменений.', // 'Location objects will remain unchanged.',
            },

            ClearModal: {
                Header: 'Clear', // 'Clear',
                Text1: 'Это действие удалит все объекты метаданных и местоположения из', // 'This action will remove all metadata and location objects from',
            },

            FileLoadSpaceModal: {
                Header: 'CADViewer JS: Диспетчер файлов управления пространством', // 'CADViewer JS: Space Management File Loader',
                DrawingFilename: 'Рисование / Имя файла', // 'DRAWING / FILENAME',
                EditFloorplanInfo: 'Изменить информацию о плане', // 'Edit Floor Plan Info',
                BuildRoomTextHyperlinks: 'Гибкие ссылки на строительную комнату/текстовые слои', // 'Build ROOM/TEXT Layer Hyperlinks on Load',
            },

            LoadingModal: {
                Loading: 'загрузка', // 'Loading',
            },

            DataMaps: {
                Map: ['Data Maps - User Map 1', 'Data Maps - User Map 2', 'Data Maps - User Map 3', 'Data Maps - User Map 4'] // [ 'Data Maps - User Map 1', 'Data Maps - User Map 2', 'Data Maps - User Map 3', 'Data Maps - User Map 4' ]
                //					  	Map2: 'Data Maps - User Map 2',
                //					  	Map3: 'Data Maps - User Map 3',
                //					  	Map4: 'Data Maps - User Map 4',
            },

            HeaderObjectLayers: {
                ObjectLayer: ['Spaces - User Layer 1', 'Assets - User Layer 2'] // ['Spaces - User Layer 1', 'Assets - User Layer 2' ]
                //					  	ObjectLayer2: 'Assets - User Layer 2',
            },

            WaitModal: {
                Printing: 'печать', // 'Printing',
                Thumbnails: 'экономия', // 'Saving',
                BatchPDF: 'Печать в PDF', // 'Print to PDF',
                MergeDWG: 'объединение', // 'Merging',

            }
        }
 				
				
, {
            languageCode: "MS-MA",
            thisLanguage: "Malay",

            PrintModal: {                       // no need to transcode !!!!!!
                Header: 'CADViewer JS Tetapan Pencetakan', // 'CADViewer JS Print Settings',
                Paper: 'Saiz Kertas:',  //  // 'Paper Size:',
                Orientation: 'Orientasi:',// // 'Orientation:',
                Resolution: 'Resolusi:',//// 'Resolution:',
                ResolutionText: '(min 75dpi, standard 300dpi)', // '(min 75dpi, standard 300dpi)',
                Print: 'Cetak',// 'Print',
                Grayscale: 'Skala kelabu',// 'Grayscale',
                PrintPDF: 'Cetak sebagai PDF', // 'Print as PDF'
            },

            SearchTextModal: {
                Header: 'CADViewer JS Teks Carian', // 'Search Text',
                SearchText: 'Teks Carian:', // 'Search Text:',
                Zoom: 'Tahap Zum:', // 'Zoom Level:',
                Search: 'Carian' // 'Search'
            },

					SearchCustomModal: {
					  	Header: 'Search',
					  	SearchText: 'Search Text:',
					  	Search: 'Search'
					},

            InfoMessageModal: {
                Header: 'Maklumat', // 'Information',
                Version: 'Nombor versi ini ialah: ', // 'This version number is: ',
                ComingSoon: 'Akan datang!', // 'Coming Soon!',
                NoUnits: 'Tiada unit yang ditentukan dalam lukisan, sila gunakan perintah Menentukur Pengukuran terlebih dahulu.', // 'No units defined in drawing, please use command Calibrate Measurement first.',
                UnitLess: 'Lukisan yang berasal tidak bersatu, sila gunakan perintah Menentukur Pengukuran terlebih dahulu.', // 'The originating drawing is unitless, please use command Calibrate Measurement first.',
                QuickCountSingle: 'Bilangan Penghitung Cepat ialah: ', // 'Number of Quick Counts is: ',
                QuickCountMultiple: 'Bilangan Pengiraan Pantas adalah: ', // 'Number of Quick Counts are: ',
                RedlinesLocked: 'Barisan merah dikunci untuk Pengguna: ', // 'Redlines are locked for User: ',
                LicensePath: 'Tidak dapat mencari kunci lesen di laluan: ', // 'Could not find license key at path: ',
                LicenseNotFound: 'Kunci lesen tidak dijumpai', // 'License key not found',
                SelectTwoPoints: 'Sila pilih dua mata dalam lukisan dengan tetikus terlebih dahulu, kemudian masukkan unit dan jarak, akhirnya tekan OK.', // 'Please select two points in the drawing with the mouse first, then enter unit and distance, finally press OK.',
                ReferenceDistance: 'Sila masukkan jarak rujukan.', // ReferenceDistance: 'Please enter a reference distance.',
                RedlinesSaved: 'Jalur Merah Disimpan', // 'Redlines Saved',
                SinglePage: 'Lukisan halaman tunggal - tiada perubahan halaman', // : 'Single page drawing - no change of page',
                FirstPage: 'Halaman semasa adalah halaman pertama dalam lukisan multipage - tiada perubahan halaman.', // 'The current page is the first page in a multipage drawing - no change of page',
                LastPage: 'Halaman semasa adalah halaman terakhir dalam lukisan multipage - tiada perubahan halaman', // 'The current page is the last page in a multipage drawing - no change of page',
                OutOfRange: 'Nombor halaman yang dimasukkan adalah di luar julat halaman - tiada perubahan halaman', // 'The page number entered is outside of the range of pages - no change of page',
                FileLoadThroughApp: 'NOTA: Muat Fail dibolehkan hanya melalui aplikasi encapsulating.', // 'NOTE: File Load enabled only through the encapsulating application',
                ErrorConnectingToHost: 'Ralat apabila menyambung kepada Hos. Pergi ke Tetapan Pane dan periksa Tetapan Rangkaian anda!', // 'Error when connecting to Host. Go to the Settings Pane and check your Network Settings!',
                ConnectToHostFirst: 'Sila pergi ke Tetapan Pane, periksa Tetapan Rangkaian anda dan klik Simpan Perubahan untuk disambungkan ke Host Network anda untuk mengambil struktur data yang digunakan semasa pemetaan lokasi.', // 'Please go to the Settings Pane, check your Network Settings and click Save Changes to connect to your Network Host to retrieve the data structure used when mapping locations.',
                NoObjectSelected: 'Sila pilih Objek Ruang', // 'Please select a Space Object.',
                PaperSizePDFPrintOnly: 'Sila pilih "Cetak sebagai PDF" untuk saiz saiz kertas besar. Papersizes besar adalah A1 dan A0, serta US Arch D dan ke atas.', // 'Please select "Print as PDF" for large paper sizes size. Large papersizes are A1 and A0, as well as US Arch D and above.',
                ServerSideFormatForPDFPrint: 'Cetakan PDF memerlukan fail asal dalam format DWG, DWF, DXF atau DGN atau PCF. Sila muat naik fail dalam format ini atau pilih papersize yang lebih kecil untuk cetakan terus. Makalah cetak langsung adalah A4-A2 atau Surat AS melalui ANSI C.', // 'PDF print requires an original file in formats DWG, DWF, DXF or DGN or PCF. Please upload a file in these formats or select a smaller papersize for direct print. Direct print papersizes are A4-A2 or US Letter through ANSI C',
							PrintDisabled: 'NOTE: Print Disabled',
						NoQRCode: 'No QR Code received from Server!',

            },

            FileLoadModal: {
                Header: 'CADViewer JS - Pengurus Fail', // 'CADViewer JS - File Manager',
                DrawingFilename: 'GAMBAR / FILENAME', // 'DRAWING / FILENAME',
                EditFloorplanInfo: 'Edit Maklumat Pelan Lantai', // 'Edit Floor Plan Info',
            },

            SaveRedlineModal: {
                Header: 'CADViewer JS - Simpan baris merah', // 'CADViewer JS - Save Redline',
                RedlineFilename: 'GARIS MERAH / FILENAME', // 'REDLINE / FILENAME',
                EditRedlineInfo: 'Edit Maklumat Baris Merah', // 'Edit Redline Info',
                Upload: 'Muat naik:', // 'UPLOAD:',
            },

            OpenRedlineModal: {
                Header: 'CADViewer JS - Buka garis merah', // 'CADViewer JS - Open Redline',
                RedlineFilename: 'GARIS MERAH / FILENAME', // 'REDLINE / FILENAME',
                EditRedlineInfo: 'Edit Maklumat Baris Merah', // 'Edit Redline Info',
            },

			OpenSpaceObjectModal: {
				Header: 'CADViewer JS - Open Space Objects',
				SpaceObjectFilename: 'SPACE OBJECT / FILENAME',
				EditSpaceObjectInfo: 'Edit Space Object Info',
			},

            RedlineThicknessModal: {
                Header: 'Pilih Ketebalan Baris Merah', // 'Select Redline Thickness',
                Thickness: 'Ketebalan:', // 'Thickness:',
                OK: 'OK', // 'OK'
            },

            DocumentPageChangeModal: {
                Header: 'Pilih Halaman Dokumen', // 'Select Document Page',
                Page: 'Halaman:', // 'Page:',
                OK: 'OK' // 'OK'
            },

            CollaborationStartModal: {
                Header: 'Masukkan Sesi Kerjasama', // 'Enter Collaboration Session',
                Session: 'Nama Sesi:', // 'Session Name:',
                OK: 'OK' // 'OK'
            },

            PublishPDFModal: {
                Header: 'Terbitkan Kandungan Skrin bergaris merah ke PDF', // 'Publish Redlined Screen Content to PDF',
                SelectMode: 'Pilih Mod:', // 'Select Mode:',
                Mode1: 'Cetak/Muat Turun', // 'Print/Download',
                Mode2: 'e-mel', // 'Send as e-mail',
                Mode3: 'Muat naik ke Pelayan', // 'Upload to Server',
                EntireDoc: 'Terbitkan Dokumen Seluruh:', // 'Publish Entire Document:',
                OK: 'OK', // 'OK',
                Recipient: 'e-mel:', // 'E-mail:',
                Title: 'Tajuk:', // 'Title:',
                Message: 'Mesej:', // 'Message:',
            },

            MergeDXFModal: {
                Header: 'Gabungkan baris merah dengan Sumber DWG', // 'Merge Redline with Source DWG',
                SelectMode: 'Pilih Mod:', // 'Select Mode:',
                Mode1: 'Cetak/Muat Turun', // 'Print/Download',
                Mode2: 'e-mel', // 'Send as e-mail',
                Mode3: 'Muat naik ke Pelayan', // 'Upload to Server',
                EntireDoc: 'Terbitkan Dokumen Seluruh:', // 'Publish Entire Document:',
                OK: 'OK', // 'OK',
                Recipient: 'e-mel:', // 'E-mail:',
                Title: 'Tajuk:', // 'Title:',
                Message: 'Mesej:', // 'Message:',
            },


            RedlineColorModal: {
                Header: 'Pilih Warna garis merah', // 'Select Redline Color',
                PickColor: 'Pilih:', // 'Pick Color:',
                SelectColor: 'Memilih:', // 'Select:',
                Blue: 'Biru', // 'Blue',
                Red: 'Merah', // 'Red',
                Yellow: 'Kuning', // 'Yellow',
                Orange: 'Orange', // 'Orange',
                Green: 'Hijau', // 'Green',
                Purple: 'Ungu', // 'Purple',
                Brown: 'Coklat', // 'Brown',
                Gray: 'Kelabu', // 'Gray',
                OK: 'OK' // 'OK'
            },

            RedlineEllipseModal: {
                Header: 'Pilih Bentuk garis merah', // 'Select Redline Shape',
                SelectType: 'Pilih:', // 'Select:',
                Ellipse: 'Ellipse', // 'Ellipse',
                Cloud: 'Awan', // 'Cloud',
                OK: 'OK' // 'OK'
            },

			CreationModeModal: {
				Header: 'Select Space ID source',
				SelectType: 'Select:',
				DataSource: 'From Data Source via API',
				Manually: 'Enter Manually',
				OK: 'OK'
			},
			
            BackgroundColorModal: {
                Header: 'Pilih Warna Latar Belakang', // 'Select Background Color',
                PickColor: 'Pilih:', // 'Pick Color:',
                SelectColor: 'Memilih:', // 'Select:',
                White: 'Putih', // 'White',
                Black: 'Hitam', // 'Black',
                Azure: 'Azure', // 'Azure',
                Pink: 'Jambu', // 'Pink',
                Snow: 'Salji', // 'Snow',
                Silver: 'Perak', // 'Silver',
                Gray: 'Kelabu', // 'Gray',
                Brown: 'Coklat', // 'Brown',
                OK: 'OK' // 'OK'
            },

            RedlineTextModal: {
                Header: 'CADViewer JS Teks Merah baris', // 'Redline Text',
                FontSize: 'Saiz huruf:', // 'Font Size:',
                OK: 'OK', // 'OK',
                Text: 'Masukkan teks, klik OK dan pilih sisipan dalam lukisan.', // 'Enter text, click OK and select the insertion point in the drawing.',
            },

            LineThicknessModal: {
                Header: 'Laraskan Ketebalan Jalur', // 'Adjust Line Thickness',
                LineThickness: 'Ketebalan Jalur:' // 'Line Thickness:',
            },

            CalibrateModal: {
                Header: 'CADViewer JS Kalibrasi Pengukuran', // 'Calibrate Measurement',
                Unit: 'Unit:', // 'Unit:',
                Distance: 'Jarak:', // 'Distance:',
                OK: 'OK', // 'OK',
                Text: 'Pilih dua mata dalam lukisan dengan tetikus terlebih dahulu, kemudian masukkan unit dan jarak dan tekan OK.', // 'Select two points in the drawing with the mouse first, then enter unit and distance and press OK.',
            },

            MeasurementModal: {
                Header: 'CADViewer JS Pengukuran', // 'Measurement',
                Distance: 'Jarak jauh: ', // 'Distance: ',
                MeasureAgain: 'Langkah Lagi', // 'Measure Again',												
                ClosePolygon: 'Tutup Poligon Kawasan', // 'Close Area Polygon',
                Text: 'Pilih dua mata dalam lukisan untuk jarak.', // 'Select two points in the drawing for distance.',
                TextArea: 'Pilih mata. DoubleClick, Esc atau butang "Tutup Kawasan" untuk kawasan.', // 'Select a sequence of points. Doubleclick, Esc or "Close Area" button for area.',
                Area: 'Kawasan', // 'Area',
            },

            BirdsEyeModal: {
                Header: 'Jendela Burung-Mata', // 'Birds-Eye Window',
            },

            ImageObjectModal: {
                Header: 'Objek Imej Nr. ', // 'Image Object Nr. ',
                LoadImage: 'Muat Imej Baru', // 'Load New Image',
                RemoveImageNote: 'Alih Keluar Imej Nota', // 'Remove Image Note',
                MinimizeImageNote: 'Kurangkan Nota Imej', // 'Minimize Image Note',
            },

            LayerListModal: {
                Header: 'Senarai Lapisan', // 'Layer List',
                Search: 'Carian', // 'Search',
                Sort: 'Lapisan Isih', // 'Sort by Layer',
                AllLayerOn: 'Semua On', // 'All Layer On',
                AllLayerOff: 'Semua Off', // 'All Layer Off',
                SwapLayers: 'Menukar', // 'Swap All Layers',
                On: 'Pada', // 'ON',
                Off: 'Off', // 'OFF',
            },

            PageChangeListModal: {
                Header: 'Tukar Halaman Lukisan', // 'Change Drawing Page',
                Search: 'Carian', // 'Search',
                Sort: 'Nama semak', // 'Sort by Name',
                On: 'Pada', // 'ON',
                Off: 'Off', // 'OFF',
            },


            LayerListSpaceModal: {
                Header: 'Senarai Lapisan - Ruang Objek', // 'Layer List - Space Objects',
                Search: 'Carian', // 'Search',
                Sort: 'Lapisan Isih', // 'Sort by Layer',
                AllLayerOn: 'Semua On', // 'All Layer On',
                AllLayerOff: 'Semua Off', // 'All Layer Off',
                SwapLayers: 'Menukar', // 'Swap All Layers',
                On: 'Pada', // 'ON',
                Off: 'Off', // 'OFF',
                NotAssigned: 'Tidak ditugaskan', // 'Not Assigned',
                TextLayer: 'Lapisan Teks', // 'Text Layer',
                RoomLayer: 'Lapisan Bilik', // 'Room Layer',
				HandleLayer: 'Mengendalikan lapisan', // Handle Layer
						FloodfillLayer: 'SpaceID Layer',
				
            },

            IconPage_p1_8: {
                PreviousPage: 'Halaman Ikon Sebelumnya', // 'Previous Icon Page',
                NextPage: 'Halaman Ikon Seterusnya', // 'Next Icon Page',
 					  	NextMenuPage: 'Halaman Menu Seterusnya',  //   Next Icon Page  3.3.01a
               LayerList: 'Senarai Lapisan', // 'Layer List',
                Print: 'Cetak', // 'Print',
                ZoomIn: 'Mengezum masuk', // 'Zoom In',
                ZoomOut: 'Zum keluar', // 'Zoom Out',
                ZoomExtents: 'Zum meluas', // 'Zoom Extents',
                ZoomWindow: 'Zum Tetingkap', // 'Zoom Window',
                Toggle: 'Togol Hitam / Putih', // 'Toggle Black/White',
                Background: 'Warna latar belakang', // 'Background Color',
                FileLoad: 'Muat Fail', // 'File Load',
                Search: 'Teks Carian', // 'Search Text',
                About: 'Mengenai', // 'About',
                LayerOff: 'Matikan lapisan', // 'Layer Off',
                SwapLayers: 'Lapisan swap', // 'Swap Layers',
                AllLayersOn: 'Semua Lapisan Hidup', // 'All Layers On',
                Measurement: 'Pengukuran', // 'Measurement',
                Calibrate: 'Kalibrasi Pengukuran', // 'Calibrate Measurement',
                BirdsEye: 'Togol tetingkap mata burung', // 'Toggle Birds-Eye Window',
                LineThickness: 'Laraskan Ketebalan Jalur', // 'Adjust Line Thickeness',
            },

            IconPage_p2_8: {
                PreviousPage: 'Halaman Ikon Sebelumnya', // 'Previous Icon Page',
                NextPage: 'Halaman Ikon Seterusnya', // 'Next Icon Page',
                SaveRedline: 'Simpan baris merah', // 'Save Redline',
                LoadRedline: 'Muatkan garis merah', // 'Load Redline',
                DeleteSingle: 'Padamkan baris merah tunggal', // 'Delete Single Redline',
                DeleteLast: 'Padamkan baris merah yang terakhir', // 'Delete Last Redline',
                Color: 'Warna garis merah', // 'Redline Color',
                Thickness: 'Ketebalan garis merah', // 'Redline Thickness',
                StickyNote: 'Buat Nota Sticky', // 'Make StickyNote',
                ClearAll: 'Jelas garis merah yang kelihatan', // 'Clear Visible Redlines',
                Freehand: 'Garis merah bebas', // 'Freehand Redline',
                Cloud: 'Ellipse/Awan baris merah', // 'Redline Ellipse/Cloud',
                FilledPolygon: 'Polygon yang dipenuhi garis merah', // 'Redline Filled Polygon',
                Polyline: 'Polyline garis merah', // 'Redline Polyline',
                Polygon: 'Polygon garis merah', // 'Redline Polygon',
                FilledRectangle: 'Gelang segi empat tepat merah', // 'Filled Redline Rectangle',
                Rectangle: 'Segi empat garis merah', // 'Redline Rectangle',
                Arrow: 'Anak panah baris merah', // 'Redline Arrow',
                Text: 'Teks baris merah', // 'Redline Text',
                PublishAsPDF: 'Terbitkan sebagai PDF', // 'Publish as PDF',
                MergeAsDXF: 'Gabungkan baris merah dengan sumber DWG', // 'Merge Redline with Source DWG',
                Free: 'Percuma', // 'Free',
	MergeWithQR: 'Merge QR code with source DWG',
            },

            IconPage_p3_8: {
                PreviousPage: 'Halaman Ikon Sebelumnya', // 'Previous Icon Page',
                NextPage: 'Halaman Ikon Seterusnya', // 'Next Icon Page',
                PublishAsPDF: 'Terbitkan sebagai PDF', // 'Publish as PDF',
                Free: 'Percuma', // 'Free',
                LoadLink: 'Muatkan Semua Pautan Imej', // 'Load All Image Links',
                InsertLink: 'Sisipkan Pautan Imej', // 'Insert Image Link',
                SaveLink: 'Simpan Semua Pautan Imej', // 'Save All Image Links',
                ClearLink: 'Kosongkan Semua Pautan Imej', // 'Clear All Image Links',
                QuickCount: 'Kiraan cepat', // 'Quick Count',
                CountSum: 'Kira jumlah cepat', // 'Summary Quick Count',
                ClearCount: 'Kosongkan kiraan cepat', // 'Clear Quick Count',
                LayerOff: 'Matikan lapisan', // 'Layer Off',
                SwapLayers: 'Lapisan swap', // 'Swap Layers',
                AllLayersOn: 'Semua Lapisan Hidup', // 'All Layers On',
                ZoomExtents: 'Zum meluas', // 'Zoom Extents',
                ZoomWindow: 'Zum Tetingkap', // 'Zoom Window',
            },


            IconPage_p4_8: {
                PreviousPage: 'Halaman Ikon Sebelumnya', // 'Previous Icon Page',
                NextPage: 'Halaman Ikon Seterusnya', // 'Next Icon Page',
                Free: 'Percuma', // 'Free',
                CompareLoad: 'Muatkan Lukisan Kedua untuk Bandingkan', // 'Load Second Drawing for Compare',
                CompareToggle: 'Togol Lukisan secara individu', // 'Toggle Drawings individually',
                CompareToggleOverlay: 'Togol Gambar Dilansir', // 'Toggle overlaid Drawings',
                CompareExit: 'Keluarkan Bandingkan Lukisan', // 'Exit Compare Drawings',
                CollaborationJoinSession: 'Sertai Sesi Kerjasama', // 'Join Collaboration Session',
                CollaborationTakeControl: 'Ambil Kawalan Sesi Kerjasama', // 'Take Control over Collaboration Session',
                CollaborationClearSession: 'Jelas garis merah dalam Sesi Kerjasama', // 'Clear Redlines in Collaboration Session',
                CollaborationLeaveSession: 'Tinggalkan Sesi Kerjasama', // 'Leave Collaboration Session',
                LayerOff: 'Matikan lapisan', // 'Layer Off',
                SwapLayers: 'Lapisan swap', // 'Swap Layers',
                AllLayersOn: 'Semua Lapisan Hidup', // 'All Layers On',
                ZoomExtents: 'Zum meluas', // 'Zoom Extents',
                ZoomWindow: 'Zum Tetingkap', // 'Zoom Window',
            },

            IconPage_p5_8: {
						InsertSpaceImage: 'Insert Space Image Object',
						DragSpaceImage: 'Drag Space Image Object',
						ResizeSpaceImage: 'Resize Space Image Object',
				LoadSpaceObjects: 'Load Space Objects',
                PreviousPage: 'Halaman Ikon Sebelumnya', // 'Previous Icon Page',
                NextPage: 'Halaman Ikon Seterusnya', // 'Next Icon Page',
                Publish: 'Lihat Struktur Objek Ruang dalam Mod Paparan Pengguna', // 'View Space Object Structure in User Display Mode',
                DownloadSVG: 'Muat turun lukisan SVG yang diproses', // 'Download processed SVG drawing',
                Load: 'Pelan Lantai Beban dan Ruang Angkasa pra-proses', // 'Load Floorplan and pre-process Space Objects',
                Settings: 'Tetapan', // 'Settings',
                SelectObject: 'Pilih Objek', // 'Select Object',
                Rect: 'Obyek Angkasa Segitiga', // 'Rectangle Space Object',
                Polygon: 'Objek Ruang Polygon', // 'Polygon Space Object',
                Circle: 'Objek Ruang Lingkaran', // 'Circle Space Object',
                CopyCircle: 'Salin Ruang Objek Lingkaran', // 'Copy Circle Space Object',
                Delete: 'Padamkan Ruang Objek', // 'Delete Space Object',
                LayerList: 'Senarai Lapisan', // 'Layer List',
                Mode: 'Togol Paparan Objek Ruang dan Edit Mod', // 'Toggle Space Object Display and Edit Mode',
                Free: 'Percuma', // 'Free',
                SelectPolygon: 'Menjana Objek Ruang pada poligon tertutup', // 'Generate Space Object on closed polygon',
                LayerOff: 'Matikan lapisan', // 'Layer Off',
                SwapLayers: 'Lapisan swap', // 'Swap Layers',
                AllLayersOn: 'Semua Lapisan Hidup', // 'All Layers On',
                ZoomExtents: 'Zum meluas', // 'Zoom Extents',
                ZoomWindow: 'Zum Tetingkap', // 'Zoom Window',
            },

			IconPage_p6_1: {
				PinMarker: 'Add Pin Marker',
			},
			
            PageModal: {
                SelectPageFromList: 'Pilih Page Melukis Dari Senarai', // 'Select Drawing Page From List',
                EnterPage: 'Masukkan nombor halaman', // 'Enter page number',
                RotateBack: 'Putar 90 darjah melawan arah jam', // 'Rotate 90 degrees counter clockwise',
                RotateForward: 'Putar 90 darjah mengikut arah jam', // 'Rotate 90 degrees clockwise',
                First: 'Muatkan Halaman Pertama dalam Lukisan', // 'Load First Page in Drawing',
                Previous: 'Muatkan Halaman Sebelumnya dalam Lukisan', // 'Load Previous Page in Drawing',
                Next: 'Muatkan Halaman Seterusnya dalam Lukisan', // 'Load Next Page in Drawing',
                Last: 'Muatkan Halaman Terakhir dalam Lukisan', // 'Load Last Page in Drawing',
                ZoomExtents: 'Zum meluas', // 'Zoom Extents',
                ZoomWindow: 'Zum Tetingkap', // 'Zoom Window',
            },

            StickyNote: {
                MoveNote: 'Alih Nota', // 'Move Note',
                EditNote: 'Edit Nota', // 'Edit Note',
                DeleteNote: 'Padam Nota', // 'Delete Note',
                MinimizeNote: 'Kurangkan Nota', // 'Minimize Note',
                Inactive: 'Tidak aktif', // 'Inactive',
                SaveNote: 'Simpan Nota', // 'Save Note',
                Cancel: 'Batalkan Edit Nota', // 'Cancel Edit Note',
            },

            ImageObject: {
                InsertReplace: 'Ganti atau Masukkan Imej', // 'Replace or Insert Image',
                Delete: 'Padamkan Imej dan Ikon Terkait', // 'Delete Image and Associated Icon',
                Minimize: 'Minimalkan Objek Imej', // 'Minimize Image Object',
            },

            DeleteModal: {
                Header: 'Padam', // 'Delete',
                Text1: 'Tindakan ini akan dialih keluar', //  'This action will remove',
                Text2: 'dan matikan akses kepada pelan lantai untuk semua pengguna.', // 'and disable access to the floor plan for all users.',

            },

            UnlinkModal: {
                Header: 'Nyahpaut', // 'Unlink',
                Text1: 'Tindakan ini akan mengalih keluar semua metadata dari', // 'This action will remove all metadata from',
                Text2: 'Objek lokasi akan kekal tidak berubah.', // 'Location objects will remain unchanged.',
            },

            ClearModal: {
                Header: 'Jelas', // 'Clear',
                Text1: 'Tindakan ini akan mengalih keluar semua objek metadata dan lokasi dari', // 'This action will remove all metadata and location objects from',
            },

            FileLoadSpaceModal: {
                Header: 'CADViewer JS: Loader Fail Pengurusan Ruang', // 'CADViewer JS: Space Management File Loader',
				DrawingFilename: 'GAMBAR / FILENAME', // 'DRAWING / FILENAME',
                EditFloorplanInfo: 'Edit Maklumat Pelan Lantai', // 'Edit Floor Plan Info',
                BuildRoomTextHyperlinks: 'Bina Bangunan ROOM / TEXT Hyperlinks on Load', // 'Build ROOM/TEXT Layer Hyperlinks on Load',
            },

            LoadingModal: {
                Loading: 'Memuatkan', // 'Loading',
            },

            DataMaps: {
                Map: ['Data Maps - User Map 1', 'Data Maps - User Map 2', 'Data Maps - User Map 3', 'Data Maps - User Map 4'] // [ 'Data Maps - User Map 1', 'Data Maps - User Map 2', 'Data Maps - User Map 3', 'Data Maps - User Map 4' ]
                //					  	Map2: 'Data Maps - User Map 2',
                //					  	Map3: 'Data Maps - User Map 3',
                //					  	Map4: 'Data Maps - User Map 4',
            },

            HeaderObjectLayers: {
                ObjectLayer: ['Spaces - User Layer 1', 'Assets - User Layer 2'] // ['Spaces - User Layer 1', 'Assets - User Layer 2' ]
                //					  	ObjectLayer2: 'Assets - User Layer 2',
            },

            WaitModal: {
                Printing: 'Percetakan', // 'Printing',
                Thumbnails: 'Penjimatan', // 'Saving',
                BatchPDF: 'Cetak ke PDF', // 'Print to PDF',
                MergeDWG: 'Penggabungan', // 'Merging',

            }
        }
 


, {
            languageCode: "ZN-CH",
            thisLanguage: "Chinese-Simplified",

            PrintModal: {                       // no need to transcode !!!!!!
                Header: 'CADViewer JS - 打印设置', // 'CADViewer JS Print Settings',
                Paper: '纸张尺寸：',  //  // 'Paper Size:',
                Orientation: '取向：',// // 'Orientation:',
                Resolution: '解析度：',//// 'Resolution:',
                ResolutionText: '(最小75dpi，标准300dpi)', // '(min 75dpi, standard 300dpi)',
                Print: '打印',// 'Print',
                Grayscale: '灰度',// 'Grayscale',
                PrintPDF: '打印为PDF', // 'Print as PDF'
            },

            SearchTextModal: {
                Header: 'CADViewer JS - 搜索文字', // 'Search Text',
                SearchText: '搜索文字:', // 'Search Text:',
                Zoom: '缩放级别:', // 'Zoom Level:',
                Search: '搜索' // 'Search'
            },

					SearchCustomModal: {
					  	Header: 'Search',
					  	SearchText: 'Search Text:',
					  	Search: 'Search'
					},

            InfoMessageModal: {
                Header: '信息', // 'Information',
                Version: '这个版本号是： ', // 'This version number is: ',
                ComingSoon: '快来了！', // 'Coming Soon!',
                NoUnits: '图中未定义任何单位，请先使用命令校准测量。', // 'No units defined in drawing, please use command Calibrate Measurement first.',
                UnitLess: '原始图纸是无单元的，请先使用命令校准测量。', // 'The originating drawing is unitless, please use command Calibrate Measurement first.',
                QuickCountSingle: '快速计数是： ', // 'Number of Quick Counts is: ',
                QuickCountMultiple: '快速计数的数量是： ', // 'Number of Quick Counts are: ',
                RedlinesLocked: '用户已锁定红线： ', // 'Redlines are locked for User: ',
                LicensePath: '在路径中找不到许可证密钥： ', // 'Could not find license key at path: ',
                LicenseNotFound: '未找到许可证密钥', // 'License key not found',
                SelectTwoPoints: '请先用鼠标在图纸中选择两个点，然后输入单位和距离，最后按OK。', // 'Please select two points in the drawing with the mouse first, then enter unit and distance, finally press OK.',
                ReferenceDistance: '请输入参考距离。', // 'Please enter a reference distance.',
                RedlinesSaved: '红线已保存', // 'Redlines Saved',
                SinglePage: '单页绘图 - 不更改页面', // : 'Single page drawing - no change of page',
                FirstPage: '当前页面是多页图形中的第一页 - 不更改页面', // 'The current page is the first page in a multipage drawing - no change of page',
                LastPage: '当前页面是多页图形中的最后一页 - 不更改页面', // 'The current page is the last page in a multipage drawing - no change of page',
                OutOfRange: '输入的页码超出页面范围 - 不更改页面', // 'The page number entered is outside of the range of pages - no change of page',
                FileLoadThroughApp: '注意：仅通过封装应用程序启用文件加载', // 'NOTE: File Load enabled only through the encapsulating application',
                ErrorConnectingToHost: '连接到主机时出错。 转到“设置”窗格并检查“网络设置”！', // 'Error when connecting to Host. Go to the Settings Pane and check your Network Settings!',
                ConnectToHostFirst: '请转到“设置”窗格，检查“网络设置”，然后单击“保存更改”以连接到网络主机，以检索映射位置时使用的数据结构。', // 'Please go to the Settings Pane, check your Network Settings and click Save Changes to connect to your Network Host to retrieve the data structure used when mapping locations.',
                NoObjectSelected: '请选择一个空间物体。', // 'Please select a Space Object.',
                PaperSizePDFPrintOnly: '对于较大的纸张尺寸，请选择“打印为PDF”。 大型文件是A1和A0，以及US Arch D及以上。', // 'Please select "Print as PDF" for large paper sizes size. Large papersizes are A1 and A0, as well as US Arch D and above.',
                ServerSideFormatForPDFPrint: 'PDF打印需要格式为DWG，DWF，DXF或DGN或PCF的原始文件。 请上传这些格式的文件或选择较小的纸张尺寸进行直接打印。 直接打印纸张是A4-A2或美国信件通过ANSI C.', // 'PDF print requires an original file in formats DWG, DWF, DXF or DGN or PCF. Please upload a file in these formats or select a smaller papersize for direct print. Direct print papersizes are A4-A2 or US Letter through ANSI C',
							PrintDisabled: 'NOTE: Print Disabled',
						NoQRCode: 'No QR Code received from Server!',

            },

            FileLoadModal: {
                Header: 'CADViewer JS - 文件管理器', // 'CADViewer JS - File Manager',
                DrawingFilename: '绘图/文件', // 'DRAWING / FILENAME',
                EditFloorplanInfo: '编辑平面图信息', // 'Edit Floor Plan Info',
            },

            SaveRedlineModal: {
                Header: 'CADViewer JS - 保存红线', // 'CADViewer JS - Save Redline',
                RedlineFilename: '红线/文件名', // 'REDLINE / FILENAME',
                EditRedlineInfo: '编辑红线信息', // 'Edit Redline Info',
                Upload: '上传：', // 'UPLOAD:',
            },

            OpenRedlineModal: {
                Header: 'CADViewer JS - 打开红线', // 'CADViewer JS - Open Redline',
                RedlineFilename: '红线/文件名', // 'REDLINE / FILENAME',
                EditRedlineInfo: '编辑红线信息', // 'Edit Redline Info',
            },

			OpenSpaceObjectModal: {
				Header: 'CADViewer JS - Open Space Objects',
				SpaceObjectFilename: 'SPACE OBJECT / FILENAME',
				EditSpaceObjectInfo: 'Edit Space Object Info',
			},

            RedlineThicknessModal: {
                Header: '选择红线粗细', // 'Select Redline Thickness',
                Thickness: '厚度：', // 'Thickness:',
                OK: '好', // 'OK'
            },

            DocumentPageChangeModal: {
                Header: '选择文档页面', // 'Select Document Page',
                Page: '页面:', // 'Page:',
                OK: '好', // 'OK'
            },

            CollaborationStartModal: {
                Header: '进入协作会话', // 'Enter Collaboration Session',
                Session: '会话名称:', // 'Session Name:',
                OK: '好', // 'OK'
            },

            PublishPDFModal: {
                Header: '将红线屏幕内容发布为PDF', // 'Publish Redlined Screen Content to PDF',
                SelectMode: '选择模式：', // 'Select Mode:',
                Mode1: '打印/下载', // 'Print/Download',
                Mode2: '发送电子邮件', // 'Send as e-mail',
                Mode3: '上传到服务器', // 'Upload to Server',
                EntireDoc: '发布整个文档：', // 'Publish Entire Document:',
                OK: '好', // 'OK'
                Recipient: '电子邮件：', // 'E-mail:',
                Title: '标题：', // 'Title:',
                Message: '信息：', // 'Message:',
            },

            MergeDXFModal: {
                Header: '将红线与源DWG合并', // 'Merge Redline with Source DWG',
                SelectMode: '选择模式：', // 'Select Mode:',
                Mode1: '打印/下载', // 'Print/Download',
                Mode2: '发送电子邮件', // 'Send as e-mail',
                Mode3: '上传到服务器', // 'Upload to Server',
                EntireDoc: '发布整个文档：', // 'Publish Entire Document:',
                OK: '好', // 'OK'
                Recipient: '电子邮件：', // 'E-mail:',
                Title: '标题：', // 'Title:',
                Message: '信息：', // 'Message:',
            },


            RedlineColorModal: {
                Header: 'CADViewer JS - 选择红线颜色', // 'Select Redline Color',
                PickColor: '挑选颜色：', // 'Pick Color:',
                SelectColor: '选择：', // 'Select:',
                Blue: '蓝色', // 'Blue',
                Red: '红色', // 'Red',
                Yellow: '黄色', // 'Yellow',
                Orange: '橙子', // 'Orange',
                Green: '绿色', // 'Green',
                Purple: '紫色', // 'Purple',
                Brown: '棕色', // 'Brown',
                Gray: '灰色', // 'Gray',
                OK: '好', // 'OK'
            },

            RedlineEllipseModal: {
                Header: '选择红线形状', // 'Select Redline Shape',
                SelectType: '选择：', // 'Select:',
                Ellipse: '椭圆', // 'Ellipse',
                Cloud: '云', // 'Cloud',
                OK: '好', // 'OK'
            },

			CreationModeModal: {
				Header: 'Select Space ID source',
				SelectType: 'Select:',
				DataSource: 'From Data Source via API',
				Manually: 'Enter Manually',
				OK: 'OK'
			},
			
            BackgroundColorModal: {
                Header: 'CADViewer JS - 选择背景颜色', // 'Select Background Color',
                PickColor: '挑选颜色：', // 'Pick Color:',
                SelectColor: '选择：', // 'Select:',
                White: '白色', // 'White',
                Black: '黑色', // 'Black',
                Azure: '天蓝', // 'Azure',
                Pink: '粉', // 'Pink',
                Snow: '雪', // 'Snow',
                Silver: '银', // 'Silver',
                Brown: '棕色', // 'Brown',
                Gray: '灰色', // 'Gray',
                OK: '好', // 'OK'
            },

            RedlineTextModal: {
                Header: 'CADViewer JS - 红线文字', // 'Redline Text',
                FontSize: '字体大小：', // 'Font Size:',
                OK: '好', // 'OK'
                Text: '输入文本，单击“确定”并在图形中选择插入点。', // 'Enter text, click OK and select the insertion point in the drawing.',
            },

            LineThicknessModal: {
                Header: '调整线条粗细', // 'Adjust Line Thickness',
                LineThickness: '线的粗细：' // 'Line Thickness:',
            },

            CalibrateModal: {
                Header: 'CADViewer JS - 校准测量', // 'Calibrate Measurement',
                Unit: '单元：', // 'Unit:',
                Distance: '距离：', // 'Distance:',
                OK: '好', // 'OK'
                Text: '首先用鼠标在图形中选择两个点，然后输入单位和距离，然后按确定。', // 'Select two points in the drawing with the mouse first, then enter unit and distance and press OK.',
            },

            MeasurementModal: {
                Header: 'CADViewer JS - 测量', // 'Measurement',
                Distance: '距离： ', // 'Distance: ',
                MeasureAgain: '再次测量', // 'Measure Again',												
                ClosePolygon: '关闭区域多边形', // 'Close Area Polygon',
                Text: '在图纸中选择两个点以获得距离。', // 'Select two points in the drawing for distance.',
                TextArea: '选择一系列点。 双击，Esc或关闭区域按钮进行面积计算。', // 'Select a sequence of points. Doubleclick, Esc or "Close Area" button for area.',
                Area: '区域', // 'Area',
            },

            BirdsEyeModal: {
                Header: 'CADViewer JS - 鸟眼窗', // 'Birds-Eye Window',
            },

            ImageObjectModal: {
                Header: '图像对象编号 ', // 'Image Object Nr. ',
                LoadImage: '加载新图像', // 'Load New Image',
                RemoveImageNote: '删除图像注释', // 'Remove Image Note',
                MinimizeImageNote: '最小化图像注释', // 'Minimize Image Note',
            },

            LayerListModal: {
                Header: 'CADViewer JS - 图层列表', // 'Layer List',
                Search: '搜索', // 'Search',
                Sort: '按图层排序', // 'Sort by Layer',
                AllLayerOn: '层上全部', // 'All Layer On',
                AllLayerOff: '全部分层', // 'All Layer Off',
                SwapLayers: '交换图层', // 'Swap All Layers',
                On: '打开', // 'ON',
                Off: '关掉', // 'OFF',
            },

            PageChangeListModal: {
                Header: 'CADViewer JS - 更改图纸页面', // 'Change Drawing Page',
                Search: '搜索', // 'Search',
                Sort: '按名称分类', // 'Sort by Name',
                On: '打开', // 'ON',
                Off: '关掉', // 'OFF',
            },


            LayerListSpaceModal: {
                Header: 'CADViewer JS - 图层列表 - 空间对象', // 'Layer List - Space Objects',
                Search: '搜索', // 'Search',
                Sort: '按图层排序', // 'Sort by Layer',
                AllLayerOn: '层上全部', // 'All Layer On',
                AllLayerOff: '全部分层', // 'All Layer Off',
                SwapLayers: '交换图层', // 'Swap All Layers',
                On: '打开', // 'ON',
                Off: '关掉', // 'OFF',
                NotAssigned: '未分配', // 'Not Assigned',
                TextLayer: '文字图层', // 'Text Layer',
                RoomLayer: '房间层', // 'Room Layer',
				HandleLayer: '处理图层', // Handle Layer
						FloodfillLayer: 'SpaceID Layer',
				
            },

            IconPage_p1_8: {
                PreviousPage: '上一个图标页面', // 'Previous Icon Page',
                NextPage: '下一个图标页面', // 'Next Icon Page',
					  	NextMenuPage: '下一页菜单',  //   Next Icon Page  3.3.01a
                LayerList: '图层列表', // 'Layer List',
                Print: '打印', // 'Print',
                ZoomIn: '放大', // 'Zoom In',
                ZoomOut: '缩小', // 'Zoom Out',
                ZoomExtents: '缩放范围', // 'Zoom Extents',
                ZoomWindow: '缩放窗口', // 'Zoom Window',
                Toggle: '切换黑/白', // 'Toggle Black/White',
                Background: '背景颜色', // 'Background Color',
                FileLoad: '文件加载', // 'File Load',
                Search: '搜索文字', // 'Search Text',
                About: '关于', // 'About',
                LayerOff: '图层关闭', // 'Layer Off',
                SwapLayers: '交换图层', // 'Swap Layers',
                AllLayersOn: '所有图层', // 'All Layers On',
                Measurement: '测量', // 'Measurement',
                Calibrate: '校准测量', // 'Calibrate Measurement',
                BirdsEye: '切换鸟眼窗口', // 'Toggle Birds-Eye Window',
                LineThickness: '调整线条粗细', // 'Adjust Line Thickeness',
            },

            IconPage_p2_8: {
                PreviousPage: '上一个图标页面', // 'Previous Icon Page',
                NextPage: '下一个图标页面', // 'Next Icon Page',
                SaveRedline: '保存红线', // 'Save Redline',
                LoadRedline: '加载红线', // 'Load Redline',
                DeleteSingle: '删除单红线', // 'Delete Single Redline',
                DeleteLast: '删除上一个红线', // 'Delete Last Redline',
                Color: '红线颜色', // 'Redline Color',
                Thickness: '红线厚度', // 'Redline Thickness',
                StickyNote: '制作粘滞便笺', // 'Make StickyNote',
                ClearAll: '清除可见的红线', // 'Clear Visible Redlines',
                Freehand: '手绘红线', // 'Freehand Redline',
                Cloud: '红线椭圆/云', // 'Redline Ellipse/Cloud',
                FilledPolygon: '红线填充多边形', // 'Redline Filled Polygon',
                Polyline: '红线折线', // 'Redline Polyline',
                Polygon: '红线多边形', // 'Redline Polygon',
                FilledRectangle: '填充红线矩形', // 'Filled Redline Rectangle',
                Rectangle: '红线矩形', // 'Redline Rectangle',
                Arrow: '红线箭头', // 'Redline Arrow',
                Text: '红线文字', // 'Redline Text',
                PublishAsPDF: '以PDF格式发布', // 'Publish as PDF',
                MergeAsDXF: '将红线与源DWG合并', // 'Merge Redline with Source DWG',
                Free: '自由', // 'Free',
 	MergeWithQR: 'Merge QR code with source DWG',
           },

            IconPage_p3_8: {
                PreviousPage: '上一个图标页面', // 'Previous Icon Page',
                NextPage: '下一个图标页面', // 'Next Icon Page',
                PublishAsPDF: '以PDF格式发布', // 'Publish as PDF',
                Free: '自由', // 'Free',
                LoadLink: '加载所有图像链接', // 'Load All Image Links',
                InsertLink: '插入图片链接', // 'Insert Image Link',
                SaveLink: '保存所有图像链接', // 'Save All Image Links',
                ClearLink: '清除所有图像链接', // 'Clear All Image Links',
                QuickCount: '快速计数', // 'Quick Count',
                CountSum: '摘要快速计数', // 'Summary Quick Count',
                ClearCount: '清除快速计数', // 'Clear Quick Count',
                LayerOff: '图层关闭', // 'Layer Off',
                SwapLayers: '交换图层', // 'Swap Layers',
                AllLayersOn: '所有图层', // 'All Layers On',
                ZoomExtents: '缩放范围', // 'Zoom Extents',
                ZoomWindow: '缩放窗口', // 'Zoom Window',
            },


            IconPage_p4_8: {
                PreviousPage: '上一个图标页面', // 'Previous Icon Page',
                NextPage: '下一个图标页面', // 'Next Icon Page',
                Free: 'Percuma', // 'Free',
                CompareLoad: '加载第二个绘图进行比较', // 'Load Second Drawing for Compare',
                CompareToggle: '单独切换图纸', // 'Toggle Drawings individually',
                CompareToggleOverlay: '切换重叠的图纸', // 'Toggle overlaid Drawings',
                CompareExit: '退出比较图纸', // 'Exit Compare Drawings',
                CollaborationJoinSession: '加入协作会议', // 'Join Collaboration Session',
                CollaborationTakeControl: '控制协作会话', // 'Take Control over Collaboration Session',
                CollaborationClearSession: '在协作会话中清除红线', // 'Clear Redlines in Collaboration Session',
                CollaborationLeaveSession: '离开协作会话', // 'Leave Collaboration Session',
                LayerOff: '图层关闭', // 'Layer Off',
                SwapLayers: '交换图层', // 'Swap Layers',
                AllLayersOn: '所有图层', // 'All Layers On',
                ZoomExtents: '缩放范围', // 'Zoom Extents',
                ZoomWindow: '缩放窗口', // 'Zoom Window',
            },

            IconPage_p5_8: {
						InsertSpaceImage: 'Insert Space Image Object',
						DragSpaceImage: 'Drag Space Image Object',
						ResizeSpaceImage: 'Resize Space Image Object',
				LoadSpaceObjects: 'Load Space Objects',
                PreviousPage: '上一个图标页面', // 'Previous Icon Page',
                NextPage: '下一个图标页面', // 'Next Icon Page',
                Publish: '在用户显示模式下查看空间对象结构', // 'View Space Object Structure in User Display Mode',
                DownloadSVG: '下载已处理的SVG图纸', // 'Download processed SVG drawing',
                Load: '加载平面布置图并预处理空间对象', // 'Load Floorplan and pre-process Space Objects',
                Settings: '设置', // 'Settings',
                SelectObject: '选择对象', // 'Select Object',
                Rect: '矩形空间对象', // 'Rectangle Space Object',
                Polygon: '多边形空间物体', // 'Polygon Space Object',
                Circle: '圆空间对象', // 'Circle Space Object',
                CopyCircle: '复制圆空间对象', // 'Copy Circle Space Object',
                Delete: '删除空间对象', // 'Delete Space Object',
                LayerList: '图层列表', // 'Layer List',
                Mode: '切换空间对象显示和编辑模式', // 'Toggle Space Object Display and Edit Mode',
                Free: '自由', // 'Free',
                SelectPolygon: '在闭合多边形上生成空间对象', // 'Generate Space Object on closed polygon',
                LayerOff: '图层关闭', // 'Layer Off',
                SwapLayers: '交换图层', // 'Swap Layers',
                AllLayersOn: '所有图层', // 'All Layers On',
                ZoomExtents: '缩放范围', // 'Zoom Extents',
                ZoomWindow: '缩放窗口', // 'Zoom Window',
            },

			IconPage_p6_1: {
				PinMarker: 'Add Pin Marker',
			},
			
            PageModal: {
                SelectPageFromList: '从列表中选择绘图页面', // 'Select Drawing Page From List',
                EnterPage: '输入页码', // 'Enter page number',
                RotateBack: '逆时针旋转90度', // 'Rotate 90 degrees counter clockwise',
                RotateForward: '顺时针旋转90度', // 'Rotate 90 degrees clockwise',
                First: '在绘图中加载第一页', // 'Load First Page in Drawing',
                Previous: '在绘图中加载上一页', // 'Load Previous Page in Drawing',
                Next: '在绘图中加载下一页', // 'Load Next Page in Drawing',
                Last: '在绘图中加载最后一页', // 'Load Last Page in Drawing',
                ZoomExtents: '缩放范围', // 'Zoom Extents',
                ZoomWindow: '缩放窗口', // 'Zoom Window',
            },

            StickyNote: {
                MoveNote: '移动注意', // 'Move Note',
                EditNote: '编辑注释', // 'Edit Note',
                DeleteNote: '删除注意', // 'Delete Note',
                MinimizeNote: '最小化注意', // 'Minimize Note',
                Inactive: '待用', // 'Inactive',
                SaveNote: '保存注意', // 'Save Note',
                Cancel: '取消编辑注释', // 'Cancel Edit Note',
            },

            ImageObject: {
                InsertReplace: '替换或插入图像', // 'Replace or Insert Image',
                Delete: '删除图像和相关图标', // 'Delete Image and Associated Icon',
                Minimize: '最小化图像对象', // 'Minimize Image Object',
            },

            DeleteModal: {
                Header: '删除', // 'Delete',
                Text1: '此操作将删除', //  'This action will remove',
                Text2: '并禁用所有用户对平面图的访问权限。', // 'and disable access to the floor plan for all users.',

            },

            UnlinkModal: {
                Header: '取消链接', // 'Unlink',
                Text1: '此操作将从中删除所有元数据', // 'This action will remove all metadata from',
                Text2: '位置对象将保持不变。', // 'Location objects will remain unchanged.',
            },

            ClearModal: {
                Header: '明确', // 'Clear',
                Text1: '此操作将从中删除所有元数据和位置对象', // 'This action will remove all metadata and location objects from',
            },

            FileLoadSpaceModal: {
                Header: 'CADViewer JS - 空间管理文件加载器', // 'CADViewer JS: Space Management File Loader',
				DrawingFilename: '绘图/文件', // 'DRAWING / FILENAME',
                EditFloorplanInfo: '编辑平面图信息', // 'Edit Floor Plan Info',
                BuildRoomTextHyperlinks: '在加载时构建房间/文本层超链接', // 'Build ROOM/TEXT Layer Hyperlinks on Load',
            },

            LoadingModal: {
                Loading: '载入中', // 'Loading',
            },

            DataMaps: {
                Map: ['Data Maps - User Map 1', 'Data Maps - User Map 2', 'Data Maps - User Map 3', 'Data Maps - User Map 4'] // [ 'Data Maps - User Map 1', 'Data Maps - User Map 2', 'Data Maps - User Map 3', 'Data Maps - User Map 4' ]
                //					  	Map2: 'Data Maps - User Map 2',
                //					  	Map3: 'Data Maps - User Map 3',
                //					  	Map4: 'Data Maps - User Map 4',
            },

            HeaderObjectLayers: {
                ObjectLayer: ['Spaces - User Layer 1', 'Assets - User Layer 2'] // ['Spaces - User Layer 1', 'Assets - User Layer 2' ]
                //					  	ObjectLayer2: 'Assets - User Layer 2',
            },

            WaitModal: {
                Printing: '印花', // 'Printing',
                Thumbnails: '保存', // 'Saving',
                BatchPDF: '打印到PDF', // 'Print to PDF',
                MergeDWG: '合并', // 'Merging',

            }
        }
 





]
	
	
	
	
	
	
	
	
	
	
	
	
	
}



//** system variable - internal variable for canvas controls during resize of browser */
var    winHeight = 0,
//** system variable - internal variable for canvas controls during resize of browser   */
    winWidth = 0,
//** system variable - internal variable for canvas controls during resize of browser   */
    fpWidth = 0,
/** control variable for determinating smartphone or tablet   */

    isSmartPhoneOrTablet = /Android|webOS|iPhone|iPad|iPod|BlackBerry|Touch/i.test(navigator.userAgent),
    isWindowsNT = /Windows NT/i.test(navigator.userAgent),
	lastElem = null,
	lastStroke = null,
	lastStrokeWidth = null,
	mousex = 100,
	mousey = 100,
	lastLink = "",
	flip = 0,
	spaceId = -1,
	deltaX = 0,
	deltaY = 0,
	deltaXinit = 0,
	deltaYinit = 0,
	deltaBase = 1.0,
	deltaDynamic = 1.0,
	deltaDynamicPre = 1.0,
	zoomScale = 1.0,

	panWithThumb = false,

	dragMoveControl = true,
	
	cvjs_Url_click_control = 1,    // 1: for single click, 2: double click
	cvjs_Url_encapsulate_callback = false,  // encapsulate URl in callback method

	VqSetup = false,


	fileLoad_contentFormat = "JS",


/**  default color for standard Space Object selection mode  - not selected   */
	defaultColor = {
            fill: '#FFF',
            "fill-opacity": "0.1",
            stroke: '#CCC',
            'stroke-width': 1,
            'stroke-linejoin': 'round',
        },
/**  default color for standard Space Object selection mode  - highlighted   */
	highlight = {
            fill: '#a4d7f4',
            "fill-opacity": "0.5",
            stroke: '#a4d7f4',
            'stroke-width': 3
        },
/**  default color for standard Space Object selection mode  - selrcted   */
	selectColor = {
            fill: '#5BBEF6',
            "fill-opacity": "0.5",
            stroke: '#5BBEF6',
            'stroke-width': 3
        },

/**  default color for URL Hyperlinks  - not selected   */
	    defaultColor_Hyperlinks = {
            fill: '#FFF',
            "fill-opacity": "0.1",
            stroke: '#FFF',
            'stroke-width': 3,
            'stroke-opacity': 0.01,
            'stroke-linejoin': 'round'
        },
/**  default color for URL Hyperlinks selection mode  - highlighted   */
	highlight_Hyperlinks = {
//            fill: '#FFF',
//            "fill-opacity": "0.1",
//            stroke: '#FFF',
//            'stroke-width': 3,
//            'stroke-opacity': 0.01,
//            'stroke-linejoin': 'round'

            fill: '#a4d7f4',
            "fill-opacity": "0.6",
            stroke: '#FFd7f4',
            'stroke-width': 3,
            'stroke-opacity': 0.6,
            'stroke-linejoin': 'round'
        },
/**  default color for URL Hyperlinks selection mode  - selected   */
	selectColor_Hyperlinks = {
//            fill: '#FFF',
//            "fill-opacity": "0.1",
//            stroke: '#FFF',
//            'stroke-width': 3,
//            'stroke-opacity': 0.01,
            fill: '#FFBEF6',
            "fill-opacity": "0.6",
            stroke: '#FFd7f4',
            'stroke-width': 3,
            'stroke-opacity': 0.6,
            'stroke-linejoin': 'round'
        },


/**  default color for URL Hyperlinks  - not selected _ blank   */
	defaultColor_Hyperlinks_blank = {
            fill: '#FFF',
            "fill-opacity": "0.1",
            stroke: '#FFF',
            'stroke-width': 3,
            'stroke-opacity': 0.01,
            'stroke-linejoin': 'round'
//            fill: '#FFF',
//            "fill-opacity": "0.1",
//            stroke: '#CCC',
//            'stroke-width': 1,
//            'stroke-linejoin': 'round',
        },


// default colors for stickynotes mode

    	defaultColor_StickyNotes = {
            fill: '#E7E7E7' //,
//            "fill-opacity": "0.5" //,
//            stroke: '#020202',
//            'stroke-width': 1,
//            'stroke-linejoin': 'round',
//            "stroke-opacity": "0.5"
        },
	highlight_StickyNotes = {
            fill: '#a4d7f4' //,
//            "fill-opacity": "0.5" //,
//            stroke: '#020202',
//            'stroke-width': 3,
//            "stroke-opacity": "0.5"
        },
	selectColor_StickyNotes = {
            fill: '#5BBEF6' //,
//            "fill-opacity": "0.7" //,
//            stroke: '#020202',
//            'stroke-width': 3,
//            "stroke-opacity": "0.7"
        },

/**  default color for Space Object supressPopUpModal  mode  - unlinked   */
	defaultColor_unlinked = {
			fill: '#ffff99',
			"fill-opacity": "0.3",
			stroke: '#ffff99',  //  #CCC
			'stroke-width': 1,
			'stroke-opacity': "0.1",
			'stroke-linejoin': 'round'
		},

/**  highlight color for Space Object supressPopUpModal  mode  - unlinked   */
	highlight_unlinked = {
			fill: '#ffff99',
			"fill-opacity": "0.5",
			stroke: '#ffff99',
			'stroke-width': 3,
			'stroke-opacity': "1"
		},

/**  selected color for Space Object supressPopUpModal  mode  - unlinked   */
	selectColor_unlinked = {
			fill: '#ff9999',
			"fill-opacity": "0.5",
			stroke: '#ff9999',
			'stroke-width': 3,
			'stroke-opacity': "1"
		},


/**  default color for Space Object supressPopUpModal  mode  - linked   */
	defaultColor_linked = {
			fill: '#a4d7f4',
			"fill-opacity": "0.3",
			stroke: '#a4d7f4',  //  #CCC
			'stroke-width': 1,
			'stroke-opacity': "0.1",
			'stroke-linejoin': 'round'
		},

/**  highlight color for Space Object supressPopUpModal  mode  - linked   */
	highlight_linked = {
			fill: '#a4d7f4',
			"fill-opacity": "0.5",
			stroke: '#a4d7f4',
			'stroke-width': 3,
			'stroke-opacity': "1"
		},

/**  selected color for Space Object supressPopUpModal  mode  - linked   */
	selectColor_linked = {   // fill: '#5BBEF6',
			fill: '#41A458',
			"fill-opacity": "0.5",
			stroke: '#41A458',
			'stroke-width': 3,
			'stroke-opacity': "1"
		};


	if (isWindowsNT) isSmartPhoneOrTablet = false;



var cvjs_FileNameNoExtension = "";


// FM general conversion variables
var cvjs_convertSpaceObject = false;
var cvjs_convertRoomLayer = "RM$";  // triSpaceLayer
var cvjs_convertTextLayer = "RM$TXT"; // 05_VMLDPTSPCNO







	// Layer list

	var cvjs_layerOptions = {
	  valueNames: [ 'selected',
	  				'layer',
	  				{ data: ['id'] },
	  				{ attr: 'href', name: 'link' },
	  				],
	  				item: '<li><h3_selected><a class="link selected">"+lTable.languages[cvjs_currentLanguage].LayerListModal.Off+"</a><h3_selected><h3_selected><h3_list class="layer">Dummy Layer</h3_list></li>'
	};



	var cvjs_layerOptionsSpace = {
	  valueNames: [ 'selected',
	  				'text_room_layer',
	  				'layer',
	  				{ data: ['id'] },
	  				{ attr: 'href', name: 'link' },
	  				{ attr: 'href', name: 'link_text_room_l' },
	  				],
	  				item: '<li><h3_selected><a class="link selected">"+lTable.languages[cvjs_currentLanguage].LayerListSpaceModal.+"</a><canvas width="10" height="10"></canvas><a class="link_text_room_l text_room_layer">None</a><h3_selected><h3_selected><h3_list class="layer">Dummy Layer</h3_list></li>'
	};


	var cvjs_printGrayscale = false;
	var cvjs_printPdf = false;

	
	var cvjs_measureArea = false;
	
	
	var cvjs_layerValuesSpace;
	var cvjs_layerList;
	var cvjs_pagechangeList;
	var cvjs_layerListSpace;

	var cvjs_FourFilesInOne = true;

	var cvjs_version_3_2_modal = true;


// 4.1.03a 
/**
 * Set NodeJS Server flag  
 * @param {boolean} mode - set flag for nodejs handling. NodeJS server behaves differently for print, default false
 */
	function cvjs_setNodeJSserver(mode){

		cvjs_NodeJSserver = mode;
		
	}
	
	

 

	
/**
 * Load multipage PDF converter to SVG through php 
 * @param {flag} moade - loading converted SVG from PDF via php, default is false and direct load of svg 
 */
	function cvjs_multipagePDFtoSVG_PhpLoad(mode){

		cvjs_multipagePDFtoSVG_PhpLoadFlag= mode;
		
	}


	

/**
 * Sets the size of the print window as a relation of the screen between 0 and 1
 * @param {float} scale - the size of the print window as a relation of the screen between 0 and 1, default is 0.4
 */
	function cvjs_printToPdf_windowRelativeSize(scale){

		cvjs_print_to_pdf_windowRelativeSize = scale;
		
	}

	
	
	
	
/**
 * Sets file loading so that it done from a SharePoint Server
 * @param {boolean} mode - true to load files from sharepoint server, file names are then loaded through internal sharepoint REST calls, false is default standard server load of draiwngs 
 */
	function cvjs_fileLoadFromSharePointServer(mode){

		cvjs_fileLoadingFromSharePointServer = mode;
	}
	
	


/**
 * Sets the status of the drawing cvjs_masterbackground[cvjs_active_floorplan_div_nr]. If set to true, refreshed on reload, if false multiple drawings can be merged into canvas
 * @param {boolean} mode - true for standard load, false for overlay of drawings on concequitive loads.
 */
	function cvjs_setInitMasterBackgroundMode(mode){

		cvjs_initMasterBackground = mode;
	}




/**
 * Sets the loading of filetypes to be the old CADViewer JS type, in which each file consists of four separate files
 * @param {boolean} oldtype - true for oldtype, false for standard new type. Default is false.
 */
	function cvjs_setJSFileOldType(oldtype){

		cvjs_FourFilesInOne = !oldtype;
	}

	
	
// 3.2.01g	
var cvjs_convertHandleLayer = [false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false];
		
// 3.3.01h		
var cvjs_floodfillSpaceIDLayerTable = [false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false];
var layerlistspaceobject_offset_flag = [true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true];


	
	
 /**
 * Opens the layer list for Space Objects for setting of Room/Text Layer processing
 * @param {string} floorplan_div - name of div containing CADViewer JS canvas
 * @param {int} mode - mode=1 , rl/tl selection,   mode=2, hl selection   , mode = 3, layer for SpaceID selection in floodfil process
 */
  
	function cvjs_LayerListSpaceObject(floorplan_div, mode){  // 3.2.01g

	
	if (mode == undefined) mode = 1;    // we set the display mode to rl/tl as default
		
	// 3.0.15c   - add "_svg" to div, if called through external API
	if (floorplan_div.lastIndexOf("_svg") == floorplan_div.length-4){
			// do nothing
	}
	else{
		floorplan_div = floorplan_div + "_svg";
	}

	cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(floorplan_div);		
	

			if (cvjs_interactiveMethod_Active[cvjs_active_floorplan_div_nr]) return;
			cvjs_interactiveMethod_Active[cvjs_active_floorplan_div_nr] = true;

			
			// 3.0.15c   - add "_svg" to div, if called through external API
			if (cvjs_debug) console.log(floorplan_div.lastIndexOf("_svg")+"  "+(floorplan_div.length-4));
			if (floorplan_div.lastIndexOf("_svg") == floorplan_div.length-4){
					// do nothing
			}
			else{
				floorplan_div = floorplan_div + "_svg";
			}
			
			
			
			
			//console.log("before List " + window.document.getElementsByClassName);
			cvjs_layerListSpace = new List('layerListSpaceObject_'+floorplan_div, cvjs_layerOptionsSpace, cvjs_layerValuesSpace);

			var layerStatus = lTable.languages[cvjs_currentLanguage].LayerListSpaceModal.NotAssigned;

			for (i=0; i<layerTable[cvjs_active_floorplan_div_nr].numberOfLayers; i++){

				//console.log(i+"  "+cvjs_layerListSpace);

				var sLink = "javascript: cvjs_LayerListSpaceClick("+i+")";
				var sLink2 = "javascript: cvjs_LayerTypeSpaceClick("+i+","+mode+")";  // 3.2.01g

				layerStatus = lTable.languages[cvjs_currentLanguage].LayerListSpaceModal.NotAssigned;

				if (mode == 1){ // 3.2.01g  -rl, -tl
								
					if ((layerTable[cvjs_active_floorplan_div_nr].layers[i].layerName).indexOf(cvjs_convertRoomLayer) > -1 && (layerTable[cvjs_active_floorplan_div_nr].layers[i].layerName).length == cvjs_convertRoomLayer.length ){
							layerStatus = "<b style='color:magenta;'>"+lTable.languages[cvjs_currentLanguage].LayerListSpaceModal.RoomLayer+"</b>";
					}
					else{
						if ((layerTable[cvjs_active_floorplan_div_nr].layers[i].layerName).indexOf(cvjs_convertTextLayer) > -1 && (layerTable[cvjs_active_floorplan_div_nr].layers[i].layerName).length == cvjs_convertTextLayer.length){
							layerStatus = "<b style='color:red;'>"+lTable.languages[cvjs_currentLanguage].LayerListSpaceModal.TextLayer+"</b>";
						}
						else{
							layerStatus = lTable.languages[cvjs_currentLanguage].LayerListSpaceModal.NotAssigned;
						}
					}
	//				console.log(layerTable[cvjs_active_floorplan_div_nr].layers[i].layerName+" logic "+(layerTable[cvjs_active_floorplan_div_nr].layers[i].layerName).indexOf(cvjs_convertRoomLayer)+" "+cvjs_convertRoomLayer+" "+cvjs_convertTextLayer+" "+layerStatus);

				}

				if (mode == 2){ // 3.2.01g   -hl
					
					if (cvjs_convertHandleLayer[i] == true ){
							layerStatus = "<b style='color:magenta;'>"+lTable.languages[cvjs_currentLanguage].LayerListSpaceModal.HandleLayer+"</b>";
					}
					else{
							layerStatus = lTable.languages[cvjs_currentLanguage].LayerListSpaceModal.NotAssigned;
					}
				}


				if (mode == 3){ // 3.3.01h  
					if (cvjs_floodfillSpaceIDLayerTable[i] == true ){
							layerStatus = "<b style='color:magenta;'>"+lTable.languages[cvjs_currentLanguage].LayerListSpaceModal.FloodfillLayer+"</b>";
							cvjs_spaceIDLayer = layerTable[cvjs_active_floorplan_div_nr].layers[id].layer;
					}
					else{
							layerStatus = lTable.languages[cvjs_currentLanguage].LayerListSpaceModal.NotAssigned;
					}
				}
			

				if (layerTable[cvjs_active_floorplan_div_nr].layers[i].status == "OFF"){

					cvjs_layerListSpace.add({
					  selected: lTable.languages[cvjs_currentLanguage].LayerListSpaceModal.Off,
					  text_room_layer: layerStatus,
					  link: sLink,
					  link_text_room_l: sLink2,
					  id: i,
					  layer: layerTable[cvjs_active_floorplan_div_nr].layers[i].layerName,
					});
				}

				if (layerTable[cvjs_active_floorplan_div_nr].layers[i].status == "ON"){
					cvjs_layerListSpace.add({
					  selected: lTable.languages[cvjs_currentLanguage].LayerListSpaceModal.On,
					  text_room_layer: layerStatus,
					  link: sLink,
					  link_text_room_l: sLink2,
					  id: i,
					  layer: layerTable[cvjs_active_floorplan_div_nr].layers[i].layerName,
					});
				}


			}

			if (layerlistspaceobject_offset_flag[cvjs_active_floorplan_div_nr]){
				layerlistspaceobject_offset_flag[cvjs_active_floorplan_div_nr] = false;
				// 3.1.21j  .appendTo('body')

				jQuery("#layerListSpaceObject_"+floorplan_div).css({position: "fixed"});
				jQuery("#layerListSpaceObject_"+floorplan_div).offset({left:150+jQuery('#'+floorplan_div).position().left, top: 50+jQuery('#'+floorplan_div).position().top});
			}

			jQuery("#layerListSpaceObject_"+floorplan_div).show();
	}


	function cvjs_LayerListSpaceClick(id){

		//console.log("the layer is "+layerTable[cvjs_active_floorplan_div_nr].layers[id].layerName+" with status "+layerTable[cvjs_active_floorplan_div_nr].layers[id].status);

		if (layerTable[cvjs_active_floorplan_div_nr].layers[id].status == "OFF"){
			cvjs_LayerOn(layerTable[cvjs_active_floorplan_div_nr].layers[id].layer);
			layerTable[cvjs_active_floorplan_div_nr].layers[id].status = "ON";

			var item = cvjs_layerListSpace.get('id', id)[0];
			  item.values({
				selected: lTable.languages[cvjs_currentLanguage].LayerListSpaceModal.On,
			  });

		}
		else{
			cvjs_LayerOff(layerTable[cvjs_active_floorplan_div_nr].layers[id].layer);
			layerTable[cvjs_active_floorplan_div_nr].layers[id].status = "OFF";


			var item = cvjs_layerListSpace.get('id', id)[0];
			  item.values({
				selected: lTable.languages[cvjs_currentLanguage].LayerListSpaceModal.Off,
			  });

		}

	}


	function cvjs_LayerTypeSpaceClick(id, mode){  // 3.2.01g

			var item = cvjs_layerListSpace.get('id', id)[0];

			var text = item.values().text_room_layer;

			if (mode==1){
			
				if (text.indexOf(lTable.languages[cvjs_currentLanguage].LayerListSpaceModal.NotAssigned)>-1){
					text = "<b style='color:red;'>"+lTable.languages[cvjs_currentLanguage].LayerListSpaceModal.TextLayer+"</b>";
				}
				else
				if (text.indexOf(lTable.languages[cvjs_currentLanguage].LayerListSpaceModal.TextLayer)>-1){
					text = "<b style='color:magenta;'>"+lTable.languages[cvjs_currentLanguage].LayerListSpaceModal.RoomLayer+"</b>";
				}
				else
					text = lTable.languages[cvjs_currentLanguage].LayerListSpaceModal.NotAssigned;			 			  
			}

			
			if (mode==2){			
				if (cvjs_convertHandleLayer[id] == false){
					text = "<b style='color:magenta;'>"+lTable.languages[cvjs_currentLanguage].LayerListSpaceModal.HandleLayer+"</b>";
					cvjs_convertHandleLayer[id] = true;
				}
				else{
					text = lTable.languages[cvjs_currentLanguage].LayerListSpaceModal.NotAssigned;
					cvjs_convertHandleLayer[id] = false;
				}	
			}



			if (mode==3){   // 3.3.01h			
				if (cvjs_floodfillSpaceIDLayerTable[id] == false){
					text = "<b style='color:magenta;'>"+lTable.languages[cvjs_currentLanguage].LayerListSpaceModal.FloodfillLayer+"</b>";
					cvjs_floodfillSpaceIDLayerTable[id] = true;
					
					cvjs_spaceIDLayer = layerTable[cvjs_active_floorplan_div_nr].layers[id].layer;
//					window.alert(cvjs_spaceIDLayer);					
				}
				else{
					text = lTable.languages[cvjs_currentLanguage].LayerListSpaceModal.NotAssigned;
					cvjs_floodfillSpaceIDLayerTable[id] = false;

					cvjs_spaceIDLayer = "None Selected";
//					window.alert(cvjs_spaceIDLayer);
				}	
			}

		
			if (cvjs_debug) console.log("after:  mode " + id+ "  "+cvjs_convertHandleLayer[id]);


		  item.values({
			text_room_layer: text
		  });

			
			
	}



function modal_all_layer_off_space(){

	for (id=0; id<layerTable[cvjs_active_floorplan_div_nr].numberOfLayers; id++){
			cvjs_LayerOff(layerTable[cvjs_active_floorplan_div_nr].layers[id].layer);
			layerTable[cvjs_active_floorplan_div_nr].layers[id].status = "OFF";

			var item = cvjs_layerListSpace.get('id', id)[0];
			  item.values({
				selected: lTable.languages[cvjs_currentLanguage].LayerListModal.Off,
			  });

	}

}


function all_layer_off_thumb_on(){

//console.log("first all_layer_off_thumb_on ");
	var flag = false;
	for (id=0; id<layerTable[cvjs_active_floorplan_div_nr].numberOfLayers; id++){
//		console.log(layerTable[cvjs_active_floorplan_div_nr].layers[id].layerName);
		if (layerTable[cvjs_active_floorplan_div_nr].layers[id].layerName == "cvjs_Thumb"){
			flag = true;
		}
	}
//console.log(" all_layer_off_thumb_on "+flag);

	if (flag)
		for (id=0; id<layerTable[cvjs_active_floorplan_div_nr].numberOfLayers; id++){

				if (layerTable[cvjs_active_floorplan_div_nr].layers[id].layerName == "cvjs_Thumb"){
					cvjs_LayerOn(layerTable[cvjs_active_floorplan_div_nr].layers[id].layer);
					layerTable[cvjs_active_floorplan_div_nr].layers[id].status = "ON";
				}
				else{
					cvjs_LayerOff(layerTable[cvjs_active_floorplan_div_nr].layers[id].layer);
					layerTable[cvjs_active_floorplan_div_nr].layers[id].status = "OFF";
				}
		}

}


function all_layer_on_thumb_off(){

//console.log("first all_layer_off_thumb_on ");

	var flag = false;
	for (id=0; id<layerTable[cvjs_active_floorplan_div_nr].numberOfLayers; id++){
//		console.log(layerTable[cvjs_active_floorplan_div_nr].layers[id].layerName);
		if (layerTable[cvjs_active_floorplan_div_nr].layers[id].layerName == "cvjs_Thumb"){
			flag = true;
		}
	}

//console.log(" all_layer_off_thumb_on "+flag);

	if (flag)
		for (id=0; id<layerTable[cvjs_active_floorplan_div_nr].numberOfLayers; id++){

				if (layerTable[cvjs_active_floorplan_div_nr].layers[id].layerName == "cvjs_Thumb"){
					cvjs_LayerOff(layerTable[cvjs_active_floorplan_div_nr].layers[id].layer);
					layerTable[cvjs_active_floorplan_div_nr].layers[id].status = "OFF";
				}
				else{
					cvjs_LayerOn(layerTable[cvjs_active_floorplan_div_nr].layers[id].layer);
					layerTable[cvjs_active_floorplan_div_nr].layers[id].status = "ON";
				}
		}

}




function modal_all_layer_on_space(){

	for (id=0; id<layerTable[cvjs_active_floorplan_div_nr].numberOfLayers; id++){
			cvjs_LayerOn(layerTable[cvjs_active_floorplan_div_nr].layers[id].layer);
			layerTable[cvjs_active_floorplan_div_nr].layers[id].status = "ON";

			var item = cvjs_layerListSpace.get('id', id)[0];
			  item.values({
				selected: lTable.languages[cvjs_currentLanguage].LayerListModal.On,
			  });


	}

}



function modal_swap_layers_on_off_space(){


	for (id=0; id<layerTable[cvjs_active_floorplan_div_nr].numberOfLayers; id++){

		if (layerTable[cvjs_active_floorplan_div_nr].layers[id].status == "OFF"){
			cvjs_LayerOn(layerTable[cvjs_active_floorplan_div_nr].layers[id].layer);
			layerTable[cvjs_active_floorplan_div_nr].layers[id].status = "ON";

			var item = cvjs_layerListSpace.get('id', id)[0];
			  item.values({
				selected: lTable.languages[cvjs_currentLanguage].LayerListSpaceModal.On,
			  });


		}
		else{
			cvjs_LayerOff(layerTable[cvjs_active_floorplan_div_nr].layers[id].layer);
			layerTable[cvjs_active_floorplan_div_nr].layers[id].status = "OFF";

			var item = cvjs_layerListSpace.get('id', id)[0];
			  item.values({
				selected: lTable.languages[cvjs_currentLanguage].LayerListSpaceModal.Off,
			  });

		}
	}

}


var cvjs_redlinesRelativePath = "../redlines/";
var cvjs_filepathServerRedlines = "/home/cadviewer/cadviewerjs.com/CV-JS_2_1_0/redlines/";
var cvjs_phpPath = "../php/";

var cvjs_serverHandlersPath = "../php/";    			// in standard case similar to php path
var cvjs_printObjectPath = "./temp_print/";			// temp file for print files
var cvjs_printObjectPathRelativeFlag = true;
var cvjs_printObjectPathAbsoluteUrl = "";			// temp file for print files, absolute Url
var cvjs_printObjectPathAbsoluteServer = "";		// temp file for print files, absolute Server Path



var	cvjs_serverSaveFileController = "save-file.php";		// name of server side save-file controller document
var cvjs_serverMergePHPFileController ="merge-pdfs.php";
var	cvjs_serverAppendFileController = "append-file.php"; // name of server side append-file controller document
var	cvjs_serverDeleteFileController = "delete-file.php"; // name of server side delete-file controller docoment
var	cvjs_serverCopyFileController = "copy-file.php"; // name of server side copy-file controller docoment

var	cvjs_serverListDirectoryController = "list-directory.php"; // name of server side file list controller docoment
var	cvjs_serverListDirectoryControllerRedlines = "list-directory-redlines.php"; // name of server side redline list controller document


var cvjs_serverLoadFileController = "load-file.php";

var cvjs_serverSaveFileControllerRedlines = "save-file.php";
var cvjs_serverLoadFileControllerRedlines = "load-file.php";
var cvjs_loadRedlinesFileControllerFlag = false;
var cvjs_loadFileControllerFlag = false;

var  cvjs_convertPDFConfigFile = "convert-pdf-files_config.php";
var	cvjs_serverPDFConverterController = "convert-pdf-files.php"; // name of server side delete-file controller docoment

var cvjs_getFileController = "getFile_09.php";

var	cvjs_serverPDFSplitController = "split-pdf-file.php"; // name of server side delete-file controller docoment
var cvjs_returnPDFparamsController = "return-pdf-convert-params.php";

var cvjs_customPDFprintController = "custom_print_to_pdf.php";

var cvjs_serverMergeDWGController = "merge-dwg-file.php";   // 3.0.15a 
var cvjs_serverDownloadSharepointController = "download-sharepoint.php";


var cvjs_serverGetQRCodeController = "load-qr-code.php";  // 3.3.04c



var cvjs_SharePointFileStructure = new Array();
var cvjs_SharePointFileStructure_folder = new Array();
var cvjs_SharePointFileStructure_level = new Array();
var cvjs_SharePointFileStructure_currentfileNr = 0;



/**
 * Calls server side PHP controller to fetch file list from Sharepoint server. A CAD server tree is built for jstree file selector.
 */

	function cvjs_generateShareFileDrawingList(){

		var fileListUrl = cvjs_serverHandlersPath + "CV-JS_sharepoint_filelist.php";
		if (cvjs_debug) console.log(fileListUrl);

		
		var filelist_data = {};
		filelist_data['user_name'] = cvjs_sharepoint_UserName;
		
//		window.alert("ShareFile  drawinglist "+cvjs_sharepoint_UserName);

		
		jQuery.ajax({
		  url:fileListUrl,
		  type: 'post',
		  data: filelist_data,
		  success: function(html){
			if (cvjs_debug) console.log("Return call: "+html );

/*			2018-03-28 blocked
			var files = html.split(";");
			
			for (i=0; i<files.length; i++){
			
			
				var dircount =  0;
				var file = files[i];
				var flag = true;
				while (flag){
					if (file.indexOf('/')>-1){
						dircount++;
						file = file.substring(file.indexOf('/')+1);
					}
					else	
						flag = false;
				}

				
				cvjs_SharePointFileStructure_level[i] = dircount;	
				if (dircount == 0){
					cvjs_SharePointFileStructure[i] = files[i];
					cvjs_SharePointFileStructure_folder[i] = "-1";
				}
				else{
					cvjs_SharePointFileStructure[i] = files[i].substring(files[i].lastIndexOf('/')+1);
					cvjs_SharePointFileStructure_folder[i] = files[i].substring(0, files[i].lastIndexOf('/'));
					
					//console.log(cvjs_SharePointFileStructure_folder[i]+"  folder")
				}
	
			console.log(i+ "  "+cvjs_SharePointFileStructure[i] +"  "+cvjs_SharePointFileStructure_folder[i]+" "+cvjs_SharePointFileStructure_level[i]  );
	

	
			}

			
			cvjs_buildShareFileDrawingSelector();
*/
	
		}  // end success
			
		});
	}


	
	
	
	
	
	
	
	
	function cvjs_buildShareFileDrawingSelector(){	
	


			jQuery('#cv_drawing_selector')
				.find('option')
				.remove()
				.end()
				.append('<option value="0">Select Drawing</option>')
				.val('0')
			;
		
			console.log("HELLO !" +jQuery('#cv_drawing_selector option').html());
						
			var level = cvjs_SharePointFileStructure_level[cvjs_SharePointFileStructure_currentfileNr];
			var file = cvjs_SharePointFileStructure[cvjs_SharePointFileStructure_currentfileNr];
			var path = cvjs_SharePointFileStructure_folder[cvjs_SharePointFileStructure_currentfileNr];
			
			
			console.log("LEVEL  "+level+" "+file+" "+path);
			
			// On first load we generate the list
			for (i=0; i<cvjs_SharePointFileStructure.length; i++){
				
				var v = (i+1).toString();
				var t = "drawing_"+i;
					
				console. log(cvjs_SharePointFileStructure_level[i] + "   "+level);	
					
				//if (true){
				if (cvjs_SharePointFileStructure_level[i] == level){
								
					jQuery('#cv_drawing_selector').append(jQuery('<option>',
					 {
						value: v,
						text : cvjs_SharePointFileStructure[i]
					}));
				}
				else{
					
					if (cvjs_SharePointFileStructure_level[i] > level){
					
						console.log("level loop, i="+i+" "+cvjs_SharePointFileStructure_folder[i]);
					
						var addfolderflag = true;
					
						for (var j=0; j<i;j++){
							
	//						console.log("counting "+j+" "+cvjs_SharePointFileStructure_folder[i].indexOf(cvjs_SharePointFileStructure_folder[j])+" "+(cvjs_SharePointFileStructure_level[i]>=cvjs_SharePointFileStructure_level[j]));
							
							if ((cvjs_SharePointFileStructure_folder[i].indexOf(cvjs_SharePointFileStructure_folder[j])>-1)  && (cvjs_SharePointFileStructure_level[i]>=cvjs_SharePointFileStructure_level[j]) && cvjs_SharePointFileStructure_level[j]>level  ){
								
								console.log(j+" it is already there so we do nothing "+i);
								
								addfolderflag = false;
							
							
							}else{
								
								console.log("we add the selector "+i+"  "+cvjs_SharePointFileStructure_folder[i]);

								
					
							}
						}
						
						console.log("ADDFOLDERFLAG "+addfolderflag+ "  "+cvjs_SharePointFileStructure_folder[i] );
						
						// we have to strip off for each level we are down
						var dircountlevel =  0;
						var file = cvjs_SharePointFileStructure_folder[i];
						var flaglevel = true;
						while (flaglevel){
							if (file.indexOf('/')>-1){
								dircountlevel++;
								file = file.substring(file.indexOf('/')+1);
							}
							else	
								flaglevel = false;
						}

						var foldertext = cvjs_SharePointFileStructure_folder[i];
						for (var k=0; k<dircountlevel; k++){
							foldertext = foldertext.substring(foldertext.indexOf('/')+1);
						}
						
						
						if (addfolderflag){

								jQuery('#cv_drawing_selector').append(jQuery('<option>',
									 {
										value: v,
										text : foldertext
									}));
						
							
						}
						
					
					}

				}



				
			}
						

	}
	
/**
 * Enables print Icon
 * @param {String} floorplan_div - name of <div> in which CADViewer is running
 */
		
function cvjs_EnablePrintIcon(floorplan_div){


//window.alert(floorplan_div);

	if (floorplan_div == undefined){
		cvjs_active_floorplan_div_nr = 0;
		floorplan_div = floorplan_div_Array[0];
	}
	else{
		if (floorplan_div.lastIndexOf("_svg") == floorplan_div.length-4){
				// do nothing
		}
		else{
			floorplan_div = floorplan_div + "_svg";
		}
		cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(floorplan_div);
	}


	cvjs_PrintIconDisabled[cvjs_active_floorplan_div_nr] = false;
	
}	

	
/**
 * Disables print Icon
 * @param {String} floorplan_div - name of <div> in which CADViewer is running
 */
		
function cvjs_DisablePrintIcon(floorplan_div){


//window.alert(floorplan_div);

	if (floorplan_div == undefined){
		cvjs_active_floorplan_div_nr = 0;
		floorplan_div = floorplan_div_Array[0];
	}
	else{
		if (floorplan_div.lastIndexOf("_svg") == floorplan_div.length-4){
				// do nothing
		}
		else{
			floorplan_div = floorplan_div + "_svg";
		}
		cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(floorplan_div);
	}


	cvjs_PrintIconDisabled[cvjs_active_floorplan_div_nr] = true;
	
}	
	
	
/**
 * Sets flag to control if call to server php for conversion shall be URI encoded or not. Default is true.
 * @param {boolean} flag - default is true. Set to true to custom implement this feature
 */

function cvjs_encodeURIcallToserver(flag){

	cvjs_encodeURIcall_server = flag;

}


	

/**
 * Sets flag to control if Print to PDF inside print modal shall be handled by custom controller. The name of controller is defined in: cvjs_setCustomPDFprintController()
 * @param {boolean} customPrintAsPDF - default is false. Set to true to custom implement this feature
 */

function cvjs_setCustomPDFprintControllerFlag(customPrintAsPDF){

	cvjs_custom_print_to_pdf  =  customPrintAsPDF;

}


/**
 * Sets the name of server side controller to custom control print as PDF inside print modal
 * @param {string} handlerName - name of the controller/handler document
 */

function cvjs_setCustomPDFprintController(handlerName){

	cvjs_customPDFprintController  =  handlerName;

}



/**
 * Sets the name of server side handler to custom control merged content sent as email
 * @param {string} handlerName - name of the controller/handler document
 */

function cvjs_setCustomMergedEmailHandler(handlerName){

	cvjs_serverSendPDFEmailController  =  handlerName;

}


var cvjs_setServerHandersPath_called = false;  // 3.2.01d
/**
 * Sets the location of the server side handers for load, save, append and print controls
 * @param {string} path - location of print handlers, in the standard case this in the "/php/" folder with redline and file controllers
 */

function cvjs_setServerHandlersPath(path){


	cvjs_setServerHandersPath_called = true;

	cvjs_serverHandlersPath = path;

	if (cvjs_serverHandlersPath.charAt(cvjs_serverHandlersPath.length - 1)!="/" )
		cvjs_serverHandlersPath += "/";
	
}



/**
 * Sets the location to the print objects
 * @param {string} path - location of print object relative to Controller, can also use absolute paths standard is "./temp_print/"
 */

function cvjs_setPrintObjectPath(path){

	cvjs_printObjectPath = path;

	if (cvjs_printObjectPath.charAt(cvjs_printObjectPath.length - 1)!="/" )
		cvjs_printObjectPath += "/";

	cvjs_printObjectPathRelativeFlag = true;

}

var cvjs_printObjectPathAbsolute_called = false;
/**
 * Sets the location to the print objects
 * @param {string} pathUrl - location of print objects, web path
 * @param {string} absolutePathServer - location of print objects, server side absolute path
 */

function cvjs_setPrintObjectPathAbsolute(pathUrl, absolutePathServer){

	cvjs_printObjectPathAbsolute_called = true;

	cvjs_printObjectPathAbsolute = pathUrl;

	if (cvjs_printObjectPathAbsolute.charAt(cvjs_printObjectPathAbsolute.length - 1)!="/" )
		cvjs_printObjectPathAbsolute += "/";


	cvjs_printObjectPathAbsoluteServer = absolutePathServer;

	if (cvjs_printObjectPathAbsoluteServer.charAt(cvjs_printObjectPathAbsoluteServer.length - 1)!="/" )
		cvjs_printObjectPathAbsoluteServer += "/";

	cvjs_printObjectPathRelativeFlag = false;

}



/**
 * Sets the name of server side controller to control PDF conversion
 * @param {string} handlerName - name of the controller/handler document
 */

function cvjs_setServerPDFConverterController(handlerName){

	cvjs_serverPDFConverterController  = handlerName;

}


/**
 * Sets the name of server side controller to load drawings after conversion
 * @param {string} handlerName - name of the controller/handler document
 */

function cvjs_setGetFileController(handlerName){

	cvjs_getFileController  = handlerName;

}






/**
 * Sets the name of server side controller to return path structure for PDF conversion
 * @param {string} handlerName - name of the controller/handler document
 */

function cvjs_setReturnPDFparamsController(handlerName){

	cvjs_returnPDFparamsController  = handlerName;

}


/**
 * Controls if Print to PDF feature is included in print Modal 
 * @param {boolean} printPDFflag - true is default, set to false to hide PrintAsPDF in Print Modal
 */

function cvjs_setPrintModal_PrintPDF(printPDFflag){

	 cvjs_PrintModal_PrintPDF = printPDFflag;
	 
}


/**
 * Controls if Print to Scale feature is included in print Modal 
 * @param {boolean} printToScaleflag - true is default, set to false to hide PrintToScale in Print Modal
 */

function cvjs_setPrintModal_PrintToScale(printToScaleflag){

	 cvjs_PrintModal_PrintToScale = printToScaleflag;
	 
}
// 3.3.02g




/**
 * Sets the name of server side save-file controller document
 * @param {string} handlerName - name of the controller/handler document
 */

function cvjs_setServerSaveFileHandler(handlerName){

	cvjs_serverSaveFileController  = handlerName;

}


/**
 * Sets the name of server side copy-file controller document
 * @param {string} handlerName - name of the controller/handler document
 */

function cvjs_setServerCopyFileHandler(handlerName){

	cvjs_serverCopyFileController = handlerName;

}



/**
 * Sets the name of server side merge DWG controller document
 * @param {string} handlerName - name of the controller/handler document
 */

function cvjs_setServerMergeDWGHandler(handlerName){

	cvjs_serverMergeDWGController = handlerName;

}


/**
 * Sets the insertion location of QR Codes
 * @param {String} serverGetQRCodeController - controller name
 */

function cvjs_setServerGetQRCodeController(serverGetQRCodeController){

	cvjs_serverGetQRCodeController = serverGetQRCodeController;
	
}




/**
 * Sets the insertion location of QR Codes
 * @param {int} PercentXFromLowerLeft - distance in x, percent of total width from lower left
 * @param {int} PercentYFromLowerLeft - distance in y, percent of total height from lower left
 * @param {int} cvjs_widthPercent - width of QR code, in percent of total width
 */

function cvjs_setQRCodeInsertion(PercentXFromLowerLeft, PercentYFromLowerLeft, widthPercent){

	cvjs_PercentXFromLowerLeft = PercentXFromLowerLeft;
	cvjs_PercentYFromLowerLeft = PercentYFromLowerLeft;
	cvjs_widthPercent = widthPercent;	
	
}




/**
 * Sets the name of server side directory list controller document
 * @param {string} handlerName - name of the controller/handler document
 */

function cvjs_setServerListDirectoryHandler(handlerName){

	cvjs_serverListDirectoryController  = handlerName;

}


/**
 * Sets the name of server side directory redlines list controller document
 * @param {string} handlerName - name of the controller/handler document
 */

function cvjs_setServerRedlinesListDirectoryHandler(handlerName){

	cvjs_serverListDirectoryControllerRedlines  = handlerName;

}





/**
 * Sets the name of server side append-file controller document
 * @param {string} handlerName - name of the controller/handler document
 */

function cvjs_setServerAppendFileHandler(handlerName){

	cvjs_serverAppendFileController  = handlerName;

}

/**
 * Sets the name of server side delete-file controller document
 * @param {string} handlerName - name of the controller/handler document
 */

function cvjs_setServerDeleteFileHandler(handlerName){

	cvjs_serverDeleteFileController  = handlerName;

}




/**
 * Sets the name of server side save-file controller document for print
 * @param {string} handlerName - name of the controller/handler document
 */

function cvjs_setServerSaveFileHandlerPrint(handlerName){

	cvjs_serverSaveFileController  = handlerName;

}

/**
 * Sets the name of server side append-file controller document for print
 * @param {string} handlerName - name of the controller/handler document
 */

function cvjs_setServerAppendFileHandlerPrint(handlerName){

	cvjs_serverAppendFileController  = handlerName;

}

/**
 * Sets the name of server side delete-file controller document for print
 * @param {string} handlerName - name of the controller/handler document
 */

function cvjs_setServerDeleteFileHandlerPrint(handlerName){

	cvjs_serverDeleteFileController  = handlerName;

}




/**
 * Sets the name of server side save-file controller document for redline save
 * @param {string} handlerName - name of the controller/handler document
 */

function cvjs_setServerSaveHandlerRedlines(handlerName){

	cvjs_serverSaveFileControllerRedlines  = handlerName;
		
}


/**
 * Sets the name of server side load-file controller document for redline load
 * @param {string} handlerName - name of the controller/handler document
 */

function cvjs_setServerLoadHandlerRedlines(handlerName){

	cvjs_serverLoadFileControllerRedlines  = handlerName;
	cvjs_loadRedlinesFileControllerFlag = true;
}



/**
 * Sets the name of server side load-file controller document for file list load
 * @param {string} handlerName - name of the controller/handler document
 */

function cvjs_setServerLoadHandler(handlerName){

	cvjs_serverLoadFileController  = handlerName;
	cvjs_loadFileControllerFlag = true;
}







var cvjs_phpUploadPath = "";
var externalServerPhpUpload = false;

/**
 * Sets the location to the php upload folder, this can be on a different domain
 * @param {string} Url - location of upload_2.php document
 */

function cvjs_setPhpUploadPath(path){

	cvjs_phpUploadPath = path;
	externalServerPhpUpload = true;
}



/**
 * Sets the location to the php folder
 * @param {string} path - current location of php scripts, typically ../php/
 */

function cvjs_setPhpPath(path){

	cvjs_phpPath = path;

	if (cvjs_phpPath.charAt(cvjs_phpPath.length - 1)!="/" )
		cvjs_phpPath += "/";

	if (cvjs_debug) console.log("NOTE cvjs_setPhpPath="+cvjs_phpPath);
}



var pagechange_offset_flag = [true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true];


/**
 * Open the Page Change menu to select a page in a multipage drawing
  * @param {string} floorplan_div - name of div containing CADViewer JS canvas
*/
	function cvjs_PageChangeList(floorplan_div){
	
			if (cvjs_interactiveMethod_Active[cvjs_active_floorplan_div_nr]) return;
			cvjs_interactiveMethod_Active[cvjs_active_floorplan_div_nr] = true;			
		
			
			// 3.0.15c   - add "_svg" to div, if called through external API
			if (cvjs_debug) console.log(floorplan_div.lastIndexOf("_svg")+"  "+(floorplan_div.length-4));
			if (floorplan_div.lastIndexOf("_svg") == floorplan_div.length-4){
					// do nothing
			}
			else{
				floorplan_div = floorplan_div + "_svg";
			}
						
			
			
			//console.log("before List " + window.document.getElementsByClassName);
			cvjs_pagechangeList = new List('pagechangeList_'+floorplan_div, cvjs_layerOptions, cvjs_layerValues);

			//window.alert(multiPages[cvjs_active_floorplan_div_nr].multiPages);
			
			for (i=0; i<multiPages[cvjs_active_floorplan_div_nr].multiPages; i++){

				var sLink = "javascript: cvjs_PageChangeListClick("+i+")";

				//window.alert("currentpage= "+multiPages[cvjs_active_floorplan_div_nr].currentPage+" i= "+i)
				
				// 3.1.21d
				var myPageName = "";
				//window.alert(multiPages[cvjs_active_floorplan_div_nr].pages[i].pageName)
				
				if (multiPages[cvjs_active_floorplan_div_nr].pages[i].pageName.indexOf("com.autodesk")>-1)
					myPageName = "Layout"
				else
					myPageName = multiPages[cvjs_active_floorplan_div_nr].pages[i].pageName;
					
				
				if (multiPages[cvjs_active_floorplan_div_nr].currentPage == (i+1)){
					cvjs_pagechangeList.add({
					  selected: lTable.languages[cvjs_currentLanguage].PageChangeListModal.On,
					  link: sLink,
					  id: i,
					  layer: myPageName, //multiPages[cvjs_active_floorplan_div_nr].pages[i].pageName,
					});
				}
				else{
					
					cvjs_pagechangeList.add({
					  selected: lTable.languages[cvjs_currentLanguage].PageChangeListModal.Off,
					  link: sLink,
					  id: i,
					  layer: myPageName, //multiPages[cvjs_active_floorplan_div_nr].pages[i].pageName,
					});
				}

//if (cvjs_debug) console.log(i+"  "+ layerTable[cvjs_active_floorplan_div_nr].layers[i].layerName);
			}

			if (pagechange_offset_flag[cvjs_active_floorplan_div_nr]){
				pagechange_offset_flag[cvjs_active_floorplan_div_nr] = false;
				// 3.1.21j  .appendTo('body')
				jQuery("#pagechangeList_"+floorplan_div).css({position: "fixed"});
				jQuery("#pagechangeList_"+floorplan_div).offset({left:150+jQuery('#'+floorplan_div).position().left, top: 50+jQuery('#'+floorplan_div).position().top});
			}
			jQuery("#pagechangeList_"+floorplan_div).show();
	}




	function cvjs_PageChangeListClick(id){
	
		for (i=0; i<multiPages[cvjs_active_floorplan_div_nr].multiPages; i++){
	
			var item = cvjs_pagechangeList.get('id', i)[0];
	
			if (id==i){
			
				item.values({
					selected: lTable.languages[cvjs_currentLanguage].PageChangeListModal.On,
				  });			  
			}
			else{
				item.values({
					selected: lTable.languages[cvjs_currentLanguage].PageChangeListModal.Off,
				  });
			}

		}
		
		// load drawing associated with id
		
		cvjs_changePageByNumber(floorplan_div_Array[cvjs_active_floorplan_div_nr], id+1)
		
	
	}

	
	
















var layerlist_offset_flag = [true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true];


/**
 * Open the Layer List menu for layer handling
  * @param {string} floorplan_div - name of div containing CADViewer JS canvas
*/
	function cvjs_LayerList(floorplan_div){
	
			if (cvjs_interactiveMethod_Active[cvjs_active_floorplan_div_nr]) return;
			cvjs_interactiveMethod_Active[cvjs_active_floorplan_div_nr] = true;

			
			// 3.0.15c   - add "_svg" to div, if called through external API
			if (cvjs_debug) console.log(floorplan_div.lastIndexOf("_svg")+"  "+(floorplan_div.length-4));
			if (floorplan_div.lastIndexOf("_svg") == floorplan_div.length-4){
					// do nothing
			}
			else{
				floorplan_div = floorplan_div + "_svg";
			}
						
			//console.log("before List " + window.document.getElementsByClassName);
			cvjs_layerList = new List('layerList_'+floorplan_div, cvjs_layerOptions, cvjs_layerValues);

			for (i=0; i<layerTable[cvjs_active_floorplan_div_nr].numberOfLayers; i++){

				var sLink = "javascript: cvjs_LayerListClick("+i+")";

				if (layerTable[cvjs_active_floorplan_div_nr].layers[i].status == "OFF"){
					cvjs_layerList.add({
					  selected: lTable.languages[cvjs_currentLanguage].LayerListModal.Off,
					  link: sLink,
					  id: i,
					  layer: layerTable[cvjs_active_floorplan_div_nr].layers[i].layerName,
					});
				}

				if (layerTable[cvjs_active_floorplan_div_nr].layers[i].status == "ON"){
					cvjs_layerList.add({
					  selected: lTable.languages[cvjs_currentLanguage].LayerListModal.On,
					  link: sLink,
					  id: i,
					  layer: layerTable[cvjs_active_floorplan_div_nr].layers[i].layerName,
					});
				}

//if (cvjs_debug) console.log(i+"  "+ layerTable[cvjs_active_floorplan_div_nr].layers[i].layerName);

			}

			if (layerlist_offset_flag[cvjs_active_floorplan_div_nr]){
				layerlist_offset_flag[cvjs_active_floorplan_div_nr] = false;
				// 3.1.21j  .appendTo('body')
				jQuery("#layerList_"+floorplan_div).css({position: "fixed"});
				jQuery("#layerList_"+floorplan_div).offset({left:150+jQuery('#'+floorplan_div).position().left, top: 50+jQuery('#'+floorplan_div).position().top});
			}

			jQuery("#layerList_"+floorplan_div).show();
	}



	var cvjs_layerValues;
	// End Layer List


	function cvjs_LayerListClick(id){

		console.log("the layer is "+layerTable[cvjs_active_floorplan_div_nr].layers[id].layerName+" with status "+layerTable[cvjs_active_floorplan_div_nr].layers[id].status);

		if (layerTable[cvjs_active_floorplan_div_nr].layers[id].status == "OFF"){
			cvjs_LayerOn(layerTable[cvjs_active_floorplan_div_nr].layers[id].layer);
			layerTable[cvjs_active_floorplan_div_nr].layers[id].status = "ON";

			var item = cvjs_layerList.get('id', id)[0];
			  item.values({
				selected: lTable.languages[cvjs_currentLanguage].LayerListModal.On,
			  });

		}
		else{
			cvjs_LayerOff(layerTable[cvjs_active_floorplan_div_nr].layers[id].layer);
			layerTable[cvjs_active_floorplan_div_nr].layers[id].status = "OFF";


			var item = cvjs_layerList.get('id', id)[0];
			  item.values({
				selected: lTable.languages[cvjs_currentLanguage].LayerListModal.Off,
			  });


		}


	}



function modal_all_layer_off(){

//	window.alert(cvjs_active_floorplan_div_nr);

//	window.alert(layerTable[cvjs_active_floorplan_div_nr].numberOfLayers);
	for (id=0; id<layerTable[cvjs_active_floorplan_div_nr].numberOfLayers; id++){
				
//		console.log("the layer is "+layerTable[cvjs_active_floorplan_div_nr].layers[id].layerName+" with status "+layerTable[cvjs_active_floorplan_div_nr].layers[id].status);
		
//console.log(layerTable[cvjs_active_floorplan_div_nr].numberOfLayers+" "+id+"  "+layerTable[cvjs_active_floorplan_div_nr].layers[id].layer);		
		
			cvjs_LayerOff(layerTable[cvjs_active_floorplan_div_nr].layers[id].layer);
			layerTable[cvjs_active_floorplan_div_nr].layers[id].status = "OFF";

			var item = cvjs_layerList.get('id', id)[0];
			  item.values({
				selected: lTable.languages[cvjs_currentLanguage].LayerListModal.Off,
			  });

	}

}


function modal_all_layer_on(){

	for (id=0; id<layerTable[cvjs_active_floorplan_div_nr].numberOfLayers; id++){
			cvjs_LayerOn(layerTable[cvjs_active_floorplan_div_nr].layers[id].layer);
			layerTable[cvjs_active_floorplan_div_nr].layers[id].status = "ON";

			var item = cvjs_layerList.get('id', id)[0];
			  item.values({
				selected: lTable.languages[cvjs_currentLanguage].LayerListModal.On,
			  });


	}

}



function modal_swap_layers_on_off(){


	for (id=0; id<layerTable[cvjs_active_floorplan_div_nr].numberOfLayers; id++){

		if (layerTable[cvjs_active_floorplan_div_nr].layers[id].status == "OFF"){
			cvjs_LayerOn(layerTable[cvjs_active_floorplan_div_nr].layers[id].layer);
			layerTable[cvjs_active_floorplan_div_nr].layers[id].status = "ON";

			var item = cvjs_layerList.get('id', id)[0];
			  item.values({
				selected: lTable.languages[cvjs_currentLanguage].LayerListModal.On,
			  });


		}
		else{
			cvjs_LayerOff(layerTable[cvjs_active_floorplan_div_nr].layers[id].layer);
			layerTable[cvjs_active_floorplan_div_nr].layers[id].status = "OFF";

			var item = cvjs_layerList.get('id', id)[0];
			  item.values({
				selected: lTable.languages[cvjs_currentLanguage].LayerListModal.Off,
			  });

		}
	}

}



/**
 * Swap drawing layers On/Off
 * @param {String} floorplan_div - div of the CADViewerJS canvas
 */

function cvjs_swapLayersInDrawing(floorplan_div){

	// 3.0.15c   - add "_svg" to div, if called through external API
	if (cvjs_debug) console.log(floorplan_div.lastIndexOf("_svg")+"  "+(floorplan_div.length-4));
	if (floorplan_div.lastIndexOf("_svg") == floorplan_div.length-4){
			// do nothing
	}
	else{
		floorplan_div = floorplan_div + "_svg";
	}

	if (floorplan_div == undefined){
	
		// do nothing;
	}
	else{
		// find active floorplan number and set that
		cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(floorplan_div);
	
	}


	for (id=0; id<layerTable[cvjs_active_floorplan_div_nr].numberOfLayers; id++){

		if (layerTable[cvjs_active_floorplan_div_nr].layers[id].status == "OFF"){
			cvjs_LayerOn(layerTable[cvjs_active_floorplan_div_nr].layers[id].layer);
			layerTable[cvjs_active_floorplan_div_nr].layers[id].status = "ON";
		}
		else{
			cvjs_LayerOff(layerTable[cvjs_active_floorplan_div_nr].layers[id].layer);
			layerTable[cvjs_active_floorplan_div_nr].layers[id].status = "OFF";
		}
	}

}


/**
 * Sets all layers in drawing On
 * @param {String} floorplan_div - div of the CADViewerJS canvas
 */

function cvjs_allLayersInDrawingOn(floorplan_div){

	// 3.0.15c   - add "_svg" to div, if called through external API
	if (cvjs_debug) console.log(floorplan_div.lastIndexOf("_svg")+"  "+(floorplan_div.length-4));
	if (floorplan_div.lastIndexOf("_svg") == floorplan_div.length-4){
			// do nothing
	}
	else{
		floorplan_div = floorplan_div + "_svg";
	}

	if (floorplan_div == undefined){
	
		// do nothing;
	}
	else{
		// find active floorplan number and set that
		cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(floorplan_div);
	
	}


	for (id=0; id<layerTable[cvjs_active_floorplan_div_nr].numberOfLayers; id++){
		if (layerTable[cvjs_active_floorplan_div_nr].layers[id].status == "OFF"){
			cvjs_LayerOn(layerTable[cvjs_active_floorplan_div_nr].layers[id].layer);
			layerTable[cvjs_active_floorplan_div_nr].layers[id].status = "ON";
		}
	}
}


/**
 * Return orginal file layer name based on SVG object ID
 * @param {string} myObjectId - id of the element in the SVG file
 * @return {string} layer - layer name
 */

function cvjs_layerNamefromObjectID(myObjectId){
	
	if (myObjectId.indexOf("#")==-1) myObjectId = "#"+myObjectId;
	

//	var layerID = jQuery(myObjectId).parents().find("[id^=layer_]").attr('id');
//  suggestion for optimized find, parents takes the first outmost parent
	var layerID = jQuery(myObjectId).parents("[id^=layer_]").attr('id');

	
	//console.log(myObjectId + "   "+layerID);
	
	for (id=0; id<layerTable[cvjs_active_floorplan_div_nr].numberOfLayers; id++){
		
		//console.log(layerTable[cvjs_active_floorplan_div_nr].layers[id].layer);
		
		if (layerTable[cvjs_active_floorplan_div_nr].layers[id].layer == layerID){
			
			//console.log(" we have a match " + layerTable[cvjs_active_floorplan_div_nr].layers[id].layerName);
			
			return (layerTable[cvjs_active_floorplan_div_nr].layers[id].layerName);			
		}
	}
}



// turn drawing layer off flag
var cvjs_turnDrawingLayerOffFlag = false;

/**
 * Turn a single layer on interactively
 * @param {string} floorplan_div - div of the CADViewerJS canvas
 */
function cvjs_interactiveLayerOff(floorplan_div){

	cvjs_turnDrawingLayerOffFlag = true;
	
	
	// 3.0.15c   - add "_svg" to div, if called through external API
	if (cvjs_debug) console.log(floorplan_div.lastIndexOf("_svg")+"  "+(floorplan_div.length-4));
	if (floorplan_div.lastIndexOf("_svg") == floorplan_div.length-4){
			// do nothing
	}
	else{
		floorplan_div = floorplan_div + "_svg";
	}
	
	
}


/**
 * Returns the current fileName from the MultiPages list
 * @return {string} url - current location
 */

function cvjs_getCurrentMultiPage_FileName(){

	return(multiPages[cvjs_active_floorplan_div_nr].pages[multiPages[cvjs_active_floorplan_div_nr].currentPage-1].fileName);

}






/**
 * Finds the current url of the library
 * @return {string} url - current location
 */

function cvjs_currentURL(){

	var url = window.location.href;
	return(url);
}


/**
 * Finds the current host of the library
 * @return {string} host - current hostlocation
 */

function cvjs_currentHost(){

	var host = window.location.hostname;
	return(host);
}



///////////////// LICENSE KEY RELATED METHODS  - MAKING KEYS


// decode license key

function cvjs_mysimple_encode(outputstring){

// reverse coding

	outputstring = ABC.toAscii(outputstring);

	var keystring = "";
	key = 0;

	var stc1 = outputstring.charAt(0);
	var keylength = stc1;
	//console.log("length "+keylength);

	keystring = "";
	for (var i = 0; i < keylength; i++) {
		var letter = "";
		for (var j = 0; j < 3; j++){
			var stc = outputstring.charAt(1+(i*3)+j);
			//stc = 256-stc;
			var stringExp = stc.toString();
			letter += stringExp;
		}

		//console.log(i+" "+letter);
		var number = parseInt(letter);
		number = 256-number;
		keystring += String.fromCharCode(number);
	}
	key  = parseInt(keystring);

	//console.log("key ="+key);

	var newoutputstring = "";

	for (var i = 0; i < (outputstring.length -1-keylength*3)/3; i++) {

		var letter = "";
		for (var j = 0; j < 3; j++){
			var stc = outputstring.charAt(1+keylength*3+(i*3)+j);
			//stc = 256-stc;
			var stringExp = stc.toString();
			letter += stringExp;
		}
		//console.log(i+" "+letter);
		var number = parseInt(letter);
		number = 256-number;
		newoutputstring += String.fromCharCode(number);
	}

	//console.log("outputstring decoded "+newoutputstring);

	return newoutputstring;
}


var ABC = {
  toAscii: function(bin) {
    return bin.replace(/\s*[01]{8}\s*/g, function(bin) {
      return String.fromCharCode(parseInt(bin, 2))
    })
  },
  toBinary: function(str, spaceSeparatedOctets) {
    return str.replace(/[\s\S]/g, function(str) {
      str = ABC.zeroPad(str.charCodeAt().toString(2));
      return !1 == spaceSeparatedOctets ? str : str + " "
    })
  },
  zeroPad: function(num) {
    return "00000000".slice(String(num).length) + num
  }
};


// end decode license key


var cvjs_defaultJSPath = "../app/js/";


/**
 * Set the script paths to load default drawings for encapsulate png rendering, typically ../javascripts
  * @param {string} path to default script-file folder
 */

function cvjs_setDefaultJSPath(path){

	cvjs_defaultJSPath = path;

}


/**
 * Activates and displays the information modal with text
 * @param {int} modal type, 1 for bootstrap modal, 2 for standard floating modal, default is bootstrap modal
 */

function cvjs_setInformationModalType(mode){

	message_modal_type_bootstrap = true;
	if (mode==1) message_modal_type_bootstrap = true;
	if (mode==2) message_modal_type_bootstrap = false;
}


var message_modal_type_bootstrap = false;

var message_modal_offset_flag = [true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true];



var cvjs_currentInformationModal_x = 0;
var cvjs_currentInformationModal_y = 0;

// 3.2.02g
/**
 * Activates and displays the information modal with text
  * @param {string} floorplan_div - name of div containing CADViewer JS canvas
  * @param {String} text string to display
  * @param {int} modalHeight of modal, omit if using standard values
  * @param {int} modal_left, position of modal
  * @param {int} modal_top, position of modal
  * 
 */

function cvjs_displayInformationModal(floorplan_div, textString, modalHeight, modal_left, modal_top){


if (cvjs_debug) console.log(modalHeight+"  "+modal_left+"  "+modal_top);

	if (floorplan_div.lastIndexOf("_svg") == floorplan_div.length-4){
			// do nothing
	}
	else{
		floorplan_div = floorplan_div + "_svg";
	}



//	if (cvjs_interactiveMethod_Active[cvjs_active_floorplan_div_nr]) return;
//	cvjs_interactiveMethod_Active[cvjs_active_floorplan_div_nr] = true;

	//console.log("information modal "+textString);

	if (message_modal_type_bootstrap){

		jQuery('#cvjs_informationModalText'+'_'+floorplan_div).html(textString);
		jQuery('#info_messageModal'+'_'+floorplan_div).modal('show');
	}
	else{

		if (modalHeight != undefined){				
			jQuery(".info_messageModal_2").css("height",modalHeight+"px");				
						
			if ((modal_left != undefined) && (modal_top != undefined) ){	
	
				jQuery("#info_messageModal_2"+'_'+floorplan_div).css({position: "fixed"});
	
				cvjs_currentInformationModal_x = $("#"+floorplan_div).position().left+150;
				cvjs_currentInformationModal_y = $("#"+floorplan_div).position().top+50; //jQuery('#'+floorplan_div).position().top;
				
				$("#info_messageModal_2"+'_'+floorplan_div).css('top', modal_top);
				$("#info_messageModal_2"+'_'+floorplan_div).css('left', modal_left);	


				
				/*								
				$("#info_messageModal_2"+'_'+floorplan_div).position({
					of: $("#info_messageModal_2"+'_'+floorplan_div).parent(),
					my: '0 300',
					at: 'left top'
				});	
*/				
			}
		}    // 3.2.02g
		else{  // if we are in standard mode, we adjust the modal, if on top custom bar we do not
			
			if (message_modal_offset_flag[cvjs_active_floorplan_div_nr]){
				message_modal_offset_flag[cvjs_active_floorplan_div_nr] = false;
				// 3.1.21j  .appendTo('body')
				jQuery("#info_messageModal_2"+'_'+floorplan_div).css({position: "fixed"});
				jQuery("#info_messageModal_2"+'_'+floorplan_div).offset({left:150+jQuery('#'+floorplan_div).position().left, top: 50+jQuery('#'+floorplan_div).position().top});
			}
		}
		
		
		jQuery('#cvjs_informationModalText_2'+'_'+floorplan_div).html(textString);
		jQuery('#info_messageModal_2'+'_'+floorplan_div).show();

	}
	// jQuery('#info_messageModal').show();
}


/**
 * Hides the information modal with text
  * @param {string} floorplan_div - name of div containing CADViewer JS canvas
 */

function cvjs_hideInformationModal(floorplan_div){


	if (floorplan_div.lastIndexOf("_svg") == floorplan_div.length-4){
			// do nothing
	}
	else{
		floorplan_div = floorplan_div + "_svg";
	}


	if (message_modal_type_bootstrap){

		jQuery('#info_messageModal'+'_'+floorplan_div).modal('hide');
	}
	else{
		
		jQuery(".info_messageModal_2").css("height","110px");				
		
		if (cvjs_currentInformationModal_x!=0 || cvjs_currentInformationModal_y!=0){
			$("#info_messageModal_2"+'_'+floorplan_div).css('top', cvjs_currentInformationModal_y);
			$("#info_messageModal_2"+'_'+floorplan_div).css('left', cvjs_currentInformationModal_x);		

			cvjs_currentInformationModal_x = 0;			
			cvjs_currentInformationModal_y = 0;			
		}		
				
		jQuery('#info_messageModal_2'+'_'+floorplan_div).hide();
		
	}
	// jQuery('#info_messageModal').show();
}






function cvjs_displayInformationModal_Mode(mode){


	var textString = "";

	if (mode == 0) textString = lTable.languages[cvjs_currentLanguage].InfoMessageModal.Version + cvjs_versionNumber;
	if (mode == 1) textString = lTable.languages[cvjs_currentLanguage].InfoMessageModal.ComingSoon;


	cvjs_displayInformationModal(floorplan_div_Array[cvjs_active_floorplan_div_nr], textString)
	//jQuery('#cvjs_informationModalText').html(textString);
	//jQuery('#info_messageModal').modal('show');
}



var cvjs_LicenseKeyPath = "../app/js/";
var cvjs_isLicensed = false;
var cvjs_licensedDaysLeft = 40;  // more than a month left

/**
 * Set the license key path, typically a path relative to the calling document, for example as ../javascripts
 * The command will activate the license key
 * @param {String} licensePath - path to the license key location
 */
function cvjs_setLicenseKeyPath(licensePath){

	cvjs_LicenseKeyPath = licensePath;

	try{
		loadJSbase(cvjs_LicenseKeyPath+"cvlicense.js");
	} catch(err) {


		var textString = lTable.languages[cvjs_currentLanguage].InfoMessageModal.LicensePath+licensePath;
		
		
		
		cvjs_displayInformationModal(floorplan_div_Array[cvjs_active_floorplan_div_nr], textString);

//		jQuery('#cvjs_informationModalText').html(lTable.languages[cvjs_currentLanguage].InfoMessageModal.LicensePath+licensePath);
//		jQuery('#info_messageModal').modal('show');
//		//console.log("Could not find license key at path "+licensePath);
		cvjs_isLicensed = false;

		}
}


var cvjsLicenseKey;

/**
 * Pass over the license key directly
 * The command will activate the license key
 * @param {String} licensekey - string containing the license key JSON array
 */

function cvjs_setLicenseKeyDirect(licensekey){

	// 3.0.13i
	cvjsLicenseKey = jQuery.parseJSON(licensekey);
	cvjs_licenseKeyLoaded = true;
}


var cvjs_licenseKeyLoaded = false;

function CheckLicenseLoad(floorplan_div, originatingContent, originatingFileNameNoExtension, originatingUsername, originatingPassword)
{

	if (cvjs_licenseKeyLoaded)
		{
			load_failures = 0;

//console.log(" load_failures but now we load="+load_failures);
//console.log(cvjs_isLicensed+"   cvjs_licenseKeyLoaded="+cvjs_licenseKeyLoaded);

			try{
				if (cvjsLicenseKey.cvKey == undefined) {
					cvjs_isLicensed = false;
				}
			}catch (err) {
				cvjs_isLicensed = false;
			}
			var thisUrl = cvjs_currentURL();
			var readLicense = cvjs_mysimple_encode(cvjsLicenseKey.cvKey);

	//console.log("2 top before dateCheck");

			var dateArr = readLicense.split(":");
			var dateCheck = false;
			if (dateArr.length==1){
				// it is an old type key, so we let it live
				dateCheck = true;

			}else{
				//console.log("there is a date");
				var dateArr2 = dateArr[1].split("-");
				var licenseYear = Number(dateArr2[0]);
				var licenseMonth = Number(dateArr2[1]);
				var licenseDay = Number(dateArr2[2]);
				// Return today's date and time
				var currentTime = new Date();
				// returns the month (from 0 to 11)
				var month = Number(currentTime.getMonth() + 1);
				// returns the day of the month (from 1 to 31)
				var day = Number(currentTime.getDate());
				// returns the year (four digits)
				var year = Number(currentTime.getFullYear());
				if (licenseYear>year){
					//console.log("year ok");
					dateCheck = true;
					cvjs_licensedDaysLeft = 40; // larger than 30 days

					if ( (licenseYear-year)==1 && licenseMonth ==1 && month==12 ){
						// we are in December and it times out in January
					    if (licenseDay>day){
							cvjs_licensedDaysLeft = 40; // larger than 30 days
						}
						else{  // days left
							cvjs_licensedDaysLeft = (31-licenseDay)+day;
						}

					}

				}
				else{
					if (licenseYear==year && licenseMonth>month ){
						//console.log("year+month ok");
						dateCheck = true;

						if ((licenseMonth-month)>=2){
								cvjs_licensedDaysLeft = 40;  // if 2 months difference then at least 30 days

						}
						else{  // one month difference

							if (licenseDay>day){
								cvjs_licensedDaysLeft = 40; // larger than 30 days
							}
							else{  // days left, we normaize on a 30 day month
								cvjs_licensedDaysLeft = (30-licenseDay)+day;
							}
						}

						// figure out number of days left

					}
					else{
						if (licenseYear==year && licenseMonth==month && licenseDay>=day ){
		//					console.log("year+month+day ok");
							dateCheck = true;

						// figure out number of days left
							cvjs_licensedDaysLeft = licenseDay-day;
						}
						else{
		//					console.log("not licensed");
						}
					}
				}
				// need to make the license only contain the URL
				readLicense = dateArr[0];
			}

			var licenseArr = readLicense.split(";");
			if (licenseArr.length==1){
				if (thisUrl.indexOf(readLicense)>-1){
					cvjs_isLicensed = true;
				}
				else{
					cvjs_isLicensed = false;
				}
			}
			else{
				var continueflag = true;
				cvjs_isLicensed = false;
				for (var lkey in licenseArr){
					if (continueflag){
						if (thisUrl.indexOf(licenseArr[lkey])>-1) {
							cvjs_isLicensed = true;
							continueflag = false;
						}
			 		}
				}
			}

	//console.log("top "+dateCheck+" "+cvjs_isLicensed);
			if (!dateCheck) cvjs_isLicensed = false;

			cvjs_LoadDrawing_Conversion_original(floorplan_div, originatingContent, originatingFileNameNoExtension, originatingUsername, originatingPassword);

		}
	else if (load_failures < 5)    //
		{
		load_failures++;
	    setTimeout(function(){CheckLicenseLoad(floorplan_div, originatingContent, originatingFileNameNoExtension, originatingUsername, originatingPassword)},256);
    	}
    else
	    {
			cvjs_isLicensed = false
			load_failures = 0;
			cvjs_LoadDrawing_Conversion_original(floorplan_div, originatingContent, originatingFileNameNoExtension, originatingUsername, originatingPassword);
	    }

//console.log("we are home safe!");

}




function cvjs_checkLicensePreThenLoad(floorplan_div, originatingContent, originatingFileNameNoExtension, originatingUsername, originatingPassword){

//console.log(cvjs_isLicensed+"   cvjs_licenseKeyLoaded="+cvjs_licenseKeyLoaded);

load_failures = 0;
CheckLicenseLoad(floorplan_div, originatingContent, originatingFileNameNoExtension, originatingUsername, originatingPassword);

// setTimeout(function(){return true;},50000);

//console.log(cvjsLicenseKey.cvKey);

}




function cvjs_checkLicense(){

try{

//if (cvjs_debug)  console.log("hello LICENSE CHECK!!!");

	// 3.0.13i
	// let us load the license
	//	loadJSbase(cvjs_LicenseKeyPath+"cvlicense.js");
	// do we have a delay issue here?	
	
if (cvjs_debug) console.log(cvjsLicenseKey);
	
	

	try{	// 3.0.13i
//		if (cvjsLicenseKey == undefined) {
	
	
		if (cvjsLicenseKey.cvKey == undefined) {
	
if (cvjs_debug)  console.log("cvjsLicenseKey.cvKey undefined!");
				
			var window_height = jQuery('#'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).height();
			var window_width = jQuery('#'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).width();

			var w_height_svg = actualURY[cvjs_active_floorplan_div_nr]-actualLLY[cvjs_active_floorplan_div_nr];

	//			console.log(window_height+" "+w_height_svg);
			var font_size = w_height_svg*0.04;

			//	{"font-size": "100px","font-family": "arial"}
	//			var attr_2 = '{ \"font-size\" : \"'+font_size+'px\" , \"font-family\": \"arial\" }';
			var attr_2 = '{ \"font-size\" : \"'+font_size+'\" , \"font-family\": \"arial\" }';

			var json_obj;
			try{
				json_obj = jQuery.parseJSON(attr_2);
			} catch(err){ console.log(err);  }

	//			var notLicensed = cvjs_rPaper[cvjs_active_floorplan_div_nr].text(actualLLX[cvjs_active_floorplan_div_nr]+(actualURX[cvjs_active_floorplan_div_nr]-actualLLX[cvjs_active_floorplan_div_nr])*0.1,actualLLY[cvjs_active_floorplan_div_nr]+(actualURY[cvjs_active_floorplan_div_nr]-actualLLY[cvjs_active_floorplan_div_nr])*0.50,"CADViewer JS Trial Version").attr({"font-size": "100px","font-family": "arial"}).attr({fill:"rgb(255,137,137)", stroke:"rgb(255,137,137)", "fill-opacity":"1"});
			var notLicensed = cvjs_rPaper[cvjs_active_floorplan_div_nr].text(actualLLX[cvjs_active_floorplan_div_nr]+(actualURX[cvjs_active_floorplan_div_nr]-actualLLX[cvjs_active_floorplan_div_nr])*0.2,actualLLY[cvjs_active_floorplan_div_nr]+(actualURY[cvjs_active_floorplan_div_nr]-actualLLY[cvjs_active_floorplan_div_nr])*0.2,"CADViewer JS Trial Version").attr(json_obj).attr({fill:"rgb(237,137,137)", stroke:"rgb(237,137,137)", "fill-opacity":"1"});
			cvjs_masterBackground[cvjs_active_floorplan_div_nr].add(notLicensed);

	if (cvjs_debug)			console.log("License key not found or corrupt! Your CADViewer JS URl is: "+cvjs_currentURL());

			var textString = lTable.languages[cvjs_currentLanguage].InfoMessageModal.LicenseNotFound;
			cvjs_displayInformationModal(floorplan_div_Array[cvjs_active_floorplan_div_nr], textString);

//			jQuery('#cvjs_informationModalText').html(lTable.languages[cvjs_currentLanguage].InfoMessageModal.LicenseNotFound);
//			jQuery('#info_messageModal').modal('show');



			return;
		}
	}catch (err) {

	
if (cvjs_debug)			console.log("license key err"+err);	
	
		// 3.0.13j
		var bbox = cvjs_masterBackground[cvjs_active_floorplan_div_nr].getBBox();
		var w_height_svg = bbox.height;
//		var w_height_svg = actualURY[cvjs_active_floorplan_div_nr]-actualLLY[cvjs_active_floorplan_div_nr];
		var font_size = w_height_svg*0.10;
		var attr_2 = '{ \"font-size\" : \"'+font_size+'\" , \"font-family\": \"arial\" }';

		var json_obj;
		try{
			json_obj = jQuery.parseJSON(attr_2);
		} catch(err){ console.log(err);  }

//		var notLicensed = cvjs_rPaper[cvjs_active_floorplan_div_nr].text(actualLLX[cvjs_active_floorplan_div_nr]+(actualURX[cvjs_active_floorplan_div_nr]-actualLLX[cvjs_active_floorplan_div_nr])*0.2,actualLLY[cvjs_active_floorplan_div_nr]+(actualURY[cvjs_active_floorplan_div_nr]-actualLLY[cvjs_active_floorplan_div_nr])*0.2,"CADViewer JS Trial Version").attr(json_obj).attr({fill:"rgb(237,137,137)", stroke:"rgb(237,137,137)", "fill-opacity":"1"});
		// 3.0.13j
		var notLicensed = cvjs_rPaper[cvjs_active_floorplan_div_nr].text(bbox.x + bbox.width*0.1,bbox.y+bbox.height*0.5,"CADViewer JS Trial Version").attr(json_obj).attr({fill:"rgb(237,137,137)", stroke:"rgb(237,137,137)", "fill-opacity":"1"});

		// 3.0.13k
		cvjs_SVGGroup[cvjs_active_floorplan_div_nr].add(notLicensed);
//		cvjs_masterBackground[cvjs_active_floorplan_div_nr].add(notLicensed);

		cvjs_isLicensed = false;
		//console.log("License key not found or corrupt! Your CADViewer JS URl is: "+cvjs_currentURL());

if (cvjs_debug)			console.log("2 License key not found or corrupt! Your CADViewer JS URl is: "+cvjs_currentURL());

		var textString = lTable.languages[cvjs_currentLanguage].InfoMessageModal.LicenseNotFound;
		cvjs_displayInformationModal(floorplan_div_Array[cvjs_active_floorplan_div_nr], textString);

//		jQuery('#cvjs_informationModalText').html(lTable.languages[cvjs_currentLanguage].InfoMessageModal.LicenseNotFound);
//		jQuery('#info_messageModal').modal('show');

		return;
	}

	var thisUrl = cvjs_currentURL();

	var readLicense = cvjs_mysimple_encode(cvjsLicenseKey.cvKey);

	//console.log("1 top before dateCheck  "+ readLicense);

	var dateArr = readLicense.split(":");
	var dateCheck = false;

	//console.log("2 dateArr "+dateArr.length);

	if (dateArr.length==1){
		// it is an old type key, so we let it live
		dateCheck = true;
		//console.log("no date");
	}else{
		//console.log("there is a date");
		var dateArr2 = dateArr[1].split("-");

		var licenseYear = Number(dateArr2[0]);
		var licenseMonth = Number(dateArr2[1]);
		var licenseDay = Number(dateArr2[2]);
		// Return today's date and time
		var currentTime = new Date();
		// returns the month (from 0 to 11)
		var month = Number(currentTime.getMonth() + 1);
		// returns the day of the month (from 1 to 31)
		var day = Number(currentTime.getDate());
		// returns the year (four digits)
		var year = Number(currentTime.getFullYear());

		if (licenseYear>year){
			//console.log("year ok");
			dateCheck = true;
		}
		else{
			if (licenseYear==year && licenseMonth>month ){
				//console.log("year+month ok");
				dateCheck = true;
			}
			else{
				if (licenseYear==year && licenseMonth==month && licenseDay>=day ){
//					console.log("year+month+day ok");
					dateCheck = true;
				}
				else{
//					console.log("not licensed");

				}
			}
		}
		// need to make the license only contain the URL
		readLicense = dateArr[0];
	}

//console.log("x "+readLicense);

	var licenseArr = readLicense.split(";");
	
	console.log(thisUrl+"  "+readLicense);
	
	if (licenseArr.length==1){	
		if (thisUrl.indexOf(readLicense)>-1){
			cvjs_isLicensed = true;
		}
		else{
			cvjs_isLicensed = false;
		}
	}
	else{
		var continueflag = true;
		cvjs_isLicensed = false;
		for (var lkey in licenseArr){
		//console.log(lkey);
			if (continueflag){
				if (thisUrl.indexOf(licenseArr[lkey])>-1) {
					//console.log(thisUrl+" "+lkey)
					cvjs_isLicensed = true;
					continueflag = false;
				}
			}
		}
	}

	//console.log(dateCheck+" "+cvjs_isLicensed);

	if (!dateCheck) cvjs_isLicensed = false;

	
	if (cvjs_debug) console.log("DATE CHECK "+dateCheck+"   license is "+cvjs_isLicensed);
	
	
	
	if (!cvjs_isLicensed){
		
		
		// 3.0.13j
		var bbox = cvjs_masterBackground[cvjs_active_floorplan_div_nr].getBBox();
		var w_height_svg = bbox.height;
		
		//var w_height_svg = actualURY[cvjs_active_floorplan_div_nr]-actualLLY[cvjs_active_floorplan_div_nr];
		var font_size = w_height_svg*0.10;
		var attr_2 = '{ \"font-size\" : \"'+font_size+'\" , \"font-family\": \"arial\" }';

		var json_obj;
		try{
			json_obj = jQuery.parseJSON(attr_2);
		} catch(err){ console.log(err);  }

//		var notLicensed = cvjs_rPaper[cvjs_active_floorplan_div_nr].text(actualLLX[cvjs_active_floorplan_div_nr]+(actualURX[cvjs_active_floorplan_div_nr]-actualLLX[cvjs_active_floorplan_div_nr])*0.2,actualLLY[cvjs_active_floorplan_div_nr]+(actualURY[cvjs_active_floorplan_div_nr]-actualLLY[cvjs_active_floorplan_div_nr])*0.2,"CADViewer JS Trial Version").attr(json_obj).attr({fill:"rgb(237,137,137)", stroke:"rgb(237,137,137)", "fill-opacity":"1"});

		// 3.0.13k
		var notLicensed = cvjs_rPaper[cvjs_active_floorplan_div_nr].text(bbox.x + bbox.width*0.1,bbox.y+bbox.height*0.5,"CADViewer JS Trial Version").attr(json_obj).attr({fill:"rgb(237,137,137)", stroke:"rgb(237,137,137)", "fill-opacity":"1"});
		cvjs_SVGGroup[cvjs_active_floorplan_div_nr].add(notLicensed);
		
		//cvjs_masterBackground[cvjs_active_floorplan_div_nr].add(notLicensed);
		var displayUrl = thisUrl.substring(0, thisUrl.lastIndexOf("/"));

//		jQuery('#cvjs_informationModalText').html("The key:"+readLicense+" does not match this Url: "+displayUrl);
//		jQuery('#info_messageModal').modal('show');

		//console.log(readLicense+" is NOT licensed for: "+thisUrl);
				
		cvjs_isLicensed = false;
	}

	//console.log("readLicense= "+readLicense+" thisUrl="+thisUrl);


}
catch (err){console.log("cvjs_checkLicense error: "+err);}


}


///////////////// LICENSE KEY RELATED METHODS



/**
 * Display the current version number of the CADViewer JS toolkit and viewer
 * @return {string} version - current version number
 */

function cvjs_version(){

	return(cvjs_versionNumber);
}


/**  REDLINE top level user commands, draw set color, line thickness  */


/**
 * Draws interactively a freehand redline. The data object of the redline is defined as a Redline. Prior to calling this method, cvjs_setCurrentRedlineValues() should be called.
 */
function cvjs_drawRedline__Freehand() {

	jQuery("body").disableSelection();

	cvjs_addHandleFunc_RedlinePolygonFreehand();
}



var color_modal_offset_flag = [true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true];


/**
 * Calls modal for setting redline color
 * @param {string} floorplan_div - name of div containing CADViewer JS canvas
 */

function cvjs_setRedlineColor(floorplan_div){


	// 3.0.15c   - add "_svg" to div, if called through external API
	if (floorplan_div.lastIndexOf("_svg") == floorplan_div.length-4){
			// do nothing
	}
	else{
		floorplan_div = floorplan_div + "_svg";
	}

	if (floorplan_div == undefined){
	
		// do nothing;
	}
	else{
		// find active floorplan number and set that
		cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(floorplan_div);
	
	}
 	
	if (cvjs_interactiveMethod_Active[cvjs_active_floorplan_div_nr]) return;
	cvjs_interactiveMethod_Active[cvjs_active_floorplan_div_nr] = true;

	
	
	

	if (color_modal_offset_flag[cvjs_active_floorplan_div_nr]){
		color_modal_offset_flag[cvjs_active_floorplan_div_nr] = false;
		// 3.1.21j  .appendTo('body')
		jQuery("#colorModal_"+floorplan_div).css({position: "fixed"});
		jQuery("#colorModal_"+floorplan_div).offset({left:150+jQuery('#'+floorplan_div).position().left, top: 50+jQuery('#'+floorplan_div).position().top });
	}
    jQuery("#colorModal_"+floorplan_div).show();
}


function cvjs_color_modal_hide(floorplan_div){

	cvjs_interactiveMethod_Active[cvjs_active_floorplan_div_nr] = false;

	jQuery('#colorModal_'+floorplan_div).hide();
}



var publishPDF_modal_offset_flag = [true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true];


/**
 * Calls modal for publish PDF document
 * @param {string} floorplan_div - name of div containing CADViewer JS canvas
 */

function cvjs_setPublishPDF(floorplan_div){

	// 3.2.01e
	if (floorplan_div.lastIndexOf("_svg") == floorplan_div.length-4){
			// do nothing
	}
	else{
		floorplan_div = floorplan_div + "_svg";
	}


if (cvjs_debug) console.log("first in: cvjs_setPublishPDF "+floorplan_div);

	if (cvjs_interactiveMethod_Active[cvjs_active_floorplan_div_nr]) return;
	cvjs_interactiveMethod_Active[cvjs_active_floorplan_div_nr] = true;


	if (publishPDF_modal_offset_flag[cvjs_active_floorplan_div_nr]){
		publishPDF_modal_offset_flag[cvjs_active_floorplan_div_nr] = false;
		// 3.1.21j  .appendTo('body')
		jQuery("#publishPDFModal_"+floorplan_div).css({position: "fixed"});
		jQuery("#publishPDFModal_"+floorplan_div).offset({left:150+jQuery('#'+floorplan_div).position().left, top: 50+jQuery('#'+floorplan_div).position().top});
	}
	
//PPPPPPPPPPPPPPPP	

	// if original document is, PDF we do not want to publish back to server, use cad + redlines, or original pdf + redlines
	// 3.0.13e
	if (cvjs_preConversionFileExtension[cvjs_active_floorplan_div_nr].indexOf("pdf")==0){
console.log("hide menu x2");
		jQuery("#cvjs_publishpdfmode3").hide();
		jQuery("#radioPublishAsPDF3_"+floorplan_div).hide();
	}
	else{	
console.log("show menu x2");
		jQuery("#cvjs_publishpdfmode3").show();
		jQuery("#radioPublishAsPDF3_"+floorplan_div).show();
	}

//	window.alert(cvjs_preConversionFileExtension[cvjs_active_floorplan_div_nr].indexOf("pdf")==0);
//	window.alert(cvjs_customPdfFolderFlag);
	
	if (cvjs_preConversionFileExtension[cvjs_active_floorplan_div_nr].indexOf("pdf")==0  && cvjs_customPdfFolderFlag){
		// show entire document button
		console.log("show entire document button");
		jQuery("#publishPDFModal_row2_"+floorplan_div).show();
		jQuery("#publishPDFModal_row3_"+floorplan_div).hide();
		jQuery("#publishPDFModal_row4_"+floorplan_div).hide();
	}
	else{
	// remove entire document button
		console.log("hide button");
		jQuery("#publishPDFModal_row2_"+floorplan_div).hide();
		jQuery("#publishPDFModal_row3_"+floorplan_div).show();
		jQuery("#publishPDFModal_row4_"+floorplan_div).hide();

	}

	
	// if e-mail checked we turn it on when we open the modal
	if (jQuery("#radioPublishAsPDF2_"+floorplan_div).is(":checked")){	
		jQuery("#publishPDFModal_row2_"+floorplan_div).hide();
		jQuery("#publishPDFModal_row3_"+floorplan_div).hide();
		jQuery("#publishPDFModal_row4_"+floorplan_div).show();
	}	
	
//	window.alert(cvjs_preConversionFileExtension[cvjs_active_floorplan_div_nr]);	
	
		
    jQuery("#publishPDFModal_"+floorplan_div).show();
}


/**
 * Publish redlined content as PDF
 * @param {string} floorplan_div - name of div containing CADViewer JS canvas
 */


function cvjs_publishPDF_modal_hide(floorplan_div){
	

	// 3.0.15c   - add "_svg" to div, if called through external API
	if (floorplan_div.lastIndexOf("_svg") == floorplan_div.length-4){
			// do nothing
	}
	else{
		floorplan_div = floorplan_div + "_svg";
	}

	cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(floorplan_div);	
		

	cvjs_interactiveMethod_Active[cvjs_active_floorplan_div_nr] = false;

	jQuery('#publishPDFModal_'+floorplan_div).hide();
}




var mergeDXF_modal_offset_flag = [true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true];


/**
 * Calls modal for merge DXF document
 * @param {string} floorplan_div - name of div containing CADViewer JS canvas
 */

function cvjs_setMergeDXF(floorplan_div){

	if (cvjs_interactiveMethod_Active[cvjs_active_floorplan_div_nr]) return;
	cvjs_interactiveMethod_Active[cvjs_active_floorplan_div_nr] = true;


	if (mergeDXF_modal_offset_flag[cvjs_active_floorplan_div_nr]){
		mergeDXF_modal_offset_flag[cvjs_active_floorplan_div_nr] = false;
		// 3.1.21j  .appendTo('body')
		jQuery("#mergeDXFModal_"+floorplan_div).css({position: "fixed"});
		jQuery("#mergeDXFModal_"+floorplan_div).offset({left:150+jQuery('#'+floorplan_div).position().left, top: 50+jQuery('#'+floorplan_div).position().top});
	}
	
//PPPPPPPPPPPPPPPP	

	// if original document is, PDF we do not want to publish back to server, use cad + redlines, or original pdf + redlines
	// 3.0.13e
	if (cvjs_preConversionFileExtension[cvjs_active_floorplan_div_nr].indexOf("pdf")==0){
console.log("hide menu x2");
		jQuery("#cvjs_mergedxfmode3").hide();
		jQuery("#radioMergeAsDXF3_"+floorplan_div).hide();
	}
	else{	
console.log("show menu x2");
		jQuery("#cvjs_mergedxfmode3").show();
		jQuery("#radioMergeAsDXF3_"+floorplan_div).show();
	}

//	window.alert(cvjs_preConversionFileExtension[cvjs_active_floorplan_div_nr].indexOf("pdf")==0);
//	window.alert(cvjs_customPdfFolderFlag);
	
	if (cvjs_preConversionFileExtension[cvjs_active_floorplan_div_nr].indexOf("pdf")==0  && cvjs_customPdfFolderFlag){
		// show entire document button
		console.log("show entire document button");
		jQuery("#mergeDXFModal_row2_"+floorplan_div).show();
		jQuery("#mergeDXFModal_row3_"+floorplan_div).hide();
		jQuery("#mergeDXFModal_row4_"+floorplan_div).hide();
	}
	else{
	// remove entire document button
		console.log("hide button");
		jQuery("#mergeDXFModal_row2_"+floorplan_div).hide();
		jQuery("#mergeDXFModal_row3_"+floorplan_div).show();
		jQuery("#mergeDXFModal_row4_"+floorplan_div).hide();

	}

	
	// if e-mail checked we turn it on when we open the modal
	if (jQuery("#radioMergeAsDXF2_"+floorplan_div).is(":checked")){	
		jQuery("#mergeDXFModal_row2_"+floorplan_div).hide();
		jQuery("#mergeDXFModal_row3_"+floorplan_div).hide();
		jQuery("#mergeDXFModal_row4_"+floorplan_div).show();
	}	
	
//	window.alert(cvjs_preConversionFileExtension[cvjs_active_floorplan_div_nr]);	
	
		
    jQuery("#mergeDXFModal_"+floorplan_div).show();
}


function cvjs_mergeDXF_modal_hide(floorplan_div){
	

	cvjs_interactiveMethod_Active[cvjs_active_floorplan_div_nr] = false;

	jQuery('#mergeDXFModal_'+floorplan_div).hide();
}






var generic_color_offset_flag = [true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true];


/**
 * Calls modal for setting redline color
 */

function cvjs_setGenericColor(){

	if (generic_color_offset_flag[cvjs_active_floorplan_div_nr]){
		generic_color_offset_flag[cvjs_active_floorplan_div_nr] = false;
		// 3.1.21j  .appendTo('body')
		jQuery("#genericColorModal").css({position: "fixed"});
		jQuery("#genericColorModal").offset({left:150+jQuery('#'+floorplan_div).position().left, top: 50+jQuery('#'+floorplan_div).position().top});
	}
	jQuery("#genericColorModal").show();
}



var backgroundcolor_modal_offset_flag = [true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true];


/**
 * Calls modal for setting background color
 * @param {string} floorplan_div - name of div containing CADViewer JS canvas
 */

function cvjs_setBackgroundColor(floorplan_div){

	if (cvjs_interactiveMethod_Active[cvjs_active_floorplan_div_nr]) return;
	cvjs_interactiveMethod_Active[cvjs_active_floorplan_div_nr] = true;

	
	// 3.0.15c   - add "_svg" to div, if called through external API
	if (cvjs_debug) console.log(floorplan_div.lastIndexOf("_svg")+"  "+(floorplan_div.length-4));
	if (floorplan_div.lastIndexOf("_svg") == floorplan_div.length-4){
			// do nothing
	}
	else{
		floorplan_div = floorplan_div + "_svg";
	}
	
	
	
	cvjs_active_floorplan_div_nr  = cvjs_rPaperIndex(floorplan_div);
	
	
	
	if (backgroundcolor_modal_offset_flag[cvjs_active_floorplan_div_nr]){
		backgroundcolor_modal_offset_flag[cvjs_active_floorplan_div_nr] = false;
		// 3.1.21j  .appendTo('body')
		jQuery("#backgroundModal_"+floorplan_div).css({position: "fixed"});
		jQuery("#backgroundModal_"+floorplan_div).offset({left:150+jQuery('#'+floorplan_div).position().left, top: 50+jQuery('#'+floorplan_div).position().top});
	}
	jQuery("#backgroundModal_"+floorplan_div).show();

//      	jQuery("#backgroundModal").modal('show');
}


function cvjs_exit_backgroundColor(floorplan_div){

	cvjs_interactiveMethod_Active[cvjs_active_floorplan_div_nr] = false;
	jQuery('#backgroundModal_'+floorplan_div).hide();

}

function cvjs_setBackgroundColorViaButton(floorplan_div){

	cvjs_interactiveMethod_Active[cvjs_active_floorplan_div_nr] = false;
	jQuery("#backgroundModal_"+floorplan_div).hide();

//       	jQuery("#backgroundModal").modal('hide');
}

function cvjs_setBackgroundColorFromPicker(pickcolor){

	var color = "#"+pickcolor;
	cvjs_setCurrentRedlineValues_Color(color);

}

var cvjs_genericPickedColor = "#AA0000"
function cvjs_setGenericColorFromPicker(pickcolor){
	cvjs_genericPickedColor = "#"+pickcolor;
}



var cvjs_blackBackground = false;
var cvjs_currentBackgroundColor = ["#FFFFFF","#FFFFFF","#FFFFFF","#FFFFFF","#FFFFFF","#FFFFFF","#FFFFFF","#FFFFFF","#FFFFFF","#FFFFFF","#FFFFFF","#FFFFFF","#FFFFFF","#FFFFFF","#FFFFFF","#FFFFFF","#FFFFFF","#FFFFFF","#FFFFFF","#FFFFFF","#FFFFFF"];



function componentToHex(c) {
    var hex = c.toString(16);
    return hex.length == 1 ? "0" + hex : hex;
}

function rgbToHex(r, g, b) {
    return "#" + componentToHex(r) + componentToHex(g) + componentToHex(b);
}






/**
 * Set the background color of CADViewer JS canvas, using HEX
  * @param {hex} color of background, hex string, omit #
  * @param {string} floorplan_div - name of div containing CADViewer JS canvas
 */

function cvjs_setBackgroundColorHex(hex, floorplan_div){


	if (floorplan_div == undefined)
		floorplan_div = floorplan_div_Array[cvjs_active_floorplan_div_nr]

//console.log("XXX"+hex);

	// 3.2.01b
	if (floorplan_div.indexOf("_svg")<1){
		floorplan_div = floorplan_div +"_svg"; 
	}


	cvjs_blackBackground = false;
	hex = hex.toString()
	
	// 3.2.01g	
	cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(floorplan_div);

//	console.log("top"+hex.toString());

	/*
		var myhex = hex;
		try {
			myhex = hex.rgb;		

	console.log("myhex first "+myhex);
			
			
			if (myhex == undefined) 
				myhex = hex;
			
			if (myhex.indexOf(",")>-1){
			
				var r = parseInt(myhex.substring(0,myhex.indexOf(",")));
				myhex = myhex.substring(myhex.indexOf(",")+1);
				var g = parseInt(myhex.substring(0,myhex.indexOf(",")));
				var b = parseInt(myhex.substring(myhex.indexOf(",")+1));

				console.log("rgb " +r+" "+g+" "+b);
				
				myhex = rgbToHex(r, g, b);		
		
			}
			
			console.log("color "+myhex);
		}
		catch(err){
			myhex = hex;
		}
		
		hex = myhex;
	
	*/
	
		var color = "";
		if (hex.indexOf("#")==0){
			color = hex;
		}
		else{
			color = "#"+hex;
		}

//		console.log("setting color hex "+color);

		cvjs_currentBackgroundColor[cvjs_active_floorplan_div_nr] = color;
		jQuery('#'+floorplan_div).css("background-color",color);

		var i=0;

		var oArr = {};
		jQuery("*[id]").each(function() {
		   
	

			try{
				var id = jQuery(this).attr('id');
				var searchString = "[id^="+floorplan_div+"]";
				var svgID = jQuery("#"+id).parents(searchString).attr('id');
				
				if (svgID == floorplan_div_Array[cvjs_active_floorplan_div_nr]){
				   if (!oArr[id]) oArr[id] = true;
				}

			}
			catch (err) { 
			//	console.log(err+" XX"+id+"XX");
			}

					
		   
//		   var id = jQuery(this).attr('id');
//		   if (!oArr[id]) oArr[id] = true;
		   
		   
		   
		   
		});



		if (hex.indexOf("000000")>-1){

		cvjs_blackBackground = true;

		   for (var prop in oArr){
				try{
					var target = "#"+prop;
					if (jQuery(target).attr("id").indexOf("cv_")==0){

						var ostroke = jQuery(target).css("stroke");
						var ofill = jQuery(target).css("fill");

//						i++;
//						if (i<10) console.log("fill parameters "+ostroke+"  "+ofill);

						if (ostroke!="none"){
							if (ostroke=="#000000"  || ostroke=="#000" ) jQuery(target).css("stroke", "#FFFFFF");
							else
								if ( ostroke=="rgb(0, 0, 0)" || ostroke=="rgb( 0, 0, 0)" || ostroke=="rgb(0,0,0)" ) jQuery(target).css("stroke", "#FFFFFF");
						}

						if (ofill!="none"){
							if (ofill=="#000000"|| ofill=="#000" ) jQuery(target).css("fill", "#FFFFFF");
							else
								if (ofill=="rgb(0, 0, 0)" || ofill=="rgb( 0, 0, 0)" || ofill=="rgb(0,0,0)" ) jQuery(target).css("fill", "#FFFFFF");
						}
					}
				}catch(err){}
			}
		}


		if (hex.indexOf("FFFFFF")>-1){
		   for (var prop in oArr){

				try{
					var target = "#"+prop;
					if (jQuery(target).attr("id").indexOf("cv_")==0){

						var ostroke = jQuery(target).css("stroke");
						var ofill = jQuery(target).css("fill");

//						i++;
//						if (i<10) console.log("fill parameters "+ostroke+"  "+ofill);

						if (ostroke!="none"){
							if (ostroke=="#FFFFFF" || ostroke=="#FFF") jQuery(target).css("stroke", "#000000");
							else
								if (ostroke=="rgb(255, 255, 255)" || ostroke=="rgb( 255, 255, 255)" || ostroke=="rgb(255,255,255)" ) jQuery(target).css("stroke", "#000000");
						}

						if (ofill!="none"){
							if (ofill=="#FFFFFF" || ofill=="#FFF") jQuery(target).css("fill", "#000000");
							else
								if (ofill=="rgb(255, 255, 255)" || ofill=="rgb( 255, 255, 255)" || ofill=="rgb(255,255,255)" ) jQuery(target).css("fill", "#000000");
						}
					}
				}catch(err){}
			}

		}


}




/// factor for redline thickness based on size of loaded drawing
var cvjs_redlineThickness_scaleFactor = 1;

/// normalized factor for redline thickness based on size of loaded drawing, typically
/// 1 pixel of a 3000 diagonal width drawing, 1/5000

var cvjs_redlineThickness_drawingFactor = 0.00020;
var redline_linethickness_offset_flag = [true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true];


var page_change_in_document_offset_flag = [true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true];


/**
 * Calls modal for setting redline color
 * @param {string} floorplan_div - name of div containing CADViewer JS canvas
 */

function cvjs_setRedlineThickness(floorplan_div){


	// 3.0.15c   - add "_svg" to div, if called through external API
	if (floorplan_div.lastIndexOf("_svg") == floorplan_div.length-4){
			// do nothing
	}
	else{
		floorplan_div = floorplan_div + "_svg";
	}

	if (floorplan_div == undefined){
	
		// do nothing;
	}
	else{
		// find active floorplan number and set that
		cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(floorplan_div);
	
	}


	if (cvjs_interactiveMethod_Active[cvjs_active_floorplan_div_nr]) return;
	cvjs_interactiveMethod_Active[cvjs_active_floorplan_div_nr] = true;
	

	if (redline_linethickness_offset_flag[cvjs_active_floorplan_div_nr]){
		redline_linethickness_offset_flag[cvjs_active_floorplan_div_nr] = false;
		// 3.1.21j  .appendTo('body')
		jQuery("#thicknessModal_"+floorplan_div).css({position: "fixed"});
		jQuery("#thicknessModal_"+floorplan_div).offset({left:150+jQuery('#'+floorplan_div).position().left, top: 50+jQuery('#'+floorplan_div).position().top});
	}

	jQuery("#thicknessModal_"+floorplan_div).show();
}

function cvjs_setRedlineColorViaButton(floorplan_div){

		cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(floorplan_div);

		cvjs_interactiveMethod_Active[cvjs_active_floorplan_div_nr] = false;
       	jQuery("#colorModal_"+floorplan_div).hide();
}

function cvjs_setRedlineColorFromPicker(pickcolor){

	var color = "#"+pickcolor;
	cvjs_setCurrentRedlineValues_Color(color);

}

function cvjs_setRedlineThicknessViaButton(floorplan_div){

	cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(floorplan_div);

	var thick = jQuery('#cvjs_redlineThicknessInput_'+floorplan_div).val();

	cvjs_setCurrentRedlineValues_StokeWidth(thick);

    jQuery("#thicknessModal_"+floorplan_div).hide();

    cvjs_interactiveMethod_Active[cvjs_active_floorplan_div_nr] = false;

}


function cvjs_changePageByNumberViaButton(floorplan_div){

	cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(floorplan_div);

	var newpage = jQuery('#cvjs_inputDocumentPageChange_'+floorplan_div).val();

	newpage = parseInt(newpage);
		
	cvjs_changePageByNumber(floorplan_div, newpage);
			
    jQuery("#documentPageChangeModal_"+floorplan_div).hide();

    cvjs_interactiveMethod_Active[cvjs_active_floorplan_div_nr] = false;

}



function cvjs_enterPageChangeNumber(floorplan_div){

	if (cvjs_interactiveMethod_Active[cvjs_active_floorplan_div_nr]) return;
	cvjs_interactiveMethod_Active[cvjs_active_floorplan_div_nr] = true;

	
	
	// 3.3.01a
	if (cvjs_debug) console.log(floorplan_div.lastIndexOf("_svg")+"  "+(floorplan_div.length-4));
	if (floorplan_div.lastIndexOf("_svg") == floorplan_div.length-4){
			// do nothing
	}
	else{
		floorplan_div = floorplan_div + "_svg";
	}
	
	
	
	
	
	
	

	if (page_change_in_document_offset_flag[cvjs_active_floorplan_div_nr]){
		page_change_in_document_offset_flag[cvjs_active_floorplan_div_nr] = false;
		// 3.1.21j .appendTo('body');

		//jQuery("#documentPageChangeModal_"+floorplan_div).offset({ top: 50, left: 150 });

		jQuery("#documentPageChangeModal_"+floorplan_div).css({position: "fixed"});
		jQuery("#documentPageChangeModal_"+floorplan_div).offset({left:150+jQuery('#'+floorplan_div).position().left, top: 50+jQuery('#'+floorplan_div).position().top}).appendTo('body');

	}

	jQuery("#documentPageChangeModal_"+floorplan_div).show();
}









/**
 * Draws a redline rectangle - uses global settings of color and width
 * @param {string} floorplan_div - name of div containing CADViewer JS canvas
 */

function cvjs_drawRedlineRectangle(floorplan_div){

	// 3.0.15c   - add "_svg" to div, if called through external API
	if (floorplan_div.lastIndexOf("_svg") == floorplan_div.length-4){
			// do nothing
	}
	else{
		floorplan_div = floorplan_div + "_svg";
	}


	cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(floorplan_div);
	
	cvjs_redline++;
	cvjs_setCurrentRedlineValues("RED_"+cvjs_redline, "redline"+cvjs_redline, cvjs_redline, "RedLineLayer", "unassigned", cvjs_currentRedline_color, cvjs_currentRedline_strokeWidth, cvjs_currentRotationAngle[cvjs_active_floorplan_div_nr]);
	cvjs_drawSpaceObject_RedlineRectangle();

}

/**
 * Draws a redline filled rectangle - uses global settings of color and width
 * @param {string} floorplan_div - name of div containing CADViewer JS canvas
*/

function cvjs_drawRedlineFilledRectangle(floorplan_div){

	// 3.0.15c   - add "_svg" to div, if called through external API
	if (floorplan_div.lastIndexOf("_svg") == floorplan_div.length-4){
			// do nothing
	}
	else{
		floorplan_div = floorplan_div + "_svg";
	}


	cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(floorplan_div);

	cvjs_redline++;
	cvjs_setCurrentRedlineValues("RED_"+cvjs_redline, "redline"+cvjs_redline, cvjs_redline, "RedLineLayer", "unassigned", cvjs_currentRedline_color, cvjs_currentRedline_strokeWidth, cvjs_currentRotationAngle[cvjs_active_floorplan_div_nr]);
	cvjs_drawSpaceObject_FilledRedlineRectangle();

}

/**
 * Draws a redline cloud - uses global settings of color and width
 * @param {string} floorplan_div - name of div containing CADViewer JS canvas
 */

function cvjs_drawRedlineCloud(floorplan_div){


	// 3.0.15c   - add "_svg" to div, if called through external API
	if (floorplan_div.lastIndexOf("_svg") == floorplan_div.length-4){
			// do nothing
	}
	else{
		floorplan_div = floorplan_div + "_svg";
	}



	cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(floorplan_div);

	cvjs_redline++;
	cvjs_setCurrentRedlineValues("RED_"+cvjs_redline, "redline"+cvjs_redline, cvjs_redline, "RedLineLayer", "unassigned", cvjs_currentRedline_color, cvjs_currentRedline_strokeWidth, cvjs_currentRotationAngle[cvjs_active_floorplan_div_nr]);
	cvjs_drawSpaceObject_RedlineCloud();

}

/**
 * Draws a redline polyline - uses global settings of color and width
 * @param {string} floorplan_div - name of div containing CADViewer JS canvas
 */

function cvjs_drawRedlinePolyline(floorplan_div){


	// 3.0.15c   - add "_svg" to div, if called through external API
	if (floorplan_div.lastIndexOf("_svg") == floorplan_div.length-4){
			// do nothing
	}
	else{
		floorplan_div = floorplan_div + "_svg";
	}

	cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(floorplan_div);

	cvjs_redline++;
	cvjs_setCurrentRedlineValues("RED_"+cvjs_redline, "redline"+cvjs_redline, cvjs_redline, "RedLineLayer", "unassigned", cvjs_currentRedline_color, cvjs_currentRedline_strokeWidth, cvjs_currentRotationAngle[cvjs_active_floorplan_div_nr]);
	cvjs_drawSpaceObject_RedlinePolyline();

}


/**
 * Draws a redline filled polygon - uses global settings of color and width
 * @param {string} floorplan_div - name of div containing CADViewer JS canvas
 */

function cvjs_drawRedlineFilledPolygon(floorplan_div){

	// 3.0.15c   - add "_svg" to div, if called through external API
	if (floorplan_div.lastIndexOf("_svg") == floorplan_div.length-4){
			// do nothing
	}
	else{
		floorplan_div = floorplan_div + "_svg";
	}


	cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(floorplan_div);

	cvjs_redline++;
	cvjs_setCurrentRedlineValues("RED_"+cvjs_redline, "redline"+cvjs_redline, cvjs_redline, "RedLineLayer", "unassigned", cvjs_currentRedline_color, cvjs_currentRedline_strokeWidth, cvjs_currentRotationAngle[cvjs_active_floorplan_div_nr]);
	cvjs_drawSpaceObject_RedlineFilledPolygon();

}

/**
 * Draws a redline polyline with arrow - uses global settings of color and width
 * @param {string} floorplan_div - name of div containing CADViewer JS canvas
*/

function cvjs_drawRedlineArrow(floorplan_div){

	// 3.0.15c   - add "_svg" to div, if called through external API
	if (floorplan_div.lastIndexOf("_svg") == floorplan_div.length-4){
			// do nothing
	}
	else{
		floorplan_div = floorplan_div + "_svg";
	}


	cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(floorplan_div);

	cvjs_redline++;
	cvjs_setCurrentRedlineValues("RED_"+cvjs_redline, "redline"+cvjs_redline, cvjs_redline, "RedLineLayer", "unassigned", cvjs_currentRedline_color, cvjs_currentRedline_strokeWidth, cvjs_currentRotationAngle[cvjs_active_floorplan_div_nr]);
	cvjs_drawSpaceObject_RedlineArrowPolyline();
}


var redline_text_offset_flag = [true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true];



/**
 * Draws a redline text - uses global settings of color
 * @param {string} floorplan_div - name of div containing CADViewer JS canvas
 */

 function cvjs_drawRedlineText(floorplan_div){

 	// 3.0.15c   - add "_svg" to div, if called through external API
	if (floorplan_div.lastIndexOf("_svg") == floorplan_div.length-4){
			// do nothing
	}
	else{
		floorplan_div = floorplan_div + "_svg";
	}
	cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(floorplan_div);


 
	if (cvjs_interactiveMethod_Active[cvjs_active_floorplan_div_nr]) return;
	cvjs_interactiveMethod_Active[cvjs_active_floorplan_div_nr] = true;

	if (redline_text_offset_flag[cvjs_active_floorplan_div_nr]){
		redline_text_offset_flag[cvjs_active_floorplan_div_nr] = false;
		// 3.1.21j .appendTo('body');	
		jQuery("#redlinetextModal_"+floorplan_div).css({position: "fixed"});
		jQuery("#redlinetextModal_"+floorplan_div).offset({left:150+jQuery('#'+floorplan_div).position().left, top: 50+jQuery('#'+floorplan_div).position().top});
	}
	jQuery('#redline_text').val("");
	jQuery("#redlinetextModal_"+floorplan_div).show();

}

function cvjs_hide_redline_text_modal(floorplan_div){

	cvjs_interactiveMethod_Active[cvjs_active_floorplan_div_nr] = false;
	jQuery('#redlinetextModal_'+floorplan_div).hide();
}



var textSearchPre = "";
var textInstanceCounter = 1;

/**
 * Calls the interactive modal for text search
 */

function cvjs_startSearchText(){

	var text = jQuery('#cvjs_searchTextFromModal').val();
	var zoomlevel = jQuery('#cvjs_percentageLevelFromModal').val();

	if (textSearchPre!=text){
		// new text search
		cvjs_searchText( text, zoomlevel);
		textInstanceCounter = 1;
		textSearchPre = text;
	}
	else{
		// next instance in the file
		textInstanceCounter++;
//console.log(textInstanceCounter);
		var flag = cvjs_searchTextInstance(text, zoomlevel, textInstanceCounter);
		//console.log(flag);
		if (!flag){
			//console.log("flag is false "+textInstanceCounter);
			textInstanceCounter=1;
			cvjs_searchTextInstance(text, zoomlevel, textInstanceCounter);
		}
	}

}



// var worldUnits = { globalOrigin: { x: 1111, y: 1111},
//                           units: “m”,
//                           svgToWorldUnits: 100.0                                                                   }
//					};


var cvjs_globalOrigin_x = 0;
var cvjs_globalOrigin_y = 0;
//var cvjs_units = "mm";   3.2.02h
var  cvjs_units = ["mm","mm","mm","mm","mm","mm","mm","mm","mm","mm","mm","mm","mm","mm","mm","mm","mm","mm","mm","mm","mm","mm","mm","mm","mm","mm","mm","mm","mm","mm","mm"];
// var cvjs_svgToWorldUnits = 1;  3.2.02h
var cvjs_svgToWorldUnits = [ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ];

var cvjs_currentMeasurementLength = 0;
var cvjs_callbackMeasurement = false;
var cvjs_calibratedMeasurement = false;
var calibrate_x1;
var calibrate_y1;
var calibrate_x2;
var calibrate_y2;

cvjs_calibrate_end = false;
cvjs_measurement_end = false;


var measurement_x1;
var measurement_y1;
var measurement_x2;
var measurement_y2;

var calibrate_text_offset_flag = [true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true];


/**
 * Calibrate measurement
 * @param {string} floorplan_div - name of div containing CADViewer JS canvas
 */
function cvjs_calibrateMeasurement(floorplan_div){


	if (cvjs_interactiveMethod_Active[cvjs_active_floorplan_div_nr]) return;
	cvjs_interactiveMethod_Active[cvjs_active_floorplan_div_nr] = true;

	
	// 3.0.15c   - add "_svg" to div, if called through external API
	if (floorplan_div.lastIndexOf("_svg") == floorplan_div.length-4){
			// do nothing
	}
	else{
		floorplan_div = floorplan_div + "_svg";
	}	
	
	
	
	

cvjs_calibrate_end = true;

// check if WorldUnits already there !!!

/**
	// 3.3.01g  - we are setting these at load time, not here

	try{
		cvjs_units[cvjs_rPaperIndex(floorplan_div)] = worldUnits.units;
		cvjs_svgToWorldUnits[cvjs_rPaperIndex(floorplan_div)] = worldUnits.svgToWorld;

	}catch (err){


	}
**/


	if (calibrate_text_offset_flag[cvjs_active_floorplan_div_nr]){
		calibrate_text_offset_flag[cvjs_active_floorplan_div_nr] = false;
		// 3.1.21j .appendTo('body');
		jQuery("#calibrateModal_"+floorplan_div).css({position: "fixed"});
		jQuery("#calibrateModal_"+floorplan_div).offset({left:150+jQuery('#'+floorplan_div).position().left, top: 50+jQuery('#'+floorplan_div).position().top});
	}

	jQuery("#calibrateModal_"+floorplan_div).show();
	cvjs_calibrateMeasurement_RedlinePolyline();

}


function cvjs_exitCalibrateModal(floorplan_div, flag){


	if (cvjs_calibrate_end){
		cvjs_measurement_end = false;


		if (flag == 2){

			// extract values
			var unit = jQuery("#cvjs_unitForScale").val();

		//	console.log(unit);

			if (unit == 1 )cvjs_units[cvjs_rPaperIndex(floorplan_div)] = "m";
			else
			if (unit == 2 )cvjs_units[cvjs_rPaperIndex(floorplan_div)] = "cm";
			else
			if (unit == 3 )cvjs_units[cvjs_rPaperIndex(floorplan_div)] = "mm";
			else
			if (unit == 4 )cvjs_units[cvjs_rPaperIndex(floorplan_div)] = "km";
			else
			if (unit == 5 )cvjs_units[cvjs_rPaperIndex(floorplan_div)] = "feet";
			else
			if (unit == 6 )cvjs_units[cvjs_rPaperIndex(floorplan_div)] = "inches";
			else
			if (unit == 7 )cvjs_units[cvjs_rPaperIndex(floorplan_div)] = "miles";

			var referenceDistance = jQuery("#cvjs_calibrateReferenceDistance").val();




		// console.log(calibrate_x1+" "+calibrate_x2+" "+calibrate_y1+" "+calibrate_y2);
		//	console.log("reference distance "+referenceDistance+" polyPath_redline1="+polyPath_redline1+"  "+(calibrate_x2-calibrate_x1)+" "+(calibrate_y2-calibrate_y1));

			try{

			var drawingLength = Math.sqrt( Math.pow( (calibrate_x2-calibrate_x1), 2) + Math.pow( (calibrate_y2-calibrate_y1),2 ))


			}
			catch (err){ }

			//console.log(drawingLength);

			if ( isNaN(drawingLength)  || drawingLength==0){

				var textString = lTable.languages[cvjs_currentLanguage].InfoMessageModal.SelectTwoPoints;
				cvjs_displayInformationModal(floorplan_div_Array[cvjs_active_floorplan_div_nr], textString);

				//jQuery('#cvjs_informationModalText').html(lTable.languages[cvjs_currentLanguage].InfoMessageModal.SelectTwoPoints);
				//jQuery('#info_messageModal').modal('show');
				return;
			}


			if (referenceDistance.indexOf(",")>-1){

					var newNumber =  referenceDistance.substring(0,referenceDistance.indexOf(","))+"."+referenceDistance.substring(referenceDistance.indexOf(",")+1);
					//console.log("we have a comma "+newNumber);
					referenceDistance = newNumber;
			}

			if (isNaN(referenceDistance) || referenceDistance==""){

				var textString = lTable.languages[cvjs_currentLanguage].InfoMessageModal.ReferenceDistance;
				cvjs_displayInformationModal(floorplan_div_Array[cvjs_active_floorplan_div_nr], textString);

//				jQuery('#cvjs_informationModalText').html(lTable.languages[cvjs_currentLanguage].InfoMessageModal.ReferenceDistance);
//				jQuery('#info_messageModal').modal('show');
				return;

			}

			cvjs_svgToWorldUnits[cvjs_rPaperIndex(floorplan_div)] = referenceDistance/drawingLength;

//console.log(cvjs_svgToWorldUnits);

			cvjs_calibratedMeasurement = true;

						
			
		//	window.alert("calibrated!");
			// 3.1.20c
			try{
				cvjs_CalibrateMeasurementCallback();
			}
			catch(err){
					console.log(err);
			}
			
			
	 	}
	//	console.log("cvjs_svgToWorldUnits "+cvjs_svgToWorldUnits);

		// calculate distance
		// remove modal remove


		cvjs_interactiveMethod_Active[cvjs_active_floorplan_div_nr] = false;

		jQuery( "#calibrateModal_"+floorplan_div).hide();

//		tPolygon_redline1.attr({'path': "M0,0"});

		tRubberBand_poly_redline1.attr({'path': "M0,0"});
		var Ttrans = "S0.0";

		calibrate_Triangle.attr({
			fill: measurement_color,
			transform: Ttrans
		});

		calibrate_Triangle2.attr({
			fill: measurement_color,
			transform: Ttrans
		});


		cvjs_removeHandleFunc_CalibrateMeasurementPolyline();
		
		
		//
		
		

	}else{
			// do nothing

	}

}

var measurement_text_offset_flag = [true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true];



/**
 * Calibrate measurement
 * @param {String} floorplan_div - div of the CADViewerJS canvas
 */
function cvjs_Measurement(floorplan_div){


	// 3.0.15c   - add "_svg" to div, if called through external API
	if (floorplan_div.lastIndexOf("_svg") == floorplan_div.length-4){
			// do nothing
	}
	else{
		floorplan_div = floorplan_div + "_svg";
	}

	if (floorplan_div == undefined){
	
		// do nothing;
	}
	else{
		// find active floorplan number and set that
		cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(floorplan_div);
	
	}



	cvjs_measurement_end = true;

	if (cvjs_calibratedMeasurement){
		// do nothing, we have calibrated manually
	}
	else{
		// read in the global values
		try{
			
			/****  3.3.01g  - we are loading these values in at start-up of the method
			
			cvjs_units[cvjs_rPaperIndex(floorplan_div)] = worldUnits.units;
			cvjs_svgToWorldUnits[cvjs_rPaperIndex(floorplan_div)] = worldUnits.svgToWorldUnits;
			
			**/ 

			
			/** 3.3.01g  - this must be a bug in AX that we try to handle, this is now blocked
			
// 3.1.21i   cvjs_svgToWorldUnits is permanently 1, we calculate the proper value here

			cvjs_svgToWorldUnits[cvjs_rPaperIndex(floorplan_div)] = cvjs_get_dwg_scaled_value(1.0, multiPages[cvjs_active_floorplan_div_nr].currentPage);
			
			
			**/
			
			// window.alert("worldUnits.units "+worldUnits.units+" cvjs_svgToWorldUnits "+cvjs_svgToWorldUnits);
			
			

		}catch (err){

			var textString = lTable.languages[cvjs_currentLanguage].InfoMessageModal.NoUnits;
			cvjs_displayInformationModal(floorplan_div_Array[cvjs_active_floorplan_div_nr], textString);


//			jQuery('#cvjs_informationModalText').html(lTable.languages[cvjs_currentLanguage].InfoMessageModal.NoUnits);
//			jQuery('#info_messageModal').modal('show');
			return;
		}
	}

	if (cvjs_units[cvjs_rPaperIndex(floorplan_div)] == "none"){

			var textString = lTable.languages[cvjs_currentLanguage].InfoMessageModal.UnitLess;
			cvjs_displayInformationModal(floorplan_div_Array[cvjs_active_floorplan_div_nr], textString);

			//jQuery('#cvjs_informationModalText').html(lTable.languages[cvjs_currentLanguage].InfoMessageModal.UnitLess);
			//jQuery('#info_messageModal').modal('show');
			return;
	}


	if (cvjs_interactiveMethod_Active[cvjs_active_floorplan_div_nr]) return;
	cvjs_interactiveMethod_Active[cvjs_active_floorplan_div_nr] = true;


	if (measurement_text_offset_flag[cvjs_active_floorplan_div_nr]){
		measurement_text_offset_flag[cvjs_active_floorplan_div_nr] = false;
		//jQuery("#measurementModal_"+floorplan_div_Array[cvjs_active_floorplan_div_nr]).offset({ top: 50, left: 150 });
		// 3.1.21h
		// 3.1.21j .appendTo('body');
		jQuery("#measurementModal_"+floorplan_div).css({position: "fixed"});
		jQuery("#measurementModal_"+floorplan_div).offset({left:150+jQuery('#'+floorplan_div).position().left, top: 50+jQuery('#'+floorplan_div).position().top});
	}

//	if (cvjs_units[cvjs_rPaperIndex(floorplan_div)].indexOf("feet")==0){
	
	
	if (cvjs_units[cvjs_active_floorplan_div_nr].indexOf("feet")==0){

		var lint = Math.floor(cvjs_currentMeasurementLength);
		var fraction = cvjs_currentMeasurementLength - Math.floor(cvjs_currentMeasurementLength);
		fraction = Math.round(fraction*16);
		if (fraction == 16){
			console.log("do something.....");
		}
		jQuery( "#cvjs_measurementLength_"+floorplan_div_Array[cvjs_active_floorplan_div_nr]).html(lTable.languages[cvjs_currentLanguage].MeasurementModal.Distance+lint+"\'"+" "+fraction+"/16\"");
	}
	else
		jQuery( "#cvjs_measurementLength_"+floorplan_div_Array[cvjs_active_floorplan_div_nr]).html(lTable.languages[cvjs_currentLanguage].MeasurementModal.Distance+cvjs_currentMeasurementLength+" "+cvjs_units[cvjs_active_floorplan_div_nr]);

	jQuery( "#measurementModal_"+floorplan_div_Array[cvjs_active_floorplan_div_nr]).show();
	
	
	if (cvjs_measureArea){
		
		//window.alert("drawing filled polygon");		
		//cvjs_interactiveMethod_Active[cvjs_active_floorplan_div_nr] = false;
		//cvjs_drawSpaceObject_RedlineFilledPolygon();
		
		cvjs_addHandleFunc_MeasurementFilledPolygon();
	}
	else{
		//window.alert("measurement");
		cvjs_Measurement_RedlinePolyline();		
	}
}




function cvjs_exitMeasurementModal(floorplan_div){


	// 3.2.01f  we force end of measurement
	cvjs_measurement_end = true;
	


	if (cvjs_debug) console.log("EXIT measurement  cvjs_measurement_end "+ cvjs_measurement_end);

	cvjs_interactiveMethod_Active[cvjs_active_floorplan_div_nr] = false;

	if (cvjs_measurement_end){
		cvjs_measurement_end = false;
		// remove modal


		jQuery( "#measurementModal_"+floorplan_div ).hide();
		//tPolygon_redline1.attr({'path': "M0,0"});

if (cvjs_debug) console.log("loop 1");
		
		if (cvjs_measureArea){

		
		if (cvjs_debug) console.log("branch 1");

//			var Ttrans_hG = "T0,0S0.01";
			var Ttrans_hG = "S0";
			tPolygon_redline1.attr({
				 transform: Ttrans_hG
			});
			
			// 3.2.01f
			tRubberBand_poly_redline1.attr({'path': "M0,0"});				
			tRubberBand_poly_redline1.remove();				
			
			// 3.1.21g
			tPolygon_redline1.remove();
			cvjs_removeHandleFunc_MeasurementFilledPolygon()

			if (cvjs_debug) console.log("end branch 1");

		}
		else{
			if (cvjs_debug) console.log("branch 2");

			tRubberBand_poly_redline1.attr({'path': "M0,0"});
			var Ttrans = "S0";
			measurement_Triangle.attr({
					fill: cvjs_currentRedline_color,
					transform: Ttrans
				});

				measurement_Triangle2.attr({
					fill: cvjs_currentRedline_color,
					transform: Ttrans
			});

			// 3.1.21g
			tRubberBand_poly_redline1.remove();
			measurement_Triangle.remove();
			measurement_Triangle2.remove();
					
			cvjs_removeHandleFunc_MeasurementPolyline();
		}
		

	}else{
			// do nothing
			
		// we want to clean again

		try{  // 2017-11-27

	
			if (cvjs_debug) console.log("we want to clean before drawing...");

			if (cvjs_measureArea){

//				var Ttrans_hG = "T0,0S0.01";
				var Ttrans_hG = "T0,0S0.01";
				tPolygon_redline1.attr({
					 transform: Ttrans_hG
				});

				if (cvjs_debug) console.log("here ");
			
				// 3.1.21g
				tPolygon_redline1.remove();
				// 3.2.01f
				tRubberBand_poly_redline1.attr({'path': "M0,0"});	
				
				cvjs_removeHandleFunc_MeasurementFilledPolygon()			
			}
			else{


				tRubberBand_poly_redline1.attr({'path': "M0,0"});
				var Ttrans = "S0";
				measurement_Triangle.attr({
						fill: cvjs_currentRedline_color,
						transform: Ttrans
					});

					measurement_Triangle2.attr({
						fill: cvjs_currentRedline_color,
						transform: Ttrans
				});


				// 3.1.21g
				tRubberBand_poly_redline1.remove();
				measurement_Triangle.remove();
				measurement_Triangle2.remove();
				
								
				cvjs_removeHandleFunc_MeasurementPolyline();

			
			}		
			
		}catch(err){if (cvjs_debug) console.log(err)}
			

		jQuery("#measurementModal_"+floorplan_div ).hide();
	}


}


function cvjs_repeatMeasurementModal(){

// 3.2.01f  
// we change the functionality to permanently clear and start out again

//	if (cvjs_measurement_end){   // removed 3.2.01f
	if (true){
		cvjs_measurement_end = false;
	
//window.alert("cvjs_measureArea "+cvjs_measureArea);		
				
		if (cvjs_measureArea){
			
			// remove modal
			cvjs_currentMeasurementLength = 0;
			jQuery( "#cvjs_measurementLength_"+floorplan_div_Array[cvjs_active_floorplan_div_nr]).html(lTable.languages[cvjs_currentLanguage].MeasurementModal.Distance+cvjs_currentMeasurementLength+" "+cvjs_units[cvjs_active_floorplan_div_nr]);
	//		tPolygon_redline1.attr({'path': "M0,0"});

			var Ttrans_hG = "T0,0S0.01";
			tPolygon_redline1.attr({
				 transform: Ttrans_hG
			});

			tRubberBand_poly_redline1.attr({'path': "M0,0"});
			
			var Ttrans = "S0";
			measurement_Triangle.attr({
					fill: cvjs_currentRedline_color,
					transform: Ttrans
				});

				measurement_Triangle2.attr({
					fill: cvjs_currentRedline_color,
					transform: Ttrans
			});
				
			// 3.1.21g
			tPolygon_redline1.remove();
			measurement_Triangle.remove();
			measurement_Triangle2.remove();
				
		
			cvjs_addHandleFunc_MeasurementFilledPolygon();	
		}
		else{
			


			// remove modal
			cvjs_currentMeasurementLength = 0;
			jQuery( "#cvjs_measurementLength_"+floorplan_div_Array[cvjs_active_floorplan_div_nr]).html(lTable.languages[cvjs_currentLanguage].MeasurementModal.Distance+cvjs_currentMeasurementLength+" "+cvjs_units[cvjs_active_floorplan_div_nr]);
	//		tPolygon_redline1.attr({'path': "M0,0"});

	
			var Ttrans_hG = "T0,0S0.01";
			tPolygon_redline1.attr({
				 transform: Ttrans_hG
			});
	
	
			tRubberBand_poly_redline1.attr({'path': "M0,0"});
			var Ttrans = "S0";
			measurement_Triangle.attr({
					fill: cvjs_currentRedline_color,
					transform: Ttrans
				});

				measurement_Triangle2.attr({
					fill: cvjs_currentRedline_color,
					transform: Ttrans
			});

			
			// 3.1.21g
			tPolygon_redline1.remove();
			measurement_Triangle.remove();
			measurement_Triangle2.remove();
				
			
			cvjs_Measurement_RedlinePolyline();			
			
		}
		


	}else{
			// do nothing

	}


}



function cvjs_exitRedlineTextModal(){

	cvjs_interactiveMethod_Active[cvjs_active_floorplan_div_nr] = false;

	jQuery("#redlinetextModal" ).hide();

	try{
		var minimize_rubberband = "M0,0S0";
		tRubberBand_text1.attr({'transform': minimize_rubberband});
	}
	catch(err){};

}





/**  StickyNotes and Redlines are independent of nodes files   */

var vqStickyNotes = new Array();
var vqRedlines = new Array();


var vqImageNotes = new Array();


/**  REDLINE /STICKYNOTE SAVE LOAD  - PRINT  */


var cvjs_stickynote = 0;
var cvjs_redline = 0;
var cvjs_StickyNoteRedlineUrl = "";
var cvjs_StickyNoteSaveRedlineUrl = "";

/**
 * Sets the name and url of the redline file to load, The redline file is has the extension .js
 * @param {string} file - String containg url and name of redline.js file
 */

function cvjs_setStickyNoteRedlineUrl(file){
	cvjs_StickyNoteRedlineUrl = file;
}


/**
 * Sets the name and url of the redline file to save. The redline file can be .js , .dxf or .xml
 * @param {string} file - String containg url and name of redline.js/redline.ext file
 */

function cvjs_setStickyNoteSaveRedlineUrl(file){
	cvjs_StickyNoteSaveRedlineUrl = file;
	
	if (cvjs_StickyNoteSaveRedlineUrl.toLowerCase().indexOf(".dxf")>0) {
		cvjs_saveRedlinesAsDXF	= true; cvjs_saveRedlinesAsXML	= false;
	}
	else{
		cvjs_saveRedlinesAsDXF	= false;		
	}


	if (cvjs_StickyNoteSaveRedlineUrl.toLowerCase().indexOf(".xml")>0) {
		cvjs_saveRedlinesAsXML	= true; cvjs_saveRedlinesAsDXF	= false;
	}
	else{
		cvjs_saveRedlinesAsXML	= false;		
	}
	

	
	
}


/**
 * Draws a freehand redline - uses global settings of color and width
  * @param {string} floorplan_div - name of div containing CADViewer JS canvas
*/

function cvjs_drawRedline_Freehand(floorplan_div){


	// 3.0.15c   - add "_svg" to div, if called through external API
	if (floorplan_div.lastIndexOf("_svg") == floorplan_div.length-4){
			// do nothing
	}
	else{
		floorplan_div = floorplan_div + "_svg";
	}

	if (floorplan_div == undefined){
		// do nothing;
	}
	else{
		// find active floorplan number and set that
		cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(floorplan_div);	
	}

	cvjs_redline++;
	cvjs_setCurrentRedlineValues("RED_"+cvjs_redline, "redline"+cvjs_redline, cvjs_redline, "RedLineLayer", "unassigned", cvjs_currentRedline_color, cvjs_currentRedline_strokeWidth, cvjs_currentRotationAngle[cvjs_active_floorplan_div_nr]);
	cvjs_drawRedline__Freehand();
}






/**
 * Draws a freehand redline - uses global values of color and width
 */


function cvjs_drawRedline_Freehand_globalColorWidth(){

	cvjs_redline++;
	cvjs_setCurrentRedlineValues("RED_"+cvjs_redline, "redline"+cvjs_redline, cvjs_redline, "RedLineLayer", "unassigned", cvjs_currentRedline_color, cvjs_currentRedline_strokeWidth, cvjs_currentRotationAngle[cvjs_active_floorplan_div_nr]);
	cvjs_drawRedline_Freehand();
}


/*
 * Draws a freehand redline - deprecated
 */

function cvjs_drawRedline_Freehand_setValues(){

	cvjs_redline++;
	cvjs_setCurrentRedlineValues("RED_"+cvjs_redline, "redline"+cvjs_redline, cvjs_redline, "RedLineLayer", "unassigned", "#AA0055", 3, cvjs_currentRotationAngle[cvjs_active_floorplan_div_nr]);
	cvjs_drawRedline_Freehand();
}



/*
 * Draws a freehand stickynote - deprecated
 */

function cvjs_drawStickyNote_setValues(){

	var d = new Date();
	//console.log(d);

	cvjs_stickynote++;
	cvjs_setCurrentStickyNoteValues("SNOTE_"+cvjs_stickynote, "myName", cvjs_stickynote, "StickNoteLayer", "unassigned", "", "X201", d, true);
	cvjs_drawStickyNoteDirect();
}


 
/**
 * Draws a freehand stickynote - uses global settings of user and user id
 * @param {string} floorplan_div - name of div containing CADViewer JS canvas
 */
 
function cvjs_drawStickyNote(floorplan_div){

	// 3.0.15c   - add "_svg" to div, if called through external API
	if (floorplan_div.lastIndexOf("_svg") == floorplan_div.length-4){
			// do nothing
	}
	else{
		floorplan_div = floorplan_div + "_svg";
	}

	if (floorplan_div == undefined){
	
		// do nothing;
	}
	else{
		// find active floorplan number and set that
		cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(floorplan_div);
	
	}


	if (cvjs_interactiveMethod_Active[cvjs_active_floorplan_div_nr]) return;
	cvjs_interactiveMethod_Active[cvjs_active_floorplan_div_nr] = true;

	var d = new Date();
	//console.log(d);

	cvjs_stickynote++;
	cvjs_setCurrentStickyNoteValues("SNOTE_"+cvjs_stickynote, cvjs_currentStickyNote_name, cvjs_stickynote, cvjs_currentStickyNote_layer, cvjs_currentStickyNote_group, "", cvjs_currentStickyNote_userid, d, true);
	cvjs_drawStickyNoteDirect();

}




 
/**
 * Deletes the last drawn Redline
 * @param {String} floorplan_div - div of the CADViewerJS canvas
 */
 
function cvjs_deleteLastRedline(floorplan_div){

	// 3.0.15c   - add "_svg" to div, if called through external API
	if (floorplan_div.lastIndexOf("_svg") == floorplan_div.length-4){
			// do nothing
	}
	else{
		floorplan_div = floorplan_div + "_svg";
	}

	if (floorplan_div == undefined){
	
		// do nothing;
	}
	else{
		// find active floorplan number and set that
		cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(floorplan_div);
	
	}
 



	var redl="RED_"+cvjs_redline;
	cvjs_setUpVqRedlines_deleteNode(redl);
	cvjs_redline--;
}


/*
 * Clears all redlines in drawing
 */

function cvjs_deleteAllRedlines(){

	while (cvjs_redline>0){
		var redl="RED_"+cvjs_redline;
		cvjs_setUpVqRedlines_deleteNode(redl);
		cvjs_redline--;
	}
}



/*
 * Clears all stickynotes in drawing
 */

function cvjs_deleteAllStickyNotes(){

	while (cvjs_stickynote>0){

		cvjs_stickynote--;
		//var redl="RED_"+cvjs_redline;
		//cvjs_setUpVqRedlines_deleteNode(redl);
		//var note = cvjs_StickyNoteClicked();
		//console.log("cvjs_stickynote "+cvjs_stickynote);

		try{
			var objectId = vqStickyNotes[cvjs_stickynote].data("node");
			cvjs_setUpStickyNotes_deleteNode(objectId);
		} catch(err) {}
	}
}

var stickyNotetimer;

var cvjs_fileLoaderRedlineMode = false;
var cvjs_fileSaverRedlineMode = false;










/**
 * Loads redlines and sticky notes to the location defined through parameter settings
 * @param {String} floorplan_div - div of the CADViewerJS canvas
 */

function cvjs_loadStickyNotesRedlines(floorplan_div){


	// 3.0.15c   - add "_svg" to div, if called through external API
	if (floorplan_div.lastIndexOf("_svg") == floorplan_div.length-4){
			// do nothing
	}
	else{
		floorplan_div = floorplan_div + "_svg";
	}


	if (floorplan_div== undefined)
		cvjs_active_floorplan_div_nr = 0;
	else
		cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(floorplan_div);

	if (cvjs_debug) console.log("!!!!!!!!!!!!!!!!!!!!!!!!   cvjs_loadStickyNotesRedlines "+ cvjs_active_floorplan_div_nr+"  "+floorplan_div);


	if (!cvjs_loadRedlinesFileControllerFlag){   // standard load of redlines

		stickynotesRedlines_loaded = false;
		if (current_redline_js_initialized == 0){
			current_redline_js_initialized = 1;
			current_jsRedlinename = cvjs_StickyNoteRedlineUrl;
if (cvjs_debug) 	console.log("before loadJSbase redline "+cvjs_StickyNoteRedlineUrl);
			loadJSbase(cvjs_StickyNoteRedlineUrl);
		}else{
if (cvjs_debug) 	console.log("replace "+current_jsRedlinename+"  "+cvjs_StickyNoteRedlineUrl);
			replacejscssfile(current_jsRedlinename, cvjs_StickyNoteRedlineUrl, "js");
			current_jsRedlinename = cvjs_StickyNoteRedlineUrl;
		}
		cvjs_loadStickyNotesRedlinesTimer();

	}else{

		var cvjs_phpLoadRedlineUrlLocation = cvjs_serverHandlersPath + cvjs_serverLoadFileControllerRedlines;
if (cvjs_debug) 		console.log("brach 2 "+ cvjs_phpLoadRedlineUrlLocation+"  file="+cvjs_StickyNoteRedlineUrl);

		var js_data = {};
		js_data['file'] = cvjs_StickyNoteRedlineUrl;
//console.log(cvjs_phpSaveRedlineUrlLocation+"  "+cvjs_StickyNoteSaveRedlineUrl);
		jQuery.ajax({
		  url:cvjs_phpLoadRedlineUrlLocation,
		  type: 'post',
		  data: js_data,
		  success: function(html){

					var status ="Load redlines: "+html;
					if (cvjs_debug) 		console.log(status);

					cvjs_clearCurrentRedline(floorplan_div_Array[cvjs_active_floorplan_div_nr]);
					cvjs_addInlineScript(html);

					stickynotesRedlines_loaded = true;
					cvjs_loadStickyNotesRedlinesTimer();

					//cvjs_setUpStickyNotesRedlines(cvjs_rPaper[cvjs_active_floorplan_div_nr]);
				},
		 error:function(data_e){console.log("Error "+data_e); return;}
		});

	}

}


var myFlagOldTypeRedlines = false;

var cvjs_redlineStickyNoteLayer = new Array();

function cvjs_loadStickyNotesRedlinesTimer(){

// 2017-07-09

	// make sure it is loaded
	if (stickynotesRedlines_loaded){
		load_failures=0;

		// we try something new here, we clear just before we load everything else 2017-07-24
		// clear if not loading multiple redlines  and not in collab
		if (cvjs_collab_mode) { console.log("clear collab redlines, after js files is loaded."); cvjs_clearCurrentRedline(floorplan_div_Array[cvjs_active_floorplan_div_nr]); }
		//NNNNN

//if (cvjs_debug) console.log("cvjs_setUpStickyNotesRedlines "+cvjs_active_floorplan_div_nr+"  "+cvjs_rPaper[cvjs_active_floorplan_div_nr]);
			

// 2018-03-20   we move this declaration over to be part of the general declaration when loading a drawing.						
//		cvjs_redlineStickyNoteLayer[cvjs_active_floorplan_div_nr] = cvjs_rPaper[cvjs_active_floorplan_div_nr].group();	



		cvjs_setUpStickyNotesRedlines(cvjs_redlineStickyNoteLayer[cvjs_active_floorplan_div_nr]);		

		
//		layer_vqrooms[cvjs_active_floorplan_div_nr].prepend(cvjs_masterBackground[cvjs_active_floorplan_div_nr]);
		


		
//		cvjs_setUpStickyNotesRedlines(cvjs_rPaper[cvjs_active_floorplan_div_nr]);


		
		
		// get content from cvjs_stickynotesRedlines

if (cvjs_debug) console.log("before loading loop");

		var maxNote = 1;
		var jj=0;
	
		try{		
	
			for (var i=0; i<vqStickyNotes.length; i++){
							
//				console.log(i+"  "+vqStickyNotes[i]);
				var myNode = cvjs_stickyNotesRedlines[i].node.toString();
				if (myNode.substring("SNOTE_")>-1){

					myNode = myNode.substring(6);
					jj = parseInt(myNode);
					if (jj>maxNote) maxNote=jj
				}
			}
		}catch(err){console.log("catching oldtime redline format issue: "+err);
		
		
		
		// 	vqStickyNotes[stickynote].data("node", i);
		
		
		
		}

		
		//maxRed="RED_"+jj
if (cvjs_debug) 		console.log("the maximum NOTE_ number is: "+maxNote);

		for (var i=0; i<cvjs_stickyNotesRedlines.length; i++){
			for (var j=i+1; j<cvjs_stickyNotesRedlines.length; j++){
				if ( cvjs_stickyNotesRedlines[i].node == cvjs_stickyNotesRedlines[j].node){

					if (cvjs_stickyNotesRedlines[i].node.indexOf("SNOTE_")>-1){
if (cvjs_debug) 						console.log("We have double stickynotes "+cvjs_stickyNotesRedlines[i].node);
						// so we want to change the node name on both the redlines structure array and the redlines shapes array
						maxNote = maxNote+1;

						var newNote = "SNOTE_"+maxNote;

if (cvjs_debug) 						console.log("the newNote="+newNote);

						for (var l=0; l<vqStickyNotes.length; l++){
							if (vqStickyNotes[l].data("node") == cvjs_stickyNotesRedlines[i].node){ // we find the first instance that is equal to the first instance in Notes array
								for (var m=l+1; m<vqStickyNotes.length; m++){
									if ( vqStickyNotes[l].data("node") == vqStickyNotes[m].data("node")){   // we find the next instance
if (cvjs_debug) 										console.log("We have double path instances of "+vqStickyNotes[m].data("node")+", changing second instance to "+newNote);

										cvjs_stickyNotesRedlines[j].node = newNote;
										cvjs_stickyNotesRedlines[j].id = maxNote;
										vqStickyNotes[m].data("node", newNote);


										// so we want to change the node name on both the redlines structure array and the redlines shapes array
									}
								}
							}
						}
					}


				}
			}
		}


// we now want to find the largest Node number
maxNote = 0;		


		for (var snote in vqStickyNotes){

if (cvjs_debug) 			console.log(" snote="+snote);
			// set up the StickyNotes
			for (var redNote in cvjs_stickyNotesRedlines){

//2017-07-09		if (redNote == vqStickyNotes[snote].data("node")){
					if (cvjs_stickyNotesRedlines[redNote].node == vqStickyNotes[snote].data("node")){
if (cvjs_debug) console.log(redNote);

//ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ
						var noteInt = parseInt(cvjs_stickyNotesRedlines[redNote].id);
						if (noteInt>maxNote) maxNote = noteInt;


//						cvjs_setCurrentStickyNoteValues_All(redNote, cvjs_stickyNotesRedlines[redNote].name, cvjs_stickyNotesRedlines[redNote].id, cvjs_stickyNotesRedlines[redNote].layer, cvjs_stickyNotesRedlines[redNote].group, cvjs_stickyNotesRedlines[redNote].text, cvjs_stickyNotesRedlines[redNote].userid, cvjs_stickyNotesRedlines[redNote].date, cvjs_stickyNotesRedlines[redNote].linked, cvjs_stickyNotesRedlines[redNote].transform, cvjs_stickyNotesRedlines[redNote].currentPage);
						cvjs_setCurrentStickyNoteValues_All(cvjs_stickyNotesRedlines[redNote].node, cvjs_stickyNotesRedlines[redNote].name, cvjs_stickyNotesRedlines[redNote].id, cvjs_stickyNotesRedlines[redNote].layer, cvjs_stickyNotesRedlines[redNote].group, cvjs_stickyNotesRedlines[redNote].text, cvjs_stickyNotesRedlines[redNote].userid, cvjs_stickyNotesRedlines[redNote].date, cvjs_stickyNotesRedlines[redNote].linked, cvjs_stickyNotesRedlines[redNote].transform, cvjs_stickyNotesRedlines[redNote].currentPage, cvjs_stickyNotesRedlines[redNote].drawingRotation);

						
//			vqStickyNotes[snote].attr({"fill" : "#FF0000"});						
//			vqStickyNotes[snote].remove();			
						
//						console.log("cvjs_setUpVqStickyNotes_currentNode_vqIndex "+cvjs_currentStickyNote_underbar);
						
//						cvjs_setUpVqStickyNotes_currentNode_vqIndex(cvjs_rPaper[cvjs_active_floorplan_div_nr], cvjs_currentStickyNote_underbar, snote );

console.log(" cvjs_setUpVqStickyNotes_currentNode_vqIndex_passedInstance "+cvjs_currentStickyNote_underbar+"   "+snote);
//						cvjs_setUpVqStickyNotes_currentNode_vqIndex_passedInstance(cvjs_rPaper[cvjs_active_floorplan_div_nr], cvjs_currentStickyNote_underbar, snote, vqStickyNotes[snote]);

						
//		if (snote==0){				

//						cvjs_masterBackground[cvjs_active_floorplan_div_nr].prepend(vqStickyNotes[snote]);

						vqStickyNotes[snote].data("name", cvjs_currentStickyNote_name );
						vqStickyNotes[snote].data("id", cvjs_currentStickyNote_id);
						vqStickyNotes[snote].data("text", cvjs_currentStickyNote_text);
						vqStickyNotes[snote].data("layer", cvjs_currentStickyNote_layer);
						vqStickyNotes[snote].data("group", cvjs_currentStickyNote_group);
						vqStickyNotes[snote].data("linked", cvjs_currentStickyNote_linked);
						vqStickyNotes[snote].data("userid", cvjs_currentStickyNote_userid);
						vqStickyNotes[snote].data("date", cvjs_currentStickyNote_date);
						vqStickyNotes[snote].data("currentPage", cvjs_currentStickyNote_currentPage);
						vqStickyNotes[snote].data("transform", cvjs_currentStickyNote_transform);  // curre						
						vqStickyNotes[snote].data("drawingRotation", cvjs_currentStickyNote_drawingRotation);  // curre						
						
//		}					
												
						if (vqStickyNotes[snote].data("currentPage")!=multiPages[cvjs_active_floorplan_div_nr].currentPage)
							vqStickyNotes[snote].attr(hide);
						else
							vqStickyNotes[snote].attr(show);

						

//						vqStickyNotes[snote].attr(show);
						
					}
			}

		}


		var maxRed = 1;
		var jj=0;

		try{		
			for (var i=0; i<vqRedlines.length; i++){							
				var myNode = cvjs_stickyNotesRedlines[i].node.toString();
				if (myNode.substring("RED_")>-1){
					myNode = myNode.substring(4);
					jj = parseInt(myNode);
					if (jj>maxRed) maxRed=jj
				}
			}
		}catch(err){console.log("Catching old type redlines issues: "+err);}
		
		//maxRed="RED_"+jj

if (cvjs_debug) 		console.log("the maximum RED_ number is: "+maxRed);

		for (var i=0; i<cvjs_stickyNotesRedlines.length; i++){
			for (var j=i+1; j<cvjs_stickyNotesRedlines.length; j++){
				if ( cvjs_stickyNotesRedlines[i].node == cvjs_stickyNotesRedlines[j].node){
					if (cvjs_stickyNotesRedlines[i].node.indexOf("RED_")>-1){

if (cvjs_debug) 						console.log("We have double redlines "+cvjs_stickyNotesRedlines[i].node);
						// so we want to change the node name on both the redlines structure array and the redlines shapes array
						maxRed = maxRed+1;
						var newRed = "RED_"+maxRed;
if (cvjs_debug) 						console.log("the newRed="+newRed);

						for (var l=0; l<vqRedlines.length; l++){
							if (vqRedlines[l].data("node") == cvjs_stickyNotesRedlines[i].node){ // we find the first instance that is equal to the first instance in Notes array
								for (var m=l+1; m<vqRedlines.length; m++){
									if ( vqRedlines[l].data("node") == vqRedlines[m].data("node")){   // we find the next instance
										console.log("We have double path instances of "+vqRedlines[m].data("node")+", changing second instance to "+newRed);

										cvjs_stickyNotesRedlines[j].node = newRed;
										vqRedlines[m].data("node", newRed);

										// so we want to change the node name on both the redlines structure array and the redlines shapes array
									}
								}
							}
						}

					}
				}
			}
		}




		for (var snote in vqRedlines){

//if (cvjs_debug) 		console.log("before loading loop snote "+snote);

			// set up the Redlines
			for (var redNote in cvjs_stickyNotesRedlines){

//if (cvjs_debug) 				console.log("A redNote "+redNote+"  "+cvjs_stickyNotesRedlines[redNote].node);


					// 2018-03-03  HACK!  Adding a value if format of REDLINES are Old type	
					if (cvjs_stickyNotesRedlines[redNote].node == undefined){ 
						// cvjs_stickyNotesRedlines[redNote].data("node", redNote);
					// NOTE NOTE NOTE 
								myFlagOldTypeRedlines = true;
					}
					else		myFlagOldTypeRedlines = false;
					
					
//if (cvjs_debug) 				console.log("B redNote "+redNote+"  "+cvjs_stickyNotesRedlines[redNote].node+"  "+redNote+"  "+myFlagOldTypeRedlines);

					
					var logicExpression = (cvjs_stickyNotesRedlines[redNote].node == vqRedlines[snote].data("node"));
					


//if (cvjs_debug) 				console.log("C logicExpression "+logicExpression);


					
					if (myFlagOldTypeRedlines){
						logicExpression = (redNote == vqRedlines[snote].data("node"));
					}
													
//if (cvjs_debug) 				console.log("D logicExpression "+logicExpression);
					
					
// 2017-07-09
					if (logicExpression){
//					if (redNote == vqRedlines[snote].data("node")){


// 2017-07-09                  2018-03-03   IN CASE OF AN OLD TYPE WE HAVE TO PASS OVER THE COUNTER ID ITSELF

						if (myFlagOldTypeRedlines){  // the node is the array counter ID itself{
							cvjs_setCurrentRedlineValues_All(redNote, cvjs_stickyNotesRedlines[redNote].name,cvjs_stickyNotesRedlines[redNote].id, cvjs_stickyNotesRedlines[redNote].layer, cvjs_stickyNotesRedlines[redNote].group, cvjs_stickyNotesRedlines[redNote].color, cvjs_stickyNotesRedlines[redNote].strokeWidth, cvjs_stickyNotesRedlines[redNote].fill, cvjs_stickyNotesRedlines[redNote].fill_opacity, cvjs_stickyNotesRedlines[redNote].transform, cvjs_stickyNotesRedlines[redNote].username, cvjs_stickyNotesRedlines[redNote].userid, cvjs_stickyNotesRedlines[redNote].currentPage, cvjs_stickyNotesRedlines[redNote].polypath_arrow, cvjs_stickyNotesRedlines[redNote].triangle_design, cvjs_stickyNotesRedlines[redNote].redline_text, 0);


if (cvjs_debug) 				console.log("Old format making redline "+redNote);

						}
						else{   // the node is part of the data structure
							cvjs_setCurrentRedlineValues_All(cvjs_stickyNotesRedlines[redNote].node, cvjs_stickyNotesRedlines[redNote].name,cvjs_stickyNotesRedlines[redNote].id, cvjs_stickyNotesRedlines[redNote].layer, cvjs_stickyNotesRedlines[redNote].group, cvjs_stickyNotesRedlines[redNote].color, cvjs_stickyNotesRedlines[redNote].strokeWidth, cvjs_stickyNotesRedlines[redNote].fill, cvjs_stickyNotesRedlines[redNote].fill_opacity, cvjs_stickyNotesRedlines[redNote].transform, cvjs_stickyNotesRedlines[redNote].username, cvjs_stickyNotesRedlines[redNote].userid, cvjs_stickyNotesRedlines[redNote].currentPage, cvjs_stickyNotesRedlines[redNote].polypath_arrow, cvjs_stickyNotesRedlines[redNote].triangle_design, cvjs_stickyNotesRedlines[redNote].redline_text, cvjs_stickyNotesRedlines[redNote].drawingRotation);


if (cvjs_debug) 				console.log("New format making redline "+cvjs_stickyNotesRedlines[redNote].node);

						}
						
						cvjs_setUpVqRedlines_currentNode(cvjs_rPaper[cvjs_active_floorplan_div_nr], cvjs_currentRedline_underbar);

//console.log(cvjs_stickyNotesRedlines[redNote].currentPage+"   "+cvjs_currentRedline_currentPage);

						vqRedlines[snote].mousedown(function (e){
							if (cvjs_deleteRedlineFlag ){
								cvjs_deleteRedlineFlag = false;
								// delete redline
								var rednode = this.data("node");
								cvjs_setUpVqRedlines_deleteNode(rednode);
							}

						});


						vqRedlines[snote].mouseover(function (e){

								tip[cvjs_active_floorplan_div_nr].css({ position:'fixed'});					
						
								var tipText = "UserName: "+this.data("username");
								tip[cvjs_active_floorplan_div_nr].html(tipText);
								tip[cvjs_active_floorplan_div_nr].show();


								var position = jQuery('#'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).position();
								var floorplan_pos = jQuery('#'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).css('position');				
								if (floorplan_pos == 'absolute'){ // absolute location,  so we use global variables
								//console.log("absolute");
								   tip[cvjs_active_floorplan_div_nr].css("left", e.clientX+document.documentElement.scrollLeft+10).css("top", e.clientY+document.documentElement.scrollTop-25);
								}
								else{  // we have placed CV-JS inside a div and we have to make a relative position
									//console.log("inside");
									tip[cvjs_active_floorplan_div_nr].css("left", e.clientX-position.left+document.documentElement.scrollLeft+10).css("top", e.clientY-position.top+document.documentElement.scrollTop-25);
								}
									
								
								
/*								
								if (e.clientX > floorplan_width)
								   tip[cvjs_active_floorplan_div_nr].css("left", e.clientX+document.body.scrollLeft-tip_width-20).css("top", e.clientY+document.body.scrollTop-25);
				//				   tip[cvjs_active_floorplan_div_nr].css("left", e.screenX-tip_width-20).css("top", e.screenY-20);
								else
								   tip[cvjs_active_floorplan_div_nr].css("left", e.clientX+document.body.scrollLeft+10).css("top", e.clientY+document.body.scrollTop-25);
*/						});

						vqRedlines[snote].mouseout(function (e){
								tip[cvjs_active_floorplan_div_nr].hide();
						});


						if (vqRedlines[snote].data("currentPage")!=multiPages[cvjs_active_floorplan_div_nr].currentPage)
							vqRedlines[snote].attr(hide);
						else
							vqRedlines[snote].attr(show);


						}
			}
		}


//		cvjs_rPaper[cvjs_active_floorplan_div_nr].add(vqRedlines);

		stickynote=vqStickyNotes.length;
		redline=vqRedlines.length;
	
		// we set the current ID to the max id read in
		cvjs_stickynote = maxNote;
		
if (cvjs_debug) console.log("how many redlines "+vqRedlines.length+"  how many stickynotes "+stickynote+"  the maximum StickyNoteNumber = "+maxNote);		
		
			
		// prior to setting user controls, we check the page status and turn layers on other pages off
		cvjs_updateDrawingRedlines(cvjs_redlineStickyNoteLayer[cvjs_active_floorplan_div_nr]);

		try{
			cvjs_OnLoadEndRedlines();	// generic method name OnLoadEnd();
		}catch(exception) { console.log("Please define cvjs_OnLoadEndRedlines in your encapsulating code: "+exception); }


	}else{
		if (load_failures < 80){
			    setTimeout(function(){cvjs_loadStickyNotesRedlinesTimer()},256);
    	}
    	else{
    		if (cvjs_debug) console.log("Readline Load Failed! - please check if redline Url is set correct: cvjs_setStickyNoteRedlineUrl()");
    	}
	}

}


var cvjs_deleteRedlineFlag = false;

 
/**
 * Deletes a single redline
 * @param {String} floorplan_div - div of the CADViewerJS canvas
 */

function cvjs_deleteSingleRedline(floorplan_div){

	// 3.0.15c   - add "_svg" to div, if called through external API
	if (floorplan_div.lastIndexOf("_svg") == floorplan_div.length-4){
			// do nothing
	}
	else{
		floorplan_div = floorplan_div + "_svg";
	}

	if (floorplan_div == undefined){
	
		// do nothing;
	}
	else{
		// find active floorplan number and set that
		cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(floorplan_div);
	
	}

	cvjs_deleteRedlineFlag = true;

}


/*
 * Returns the HEX color as AutoCAD Color table
 * @return {string} hexNumber - hex value of color.
 * @return {int} colorNumber - number of color 
 */

function cvjs_getAutoCADColor(hexNumber){

	var colorNumber = 1;
	if (hexNumber.indexOf("#")==0) hexNumber = hexNumber.substring(1);

	hexNumber = hexNumber.toUpperCase();;
//window.alert(" first "+colorNumber+"  "+hexNumber);		
	
	switch(hexNumber) {
		case "000000":
			colorNumber = 0;
			break;
		case "FF0000":
			colorNumber = 1;
			break;
		case "FFF200":  // yellow
		case "FFFF00":
			colorNumber = 2;
			break;
		case "22B14C": // green
		case "00FF00":
			colorNumber = 3;
			break;
		case "00FFFF":
			colorNumber = 4;
			break;
		case "0000FF":
			colorNumber = 5;
			break;
		case "FF00FF":  // purple
		case "800080":
			colorNumber = 6;
			break;
		case "FFFFFF":
			colorNumber = 7;
			break;
		case "414141":
			colorNumber = 8;
			break;
		case "808080":
			colorNumber = 9;
			break;
		case "FF0000":
			colorNumber = 10;
			break;
		case "FFAAAA":
			colorNumber = 11;
			break;
		case "BD0000":
			colorNumber = 12;
			break;
		case "BD7E7E":
			colorNumber = 13;
			break;
		case "810000":
			colorNumber = 14;
			break;
		case "815656":
			colorNumber = 15;
			break;
		case "FF7500":  // orange
		case "FFA500":  // orange
			colorNumber = 30;
			break;
		case "808080":  // gray
		case "828282":
			colorNumber = 253;
			break;
		case "B97A57":   // brown
		case "814000":
			colorNumber = 34;
			break;
			
		default:
			colorNumber = 1;
	}

//window.alert(colorNumber);	
	
	return colorNumber;
	
}

function cvjs_get_dwg_scaled_value(n, page){

	var svgDx = cvjs_drawingCoordinates[page].SVG.upperRight.x - cvjs_drawingCoordinates[page].SVG.lowerLeft.x;
	var dwgDx = cvjs_drawingCoordinates[page].DWG.upperRight.x - cvjs_drawingCoordinates[page].DWG.lowerLeft.x;

	return (dwgDx/svgDx*n)
}


function cvjs_get_dwg_x_coord(x, page){

/*

	var svgDx = cvjs_drawingCoordinates.SVG.upperRight.x - cvjs_drawingCoordinates.SVG.lowerLeft.x;
	var svgDy = cvjs_drawingCoordinates.SVG.upperRight.y - cvjs_drawingCoordinates.SVG.lowerLeft.y;


	var dwgDx = cvjs_drawingCoordinates.DWG.upperRight.x - cvjs_drawingCoordinates.DWG.lowerLeft.x;
	var dwgDy = cvjs_drawingCoordinates.DWG.upperRight.y - cvjs_drawingCoordinates.DWG.lowerLeft.y;

//window.alert(svgDx+"  "+svgDy);

	var  svgpX =  (x - cvjs_drawingCoordinates.SVG.lowerLeft.x)/svgDx;
	var  svgpY =  (y - cvjs_drawingCoordinates.SVG.lowerLeft.y)/svgDy;


	var dwgPx =  cvjs_drawingCoordinates.DWG.lowerLeft.x+svgpX*dwgDx;
	var dwgPy =  cvjs_drawingCoordinates.DWG.lowerLeft.y+svgpY*dwgDy;

*/

	var svgDx = cvjs_drawingCoordinates[page].SVG.upperRight.x - cvjs_drawingCoordinates[page].SVG.lowerLeft.x;
	var dwgDx = cvjs_drawingCoordinates[page].DWG.upperRight.x - cvjs_drawingCoordinates[page].DWG.lowerLeft.x;
	var svgpX =  (x - cvjs_drawingCoordinates[page].SVG.lowerLeft.x)/svgDx;
	var dwgPx =  cvjs_drawingCoordinates[page].DWG.lowerLeft.x+(svgpX*dwgDx);

	return dwgPx;
}



function cvjs_get_dwg_y_coord(y, page){

/*

	var svgDx = cvjs_drawingCoordinates.SVG.upperRight.x - cvjs_drawingCoordinates.SVG.lowerLeft.x;
	var svgDy = cvjs_drawingCoordinates.SVG.upperRight.y - cvjs_drawingCoordinates.SVG.lowerLeft.y;


	var dwgDx = cvjs_drawingCoordinates.DWG.upperRight.x - cvjs_drawingCoordinates.DWG.lowerLeft.x;
	var dwgDy = cvjs_drawingCoordinates.DWG.upperRight.y - cvjs_drawingCoordinates.DWG.lowerLeft.y;

//window.alert(svgDx+"  "+svgDy);

	var  svgpX =  (x - cvjs_drawingCoordinates.SVG.lowerLeft.x)/svgDx;
	var  svgpY =  (y - cvjs_drawingCoordinates.SVG.lowerLeft.y)/svgDy;


	var dwgPx =  cvjs_drawingCoordinates.DWG.lowerLeft.x+svgpX*dwgDx;
	var dwgPy =  cvjs_drawingCoordinates.DWG.lowerLeft.y+svgpY*dwgDy;

*/

	var svgDy = cvjs_drawingCoordinates[page].SVG.upperRight.y - cvjs_drawingCoordinates[page].SVG.lowerLeft.y;
	var dwgDy = cvjs_drawingCoordinates[page].DWG.upperRight.y - cvjs_drawingCoordinates[page].DWG.lowerLeft.y;
	var svgpY =  (y - cvjs_drawingCoordinates[page].SVG.lowerLeft.y)/svgDy;
	var dwgPy =  cvjs_drawingCoordinates[page].DWG.lowerLeft.y+(svgpY*dwgDy);

	return dwgPy;
}


var cvjs_RedlinesLayer = "cvjs_Redlines_01";


/*
 * Returns the current redlines and sticky notes as a string object in DXF so the user can do their own server side save
 * bypassing php or servlet code
 * @return {string} RedlineNote - a string containg the redline, sticky note object
 */

function cvjs_getStickyNotesRedlineDXF(){




// DraftSight template DXF

/******
{ "DWG": 
    { "lowerLeft": { "x": -20.5184, "y" : -11}, 
      "upperRight": { "x": 20.5184, "y" : 11} 
    }
,
 "SVG": 
    { "lowerLeft": { "x": 58.2846, "y" : 125.442}, 
      "upperRight": { "x": 2423.72, "y" : 1393.56} 
    }
}	
*******/

/***

  0
APPID
  2
CADVIEWERJS
 70
     0

***/


	var appdata = " 0\nAPPID\n  2\nCADVIEWERJS\n 70\n     0\n"

	var currentHandle = "";

	var str = " 0\nSECTION\n  2\nHEADER\n  9\n$ACADVER\n  1\nAC1015\n  9\n$ACADMAINTVER\n 70\n     6\n  9\n$DWGCODEPAGE\n  3\nANSI_1252\n  9\n$INSBASE\n 10\n0.0\n 20\n0.0\n 30\n0.0\n"
	var bbox = cvjs_rPaper[cvjs_active_floorplan_div_nr].getBBox();
//	var extents = "  9\n$EXTMIN\n 10\n"+bbox.x+"\n 20\n"+bbox.y+"\n 30\n0.0\n  9\n$EXTMAX\n 10\n"+(bbox.x+bbox.width)+"\n 20\n"+(bbox.y+bbox.height)+"\n 30\n0.0\n";
	var extents = "  9\n$EXTMIN\n 10\n"+cvjs_drawingCoordinates[0].DWG.lowerLeft.x+"\n 20\n"+cvjs_drawingCoordinates[0].DWG.lowerLeft.y+"\n 30\n0.0\n  9\n$EXTMAX\n 10\n"+cvjs_drawingCoordinates[0].DWG.upperRight.x+"\n 20\n"+cvjs_drawingCoordinates[0].DWG.upperRight.y+"\n 30\n0.0\n";
	var str2 = "  9\n$LIMMIN\n 10\n0.0\n 20\n0.0\n  9\n$LIMMAX\n 10\n420.0\n 20\n297.0\n  9\n$ORTHOMODE\n 70\n     0\n  9\n$REGENMODE\n 70\n     1\n  9\n$FILLMODE\n 70\n     1\n  9\n$QTEXTMODE\n 70\n     0\n  9\n$MIRRTEXT\n 70\n     0\n  9\n$LTSCALE\n 40\n1.0\n  9\n$ATTMODE\n 70\n     1\n  9\n$TEXTSIZE\n 40\n2.5\n  9\n$TRACEWID\n 40\n1.0\n  9\n$TEXTSTYLE\n  7\nStandard\n  9\n$CLAYER\n  8\n0\n  9\n$CELTYPE\n  6\nByLayer\n  9\n$CECOLOR\n 62\n   256\n  9\n$CELTSCALE\n 40\n1.0\n  9\n$DISPSILH\n 70\n     0\n  9\n$DIMSCALE\n 40\n1.0\n  9\n$DIMASZ\n 40\n2.5\n  9\n$DIMEXO\n 40\n0.625\n  9\n$DIMDLI\n 40\n3.75\n  9\n$DIMRND\n 40\n0.0\n  9\n$DIMDLE\n 40\n0.0\n  9\n$DIMEXE\n 40\n1.25\n  9\n$DIMTP\n 40\n0.0\n  9\n$DIMTM\n 40\n0.0\n  9\n$DIMTXT\n 40\n2.5\n  9\n$DIMCEN\n 40\n2.5\n  9\n$DIMTSZ\n 40\n0.0\n  9\n$DIMTOL\n 70\n     0\n  9\n$DIMLIM\n 70\n     0\n  9\n$DIMTIH\n 70\n     0\n  9\n$DIMTOH\n 70\n     0\n  9\n$DIMSE1\n 70\n     0\n  9\n$DIMSE2\n 70\n     0\n  9\n$DIMTAD\n 70\n     1\n  9\n$DIMZIN\n 70\n     8\n  9\n$DIMBLK\n  1\n\n  9\n$DIMASO\n 70\n     1\n  9\n$DIMSHO\n 70\n     1\n  9\n$DIMPOST\n  1\n\n  9\n$DIMAPOST\n  1\n\n  9\n$DIMALT\n 70\n     0\n  9\n$DIMALTD\n 70\n     3\n  9\n$DIMALTF\n 40\n0.03937007874016\n  9\n$DIMLFAC\n 40\n1.0\n  9\n$DIMTOFL\n 70\n     1\n  9\n$DIMTVP\n 40\n0.0\n  9\n$DIMTIX\n 70\n     0\n  9\n$DIMSOXD\n 70\n     0\n  9\n$DIMSAH\n 70\n     0\n  9\n$DIMBLK1\n  1\n\n  9\n$DIMBLK2\n  1\n\n  9\n$DIMSTYLE\n  2\nISO-25\n  9\n$DIMCLRD\n 70\n     0\n  9\n$DIMCLRE\n 70\n     0\n  9\n$DIMCLRT\n 70\n     0\n  9\n$DIMTFAC\n 40\n1.0\n  9\n$DIMGAP\n 40\n0.625\n  9\n$DIMJUST\n 70\n     0\n  9\n$DIMSD1\n 70\n     0\n  9\n$DIMSD2\n 70\n     0\n  9\n$DIMTOLJ\n 70\n     0\n  9\n$DIMTZIN\n 70\n     8\n  9\n$DIMALTZ\n 70\n     0\n  9\n$DIMALTTZ\n 70\n     0\n  9\n$DIMUPT\n 70\n     0\n  9\n$DIMDEC\n 70\n     2\n  9\n$DIMTDEC\n 70\n     2\n  9\n$DIMALTU\n 70\n     2\n  9\n$DIMALTTD\n 70\n     3\n  9\n$DIMTXSTY\n  7\nStandard\n  9\n$DIMAUNIT\n 70\n     0\n  9\n$DIMADEC\n 70\n     0\n  9\n$DIMALTRND\n 40\n0.0\n  9\n$DIMAZIN\n 70\n     0\n  9\n$DIMDSEP\n 70\n    44\n  9\n$DIMATFIT\n 70\n     3\n  9\n$DIMFRAC\n 70\n     0\n  9\n$DIMLDRBLK\n  1\n\n  9\n$DIMLUNIT\n 70\n     2\n  9\n$DIMLWD\n 70\n    -2\n  9\n$DIMLWE\n 70\n    -2\n  9\n$DIMTMOVE\n 70\n     0\n  9\n$LUNITS\n 70\n     2\n  9\n$LUPREC\n 70\n     3\n  9\n$SKETCHINC\n 40\n1.0\n  9\n$FILLETRAD\n 40\n10.0\n  9\n$AUNITS\n 70\n     0\n  9\n$AUPREC\n 70\n     0\n  9\n$MENU\n  1\n.\n  9\n$ELEVATION\n 40\n0.0\n  9\n$PELEVATION\n 40\n0.0\n  9\n$THICKNESS\n 40\n0.0\n  9\n$LIMCHECK\n 70\n     0\n  9\n$CHAMFERA\n 40\n10.0\n  9\n$CHAMFERB\n 40\n10.0\n  9\n$CHAMFERC\n 40\n20.0\n  9\n$CHAMFERD\n 40\n0.0\n  9\n$SKPOLY\n 70\n     0\n  9\n$TDCREATE\n 40\n2455022.720692847\n  9\n$TDUCREATE\n 40\n2455022.637359514\n  9\n$TDUPDATE\n 40\n2458234.855757477\n  9\n$TDUUPDATE\n 40\n2458234.772424144\n  9\n$TDINDWG\n 40\n0.0048455208\n  9\n$TDUSRTIMER\n 40\n0.0004155903\n  9\n$USRTIMER\n 70\n     1\n  9\n$ANGBASE\n 50\n0.0\n  9\n$ANGDIR\n 70\n     0\n  9\n$PDMODE\n 70\n     0\n  9\n$PDSIZE\n 40\n0.0\n  9\n$PLINEWID\n 40\n0.0\n  9\n$SPLFRAME\n 70\n     0\n  9\n$SPLINETYPE\n 70\n     6\n  9\n$SPLINESEGS\n 70\n     8\n  9\n$HANDSEED\n  5\n1AD\n  9\n$SURFTAB1\n 70\n     6\n  9\n$SURFTAB2\n 70\n     6\n  9\n$SURFTYPE\n 70\n     6\n  9\n$SURFU\n 70\n     6\n  9\n$SURFV\n 70\n     6\n  9\n$UCSBASE\n  2\n\n  9\n$UCSNAME\n  2\n\n  9\n$UCSORG\n 10\n0.0\n 20\n0.0\n 30\n0.0\n  9\n$UCSXDIR\n 10\n1.0\n 20\n0.0\n 30\n0.0\n  9\n$UCSYDIR\n 10\n0.0\n 20\n1.0\n 30\n0.0\n  9\n$UCSORTHOREF\n  2\n\n  9\n$UCSORTHOVIEW\n 70\n     0\n  9\n$UCSORGTOP\n 10\n0.0\n 20\n0.0\n 30\n0.0\n  9\n$UCSORGBOTTOM\n 10\n0.0\n 20\n0.0\n 30\n0.0\n  9\n$UCSORGLEFT\n 10\n0.0\n 20\n0.0\n 30\n0.0\n  9\n$UCSORGRIGHT\n 10\n0.0\n 20\n0.0\n 30\n0.0\n  9\n$UCSORGFRONT\n 10\n0.0\n 20\n0.0\n 30\n0.0\n  9\n$UCSORGBACK\n 10\n0.0\n 20\n0.0\n 30\n0.0\n  9\n$PUCSBASE\n  2\n\n  9\n$PUCSNAME\n  2\n\n  9\n$PUCSORG\n 10\n0.0\n 20\n0.0\n 30\n0.0\n  9\n$PUCSXDIR\n 10\n1.0\n 20\n0.0\n 30\n0.0\n  9\n$PUCSYDIR\n 10\n0.0\n 20\n1.0\n 30\n0.0\n  9\n$PUCSORTHOREF\n  2\n\n  9\n$PUCSORTHOVIEW\n 70\n     0\n  9\n$PUCSORGTOP\n 10\n0.0\n 20\n0.0\n 30\n0.0\n  9\n$PUCSORGBOTTOM\n 10\n0.0\n 20\n0.0\n 30\n0.0\n  9\n$PUCSORGLEFT\n 10\n0.0\n 20\n0.0\n 30\n0.0\n  9\n$PUCSORGRIGHT\n 10\n0.0\n 20\n0.0\n 30\n0.0\n  9\n$PUCSORGFRONT\n 10\n0.0\n 20\n0.0\n 30\n0.0\n  9\n$PUCSORGBACK\n 10\n0.0\n 20\n0.0\n 30\n0.0\n  9\n$USERI1\n 70\n     0\n  9\n$USERI2\n 70\n     0\n  9\n$USERI3\n 70\n     0\n  9\n$USERI4\n 70\n     0\n  9\n$USERI5\n 70\n     0\n  9\n$USERR1\n 40\n0.0\n  9\n$USERR2\n 40\n0.0\n  9\n$USERR3\n 40\n0.0\n  9\n$USERR4\n 40\n0.0\n  9\n$USERR5\n 40\n0.0\n  9\n$WORLDVIEW\n 70\n     1\n  9\n$SHADEDGE\n 70\n     3\n  9\n$SHADEDIF\n 70\n    70\n  9\n$TILEMODE\n 70\n     1\n  9\n$MAXACTVP\n 70\n    64\n  9\n$PINSBASE\n 10\n0.0\n 20\n0.0\n 30\n0.0\n  9\n$PLIMCHECK\n 70\n     0\n  9\n$PEXTMIN\n 10\n1.000000000000000E+20\n 20\n1.000000000000000E+20\n 30\n1.000000000000000E+20\n  9\n$PEXTMAX\n 10\n-1.000000000000000E+20\n 20\n-1.000000000000000E+20\n 30\n-1.000000000000000E+20\n  9\n$PLIMMIN\n 10\n0.0\n 20\n0.0\n  9\n$PLIMMAX\n 10\n0.0\n 20\n0.0\n  9\n$UNITMODE\n 70\n     0\n  9\n$VISRETAIN\n 70\n     1\n  9\n$PLINEGEN\n 70\n     0\n  9\n$PSLTSCALE\n 70\n     1\n  9\n$TREEDEPTH\n 70\n  3020\n  9\n$CMLSTYLE\n  2\nStandard\n  9\n$CMLJUST\n 70\n     0\n  9\n$CMLSCALE\n 40\n20.0\n  9\n$PROXYGRAPHICS\n 70\n     1\n  9\n$MEASUREMENT\n 70\n     1\n  9\n$CELWEIGHT\n370\n    -1\n  9\n$ENDCAPS\n280\n     0\n  9\n$JOINSTYLE\n280\n     0\n  9\n$LWDISPLAY\n290\n     0\n  9\n$INSUNITS\n 70\n     4\n  9\n$HYPERLINKBASE\n  1\n\n  9\n$STYLESHEET\n  1\n\n  9\n$XEDIT\n290\n     1\n  9\n$CEPSNTYPE\n380\n     0\n  9\n$PSTYLEMODE\n290\n     1\n  9\n$FINGERPRINTGUID\n  2\n{EC6BB858-51AA-46EC-B484-6C9CC7AB3E2E}\n  9\n$VERSIONGUID\n  2\n{FAEB1C32-E019-11D5-929B-00C0DF256EC4}\n  9\n$EXTNAMES\n290\n     1\n  9\n$PSVPSCALE\n 40\n0.0\n  9\n$OLESTARTUP\n290\n     0\n  0\nENDSEC\n  0\nSECTION\n  2\nCLASSES\n  0\nCLASS\n  1\nACDBDICTIONARYWDFLT\n  2\nAcDbDictionaryWithDefault\n  3\nObjectDBX Classes\n 90\n        0\n280\n     0\n281\n     0\n  0\nCLASS\n  1\nSCALE\n  2\nAcDbScale\n  3\nObjectDBX Classes\n 90\n     1153\n280\n     0\n281\n     0\n  0\nCLASS\n  1\nVISUALSTYLE\n  2\nAcDbVisualStyle\n  3\nObjectDBX Classes\n 90\n     4095\n280\n     0\n281\n     0\n  0\nCLASS\n  1\nMATERIAL\n  2\nAcDbMaterial\n  3\nObjectDBX Classes\n 90\n     1153\n280\n     0\n281\n     0\n  0\nCLASS\n  1\nTABLESTYLE\n  2\nAcDbTableStyle\n  3\nObjectDBX Classes\n 90\n     4095\n280\n     0\n281\n     0\n  0\nCLASS\n  1\nMLEADERSTYLE\n  2\nAcDbMLeaderStyle\n  3\nACDB_MLEADERSTYLE_CLASS\n 90\n     4095\n280\n     0\n281\n     0\n  0\nCLASS\n  1\nACDBPLACEHOLDER\n  2\nAcDbPlaceHolder\n  3\nObjectDBX Classes\n 90\n        0\n280\n     0\n281\n     0\n  0\nCLASS\n  1\nLAYOUT\n  2\nAcDbLayout\n  3\nObjectDBX Classes\n 90\n        0\n280\n     0\n281\n     0\n  0\nENDSEC\n  0\nSECTION\n  2\nTABLES\n  0\nTABLE\n  2\nVPORT\n  5\n8\n330\n0\n100\nAcDbSymbolTable\n 70\n     1\n  0\nVPORT\n  5\n29\n330\n8\n100\nAcDbSymbolTableRecord\n100\nAcDbViewportTableRecord\n  2\n*Active\n 70\n     0\n 10\n0.0\n 20\n0.0\n 11\n1.0\n 21\n1.0\n 12\n409.7886626127411\n 22\n161.5087387190685\n 13\n0.0\n 23\n0.0\n 14\n10.0\n 24\n10.0\n 15\n10.0\n 25\n10.0\n 16\n0.0\n 26\n0.0\n 36\n1.0\n 17\n-134.1869158878503\n 27\n0.0\n 37\n0.0\n 40\n235.9700856768558\n 41\n1.958515283842795\n 42\n50.0\n 43\n0.0\n 44\n0.0\n 50\n0.0\n 51\n0.0\n 71\n    16\n 72\n  1000\n 73\n     1\n 74\n     3\n 75\n     0\n 76\n     0\n 77\n     0\n 78\n     0\n281\n     0\n 65\n     1\n110\n0.0\n120\n0.0\n130\n0.0\n111\n1.0\n121\n0.0\n131\n0.0\n112\n0.0\n122\n1.0\n132\n0.0\n 79\n     0\n146\n0.0\n  0\nENDTAB\n  0\nTABLE\n  2\nLTYPE\n  5\n5\n330\n0\n100\nAcDbSymbolTable\n 70\n     1\n  0\nLTYPE\n  5\n14\n330\n5\n100\nAcDbSymbolTableRecord\n100\nAcDbLinetypeTableRecord\n  2\nByBlock\n 70\n     0\n  3\n\n 72\n    65\n 73\n     0\n 40\n0.0\n  0\nLTYPE\n  5\n15\n330\n5\n100\nAcDbSymbolTableRecord\n100\nAcDbLinetypeTableRecord\n  2\nByLayer\n 70\n     0\n  3\n\n 72\n    65\n 73\n     0\n 40\n0.0\n  0\nLTYPE\n  5\n16\n330\n5\n100\nAcDbSymbolTableRecord\n100\nAcDbLinetypeTableRecord\n  2\nContinuous\n 70\n     0\n  3\nSolid line\n 72\n    65\n 73\n     0\n 40\n0.0\n  0\nENDTAB\n  0\nTABLE\n  2\nLAYER\n  5\n2\n330\n0\n100\nAcDbSymbolTable\n 70\n     1\n  0\nLAYER\n  5\n10\n330\n2\n100\nAcDbSymbolTableRecord\n100\nAcDbLayerTableRecord\n  2\n0\n 70\n     0\n 62\n     7\n  6\nContinuous\n370\n    -3\n390\n0\n  0\nENDTAB\n  0\nTABLE\n  2\nSTYLE\n  5\n3\n330\n0\n100\nAcDbSymbolTable\n 70\n     2\n  0\nSTYLE\n  5\n11\n330\n3\n100\nAcDbSymbolTableRecord\n100\nAcDbTextStyleTableRecord\n  2\nStandard\n 70\n     0\n 40\n0.0\n 41\n1.0\n 50\n0.0\n 71\n     0\n 42\n2.5\n  3\narial.ttf\n  4\n\n1001\nACAD\n1000\nArial\n1071\n        0\n  0\nSTYLE\n  5\nB8\n330\n3\n100\nAcDbSymbolTableRecord\n100\nAcDbTextStyleTableRecord\n  2\nAnnotative\n 70\n     0\n 40\n0.0\n 41\n1.0\n 50\n0.0\n 71\n     0\n 42\n2.5\n  3\narial.ttf\n  4\n\n1001\nACAD\n1000\nArial\n1071\n        0\n1001\nAcadAnnotative\n1000\nAnnotativeData\n1002\n{\n1070\n     1\n1070\n     1\n1002\n}\n  0\nENDTAB\n  0\nTABLE\n  2\nVIEW\n  5\n6\n330\n0\n100\nAcDbSymbolTable\n 70\n     0\n  0\nENDTAB\n  0\nTABLE\n  2\nUCS\n  5\n7\n330\n0\n100\nAcDbSymbolTable\n 70\n     0\n  0\nENDTAB\n  0\nTABLE\n"+appdata+"  2\nAPPID\n  5\n9\n330\n0\n100\nAcDbSymbolTable\n 70\n     2\n  0\nAPPID\n  5\n12\n330\n9\n100\nAcDbSymbolTableRecord\n100\nAcDbRegAppTableRecord\n  2\nACAD\n 70\n     0\n  0\nAPPID\n  5\nB9\n330\n9\n100\nAcDbSymbolTableRecord\n100\nAcDbRegAppTableRecord\n  2\nAcadAnnotative\n 70\n     0\n  0\nENDTAB\n  0\nTABLE\n  2\nDIMSTYLE\n  5\nA\n330\n0\n100\nAcDbSymbolTable\n 70\n     2\n100\nAcDbDimStyleTable\n  0\nDIMSTYLE\n105\n27\n330\nA\n100\nAcDbSymbolTableRecord\n100\nAcDbDimStyleTableRecord\n  2\nISO-25\n 70\n     0\n 41\n2.5\n 42\n0.625\n 43\n3.75\n 44\n1.25\n 73\n     0\n 74\n     0\n 77\n     1\n 78\n     8\n140\n2.5\n141\n2.5\n143\n0.03937007874016\n147\n0.625\n171\n     3\n172\n     1\n178\n     0\n271\n     2\n272\n     2\n274\n     3\n278\n    44\n283\n     0\n284\n     8\n340\n11\n  0\nDIMSTYLE\n105\nBA\n330\nA\n100\nAcDbSymbolTableRecord\n100\nAcDbDimStyleTableRecord\n  2\nAnnotative\n 70\n     0\n 40\n0.0\n 41\n2.5\n 42\n0.625\n 43\n3.75\n 44\n1.25\n 73\n     0\n 74\n     0\n 77\n     1\n 78\n     8\n140\n2.5\n141\n2.5\n143\n0.03937007874016\n147\n0.625\n171\n     3\n172\n     1\n178\n     0\n271\n     2\n272\n     2\n274\n     3\n278\n    44\n283\n     0\n284\n     8\n340\n11\n1001\nAcadAnnotative\n1000\nAnnotativeData\n1002\n{\n1070\n     1\n1070\n     1\n1002\n}\n  0\nENDTAB\n  0\nTABLE\n  2\nBLOCK_RECORD\n  5\n1\n330\n0\n100\nAcDbSymbolTable\n 70\n     1\n  0\nBLOCK_RECORD\n  5\n1F\n330\n1\n100\nAcDbSymbolTableRecord\n100\nAcDbBlockTableRecord\n  2\n*Model_Space\n340\n166\n  0\nBLOCK_RECORD\n  5\n1B\n330\n1\n100\nAcDbSymbolTableRecord\n100\nAcDbBlockTableRecord\n  2\n*Paper_Space\n340\n167\n  0\nBLOCK_RECORD\n  5\n23\n330\n1\n100\nAcDbSymbolTableRecord\n100\nAcDbBlockTableRecord\n  2\n*Paper_Space0\n340\n0\n  0\nENDTAB\n  0\nENDSEC\n  0\nSECTION\n  2\nBLOCKS\n  0\nBLOCK\n  5\nEF\n330\n1F\n100\nAcDbEntity\n  8\n0\n100\nAcDbBlockBegin\n  2\n*Model_Space\n 70\n     0\n 10\n0.0\n 20\n0.0\n 30\n0.0\n  3\n*Model_Space\n  1\n\n  0\nENDBLK\n  5\nF0\n330\n1F\n100\nAcDbEntity\n  8\n0\n100\nAcDbBlockEnd\n  0\nBLOCK\n  5\nF1\n330\n1B\n100\nAcDbEntity\n 67\n     1\n  8\n0\n100\nAcDbBlockBegin\n  2\n*Paper_Space\n 70\n     0\n 10\n0.0\n 20\n0.0\n 30\n0.0\n  3\n*Paper_Space\n  1\n\n  0\nENDBLK\n  5\nF2\n330\n1B\n100\nAcDbEntity\n 67\n     1\n  8\n0\n100\nAcDbBlockEnd\n  0\nBLOCK\n  5\nF3\n330\n23\n100\nAcDbEntity\n  8\n0\n100\nAcDbBlockBegin\n  2\n*Paper_Space0\n 70\n     0\n 10\n0.0\n 20\n0.0\n 30\n0.0\n  3\n*Paper_Space0\n  1\n\n  0\nENDBLK\n  5\nF4\n330\n23\n100\nAcDbEntity\n  8\n0\n100\nAcDbBlockEnd\n  0\nENDSEC\n";
	var eof = "0\nEOF\n";
	var dataUrl= str+extents+str2;

	var comma_flag =0;
		dataUrl = dataUrl +"0\nSECTION\n2\nENTITIES\n";

		var handle = 0;
		
///		dataUrl = dataUrl +"var cvjs_stickyNotesRedlines_Base = {\n";

		for (spc in vqRedlines)
		{

	if (cvjs_debug) 			console.log("spc="+spc);

			if (vqRedlines[spc].data("deleted") == true ){
				if (cvjs_debug) console.log("file.js deleted node "+vqRedlines[spc].data("node"));
			}
			else{  // node exists

				if (comma_flag == 0){
					comma_flag = 1
				}
				else{
					
/***				
					dataUrl = dataUrl +"						,\n";
***/
				}
/***
				dataUrl = dataUrl +"					"+spc+": {\n";
//				dataUrl = dataUrl +"					"+vqRedlines[spc].data("node")+": {\n";
				dataUrl = dataUrl +"						node: \""+vqRedlines[spc].data("node")+"\",\n";
				dataUrl = dataUrl +"						name: \""+vqRedlines[spc].data("name")+"\",\n";
				dataUrl = dataUrl +"						id: \""+vqRedlines[spc].data("id")+"\",\n";
				dataUrl = dataUrl +"						layer: \""+vqRedlines[spc].data("layer")+"\",\n";
				dataUrl = dataUrl +"						group: \""+vqRedlines[spc].data("group")+"\",\n";
				dataUrl = dataUrl +"						color: \""+vqRedlines[spc].data("color")+"\",\n";
				dataUrl = dataUrl +"						strokeWidth: \""+vqRedlines[spc].data("strokeWidth")+"\",\n";
				dataUrl = dataUrl +"						fill: \""+vqRedlines[spc].data("fill")+"\",\n";
				dataUrl = dataUrl +"						username: \""+vqRedlines[spc].data("username")+"\",\n";
				dataUrl = dataUrl +"						userid: \""+vqRedlines[spc].data("userid")+"\",\n";
				dataUrl = dataUrl +"						currentPage: "+vqRedlines[spc].data("currentPage")+",\n";
				dataUrl = dataUrl +"						triangle_design: \""+vqRedlines[spc].data("triangle_design")+"\",\n";
				dataUrl = dataUrl +"						polypath_arrow: \""+vqRedlines[spc].data("polypath_arrow")+"\",\n";
				dataUrl = dataUrl +"						redline_text: \""+vqRedlines[spc].data("redline_text")+"\",\n";
				dataUrl = dataUrl +"						fill_opacity: \""+vqRedlines[spc].data("fill_opacity")+"\",\n";
				dataUrl = dataUrl +"						transform: \""+vqRedlines[spc].data("transform")+"\",\n";
				dataUrl = dataUrl +"						drawingRotation: "+vqRedlines[spc].data("drawingRotation")+"\n";
				dataUrl = dataUrl +"					}\n";
***/
			} // case node exists
		}

/**
		if (vqRedlines.length>0 && vqStickyNotes.length>0)
			dataUrl = dataUrl +"						,\n";
**/

		comma_flag =0;
		for (spc in vqStickyNotes)
		{
			if (vqStickyNotes[spc].data("deleted") == true ){
				// do nothing, the note is not there
				//console.log("file.js deleted node "+vqStickyNotes[spc].data("node"));
			}
			else{  // node exists

				if (comma_flag == 0){
					comma_flag = 1
				}
				else{
					
/****					
					
					dataUrl = dataUrl +"						,\n";
*****/

					}

				var notePos = parseInt(spc)+vqRedlines.length;
/***
				dataUrl = dataUrl +"					"+notePos+": {\n";
//				dataUrl = dataUrl +"					"+vqStickyNotes[spc].data("node")+": {\n";
				dataUrl = dataUrl +"						node: \""+vqStickyNotes[spc].data("node")+"\",\n";

				dataUrl = dataUrl +"						name: \""+vqStickyNotes[spc].data("name")+"\",\n";
				dataUrl = dataUrl +"						id: \""+vqStickyNotes[spc].data("id")+"\",\n";
				dataUrl = dataUrl +"						layer: \""+vqStickyNotes[spc].data("layer")+"\",\n";
				dataUrl = dataUrl +"						group: \""+vqStickyNotes[spc].data("group")+"\",\n";
				dataUrl = dataUrl +"						text: \""+vqStickyNotes[spc].data("text")+"\",\n";
				dataUrl = dataUrl +"						userid: \""+vqStickyNotes[spc].data("userid")+"\",\n";
				dataUrl = dataUrl +"						currentPage: "+vqStickyNotes[spc].data("currentPage")+",\n";
				dataUrl = dataUrl +"						date: \""+vqStickyNotes[spc].data("date")+"\",\n";
				dataUrl = dataUrl +"						linked: "+vqStickyNotes[spc].data("linked")+",\n";
				dataUrl = dataUrl +"						transform: \""+vqStickyNotes[spc].data("transform")+"\",\n";
				dataUrl = dataUrl +"						drawingRotation: "+vqStickyNotes[spc].data("drawingRotation")+"\n";
				dataUrl = dataUrl +"					}\n";
***/
			} // case node exists
		}

/***		
		dataUrl = dataUrl +"}\n\n";
		dataUrl = dataUrl +"function cvjs_setUpStickyNotesRedlines(paper){\n\n";
***/

		var spc_counter = 0;
		for (spc in vqRedlines)
		{
			if (vqRedlines[spc].data("deleted") == true ){
				// do nothing, the redline is not there
				//console.log("file.js deleted node "+vqRedlines[spc].data("node"));
			}
			else{  // node exists

				spc_counter++;
				var itemRed = "cItemRed"+spc_counter;
				var str_object = vqRedlines[spc].toString();

				if (str_object.indexOf("polyline")>-1){

					// THIS IS AN ARROW
				
//					console.log("this is an arrow!  "+str_object);

					str_object = str_object.substring(str_object.indexOf("points=")+8);
					str_object = str_object.substring(0, str_object.indexOf('\"'));

/****					
					dataUrl = dataUrl +"var "+itemRed+"= paper.g(paper.polyline(\"";
					dataUrl = dataUrl +str_object+" \")";
****/
					var points = str_object.split(" ");					
					str_object = vqRedlines[spc].toString();
					str_object = str_object.substring(str_object.indexOf("matrix(")+8);
					str_object = str_object.substring(0, str_object.indexOf(')'));
					
										
					var transform = vqRedlines[spc].data("transform"); 
					transform = transform.substring(1, transform.indexOf("r"));
					var insert = transform.split(",");					
//					var rot = transformscale.substring(transformscale.indexOf("r")+1);
					var rot = str_object.substring(str_object.indexOf("r")+1);
										
					
					var color = cvjs_getAutoCADColor(vqRedlines[spc].data("color"));
					// 5 handle number  sequential					
					// 40 thickness start
					// 41 thickness end     (per vertex)
					// 70 closed poly
					handle++;
					var hexString = "A"+handle.toString(16);
					currentHandle = hexString;
					
					dataUrl = dataUrl + "0\nLWPOLYLINE\n";
					dataUrl = dataUrl + "5\n"+hexString+"\n";
					dataUrl = dataUrl + "330\n1F\n100\nAcDbEntity\n";		

					var cvjs_currentRedlineLayerName = vqRedlines[spc].data("layer")+"_"+multiPages[cvjs_active_floorplan_div_nr].pages[(vqRedlines[spc].data("currentPage"))-1].pageName;
					dataUrl = dataUrl + "8\n"+cvjs_currentRedlineLayerName+"\n62\n"+color+"\n";					
					// ARROW, WE HAVE TO CLOSE POLYGON   70=1
					dataUrl = dataUrl + "370\n   211\n100\nAcDbPolyline\n 90\n"+(points.length+1)+"        \n 70\n     1\n 43\n0.0\n";
					
					var linewidth = cvjs_get_dwg_scaled_value(vqRedlines[spc].data("strokeWidth")*cvjs_redlineThickness_scaleFactor, vqRedlines[spc].data("currentPage"));
					
					for (var i=0; i< points.length; i++){
					     var data = points[i].split(",");
						 dataUrl = dataUrl + "40\n"+linewidth+"\n41\n"+linewidth+"\n";						 
						 dataUrl = dataUrl + "10\n"+cvjs_get_dwg_x_coord(Number(insert[0])+Number(data[0]), vqRedlines[spc].data("currentPage"))+"\n20\n"+cvjs_get_dwg_y_coord(Number(insert[1])+Number(data[1]), vqRedlines[spc].data("currentPage"))+"\n";								 
					}
					
					// we have to make point back to start
					 var data = points[0].split(",");
					 dataUrl = dataUrl + "40\n"+linewidth+"\n41\n"+linewidth+"\n";						 
					 dataUrl = dataUrl + "10\n"+cvjs_get_dwg_x_coord(Number(insert[0])+Number(data[0]), vqRedlines[spc].data("currentPage"))+"\n20\n"+cvjs_get_dwg_y_coord(Number(insert[1])+Number(data[1]),vqStickyNotes[spc].data("currentPage")-1)+"\n";								 
					
					// ARROW, MAKE FILLED HATCH
						
					handle++;
					var hexString = "A"+handle.toString(16);

					var cvjs_currentRedlineLayerName = vqRedlines[spc].data("layer")+"_"+multiPages[cvjs_active_floorplan_div_nr].pages[(vqRedlines[spc].data("currentPage"))-1].pageName;
					dataUrl = dataUrl + "0\nHATCH\n  5\n"+hexString+"\n330\n1F\n100\nAcDbEntity\n  8\n"+cvjs_currentRedlineLayerName+"\n 62\n     "+color+"\n370\n    70\n100\nAcDbHatch\n 10\n0.0\n 20\n0.0\n 30\n0.0\n210\n0.0\n220\n0.0\n230\n1.0\n  2\nANSI31\n";
					// FILLED  70=1
					dataUrl = dataUrl + "  70\n     1\n 71\n     1\n 91\n        1\n 92\n        1\n 93\n       "+points.length+"\n";
 
 					for (var i=0; i< points.length-1; i++){
					     var data1 = points[i].split(",");
					     var data2 = points[i+1].split(",");
						 dataUrl = dataUrl + "72\n 1\n"					 
						 dataUrl = dataUrl + "10\n"+cvjs_get_dwg_x_coord(Number(insert[0])+Number(data1[0]), vqRedlines[spc].data("currentPage"))+"\n20\n"+cvjs_get_dwg_y_coord(Number(insert[1])+Number(data1[1]), vqRedlines[spc].data("currentPage"))+"\n";								 
						 dataUrl = dataUrl + "11\n"+cvjs_get_dwg_x_coord(Number(insert[0])+Number(data2[0]), vqRedlines[spc].data("currentPage"))+"\n21\n"+cvjs_get_dwg_y_coord(Number(insert[1])+Number(data2[1]), vqRedlines[spc].data("currentPage"))+"\n";								 
					}
					
					// we have to make point back to start
					 var data1 = points[points.length-1].split(",");
					 var data2 = points[0].split(",");
					 dataUrl = dataUrl + "72\n 1\n"					 
					 dataUrl = dataUrl + "10\n"+cvjs_get_dwg_x_coord(Number(insert[0])+Number(data1[0]), vqRedlines[spc].data("currentPage"))+"\n20\n"+cvjs_get_dwg_y_coord(Number(insert[1])+Number(data1[1]), vqRedlines[spc].data("currentPage"))+"\n";								 
					 dataUrl = dataUrl + "11\n"+cvjs_get_dwg_x_coord(Number(insert[0])+Number(data2[0]), vqRedlines[spc].data("currentPage"))+"\n21\n"+cvjs_get_dwg_y_coord(Number(insert[1])+Number(data2[1]), vqRedlines[spc].data("currentPage"))+"\n";								 

					 dataUrl = dataUrl + " 97\n        1\n330\n"+currentHandle+"\n 75\n     0\n 76\n     1\n 52\n0.0\n41\n1.0\n 77\n     0\n 78\n     1\n 53\n45.0\n 43\n0.0\n 44\n0.0\n 45\n-2.245064030267288\n 46\n2.245064030267288\n 79\n     0\n 98\n        1\n 10\n0.0\n 20\n0.0\n1001\nACAD\n1010\n0.0\n1020\n0.0\n1030\n0.0\n";
					
					 currentHandle = hexString;
					
					// Hatch
					// associative

						
									
/***
					dataUrl = dataUrl +".attr({transform: \""+vqRedlines[spc].data("transform")+"\", \"fill\": \""+vqRedlines[spc].data("color")+"\"})";
***/
					str_object = vqRedlines[spc].toString();
					str_object = str_object.substring(str_object.indexOf("d=")+3);
					str_object = str_object.substring(0, str_object.indexOf('\"'));
							
/***					
					
					//console.log(str_object);
					dataUrl = dataUrl +", paper.path(\"";
					dataUrl = dataUrl +str_object+" \")";
					dataUrl = dataUrl +".attr({stroke: \""+vqRedlines[spc].data("color")+"\", \"stroke-width\": \""+vqRedlines[spc].data("strokeWidth")+"\", \"fill\": \""+vqRedlines[spc].data("fill")+"\", \"fill-opacity\": \""+vqRedlines[spc].data("fill_opacity")+"\"}))";
					dataUrl = dataUrl +"\n.data(\"node\",\""+vqRedlines[spc].data("node")+"\");\n";
					dataUrl = dataUrl +"vqRedlines.push("+itemRed+");\n\n";
****/
					//console.log(dataUrl);
										
						var checkClosed = str_object.indexOf("Z");
						
						var isClosed = false;
						if (checkClosed >-1){
							isClosed = true;
						}					
						if (!isClosed) str_object = str_object + "Z";
						var outline = new PathConverter.Outline();
						const parser = new PathConverter.SVGParser(outline);
						parser.parse(str_object);

						var color = cvjs_getAutoCADColor(vqRedlines[spc].data("color"));
						// 40 thickness start
						// 41 thickness end     (per vertex)
						// 70 closed poly
						handle++;
						var hexString = "A"+handle.toString(16);
						var linewidth = cvjs_get_dwg_scaled_value(vqRedlines[spc].data("strokeWidth")*cvjs_redlineThickness_scaleFactor, vqRedlines[spc].data("currentPage"));
						
						
						var lPoints=0;

outline.getShapes().forEach(shape => {shape.points.forEach(p => {[p.main, p.left, p.right].forEach(pt => {if (!pt) return;lPoints++;  });});});
						
						//window.alert("1 number of points in path including Z"+lPoints);
						
						if (!isClosed) lPoints--;
						dataUrl = dataUrl + "0\nLWPOLYLINE\n";
						dataUrl = dataUrl + "5\n"+hexString+"\n";
						dataUrl = dataUrl + "330\n1F\n100\nAcDbEntity\n";	

						var cvjs_currentRedlineLayerName = vqRedlines[spc].data("layer")+"_"+multiPages[cvjs_active_floorplan_div_nr].pages[(vqRedlines[spc].data("currentPage"))-1].pageName;
				
						dataUrl = dataUrl + "8\n"+cvjs_currentRedlineLayerName+"\n62\n"+color+"\n";
						var closepoly = 0;
						if (isClosed) closepoly = 1;
						dataUrl = dataUrl + "370\n   211\n100\nAcDbPolyline\n 90\n"+lPoints+"        \n 70\n     "+closepoly+"\n 43\n0.0\n";
						
						var linewidth = cvjs_get_dwg_scaled_value(vqRedlines[spc].data("strokeWidth")*cvjs_redlineThickness_scaleFactor, vqRedlines[spc].data("currentPage"));												
						var j=0;
						outline.getShapes().forEach(shape => {
							shape.points.forEach(p => {
								[p.main, p.left, p.right].forEach(pt => {
									if (!pt) return;
									 if (j<lPoints){
										 dataUrl = dataUrl + "40\n"+linewidth+"\n41\n"+linewidth+"\n";						 
										 dataUrl = dataUrl + "10\n"+cvjs_get_dwg_x_coord(pt.x, vqRedlines[spc].data("currentPage"))+"\n20\n"+cvjs_get_dwg_y_coord(pt.y, vqRedlines[spc].data("currentPage"))+"\n";
									 }
									 j++;
								});
							});
						});
						// NO HATCH, THIS IS AN ARROW TAIL


						// here we put in all the attributes

						dataUrl = dataUrl + "1001\n CADVIEWERJS\n";
						dataUrl = dataUrl + "1000\n node: "+vqRedlines[spc].data("node")+"\n";
						dataUrl = dataUrl + "1000\n name: "+vqRedlines[spc].data("name")+"\n";
						dataUrl = dataUrl + "1000\n id: "+vqRedlines[spc].data("id")+"\n";
						dataUrl = dataUrl + "1000\n layer: "+vqRedlines[spc].data("layer")+"\n";
						dataUrl = dataUrl + "1000\n group: "+vqRedlines[spc].data("group")+"\n";
						dataUrl = dataUrl + "1000\n color: "+vqRedlines[spc].data("color")+"\n";
						dataUrl = dataUrl + "1000\n strokeWidth: "+vqRedlines[spc].data("strokeWidth")+"\n";
						dataUrl = dataUrl + "1000\n fill: "+vqRedlines[spc].data("fill")+"\n";
						dataUrl = dataUrl + "1000\n username: "+vqRedlines[spc].data("username")+"\n";
						dataUrl = dataUrl + "1000\n userid: "+vqRedlines[spc].data("userid")+"\n";
						dataUrl = dataUrl + "1000\n currentPage: "+vqRedlines[spc].data("currentPage")+"\n";
						dataUrl = dataUrl + "1000\n triangle_design: "+vqRedlines[spc].data("triangle_design")+"\n";
						dataUrl = dataUrl + "1000\n polypath_arrow: "+"none"+"\n";
						dataUrl = dataUrl + "1000\n redline_text: "+vqRedlines[spc].data("redline_text")+"\n";
						dataUrl = dataUrl + "1000\n fill_opacity: "+vqRedlines[spc].data("fill_opacity")+"\n";
						dataUrl = dataUrl + "1000\n transform: "+vqRedlines[spc].data("transform")+"\n";
						dataUrl = dataUrl + "1000\n drawingRotation: "+vqRedlines[spc].data("drawingRotation")+"\n";
						
						
						
				}
				else if (str_object.indexOf("text")>-1){

					//dataUrl = dataUrl +"var "+itemRed+"= paper.text( 0, 0,\""+vqRedlines[spc].data("redline_text")+"\")";
					//dataUrl = dataUrl +".attr({stroke: \""+vqRedlines[spc].data("color")+"\", \"fill\": \""+vqRedlines[spc].data("color")+"\", \"font-size\": \""+cvjs_reference_font_size+"\", \"transform\": \""+vqRedlines[spc].data("transform")+"\"})";
					//dataUrl = dataUrl +"\n.data(\"node\",\""+vqRedlines[spc].data("node")+"\");\n";
					//dataUrl = dataUrl +"vqRedlines.push("+itemRed+");\n\n";
/****
					dataUrl = dataUrl +"var "+itemRed+"= paper.path(\"M0,0\")";
					dataUrl = dataUrl +"\n.data(\"node\",\""+vqRedlines[spc].data("node")+"\");\n";
					dataUrl = dataUrl +"vqRedlines.push("+itemRed+");\n\n";
***/

//						transform: "T615.5240601004703,209.54819432253697   S0.20498583644859775,   615.5240601004703,   209.54819432253697",
					
					var transformscale = vqRedlines[spc].data("transform");				
					var transform = transformscale.substring(1, transformscale.indexOf("S")); 
					var insert = transform.split(",");					
					var scale = transformscale.substring(transformscale.indexOf("S")+1);
					var textscale = scale.split(",");					
					var color = cvjs_getAutoCADColor(vqRedlines[spc].data("color"));
					// 40 thickness start
					// 41 thickness end     (per vertex)
					// 70 closed poly
					handle++;
					var hexString = "A"+handle.toString(16);

					
					var mytext = vqRedlines[spc].data("redline_text");
					var strings =  mytext.split("<br>");
					//window.alert(strings.length);
					var maxchar = 1;
					for (var k=0; k<strings.length; k++){

						if (strings[k].length>maxchar) maxchar = strings[k].length;
					}				
//					window.alert(maxchar);
					var numberofRows = (mytext.match(/<br>/g) || []).length +1;  // number of rows is number of <br> +1
					mytext = "{"+mytext+"}";
					mytext = mytext.replace(/<br>/g, '\\P');		
							
					dataUrl = dataUrl +"0\nMTEXT\n";
					dataUrl = dataUrl + "5\n"+hexString+"\n";

					var cvjs_currentRedlineLayerName = vqRedlines[spc].data("layer")+"_"+multiPages[cvjs_active_floorplan_div_nr].pages[(vqRedlines[spc].data("currentPage"))-1].pageName;

					dataUrl = dataUrl +"330\n1F\n100\nAcDbEntity\n8\n"+cvjs_currentRedlineLayerName+"\n62\n"+color+"\n100\nAcDbMText\n";
					dataUrl = dataUrl +"10\n"+cvjs_get_dwg_x_coord(insert[0], vqRedlines[spc].data("currentPage"))+"\n";
					dataUrl = dataUrl +"20\n"+cvjs_get_dwg_y_coord(insert[1], vqRedlines[spc].data("currentPage"))+"\n";
					dataUrl = dataUrl +"30\n 0\n";
					dataUrl = dataUrl +"40\n"+cvjs_get_dwg_scaled_value(cvjs_reference_font_size*textscale[0], vqRedlines[spc].data("currentPage"))+"\n";
					dataUrl = dataUrl +"41\n"+cvjs_get_dwg_scaled_value(insert[1]+numberofRows*cvjs_reference_font_size*textscale[0], vqRedlines[spc].data("currentPage"))+"\n";   // Think this is the yvalue of the end of the box, insertion y + height of text
					dataUrl = dataUrl +" 71\n     1\n 72\n     5\n  1\n";					
					dataUrl = dataUrl + mytext +"\n";
					// here we need to adjust 46 and 1040
					
					// Think 1040 is the height of all text + extra   // I think
					// Think 1070 is the width of maximum textstring   // I think
					
					var myBoxWidth = cvjs_get_dwg_scaled_value((cvjs_reference_font_size*textscale[0])*0.8*maxchar, vqRedlines[spc].data("currentPage"));
					
					//dataUrl = dataUrl + " 73\n     1\n 44\n1.0\n1001\nACAD\n1000\nACAD_MTEXT_DEFINED_HEIGHT_BEGIN\n1070\n    "+myBoxWidth+"\n1040\n"+cvjs_get_dwg_scaled_value(numberofRows*cvjs_reference_font_size*textscale[0]*1.2)+"\n1000\nACAD_MTEXT_DEFINED_HEIGHT_END\n"
					
					dataUrl = dataUrl + " 73\n     1\n 44\n1.0\n1001\nACAD\n1000\nACAD_MTEXT_DEFINED_HEIGHT_BEGIN\n1070\n    "+myBoxWidth+"\n1040\n"+cvjs_get_dwg_scaled_value(numberofRows*cvjs_reference_font_size*textscale[0])+"\n1000\nACAD_MTEXT_DEFINED_HEIGHT_END\n"
					dataUrl = dataUrl + "1001\n CADVIEWERJS\n";
					dataUrl = dataUrl + "1000\n node: "+vqRedlines[spc].data("node")+"\n";
					dataUrl = dataUrl + "1000\n name: "+vqRedlines[spc].data("name")+"\n";
					dataUrl = dataUrl + "1000\n id: "+vqRedlines[spc].data("id")+"\n";
					dataUrl = dataUrl + "1000\n layer: "+vqRedlines[spc].data("layer")+"\n";
					dataUrl = dataUrl + "1000\n group: "+vqRedlines[spc].data("group")+"\n";
					dataUrl = dataUrl + "1000\n color: "+vqRedlines[spc].data("color")+"\n";
					dataUrl = dataUrl + "1000\n strokeWidth: "+vqRedlines[spc].data("strokeWidth")+"\n";
					dataUrl = dataUrl + "1000\n fill: "+vqRedlines[spc].data("fill")+"\n";
					dataUrl = dataUrl + "1000\n username: "+vqRedlines[spc].data("username")+"\n";
					dataUrl = dataUrl + "1000\n userid: "+vqRedlines[spc].data("userid")+"\n";
					dataUrl = dataUrl + "1000\n currentPage: "+vqRedlines[spc].data("currentPage")+"\n";
					dataUrl = dataUrl + "1000\n triangle_design: "+vqRedlines[spc].data("triangle_design")+"\n";
					dataUrl = dataUrl + "1000\n polypath_arrow: "+"none"+"\n";
					dataUrl = dataUrl + "1000\n redline_text: "+vqRedlines[spc].data("redline_text")+"\n";
					dataUrl = dataUrl + "1000\n fill_opacity: "+vqRedlines[spc].data("fill_opacity")+"\n";
					dataUrl = dataUrl + "1000\n transform: "+vqRedlines[spc].data("transform")+"\n";
					dataUrl = dataUrl + "1000\n drawingRotation: "+vqRedlines[spc].data("drawingRotation")+"\n";
						

		
										
/***					
					dataUrl = dataUrl +"TEXT\n";
					dataUrl = dataUrl + "5\n"+hexString+"\n";

					dataUrl = dataUrl +"8\n0\n62\n"+color+"\n";
//					dataUrl = dataUrl +"10\n"+www.origX+"\n";
//					dataUrl = dataUrl +"20\n"+www.origY+"\n";
					dataUrl = dataUrl +"10\n"+insert[0]+"\n";
					dataUrl = dataUrl +"20\n"+insert[1]+"\n";
					dataUrl = dataUrl +"1\n"+vqRedlines[spc].data("redline_text")+"\n";
//					dataUrl = dataUrl +"40\n"+(www.origHeight/4)+"\n";
//					dataUrl = dataUrl +"7\n"+font.getName()+"n";
					dataUrl = dataUrl +"40\n"+(cvjs_reference_font_size*textscale[0])+"\n";
					dataUrl = dataUrl +"7\n"+"Ariel"+"\n";
					dataUrl = dataUrl +"0\n";
**/



					
					
				}
				else{
					if (str_object.indexOf("path")>-1){

						//window.alert(str_object);
					
						var fillopacity = str_object.substring(str_object.indexOf("fill-opacity")+13);
						
						fillopacity = fillopacity.substring(0, fillopacity.indexOf(";"));
						
//						window.alert(fillopacity+"  "+Number(fillopacity));
						
						var opacityFlag = (Number(fillopacity)>0.02)

						//window.alert(fillopacity+"  "+Number(fillopacity)+"  "+opacityFlag);
						
						
						str_object = str_object.substring(str_object.indexOf("d=")+3);
						str_object = str_object.substring(0, str_object.indexOf('\"'));
						
//console.log("path XXXXXXXXXXX"+str_object+"XXXXXXXXXXXX");	

						var checkClosed = str_object.indexOf("Z");
						
						var isClosed = false;
						if (checkClosed >-1){
							isClosed = true;
						}					
						if (!isClosed) str_object = str_object + "Z";
						var outline = new PathConverter.Outline();
						const parser = new PathConverter.SVGParser(outline);
						parser.parse(str_object);
						
						var color = cvjs_getAutoCADColor(vqRedlines[spc].data("color"));
						// 40 thickness start
						// 41 thickness end     (per vertex)
						// 70 closed poly
						handle++;
						var hexString = "A"+handle.toString(16);
						
						currentHandle = hexString;
						
						var linewidth = vqRedlines[spc].data("strokeWidth")*cvjs_redlineThickness_scaleFactor;

						var lPoints=0;
						outline.getShapes().forEach(shape => {
							shape.points.forEach(p => {
								[p.main, p.left, p.right].forEach(pt => {
									if (!pt) return;
									 lPoints++;									 
								});
							});
						});
						
						//window.alert("2 number of points in path including Z "+lPoints);
						
						if (!isClosed) lPoints--;

						dataUrl = dataUrl + "0\nLWPOLYLINE\n";
						dataUrl = dataUrl + "5\n"+hexString+"\n";
						dataUrl = dataUrl + "330\n1F\n100\nAcDbEntity\n";	

						var cvjs_currentRedlineLayerName = vqRedlines[spc].data("layer")+"_"+multiPages[cvjs_active_floorplan_div_nr].pages[(vqRedlines[spc].data("currentPage"))-1].pageName;
				
						dataUrl = dataUrl + "8\n"+cvjs_currentRedlineLayerName+"\n62\n"+color+"\n";
						var closepoly = 0;
						if (isClosed) closepoly = 1;
						dataUrl = dataUrl + "370\n   211\n100\nAcDbPolyline\n 90\n"+lPoints+"        \n 70\n     "+closepoly+"\n 43\n0.0\n";
						
						var linewidth = vqRedlines[spc].data("strokeWidth")*cvjs_redlineThickness_scaleFactor;
												
						var j=0;
						outline.getShapes().forEach(shape => {
							shape.points.forEach(p => {
								[p.main, p.left, p.right].forEach(pt => {
									if (!pt) return;
									 if (j<lPoints){
										 dataUrl = dataUrl + "40\n"+cvjs_get_dwg_scaled_value(linewidth, vqRedlines[spc].data("currentPage"))+"\n41\n"+cvjs_get_dwg_scaled_value(linewidth, vqRedlines[spc].data("currentPage"))+"\n";						 
//										 dataUrl = dataUrl + "40\n"+linewidth+"\n41\n"+linewidth+"\n";						 
//										 dataUrl = dataUrl + "10\n"+pt.x+"\n20\n"+pt.y+"\n";
										 dataUrl = dataUrl + "10\n"+cvjs_get_dwg_x_coord(pt.x, vqRedlines[spc].data("currentPage"))+"\n20\n"+cvjs_get_dwg_y_coord(pt.y, vqRedlines[spc].data("currentPage"))+"\n";
									 }
									 j++;
								});
							});
						});
						dataUrl = dataUrl + "1001\n CADVIEWERJS\n";
						dataUrl = dataUrl + "1000\n node: "+vqRedlines[spc].data("node")+"\n";
						dataUrl = dataUrl + "1000\n name: "+vqRedlines[spc].data("name")+"\n";
						dataUrl = dataUrl + "1000\n id: "+vqRedlines[spc].data("id")+"\n";
						dataUrl = dataUrl + "1000\n layer: "+vqRedlines[spc].data("layer")+"\n";
						dataUrl = dataUrl + "1000\n group: "+vqRedlines[spc].data("group")+"\n";
						dataUrl = dataUrl + "1000\n color: "+vqRedlines[spc].data("color")+"\n";
						dataUrl = dataUrl + "1000\n strokeWidth: "+vqRedlines[spc].data("strokeWidth")+"\n";
						dataUrl = dataUrl + "1000\n fill: "+vqRedlines[spc].data("fill")+"\n";
						dataUrl = dataUrl + "1000\n username: "+vqRedlines[spc].data("username")+"\n";
						dataUrl = dataUrl + "1000\n userid: "+vqRedlines[spc].data("userid")+"\n";
						dataUrl = dataUrl + "1000\n currentPage: "+vqRedlines[spc].data("currentPage")+"\n";
						dataUrl = dataUrl + "1000\n triangle_design: "+vqRedlines[spc].data("triangle_design")+"\n";
						dataUrl = dataUrl + "1000\n polypath_arrow: "+"none"+"\n";
						dataUrl = dataUrl + "1000\n redline_text: "+vqRedlines[spc].data("redline_text")+"\n";
						dataUrl = dataUrl + "1000\n fill_opacity: "+vqRedlines[spc].data("fill_opacity")+"\n";
						dataUrl = dataUrl + "1000\n transform: "+vqRedlines[spc].data("transform")+"\n";
						dataUrl = dataUrl + "1000\n drawingRotation: "+vqRedlines[spc].data("drawingRotation")+"\n";
						
			
						// the check if fill and transparency
						if (opacityFlag && isClosed){
						
						// THIS CAN BE CLOSED OR OPEN
						// IF CLOSED MAKE A HATCH
						// IF TRANSPARANCY MAKE A HATCH
						
							handle++;
							var hexString = "A"+handle.toString(16);

							var cvjs_currentRedlineLayerName = vqRedlines[spc].data("layer")+"_"+multiPages[cvjs_active_floorplan_div_nr].pages[(vqRedlines[spc].data("currentPage"))-1].pageName;

							dataUrl = dataUrl + "0\nHATCH\n  5\n"+hexString+"\n330\n1F\n100\nAcDbEntity\n  8\n"+cvjs_currentRedlineLayerName+"\n 62\n     "+color+"\n370\n    70\n100\nAcDbHatch\n 10\n0.0\n 20\n0.0\n 30\n0.0\n210\n0.0\n220\n0.0\n230\n1.0\n  2\nANSI31\n";
							// HATCH  70=1
							dataUrl = dataUrl + "  70\n     0\n 71\n     1\n 91\n        1\n 92\n        1\n 93\n       "+(lPoints-1)+"\n";
							var pointsx=new Array();
							var pointsy=new Array();
							var j=0;
							outline.getShapes().forEach(shape => {
								shape.points.forEach(p => {
									[p.main, p.left, p.right].forEach(pt => {
										if (!pt) return;										
										pointsx[j] = pt.x; 
										pointsy[j] = pt.y; 
										j++;
									});
								});
							});
							
							for (var i=0; i< pointsx.length-1; i++){
								 dataUrl = dataUrl + "72\n 1\n"					 
//								 dataUrl = dataUrl + "10\n"+pointsx[i]+"\n20\n"+pointsy[i]+"\n";								 
//								 dataUrl = dataUrl + "11\n"+pointsx[i+1]+"\n21\n"+pointsy[i+1]+"\n";								 
								 dataUrl = dataUrl + "10\n"+cvjs_get_dwg_x_coord(pointsx[i], vqRedlines[spc].data("currentPage"))+"\n20\n"+cvjs_get_dwg_y_coord(pointsy[i], vqRedlines[spc].data("currentPage"))+"\n";								 
								 dataUrl = dataUrl + "11\n"+cvjs_get_dwg_x_coord(pointsx[i+1], vqRedlines[spc].data("currentPage"))+"\n21\n"+cvjs_get_dwg_y_coord(pointsy[i+1], vqRedlines[spc].data("currentPage"))+"\n";								 
							}							
							// we have to make point back to start
							 dataUrl = dataUrl + "72\n 1\n"					 
//							 dataUrl = dataUrl + "10\n"+pointsx[pointsx.length-1]+"\n20\n"+pointsy[pointsx.length-1]+"\n";								 
//							 dataUrl = dataUrl + "11\n"+pointsx[0]+"\n21\n"+pointsy[0]+"\n";								 
							 dataUrl = dataUrl + "10\n"+cvjs_get_dwg_x_coord(pointsx[pointsx.length-1], vqRedlines[spc].data("currentPage"))+"\n20\n"+cvjs_get_dwg_y_coord(pointsy[pointsx.length-1], vqRedlines[spc].data("currentPage"))+"\n";								 
							 dataUrl = dataUrl + "11\n"+cvjs_get_dwg_x_coord(pointsx[0], vqRedlines[spc].data("currentPage"))+"\n21\n"+cvjs_get_dwg_y_coord(pointsy[0], vqRedlines[spc].data("currentPage"))+"\n";								 

							 dataUrl = dataUrl + " 97\n        1\n330\n"+currentHandle+"\n 75\n     0\n 76\n     1\n 52\n0.0\n41\n1.0\n 77\n     0\n 78\n     1\n 53\n45.0\n 43\n0.0\n 44\n0.0\n 45\n"+cvjs_get_dwg_scaled_value(-2.245064030267288*3.0)+"\n 46\n"+cvjs_get_dwg_scaled_value(2.245064030267288*3.0)+"\n 79\n     0\n 98\n        1\n 10\n0.0\n 20\n0.0\n1001\nACAD\n1010\n0.0\n1020\n0.0\n1030\n0.0\n";							
							 currentHandle = hexString;
						}	

						
console.log("dataURL TOTAL "+dataUrl+" dataURL TOTAL ");	
					
					
					/*						
						//console.log(str_object);
						dataUrl = dataUrl +"var "+itemRed+"= paper.path(\"";
						dataUrl = dataUrl +str_object+" \")";
						dataUrl = dataUrl +".attr({stroke: \""+vqRedlines[spc].data("color")+"\", \"stroke-width\": \""+vqRedlines[spc].data("strokeWidth")+"\", \"fill\": \""+vqRedlines[spc].data("fill")+"\", \"fill-opacity\": \""+vqRedlines[spc].data("fill_opacity")+"\"})";
						dataUrl = dataUrl +"\n.data(\"node\",\""+vqRedlines[spc].data("node")+"\");\n";
						dataUrl = dataUrl +"vqRedlines.push("+itemRed+");\n\n";
*/
					}
				}


				// 2017-07-09
/***
				dataUrl = dataUrl +"cvjs_stickyNotesRedlines.push(cvjs_stickyNotesRedlines_Base["+spc+"]);\n\n";
***/
			} // case node exists
		}

				
		dataUrl = dataUrl +"0\nENDSEC\n0\nEOF\n";
		
		
/***
		dataUrl = dataUrl +" cvjs_redline="+spc_counter+"; \n\n";
***/
		
		
		
		
/***		
		
		var spc_counter = 0;
		for (spc in vqStickyNotes)
		{
			if (vqStickyNotes[spc].data("deleted") == true ){
				// the note is deleted, so no nothing
				//console.log("file.js deleted node "+vqStickyNotes[spc].data("node"));
			}
			else{  // node exists

				spc_counter++;
				var itemSNote = "itemSNote"+spc_counter;
				var str_object = vqStickyNotes[spc].toString();

				var rightadjustment = 0;
				if (vqStickyNotes[spc].data("id")<10) rightadjustment = 3;
				var SNoteTemplate = "paper.group(paper.path(\"M0,0h20v20h-20v-20Z\").attr({stroke: \"#000000\", \"stroke-width\" : \"1.0\"}),"+
					"paper.path(\"M7,12h1.3M9.5,12h3.5M11.25,12v5M9.75,12v1.75M12.75,12v1.75M10.5,17h1.5M7,13.5h1.3M7,15.25h3M7,17.0h2.2\").attr({stroke: \"#000000\", \"stroke-width\" : \"0.5\"}),"+
					"paper.text("+(3+rightadjustment)+",9,\"#"+vqStickyNotes[spc].data("id")+"\").attr({\"font-size\": \"8px\", \"font-style\": \"italic\", stroke: \"#000000\", \"stroke-width\" : \"0.3\", \"stroke\" : \"0.3\", \"fill\" : \"#000000\", \"fill-opacity\" : 1.0}))";
					
					// 2018-03-15
//					SNoteTemplate = SNoteTemplate + ".attr({\'transform\': \""+vqStickyNotes[spc].data("transform")+"\" , \"opacity\" : \"1\"})";
					
					// we are simply loading in a scaled down image that we then make come "alive"
					SNoteTemplate = SNoteTemplate + ".attr({\'transform\': \"t0,0S0.01\" , \"opacity\" : \"0.1\"})";
					
					
					SNoteTemplate = SNoteTemplate + ".attr({	fill: \'#FFF\', \"fill-opacity\": \"0.8\", stroke: \'#000\', \'stroke-opacity\': \"1\" })";

					dataUrl = dataUrl +"var "+itemSNote+"="+SNoteTemplate+"\n.data(\"node\",\""+vqStickyNotes[spc].data("node")+"\");\n";
					dataUrl = dataUrl +"vqStickyNotes.push("+itemSNote+");\n\n";

					var notePos = parseInt(spc)+vqRedlines.length;
				// 2017-07-09
				dataUrl = dataUrl +"cvjs_stickyNotesRedlines.push(cvjs_stickyNotesRedlines_Base["+notePos+"]);\n\n";

			} // case node exists
		}

		dataUrl = dataUrl +" cvjs_stickynote="+spc_counter+"; \n\n";

		dataUrl = dataUrl +"}\n";

		dataUrl = dataUrl +"\njQuery(document).ready(function() { \n";
		dataUrl = dataUrl +"	stickynotesRedlines_loaded = true; \n";
		dataUrl = dataUrl +"}); \n";
		dataUrl = dataUrl +"stickynotesRedlines_loaded = true; \n";



// ZZZZZ Let us now try to make sure everything is syntactically correct
// 2017-07-09 , this has already been fixed upon upload

	if (cvjs_debug) 		console.log("redline length "+vqRedlines.length);

		var topIndex = vqRedlines.length;

		for (var i=0; i<vqRedlines.length; i++){

			var j=0;
			var tempString = dataUrl;
			var k=i+1;
			var redVar = "RED_"+k;

			while (tempString.indexOf(redVar)>-1){
				j++;
				tempString = tempString.substring(tempString.indexOf(redVar)+4);
			}

if (cvjs_debug) 			console.log("Instances of "+redVar+" is "+j);

			if (j==4){
	if (cvjs_debug) 				console.log("we need to substitute 2 and 4th instance of "+redVar+" with new variable names!")
				topIndex++;
				var redVarNew = "RED_"+topIndex;

				// change 2nd instance
				var nIndex = nthIndex(dataUrl, redVar, 2);
				dataUrl = dataUrl.substring(0,nIndex)+redVarNew+dataUrl.substring(nIndex+redVar.length);

				// change 4th instance   - now one instance is gone, therefore 3rd instance
				var nIndex = nthIndex(dataUrl, redVar, 3);
				dataUrl = dataUrl.substring(0,nIndex)+redVarNew+dataUrl.substring(nIndex+redVar.length);

			}
		}
***/
		return(dataUrl);

};




/*
 * Returns the current redlines and sticky notes as a string object in JS so the user can do their own server side save
 * bypassing php or servlet code
 * @return {string} RedlineNote - a string containg the redline, sticky note object
 */


function cvjs_getStickyNotesRedlineJS(){


return (cvjs_getStickyNotesRedline());

}




/*
 * Returns the current redlines and sticky notes as a string object in so the user can do their own server side save
 * bypassing php or servlet code
 * @return {string} RedlineNote - a string containg the redline, sticky note object
 */

function cvjs_getStickyNotesRedline(){

		var dataUrl="";

		var comma_flag =0;

		dataUrl = dataUrl +"var cvjs_stickyNotesRedlines_Base = {\n";

		for (spc in vqRedlines)
		{

	if (cvjs_debug) 			console.log("spc="+spc);

			if (vqRedlines[spc].data("deleted") == true ){
				if (cvjs_debug) console.log("file.js deleted node "+vqRedlines[spc].data("node"));
			}
			else{  // node exists

				if (comma_flag == 0){
					comma_flag = 1
				}
				else{
					dataUrl = dataUrl +"						,\n";
				}

				dataUrl = dataUrl +"					"+spc+": {\n";
//				dataUrl = dataUrl +"					"+vqRedlines[spc].data("node")+": {\n";
				dataUrl = dataUrl +"						node: \""+vqRedlines[spc].data("node")+"\",\n";
				dataUrl = dataUrl +"						name: \""+vqRedlines[spc].data("name")+"\",\n";
				dataUrl = dataUrl +"						id: \""+vqRedlines[spc].data("id")+"\",\n";
				dataUrl = dataUrl +"						layer: \""+vqRedlines[spc].data("layer")+"\",\n";
				dataUrl = dataUrl +"						group: \""+vqRedlines[spc].data("group")+"\",\n";
				dataUrl = dataUrl +"						color: \""+vqRedlines[spc].data("color")+"\",\n";
				dataUrl = dataUrl +"						strokeWidth: \""+vqRedlines[spc].data("strokeWidth")+"\",\n";
				dataUrl = dataUrl +"						fill: \""+vqRedlines[spc].data("fill")+"\",\n";
				dataUrl = dataUrl +"						username: \""+vqRedlines[spc].data("username")+"\",\n";
				dataUrl = dataUrl +"						userid: \""+vqRedlines[spc].data("userid")+"\",\n";
				dataUrl = dataUrl +"						currentPage: "+vqRedlines[spc].data("currentPage")+",\n";
				dataUrl = dataUrl +"						triangle_design: \""+vqRedlines[spc].data("triangle_design")+"\",\n";
				dataUrl = dataUrl +"						polypath_arrow: \""+vqRedlines[spc].data("polypath_arrow")+"\",\n";
				dataUrl = dataUrl +"						redline_text: \""+vqRedlines[spc].data("redline_text")+"\",\n";
				dataUrl = dataUrl +"						fill_opacity: \""+vqRedlines[spc].data("fill_opacity")+"\",\n";
				dataUrl = dataUrl +"						transform: \""+vqRedlines[spc].data("transform")+"\",\n";
				dataUrl = dataUrl +"						drawingRotation: "+vqRedlines[spc].data("drawingRotation")+"\n";
				dataUrl = dataUrl +"					}\n";

			} // case node exists
		}


		if (vqRedlines.length>0 && vqStickyNotes.length>0)
			dataUrl = dataUrl +"						,\n";


		comma_flag =0;
		for (spc in vqStickyNotes)
		{
			if (vqStickyNotes[spc].data("deleted") == true ){
				// do nothing, the note is not there
				//console.log("file.js deleted node "+vqStickyNotes[spc].data("node"));
			}
			else{  // node exists

				if (comma_flag == 0){
					comma_flag = 1
				}
				else{
					dataUrl = dataUrl +"						,\n";
				}

				var notePos = parseInt(spc)+vqRedlines.length;

				dataUrl = dataUrl +"					"+notePos+": {\n";
//				dataUrl = dataUrl +"					"+vqStickyNotes[spc].data("node")+": {\n";
				dataUrl = dataUrl +"						node: \""+vqStickyNotes[spc].data("node")+"\",\n";

				dataUrl = dataUrl +"						name: \""+vqStickyNotes[spc].data("name")+"\",\n";
				dataUrl = dataUrl +"						id: \""+vqStickyNotes[spc].data("id")+"\",\n";
				dataUrl = dataUrl +"						layer: \""+vqStickyNotes[spc].data("layer")+"\",\n";
				dataUrl = dataUrl +"						group: \""+vqStickyNotes[spc].data("group")+"\",\n";
				dataUrl = dataUrl +"						text: \""+vqStickyNotes[spc].data("text")+"\",\n";
				dataUrl = dataUrl +"						userid: \""+vqStickyNotes[spc].data("userid")+"\",\n";
				dataUrl = dataUrl +"						currentPage: "+vqStickyNotes[spc].data("currentPage")+",\n";
				dataUrl = dataUrl +"						date: \""+vqStickyNotes[spc].data("date")+"\",\n";
				dataUrl = dataUrl +"						linked: "+vqStickyNotes[spc].data("linked")+",\n";
				dataUrl = dataUrl +"						transform: \""+vqStickyNotes[spc].data("transform")+"\",\n";
				dataUrl = dataUrl +"						drawingRotation: "+vqStickyNotes[spc].data("drawingRotation")+"\n";
				dataUrl = dataUrl +"					}\n";

			} // case node exists
		}

		dataUrl = dataUrl +"}\n\n";


		dataUrl = dataUrl +"function cvjs_setUpStickyNotesRedlines(paper){\n\n";

		var spc_counter = 0;
		for (spc in vqRedlines)
		{
			if (vqRedlines[spc].data("deleted") == true ){
				// do nothing, the redline is not there
				//console.log("file.js deleted node "+vqRedlines[spc].data("node"));
			}
			else{  // node exists

					
				spc_counter++;
				var itemRed = "cItemRed"+spc_counter;
				var str_object = vqRedlines[spc].toString();
				
				if (str_object.indexOf("polyline")>-1){

//					console.log("this is an arrow!  "+str_object);

					str_object = str_object.substring(str_object.indexOf("points=")+8);
					str_object = str_object.substring(0, str_object.indexOf('\"'));

					dataUrl = dataUrl +"var "+itemRed+"= paper.g(paper.polyline(\"";
					dataUrl = dataUrl +str_object+" \")";

					str_object = vqRedlines[spc].toString();
					str_object = str_object.substring(str_object.indexOf("matrix(")+8);
					str_object = str_object.substring(0, str_object.indexOf(')'));

					dataUrl = dataUrl +".attr({transform: \""+vqRedlines[spc].data("transform")+"\", \"fill\": \""+vqRedlines[spc].data("color")+"\"})";

					str_object = vqRedlines[spc].toString();
					str_object = str_object.substring(str_object.indexOf("d=")+3);
					str_object = str_object.substring(0, str_object.indexOf('\"'));

					//console.log(str_object);
					dataUrl = dataUrl +", paper.path(\"";
					dataUrl = dataUrl +str_object+" \")";
					dataUrl = dataUrl +".attr({stroke: \""+vqRedlines[spc].data("color")+"\", \"stroke-width\": \""+vqRedlines[spc].data("strokeWidth")+"\", \"fill\": \""+vqRedlines[spc].data("fill")+"\", \"fill-opacity\": \""+vqRedlines[spc].data("fill_opacity")+"\"}))";
					dataUrl = dataUrl +"\n.data(\"node\",\""+vqRedlines[spc].data("node")+"\");\n";
					dataUrl = dataUrl +"vqRedlines.push("+itemRed+");\n\n";

					//console.log(dataUrl);

				}
				else if (str_object.indexOf("text")>-1){

					//dataUrl = dataUrl +"var "+itemRed+"= paper.text( 0, 0,\""+vqRedlines[spc].data("redline_text")+"\")";
					//dataUrl = dataUrl +".attr({stroke: \""+vqRedlines[spc].data("color")+"\", \"fill\": \""+vqRedlines[spc].data("color")+"\", \"font-size\": \""+cvjs_reference_font_size+"\", \"transform\": \""+vqRedlines[spc].data("transform")+"\"})";
					//dataUrl = dataUrl +"\n.data(\"node\",\""+vqRedlines[spc].data("node")+"\");\n";
					//dataUrl = dataUrl +"vqRedlines.push("+itemRed+");\n\n";

					dataUrl = dataUrl +"var "+itemRed+"= paper.path(\"M0,0\")";
					dataUrl = dataUrl +"\n.data(\"node\",\""+vqRedlines[spc].data("node")+"\");\n";
					dataUrl = dataUrl +"vqRedlines.push("+itemRed+");\n\n";

				}
				else{
					if (str_object.indexOf("path")>-1){
						str_object = str_object.substring(str_object.indexOf("d=")+3);
						str_object = str_object.substring(0, str_object.indexOf('\"'));
						//console.log(str_object);
						dataUrl = dataUrl +"var "+itemRed+"= paper.path(\"";
						dataUrl = dataUrl +str_object+" \")";
						dataUrl = dataUrl +".attr({stroke: \""+vqRedlines[spc].data("color")+"\", \"stroke-width\": \""+vqRedlines[spc].data("strokeWidth")+"\", \"fill\": \""+vqRedlines[spc].data("fill")+"\", \"fill-opacity\": \""+vqRedlines[spc].data("fill_opacity")+"\"})";
						dataUrl = dataUrl +"\n.data(\"node\",\""+vqRedlines[spc].data("node")+"\");\n";
						dataUrl = dataUrl +"vqRedlines.push("+itemRed+");\n\n";
					}
					else
						if (str_object.indexOf("ellipse")>-1){
							
							console.log(str_object);
							
							
							// find dx=
							// find dy=
							// find rx=
							// find ry=
							
							var cx = str_object.substring(str_object.indexOf("cx=")+4);
							//console.log(cx);
							cx = cx.substring(0, cx.indexOf("\""));

							var cy = str_object.substring(str_object.indexOf("cy=")+4);
							//console.log(cy);
							cy = cy.substring(0, cy.indexOf("\""));

							var rx = str_object.substring(str_object.indexOf("rx=")+4);
							//console.log(rx);
							rx = rx.substring(0, rx.indexOf("\""));

							var ry = str_object.substring(str_object.indexOf("ry=")+4);
							//console.log(ry);
							ry = ry.substring(0, ry.indexOf("\""));		
							
							//console.log(str_object);
							dataUrl = dataUrl +"var "+itemRed+"= paper.ellipse("+cx+","+cy+","+rx+","+ry;
							dataUrl = dataUrl + ")";
							dataUrl = dataUrl +".attr({stroke: \""+vqRedlines[spc].data("color")+"\", \"stroke-width\": \""+vqRedlines[spc].data("strokeWidth")+"\", \"fill\": \""+vqRedlines[spc].data("fill")+"\", \"fill-opacity\": \""+vqRedlines[spc].data("fill_opacity")+"\"})";
							dataUrl = dataUrl +"\n.data(\"node\",\""+vqRedlines[spc].data("node")+"\");\n";
							dataUrl = dataUrl +"vqRedlines.push("+itemRed+");\n\n";
						}			
					
				}


				// 2017-07-09
				dataUrl = dataUrl +"cvjs_stickyNotesRedlines.push(cvjs_stickyNotesRedlines_Base["+spc+"]);\n\n";

			} // case node exists
		}


		dataUrl = dataUrl +" cvjs_redline="+spc_counter+"; \n\n";

		var spc_counter = 0;
		for (spc in vqStickyNotes)
		{
			if (vqStickyNotes[spc].data("deleted") == true ){
				// the note is deleted, so no nothing
				//console.log("file.js deleted node "+vqStickyNotes[spc].data("node"));
			}
			else{  // node exists

				spc_counter++;
				var itemSNote = "itemSNote"+spc_counter;
				var str_object = vqStickyNotes[spc].toString();

				var rightadjustment = 0;
				if (vqStickyNotes[spc].data("id")<10) rightadjustment = 3;
				var SNoteTemplate = "paper.group(paper.path(\"M0,0h20v20h-20v-20Z\").attr({stroke: \"#000000\", \"stroke-width\" : \"1.0\"}),"+
					"paper.path(\"M7,12h1.3M9.5,12h3.5M11.25,12v5M9.75,12v1.75M12.75,12v1.75M10.5,17h1.5M7,13.5h1.3M7,15.25h3M7,17.0h2.2\").attr({stroke: \"#000000\", \"stroke-width\" : \"0.5\"}),"+
					"paper.text("+(3+rightadjustment)+",9,\"#"+vqStickyNotes[spc].data("id")+"\").attr({\"font-size\": \"8px\", \"font-style\": \"italic\", stroke: \"#000000\", \"stroke-width\" : \"0.3\", \"stroke\" : \"0.3\", \"fill\" : \"#000000\", \"fill-opacity\" : 1.0}))";
					
					// 2018-03-15
//					SNoteTemplate = SNoteTemplate + ".attr({\'transform\': \""+vqStickyNotes[spc].data("transform")+"\" , \"opacity\" : \"1\"})";
					
					// we are simply loading in a scaled down image that we then make come "alive"
					SNoteTemplate = SNoteTemplate + ".attr({\'transform\': \"t0,0S0.01\" , \"opacity\" : \"0.1\"})";
					
					
					SNoteTemplate = SNoteTemplate + ".attr({	fill: \'#FFF\', \"fill-opacity\": \"0.8\", stroke: \'#000\', \'stroke-opacity\': \"1\" })";

					dataUrl = dataUrl +"var "+itemSNote+"="+SNoteTemplate+"\n.data(\"node\",\""+vqStickyNotes[spc].data("node")+"\");\n";
					dataUrl = dataUrl +"vqStickyNotes.push("+itemSNote+");\n\n";

					var notePos = parseInt(spc)+vqRedlines.length;
				// 2017-07-09
				dataUrl = dataUrl +"cvjs_stickyNotesRedlines.push(cvjs_stickyNotesRedlines_Base["+notePos+"]);\n\n";

			} // case node exists
		}

		dataUrl = dataUrl +" cvjs_stickynote="+spc_counter+"; \n\n";

		dataUrl = dataUrl +"}\n";

		dataUrl = dataUrl +"\njQuery(document).ready(function() { \n";
		dataUrl = dataUrl +"	stickynotesRedlines_loaded = true; \n";
		dataUrl = dataUrl +"}); \n";
		dataUrl = dataUrl +"stickynotesRedlines_loaded = true; \n";



// ZZZZZ Let us now try to make sure everything is syntactically correct
// 2017-07-09 , this has already been fixed upon upload

	if (cvjs_debug) 		console.log("redline length "+vqRedlines.length);

		var topIndex = vqRedlines.length;

		for (var i=0; i<vqRedlines.length; i++){

			var j=0;
			var tempString = dataUrl;
			var k=i+1;
			var redVar = "RED_"+k;

			while (tempString.indexOf(redVar)>-1){
				j++;
				tempString = tempString.substring(tempString.indexOf(redVar)+4);
			}

if (cvjs_debug) 			console.log("Instances of "+redVar+" is "+j);

			if (j==4){
	if (cvjs_debug) 				console.log("we need to substitute 2 and 4th instance of "+redVar+" with new variable names!")
				topIndex++;
				var redVarNew = "RED_"+topIndex;

				// change 2nd instance
				var nIndex = nthIndex(dataUrl, redVar, 2);
				dataUrl = dataUrl.substring(0,nIndex)+redVarNew+dataUrl.substring(nIndex+redVar.length);

				// change 4th instance   - now one instance is gone, therefore 3rd instance
				var nIndex = nthIndex(dataUrl, redVar, 3);
				dataUrl = dataUrl.substring(0,nIndex)+redVarNew+dataUrl.substring(nIndex+redVar.length);

			}
		}

		return(dataUrl);

};



function nthIndex(str, pat, n){
    var L= str.length, i= -1;
    while(n-- && i++<L){
        i= str.indexOf(pat, i);
        if (i < 0) break;
    }
    return i;
}



/**
 * Saves redlines and sticky notes to the location defined through parameter settings
 * @param {String} floorplan_div - div of the CADViewerJS canvas
 */


	function cvjs_saveStickyNotesRedlines(floorplan_div){

	// 3.0.15c   - add "_svg" to div, if called through external API
	if (floorplan_div.lastIndexOf("_svg") == floorplan_div.length-4){
			// do nothing
	}
	else{
		floorplan_div = floorplan_div + "_svg";
	}

	if (floorplan_div == undefined){
	
		// do nothing;
	}
	else{
		// find active floorplan number and set that
		cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(floorplan_div);
	
	}
	
	
	
		//console.log("saveStickyNotesRedlines");
		
		var dataUrl = "";
		
		// 3.0.14g   we save as either .js , .svg or .xml
		
		if (cvjs_saveRedlinesAsDXF)
			dataUrl=cvjs_getStickyNotesRedlineDXF();
		else{
			if (cvjs_saveRedlinesAsXML)
				dataUrl=cvjs_getStickyNotesRedlineXML(true);
			else
				dataUrl=cvjs_getStickyNotesRedline();
		}
				

//		console.log(dataUrl);
//		prompt("Copy to clipboard: Ctrl+C, Enter", dataUrl);
//		console.log(vqStickyNotes[0]);

		var cvjs_phpSaveRedlineUrlLocation = cvjs_serverHandlersPath + cvjs_serverSaveFileControllerRedlines;

// 2016-10-25
		if (cvjs_StickyNoteSaveRedlineUrl.indexOf("\\")>-1){

			// do nothing
		}
		else{
			cvjs_StickyNoteSaveRedlineUrl = encodeURIComponent(cvjs_StickyNoteSaveRedlineUrl)
		}

		var js_data = {};
		js_data['file'] = cvjs_StickyNoteSaveRedlineUrl;
		js_data['file_content'] = dataUrl;

//console.log(cvjs_phpSaveRedlineUrlLocation+"  "+cvjs_StickyNoteSaveRedlineUrl);

		jQuery.ajax({
		  url:cvjs_phpSaveRedlineUrlLocation,
		  type: 'post',
		  data: js_data,
		  success: function(html){

			var status ="Save redlines: "+html;
			html = html.toLowerCase();

			if (html.indexOf("success")>-1)
				status = lTable.languages[cvjs_currentLanguage].InfoMessageModal.RedlinesSaved;

			if (!cvjs_collab_mode) {  // if we are not in collaboration mode, we show the success modal. In collab mode, we do not, as there is a save every 5 second from the presenter
				cvjs_displayInformationModal(floorplan_div_Array[cvjs_active_floorplan_div_nr], status);

				if (message_modal_type_bootstrap){
					jQuery('#info_messageModal'+'_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).fadeOut(1500);
				}
				else{
					jQuery('#info_messageModal_2'+'_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).fadeOut(1500);

				}


			}

			// hide redline load modal if in interactive mode
			jQuery( "#addRedlineTable").hide();
			// load the redlines list on server  (if in server mode)

if (cvjs_debug) console.log("cvjs_saveStickyNotesRedlines cvjs_loadServerFileList(2)  cvjs_fileSaverRedlineMode"+cvjs_fileSaverRedlineMode);

			if (cvjs_fileSaverRedlineMode == true)   // 2017-07-11
				cvjs_loadServerFileList(2);
				cvjs_fileSaverRedlineMode = false;
		  },
		  error:function(data_e){console.log("Error "+data_e); return;}

		});



	}

var cvjs_printPaperSize = "A4";   // allowed is A4, A3, A2  , US letter , ANSI A, ANSI B, ANSI C
var cvjs_printPaperWidth_mm = 297;   // A4
var cvjs_printPaperHeight_mm = 210;   // A4

var cvjs_printOrientation = "portrait";  // landscape and portrait
var cvjs_printResolutionDpi = 300;    // 75dpi and above

//var cvjs_printPixelWidth = 7016;   // A2 - 300 dpi
//var cvjs_printPixelHeight = 4960;   // A2 - 300 dpi
var cvjs_printPixelWidth = 3508;   // A2 - 300 dpi
var cvjs_printPixelHeight = 2480;   // A2 - 300 dpi



var cvjs_objectIsZoomedExtents = true;
var cvjs_serverSavePrintModeController = 0;
var cvjs_serverSave_php_controllerArray = {};
var cvjs_serverCreateThumb_StickyNote_Controller = "make_thumbnails.php";
var cvjs_batchFilesToPDF_Controller = "make_batch_pdf.php";
var cvjs_phpImagesUrlController  = "";
var cvjs_screenToPDF_Controller = "make_singlepage_pdf.php";


//4.1.02k
/**
 * Sets the server controller to save screen as bitmap and create thumbnails
  * @param {String} controller - the name of the controller
 */
function cvjs_setServerCreateThumb_StickyNote_Controller(controller){

	cvjs_serverCreateThumb_StickyNote_Controller = controller;

}










/**
 * Sets the server print mode controller. This variable is used to control what happens after a screenshot is sent to the server
  * @param {int} mode - the mode in which to control encapsulations of screenshots images sent down to server
  *                     mode = 0: Standard print mode in which a screenshot gets encapsulated into an html document that is opened through a pop-up for printing
  *                     mode = 1: The screenshot is saved to the server as part of stickyNote save, and thumbnails of the image is generated, see method: cvjs_saveScreenAsImage_stickyNoteInfo_makeTumbnails()
  *                     mode = 2: The screenshot is saved to the server as part of a multidocument batch print pdf creation, see method: cvjs_batchConvertDrawingsToPDF()
 */
function cvjs_setServerSavePrintModeController(mode){

	cvjs_serverSavePrintModeController = mode;

}



/**
 * Sets the server print mode controller. This variable is used to control what happens after a screenshot is sent to the server
  * @param {int} mode - the mode in which to control encapsulations of screenshots images sent down to server
  *                     mode = 0: Standard print mode in which a screenshot gets encapsulated into an html document that is opened through a pop-up for printing
  *                     mode = 1: The screenshot is saved to the server as part of stickyNote save, and thumbnails of the image is generated, see method: cvjs_saveScreenAsImage_stickyNoteInfo_makeTumbnails()
  *                     mode = 2: The screenshot is saved to the server as part of a multidocument batch print pdf creation, see method: cvjs_batchConvertDrawingsToPDF()
 */
function cvjs_setServerSavePrintModeHandler(mode){

	cvjs_serverSavePrintModeController = mode;

}


/**
 * Sets the server ScreenToPDF PHP controller document
  * @param {String} controller  - The location of this document is in: cvjs_phpPath  + "/tcpdf/batchconvert/" if php, else it will use handler folder.
 */
function cvjs_setServerScreenToPDFController(controller){

	cvjs_screenToPDF_Controller = controller;

}

/**
 * Sets the server ScreenToPDF PHP controller document
  * @param {String} controller  - The location of this document is in: cvjs_phpPath  + "/tcpdf/batchconvert/" if php, else it will use handler folder.
 */
function cvjs_setServerScreenToPDFHandler(controller){

	cvjs_screenToPDF_Controller = controller;

}



/**
 * Save screen image to server
 * On the server two thumbnails are created
 * @param {string} serverPath - path on Server to save image content and create thumbnails
 * @param {string} image_fileName - name of image file on server. The file with sticky note content will be named fileName.txt
 * @param {int} sizeThumb1 - size in pixels of thumbnail one
 * @param {string} thumb1_fileName - filename of thumbnail one on server
 * @param {int} sizeThumb2 - size in pixels of thumbnail two
 * @param {string} thumb2_fileName - filename of thumbnail two on server
 */

function cvjs_saveScreenAsImage_makeTumbnails(serverPath, image_fileName, sizeThumb1, thumb1_fileName, sizeThumb2, thumb2_fileName ){

	cvjs_saveScreenAsImage_stickyNoteInfo_makeTumbnails(serverPath, image_fileName, sizeThumb1, thumb1_fileName, sizeThumb2, thumb2_fileName );
}

/**
 * Save screen image to server as well as list of stickyNote content and information
 * On the server two thumbnails are created
 * @param {string} serverPath - path on Server to save image content and create thumbnails
 * @param {string} image_fileName - name of image file on server. The file with sticky note content will be named fileName.txt
 * @param {int} sizeThumb1 - size in pixels of thumbnail one
 * @param {string} thumb1_fileName - filename of thumbnail one on server
 * @param {int} sizeThumb2 - size in pixels of thumbnail two
 * @param {string} thumb2_fileName - filename of thumbnail two on server
 */

 function cvjs_saveScreenAsImage_stickyNoteInfo_makeTumbnails(serverPath, image_fileName, sizeThumb1, thumb1_fileName, sizeThumb2, thumb2_fileName ){


// extract all strickynote information to txt file

	var stickyNoteContent="";
	for (var i=0; i<vqStickyNotes.length; i++){

		if (i>0) stickyNoteContent = stickyNoteContent + "\n";
		stickyNoteContent = stickyNoteContent + vqStickyNotes[i].data("id")+","+vqStickyNotes[i].data("name")+","+vqStickyNotes[i].data("userid")+","+vqStickyNotes[i].data("date")+","+vqStickyNotes[i].data("text");
	}


// when both elements are saved, call php document to create thumbnails and return

	cvjs_phpImagesUrlController = cvjs_serverHandlersPath + cvjs_serverCreateThumb_StickyNote_Controller;

	cvjs_serverSave_php_controllerArray = {};
	cvjs_serverSave_php_controllerArray['serverPath'] = serverPath;
	cvjs_serverSave_php_controllerArray['fileName'] = image_fileName.substring(0,image_fileName.indexOf(".png"));
	cvjs_serverSave_php_controllerArray['thumbFile1'] = thumb1_fileName;
	cvjs_serverSave_php_controllerArray['thumbFile1_size'] = sizeThumb1;
	cvjs_serverSave_php_controllerArray['thumbFile2'] = thumb2_fileName;
	cvjs_serverSave_php_controllerArray['thumbFile2_size'] = sizeThumb2;
	cvjs_serverSave_php_controllerArray['stickyNoteContent'] = stickyNoteContent;



// make a canvas element of screen content and save it
// global API settings of landscape/portrait, papersize and resolution is used


	cvjs_serverSavePrintModeController = 1;
	cvjs_saveScreenAsImage(serverPath, image_fileName);

	// the call to create thumbnails and save the stickynote content is done in the callback from when the ScreenImage has been saved


}


// 3.3.02b
 function cvjs_saveScreenAsImage_UploadSharepointListItem(serverPath, image_fileName, user_name, list_name, record_id ){


// extract all strickynote information to txt file

	var stickyNoteContent="";
	for (var i=0; i<vqStickyNotes.length; i++){

		if (i>0) stickyNoteContent = stickyNoteContent + "\n";
		stickyNoteContent = stickyNoteContent + vqStickyNotes[i].data("id")+","+vqStickyNotes[i].data("name")+","+vqStickyNotes[i].data("userid")+","+vqStickyNotes[i].data("date")+","+vqStickyNotes[i].data("text");
	}


// when both elements are saved, call php document to create thumbnails and return

	cvjs_phpImagesUrlController = cvjs_serverHandlersPath + cvjs_serverCreateThumb_StickyNote_Controller;

	cvjs_serverSave_php_controllerArray = {};
	cvjs_serverSave_php_controllerArray['serverPath'] = serverPath;
	cvjs_serverSave_php_controllerArray['fileName'] = image_fileName.substring(0,image_fileName.indexOf(".png"));
	cvjs_serverSave_php_controllerArray['thumbFile1'] = cvjs_serverSave_php_controllerArray['fileName']+"_200.png";
	cvjs_serverSave_php_controllerArray['thumbFile1_size'] = 200;
	cvjs_serverSave_php_controllerArray['thumbFile2'] = cvjs_serverSave_php_controllerArray['fileName']+"_400.png"
	cvjs_serverSave_php_controllerArray['thumbFile2_size'] = 400;
	cvjs_serverSave_php_controllerArray['stickyNoteContent'] = stickyNoteContent;
	cvjs_serverSave_php_controllerArray['sharepoint_user_name'] = user_name;
	cvjs_serverSave_php_controllerArray['sharepoint_list_name'] = list_name;
	cvjs_serverSave_php_controllerArray['sharepoint_record_id'] = record_id;



// make a canvas element of screen content and save it
// global API settings of landscape/portrait, papersize and resolution is used


	cvjs_serverSavePrintModeController = 7;
	cvjs_saveScreenAsImage(serverPath, image_fileName);

	// the call to create thumbnails and save the stickynote content is done in the callback from when the ScreenImage has been saved


}







var cvjs_serverSavePrintMode_serverPath = "";
var cvjs_serverSavePrintMode_image_fileName = "";


/**
 * Save screen image to server as well as list of stickyNote content and information
 * On the server two thumbnails are created
 * @param {string} serverPath - path on Server to save image content
 * @param {string} image_fileName - name of image file on server.
 */
function cvjs_saveScreenAsImage(serverPath, image_fileName){

	// save screen image on server

	cvjs_serverSavePrintMode_serverPath = serverPath;
	cvjs_serverSavePrintMode_image_fileName = image_fileName.substring(0,image_fileName.lastIndexOf("."))+"_base64.png";

//	window.alert("saveScreenAsImage "+serverPath+"  "+cvjs_serverSavePrintMode_image_fileName+ "  controller "+cvjs_serverSavePrintModeController);

	if (cvjs_serverSavePrintModeController == 0){
	if (cvjs_debug) 		console.log("cvjs_saveScreenAsImage: cvjs_serverSavePrintModeController == 0 therefore returns");
		return;
	}

	cvjs_printCanvasPaperSize();

}


var cvjs_batchDrawingsArrLength = 0;
var cvjs_batchDrawingsArrLength_globalCounter = 0;
var cvjs_drawingFilesArray = new Array();
var cvjs_pageOrientationArray = new Array();
var cvjs_pageSizeArray = new Array();
var cvjs_pageResolutionArray = new Array();


var cvjs_singleDrawingFile = "";
var cvjs_singlePageOrientation = "";
var cvjs_singlePageSize = "";
var cvjs_singlePageResolution= "";


/**
 * Sets the mode for loading multiple redlines and overlay the previous loaded
 * @param {boolean} mode: true to overlay redlines, false to clear redline when new is loaded, default is false
 */

function cvjs_setLoadMultipleRedlinesStickyNotes(mode){

	cvjs_loadMultipleRedlinesStickyNotes = mode;

}

/**
 * Captures the screen image and creates a single page PDF
 * @param {string} pageOrientation - Orientation of drawings: landscape/portrait
 * @param {string} pageSize - Papersize of drawing
 * @param {string} pageResolution - Page resolution in dpi, default is 300
 */
function cvjs_saveScreenAsPDF(pageOrientation, pageSize, pageResolution){

	cvjs_setPrintPaperSize(pageSize);
	cvjs_setPrintOrientation(pageOrientation);
	cvjs_setPrintResolutionDpi(pageResolution);

	var random = Math.random().toString().substring(2,5);
	var image_fileName = 'screendump_'+random+'.png';

	cvjs_singleDrawingFile = 'screendump_'+random;
	cvjs_singlePageOrientation = pageOrientation;
	cvjs_singlePageSize = pageSize;
	cvjs_singlePageResolution= pageResolution;

	// set the print mode to single page pdf
	cvjs_serverSavePrintModeController = 3;

	if (cvjs_serverSavePrintModeController == 3){

		jQuery('#wait_looper_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).html('<table class=\"waitlooperTable\" width=\"100\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" ><tr><td><div id=\"looper_image_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]+'\"></div></td></tr><tr><td><div class=\"wait_text_4\" id=\"wait_looper_text_id_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]+'\">'+lTable.languages[cvjs_currentLanguage].WaitModal.Printing+'</div></td></tr></table>');


		cvjs_setLooperPosition();
		

	//window.alert("after waitlooper");
		jQuery("#wait_looper_"+floorplan_div_Array[cvjs_active_floorplan_div_nr]).fadeIn(1500);

	}


	var serverPath;
		
	if (cvjs_screenToPDF_Controller.indexOf(".php")>-1){


		if (cvjs_printObjectPathRelativeFlag){
			serverPath = cvjs_printObjectPath;
			serverPath = cvjs_phpPath  + "/tcpdf/batchconvert/" ;
		}
		else{
			serverPath = cvjs_printObjectPathAbsoluteServer;
			serverPath = cvjs_phpPath  + "/tcpdf/batchconvert/" ;
		}
	}
	else{  // servlet or other path controllers 3.2.01d
		
		serverPath = cvjs_ServerLocation  + "/converters/files/" ;		
	}
	
	cvjs_saveScreenAsImage(serverPath, image_fileName);

}

function cvjs_printSavedBitmapToPDF(){

// BBBBBBBBBB
// make create batch pdf modal

//window.alert("wait "+lTable.languages[cvjs_currentLanguage].WaitModal.BatchPDF);

	// 3.2.01d
	cvjs_serverSave_php_controllerArray = {};
	cvjs_serverSave_php_controllerArray['numberOfFiles'] = 1;

	var serverPath;

	if (cvjs_screenToPDF_Controller.indexOf(".php")>-1){

		cvjs_phpImagesUrlController = cvjs_phpPath  + "/tcpdf/batchconvert/"  + cvjs_screenToPDF_Controller

		if (cvjs_printObjectPathRelativeFlag){
			serverPath = cvjs_printObjectPath;
			serverPath = cvjs_phpPath  + "/tcpdf/batchconvert/" ;
		}
		else{
			serverPath = cvjs_printObjectPathAbsoluteServer;
			serverPath = cvjs_phpPath  + "/tcpdf/batchconvert/" ;
		}

	}
	else{  // servlet or other path controllers 3.2.01d
		
		cvjs_phpImagesUrlController = cvjs_serverHandlersPath + cvjs_screenToPDF_Controller
		serverPath = cvjs_ServerLocation  + "/converters/files/" ;
		
	}
	
	
	cvjs_serverSave_php_controllerArray['serverPath'] = serverPath;


	cvjs_serverSave_php_controllerArray['fileName_0'] = cvjs_singleDrawingFile ;
	cvjs_serverSave_php_controllerArray['rotation_0'] = cvjs_singlePageOrientation;
	cvjs_serverSave_php_controllerArray['page_format_0'] = cvjs_singlePageSize;
	cvjs_serverSave_php_controllerArray['page_resolution_0'] = cvjs_singlePageResolution;

	cvjs_serverSave_php_controllerArray['org_fileName_0'] = cvjs_FileNameNoExtension ;

//window.alert("org_fileName_0 "+cvjs_serverSave_php_controllerArray['org_fileName_0']);


	jQuery('#wait_looper_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).html('<table class=\"waitlooperTable\" width=\"100\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" ><tr><td><div id=\"looper_image_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]+'\"></div></td></tr><tr><td><div class=\"wait_text_5\" id=\"wait_looper_text_id_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]+'\">'+lTable.languages[cvjs_currentLanguage].WaitModal.BatchPDF+'</div></td></tr></table>');

	cvjs_setLooperPosition();
	
	jQuery("#wait_looper_"+floorplan_div_Array[cvjs_active_floorplan_div_nr]).fadeIn(1000);

	jQuery.ajax({
	  url:cvjs_phpImagesUrlController,
	  type: 'post',
	  data: cvjs_serverSave_php_controllerArray,
	  success: function(html){
			//window.alert(html+"  we have now created the single page pdf");
			cvjs_serverSavePrintModeController = 0;
			jQuery("#wait_looper_"+floorplan_div_Array[cvjs_active_floorplan_div_nr]).hide();
			// hide modal
//				printWindow = window.open(cvjs_serverHandlersPath + "/tcpdf/batchconvert/" + html, 'CADViewer JS - Print', 'height='+screen.height*0.5+',width='+screen.width*0.5);


			if (cvjs_screenToPDF_Controller.indexOf(".php")>-1){

				printWindow = window.open(cvjs_phpPath  + "/tcpdf/batchconvert/" + html, 'CADViewer JS - Print', 'height='+screen.height*0.8+',width='+screen.width*0.5);
				printWindow.focus();

			}
			else{  // servlet or other path controllers 3.2.01d
				
				printWindow = window.open(cvjs_ServerUrl  + "/converters/files/" + html, 'CADViewer JS - Print', 'height='+screen.height*0.8+',width='+screen.width*0.5);
				printWindow.focus();
				
			}






	  },
	  error:function(data_e){console.log("Error "+data_e); return;}

	});

}


// 3.2.02d
/**
 * Loads a set of drawings, apply page size, page orientation and resolution to each page/drawing.
 * Produce a multi-page PDF out of the set of drawing.
 * @param string floorPlan - Name of the floorplan div for batch processing
 * @param {string[]} drawingFilesArray - String array with name and location of drawings
 * @param {string[]} pageOrientationArray - String array with orientation of drawings: landscape/portrait
 * @param {string[]} pageSizeArray - String array with papersizes of drawings
 * @param {string[]} pageResolutionArray - Array with page resolutions
 * @param string batchFilesToPDF_Controller - Name of the php document that creates the report when the graphics is created
 * @param Object callbackMethod - callBackMethod to decorate each drawing before publishing
 */
function cvjs_batchConvertDrawingsToPDF_CustomReport(floorPlan, drawingFilesArray, pageOrientationArray, pageSizeArray, pageResolutionArray, batchFilesToPDF_Controller, callbackMethod){

	cvjs_batchFilesToPDF_Controller = batchFilesToPDF_Controller;

	cvjs_batchDrawingsArrLength = drawingFilesArray.length;
	cvjs_batchDrawingsArrLength_globalCounter = 0;

	cvjs_drawingFilesArray = drawingFilesArray;
	cvjs_pageOrientationArray = pageOrientationArray;
	cvjs_pageSizeArray = pageSizeArray;
	cvjs_pageResolutionArray = pageResolutionArray;

	// set up OnLoadEnd to point to custom method

	// window.alert("cvjs_batchConvertDrawingsToPDF");

	// set the callback method to loop through array of drawings to be loaded

	//cvjs_setCustomCallbackMethodOnLoadEnd(true, cvjs_batchConvertOnLoadEndCustomMethod);
	cvjs_setCustomCallbackMethodOnLoadEnd(true, callbackMethod);
	
	
	// set the print mode to batch print
	cvjs_serverSavePrintModeController = 2;


	// start the process by loading the first file in the set
	//cvjs_LoadDrawing(floorplan_div_Array[cvjs_active_floorplan_div_nr], cvjs_drawingFilesArray[cvjs_batchDrawingsArrLength_globalCounter]);

	// 3.2.02d
	cvjs_LoadDrawing(floorplan_div_Array[cvjs_rPaperIndex(floorPlan)], cvjs_drawingFilesArray[cvjs_batchDrawingsArrLength_globalCounter]);
	
	

	// we will initiate the load the subsequent drawings from the callback, when the base64 bitmap image is saved on the server
	// cvjs_LoadDrawing(floorplan_div_Array[cvjs_active_floorplan_div_nr], cvjs_drawingFilesArray[cvjs_batchDrawingsArrLength_globalCounter++]);

}





/**
 * Loads a set of drawings, apply page size, page orientation and resolution to each page/drawing.
 * Produce a multi-page PDF out of the set of drawing.
 * @param {string[]} drawingFilesArray - String array with name and location of drawings
 * @param {string[]} pageOrientationArray - String array with orientation of drawings: landscape/portrait
 * @param {string[]} pageSizeArray - String array with papersizes of drawings
 * @param {string[]} pageResolutionArray - Array with page resolutions
 */
function cvjs_batchConvertDrawingsToPDF(drawingFilesArray, pageOrientationArray, pageSizeArray, pageResolutionArray){

	cvjs_batchDrawingsArrLength = drawingFilesArray.length;
	cvjs_batchDrawingsArrLength_globalCounter = 0;

	cvjs_drawingFilesArray = drawingFilesArray;
	cvjs_pageOrientationArray = pageOrientationArray;
	cvjs_pageSizeArray = pageSizeArray;
	cvjs_pageResolutionArray = pageResolutionArray;

	// set up OnLoadEnd to point to custom method

	// window.alert("cvjs_batchConvertDrawingsToPDF");

	// set the callback method to loop through array of drawings to be loaded

	cvjs_setCustomCallbackMethodOnLoadEnd(true, cvjs_batchConvertOnLoadEndCustomMethod);

	// set the print mode to batch print
	cvjs_serverSavePrintModeController = 2;


	// start the process by loading the first file in the set
	cvjs_LoadDrawing(floorplan_div_Array[cvjs_active_floorplan_div_nr], cvjs_drawingFilesArray[cvjs_batchDrawingsArrLength_globalCounter]);


	// we will initiate the load the subsequent drawings from the callback, when the base64 bitmap image is saved on the server
	// cvjs_LoadDrawing(floorplan_div_Array[cvjs_active_floorplan_div_nr], cvjs_drawingFilesArray[cvjs_batchDrawingsArrLength_globalCounter++]);

}


function cvjs_batchConvertOnLoadEndCustomMethod(){

	// when last drawing is converted call php method to do the php generation;
	
	if (cvjs_batchDrawingsArrLength_globalCounter == cvjs_batchDrawingsArrLength){

		// we have loaded and processed the last file in the list, now we merge all drawings into a PDF file
		//window.alert("last file loaded and sent down to server, now we have to make a pdf array");

		cvjs_phpImagesUrlController = cvjs_phpPath  + "/tcpdf/batchconvert/"  + cvjs_batchFilesToPDF_Controller;

		cvjs_serverSave_php_controllerArray = {};
		cvjs_serverSave_php_controllerArray['numberOfFiles'] = cvjs_batchDrawingsArrLength;

		var serverPath;
		if (cvjs_printObjectPathRelativeFlag){
			serverPath = cvjs_printObjectPath;
			serverPath = cvjs_phpPath  + "/tcpdf/batchconvert/" ;
		}
		else{
			serverPath = cvjs_printObjectPathAbsoluteServer;
			serverPath = cvjs_phpPath  + "/tcpdf/batchconvert/" ;
		}

		cvjs_serverSave_php_controllerArray['serverPath'] = serverPath;



		for (i=0; i<cvjs_batchDrawingsArrLength; i++){
			var file_Id = "fileName_"+i;
			var file_name = cvjs_drawingFilesArray[i].substring(cvjs_drawingFilesArray[i].lastIndexOf("/")+1, cvjs_drawingFilesArray[i].lastIndexOf("."));
			cvjs_serverSave_php_controllerArray[file_Id] = file_name;
			var rot_Id = "rotation_"+i;
			cvjs_serverSave_php_controllerArray[rot_Id] = cvjs_pageOrientationArray[i].toLowerCase();


			var paper =	cvjs_pageSizeArray[i];

			if (paper.toLowerCase().indexOf('ansi a')==0 || paper.toLowerCase().indexOf('letter')==0 ) paper = 'LETTER';
			if (paper.toLowerCase().indexOf('A4')==0 ) paper = 'A4';
			if (paper.toLowerCase().indexOf('A3')==0 ) paper = 'A3';
			if (paper.toLowerCase().indexOf('A2')==0 ) paper = 'A2';

			var page_Id = "page_format_"+i;
			cvjs_serverSave_php_controllerArray[page_Id] = paper;

			var resolution_Id = "page_resolution_"+i;
			cvjs_serverSave_php_controllerArray[resolution_Id] = cvjs_pageResolutionArray[i];

//			window.alert(file_name+" "+file_Id);
		}


// BBBBBBBBBB
// make create batch pdf modal
//window.alert("wait "+lTable.languages[cvjs_currentLanguage].WaitModal.BatchPDF);

		jQuery('#wait_looper_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).html('<table class=\"waitlooperTable\" width=\"100\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" ><tr><td><div id=\"looper_image_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]+'\"></div></td></tr><tr><td><div class=\"wait_text_5\" id=\"wait_looper_text_id_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]+'\">'+lTable.languages[cvjs_currentLanguage].WaitModal.BatchPDF+'</div></td></tr></table>');

		cvjs_setLooperPosition();		
		
		jQuery("#wait_looper_"+floorplan_div_Array[cvjs_active_floorplan_div_nr]).fadeIn(1000);

		jQuery.ajax({
		  url:cvjs_phpImagesUrlController,
		  type: 'post',
		  data: cvjs_serverSave_php_controllerArray,
		  success: function(html){
				//window.alert(html+"  we have now created the batch print pdf");
				cvjs_serverSavePrintModeController = 0;
				jQuery("#wait_looper_"+floorplan_div_Array[cvjs_active_floorplan_div_nr]).hide();
				// hide modal

//				printWindow = window.open(cvjs_serverHandlersPath + "/tcpdf/batchconvert/" + html, 'CADViewer JS - Print', 'height='+screen.height*0.5+',width='+screen.width*0.5);
				printWindow = window.open(cvjs_phpPath  + "/tcpdf/batchconvert/" + html, 'CADViewer JS - Print', 'height='+screen.height*0.9+',width='+screen.width*0.9);
				printWindow.focus();
				
				
				// 3.2.02h
				
				// we need to hide any wait modals. But on which div?
				jQuery("#wait_looper_"+floorplan_div_Array[0]).hide();

				
				// we need to set back to standard OnLoadEnd
				cvjs_setCustomCallbackMethodOnLoadEnd(false, "");

				
				
				
				
		  },
		 error:function(data_e){c("Error "+data_e); return;}

		});
		return;

	}else{

			cvjs_setPrintPaperSize(cvjs_pageSizeArray[cvjs_batchDrawingsArrLength_globalCounter]);
			cvjs_setPrintOrientation(cvjs_pageOrientationArray[cvjs_batchDrawingsArrLength_globalCounter]);

			var serverPath;

			// we add tcpdf as a subfolder to php folder

			if (cvjs_printObjectPathRelativeFlag){
				//serverPath = cvjs_printObjectPath;

				serverPath = cvjs_phpPath + "/tcpdf/batchconvert/";
			}
			else{
				//serverPath = cvjs_printObjectPathAbsoluteServer;

				serverPath = cvjs_phpPath + "/tcpdf/batchconvert/";

			}

//window.alert(cvjs_drawingFilesArray[cvjs_batchDrawingsArrLength_globalCounter]+"   "+cvjs_drawingFilesArray[cvjs_batchDrawingsArrLength_globalCounter].lastIndexOf("/"));

			var file_name = cvjs_drawingFilesArray[cvjs_batchDrawingsArrLength_globalCounter].substring(cvjs_drawingFilesArray[cvjs_batchDrawingsArrLength_globalCounter].lastIndexOf("/")+1);

//window.alert("serverPath "+ serverPath+" file_name "+file_name);

			cvjs_saveScreenAsImage(serverPath,file_name);

			// read new array entries, but only after the current screen is saved
			// therefore it is done as a branch in


			// we will initiate the load the subsequent drawings from the callback, when the base64 bitmap image is saved on the server
			// cvjs_batchDrawingsArrLength_globalCounter++;
			// cvjs_LoadDrawing(floorplan_div_Array[cvjs_active_floorplan_div_nr], cvjs_drawingFilesArray[cvjs_batchDrawingsArrLength_globalCounter]);
	}
}





















/**
 * Sets the paper size of print output
 * @param {string} papersize - String containg paper size, allowed settings are: A4, A3, A2, US LETTER, ANSI A, ANSI B, ANSI C
 */

function cvjs_setPrintPaperSize(papersize){

	papersize = papersize.toLowerCase();

	if (papersize.indexOf("a4")==0){
		cvjs_printPaperSize = "A4";
		cvjs_printPaperWidth_mm = 297;   // A4        - landscape
		cvjs_printPaperHeight_mm = 210;   // A4
	}

	if (papersize.indexOf("a3")==0){
		cvjs_printPaperSize = "A3";
		cvjs_printPaperWidth_mm = 420;   // A3         - landscape
		cvjs_printPaperHeight_mm = 297;   // A3
	}

	if (papersize.indexOf("a2")==0){
		cvjs_printPaperSize = "A2";
		cvjs_printPaperWidth_mm = 594;    // A2         - landscape
		cvjs_printPaperHeight_mm = 420;   // A2
	}

	if (papersize.indexOf("ansi a")==0){
		cvjs_printPaperSize = "ANSI A";
		cvjs_printPaperWidth_mm = 279.4;    // US LETTER - ANSI A   8.5  x11  - landscape
		cvjs_printPaperHeight_mm = 215.9;   // US LETTER - ANSI A
	}

	if (papersize.indexOf("ansi b")==0){
		cvjs_printPaperSize = "ANSI B";
		cvjs_printPaperWidth_mm = 431.8;    // ANSI B  17x11 - landscape
		cvjs_printPaperHeight_mm = 279.4;   // ANSI B
	}

	if (papersize.indexOf("ansi c")==0){
		cvjs_printPaperSize = "ANSI C";
		cvjs_printPaperWidth_mm = 555.8;      // ANSI C 17x22 - lansacape
		cvjs_printPaperHeight_mm = 431.8;   // ANSI C
	}

	if (papersize.indexOf("us letter")==0){
		cvjs_printPaperSize = "US Letter";
		cvjs_printPaperWidth_mm = 279.4;    // US LETTER - ANSI A     - landscape
		cvjs_printPaperHeight_mm = 215.9;   // US LETTER - ANSI A
	}

	if (papersize.indexOf("us legal")==0){
		cvjs_printPaperSize = "US Legal";
		cvjs_printPaperWidth_mm = 356;    // US legal     - landscape
		cvjs_printPaperHeight_mm = 216;   // US
	}

	if (papersize.indexOf("us ledger")==0){
		cvjs_printPaperSize = "US Ledger";
		cvjs_printPaperWidth_mm = 431.8;    // ANSI B  17x11 - landscape
		cvjs_printPaperHeight_mm = 279.4;   // ANSI B
	}

	// 2017-08-24
	if (papersize.indexOf("us arch d")==0){
		cvjs_printPaperSize = "US Arch D";
		cvjs_printPaperWidth_mm = 610;    // ARCH D  24x36 - landscape
		cvjs_printPaperHeight_mm = 914;   // ANSI B
	}

	if (papersize.indexOf("us arch e1")==0){
		cvjs_printPaperSize = "US Arch E1";
		cvjs_printPaperWidth_mm = 762;    // ARCH E1  30x42 - landscape
		cvjs_printPaperHeight_mm = 1067;   // ANSI B
	}


	if (papersize.indexOf("a1")==0){
		cvjs_printPaperSize = "A1";
		cvjs_printPaperWidth_mm = 594;    //
		cvjs_printPaperHeight_mm = 841;   //
	}

	if (papersize.indexOf("a0")==0){
		cvjs_printPaperSize = "A0";
		cvjs_printPaperWidth_mm = 841;    //
		cvjs_printPaperHeight_mm = 1183;   //
	}








	cvjs_printPixelWidth = Math.round(cvjs_printPaperWidth_mm * cvjs_printResolutionDpi/(2.54*10));
	cvjs_printPixelHeight = Math.round(cvjs_printPaperHeight_mm * cvjs_printResolutionDpi/(2.54*10));

	//console.log("set paper size   pixel width and height   "+cvjs_printPixelWidth+" "+cvjs_printPixelHeight);
}


/**
 * Sets the print resolution
 * @param {int} dpi - print resolution in dpi, minumum is 75dpi, standard is 300
 */

function cvjs_setPrintResolutionDpi(dpi){

	if (dpi >= 75){

		cvjs_printResolutionDpi = dpi;
		cvjs_printPixelWidth = Math.round(cvjs_printPaperWidth_mm * cvjs_printResolutionDpi/(2.54*10));
		cvjs_printPixelHeight = Math.round(cvjs_printPaperHeight_mm * cvjs_printResolutionDpi/(2.54*10));
	}
	//console.log("set resolution pixel width and height   "+cvjs_printPixelWidth+" "+cvjs_printPixelHeight);
}


/**
 * Sets the print orientation
 * @param {string} orientation - print orientation, portrait or landscape
 */

function cvjs_setPrintOrientation(orientation){

	orientation = orientation.toLowerCase();

	if (orientation.indexOf("landscape")==0){
		cvjs_printOrientation = "landscape";
	}

	if (orientation.indexOf("portrait")==0){
		cvjs_printOrientation = "portrait";
	}

	//console.log(" print orientation  "+cvjs_printOrientation);
}


var print_text_offset_flag = [true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true];



/**
 * Funtion to open print model, interactively set paper size, resolution and orientation and then print
 * API method linked to icon interface
 * @param {string} floorplan_div - name of div containing CADViewer JS canvas
**/

function cvjs_Print(floorplan_div){

	


	if (floorplan_div == undefined){
		cvjs_active_floorplan_div_nr = 0;
		floorplan_div = floorplan_div_Array[0];
	}
	else{
		if (floorplan_div.lastIndexOf("_svg") == floorplan_div.length-4){
				// do nothing
		}
		else{
			floorplan_div = floorplan_div + "_svg";
		}
		cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(floorplan_div);
	}


	// printDebugFlag = false; // 3.3.02a
	// printDebugFlag = true; // 3.3.02f    3.3.02g
	
	
	jQuery('#floorPlanCanvasObject_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).hide();
	jQuery('#floorPlanCanvasObject_table_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).hide();
	
		
	
	
	// 3.2.02g
	if (cvjs_PrintIconDisabled[cvjs_active_floorplan_div_nr]){
		cvjs_displayInformationModal(floorplan_div_Array[cvjs_active_floorplan_div_nr], lTable.languages[cvjs_currentLanguage].InfoMessageModal.PrintDisabled);
		return;
	}
	
	
	
	// 3.0.15c   - add "_svg" to div, if called through external API
	if (cvjs_debug) console.log(floorplan_div.lastIndexOf("_svg")+"  "+(floorplan_div.length-4));
	if (floorplan_div.lastIndexOf("_svg") == floorplan_div.length-4){
			// do nothing
	}
	else{
		floorplan_div = floorplan_div + "_svg";
	}
	
	
	
	
	if (cvjs_interactiveMethod_Active[cvjs_active_floorplan_div_nr]) return;
	cvjs_interactiveMethod_Active[cvjs_active_floorplan_div_nr] = true;


	if (print_text_offset_flag[cvjs_active_floorplan_div_nr]){
		print_text_offset_flag[cvjs_active_floorplan_div_nr] = false;
		// 3.1.21j .appendTo('body');
		jQuery("#printModal_"+floorplan_div).css({position: "fixed"});
		jQuery("#printModal_"+floorplan_div).offset({left:150+jQuery('#'+floorplan_div).position().left, top: 50+jQuery('#'+floorplan_div).position().top});
	}
	
	jQuery('#printModal_'+floorplan_div).show();
}


// Internal function to pass over to print after print modal settings

function cvjs_exitPrintModal(floorplan_div, val){

	// we hide modal first, then we activate the print
//	jQuery.when( ).done(function( x ) {
//	  	console.log( "modal hidden" ); // Alerts "123"
//	})
//	var x = document.getElementById('printModal');
//	//x.style.display = 'none';
//	x.style.visibility = 'hidden';


	cvjs_interactiveMethod_Active[cvjs_active_floorplan_div_nr] = false;

	if (val==1){
		jQuery('#printModal_'+floorplan_div).fadeOut(500);
		return;
	}

	var printResolution = jQuery("#cvjs_printResolution").val();
	cvjs_setPrintResolutionDpi(printResolution);

	var paperSize = jQuery("#cvjs_paperSize").val();
	if (paperSize == 1 )cvjs_setPrintPaperSize("A4");
	if (paperSize == 2 )cvjs_setPrintPaperSize("A3");
	if (paperSize == 3 )cvjs_setPrintPaperSize("A2");
	if (paperSize == 4 )cvjs_setPrintPaperSize("ANSI A");  // US Letter
	if (paperSize == 5 )cvjs_setPrintPaperSize("ANSI B");  // US Ledger
	if (paperSize == 6 )cvjs_setPrintPaperSize("US Legal");
	if (paperSize == 7 )cvjs_setPrintPaperSize("ANSI C");


	// IF we have US ARCH D, E or A1, A0, we print as PDF
	if (paperSize == 8 )cvjs_setPrintPaperSize("A1");
	if (paperSize == 9 )cvjs_setPrintPaperSize("A0");
	if (paperSize == 10 )cvjs_setPrintPaperSize("US Arch D");
	if (paperSize == 11 )cvjs_setPrintPaperSize("US Arch E1");

	if (paperSize>=8){
		if (!cvjs_printPdf){  // make pdf print message
			var textString = lTable.languages[cvjs_currentLanguage].InfoMessageModal.PaperSizePDFPrintOnly;
			cvjs_displayInformationModal(floorplan_div_Array[cvjs_active_floorplan_div_nr], textString);
//			jQuery('#printModal').hide();
			return;
		}
	}




	jQuery.when( jQuery('#printModal_'+floorplan_div).fadeOut(100) ).done(function( x ) {

		if (cvjs_debug) console.log("we have faded out! parem "+x);

		jQuery('#wait_looper_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).html('<table class=\"waitlooperTable\" width=\"100\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" ><tr><td><div id=\"looper_image_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]+'\"></div></td></tr><tr><td><div class=\"wait_text_4\" id=\"wait_looper_text_id_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]+'\">'+lTable.languages[cvjs_currentLanguage].WaitModal.Printing+'</div></td></tr></table>');

		cvjs_setLooperPosition();


		jQuery("#wait_looper_"+floorplan_div_Array[cvjs_active_floorplan_div_nr]).fadeIn(100);

		if (cvjs_debug) 	console.log("after waitlooper, printmodal Fade Out WaitLooper Fade IN");

		var paperOrientation = jQuery("#cvjs_paperOrientation").val();
		if (paperOrientation == 1 ) cvjs_setPrintOrientation("landscape");
		if (paperOrientation == 2 ) cvjs_setPrintOrientation("portrait");

		if (cvjs_printPdf){
			// we are translating US sizes to ANSI C
			if (paperSize == 4 || paperSize == 5 || paperSize == 6 || paperSize == 7 || paperSize == 10 || paperSize == 11) cvjs_setPrintPaperSize("ANSI C");
			// we are translating EU Sized to A2
			if (paperSize == 1 || paperSize == 2 || paperSize == 3 || paperSize == 8 || paperSize == 9) cvjs_setPrintPaperSize("A2");

	//		jQuery('#printModal').hide();

			if (!cvjs_custom_print_to_pdf)
				cvjs_printConvertedPDF();
			else{

				// we make ajax call to custom component
				var param_1 = "";
				var value_1 = "";


				for (var i=0; i<rest_nname[cvjs_active_floorplan_div_nr ].length; i++){
					if (rest_nname[cvjs_active_floorplan_div_nr ][i]=="basic")  {param_1 = rest_nname[cvjs_active_floorplan_div_nr ][i]; value_1 = rest_vvalue[cvjs_active_floorplan_div_nr ][i]; i =rest_nname[cvjs_active_floorplan_div_nr ].length; }
					if (rest_nname[cvjs_active_floorplan_div_nr ][i]=="layout")  {param_1 = rest_nname[cvjs_active_floorplan_div_nr ][i]; value_1 = rest_vvalue[cvjs_active_floorplan_div_nr ][i]; i =rest_nname[cvjs_active_floorplan_div_nr ].length; }
					if (rest_nname[cvjs_active_floorplan_div_nr ][i]=="model")  {param_1 = rest_nname[cvjs_active_floorplan_div_nr ][i]; value_1 = rest_vvalue[cvjs_active_floorplan_div_nr ][i]; i =rest_nname[cvjs_active_floorplan_div_nr ].length; }
					if (rest_nname[cvjs_active_floorplan_div_nr ][i]=="layoutsonly")  {param_1 = rest_nname[cvjs_active_floorplan_div_nr ][i]; value_1 = rest_vvalue[cvjs_active_floorplan_div_nr ][i]; i =rest_nname[cvjs_active_floorplan_div_nr ].length; }
					if (rest_nname[cvjs_active_floorplan_div_nr ][i]=="lastsavedview")  {param_1 = rest_nname[cvjs_active_floorplan_div_nr ][i]; value_1 = rest_vvalue[cvjs_active_floorplan_div_nr ][i]; i =rest_nname[cvjs_active_floorplan_div_nr ].length; }
					if (rest_nname[cvjs_active_floorplan_div_nr ][i]=="firstlayout")  {param_1 = rest_nname[cvjs_active_floorplan_div_nr ][i]; value_1 = rest_vvalue[cvjs_active_floorplan_div_nr ][i]; i =rest_nname[cvjs_active_floorplan_div_nr ].length; }
				}

				if (param_1 == ""){  // this is a file converted with -basic
										
					var pagename = multiPages[cvjs_active_floorplan_div_nr].pages[(multiPages[cvjs_active_floorplan_div_nr].currentPage)-1].pageName;					
					
					if (pagename.toLowerCase().indexOf("model")>-1){				
						param_1 = "model"; value_1 = "";
					}
					else {
						param_1 = "layout"; value_1 = multiPages[cvjs_active_floorplan_div_nr].pages[(multiPages[cvjs_active_floorplan_div_nr].currentPage)-1].pageName;						
					}

				}								
				
				


				// we hide modal, show print command and send instructions down.....

				jQuery('#wait_looper_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).html('<table class=\"waitlooperTable\" width=\"100\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" ><tr><td><div id=\"looper_image_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]+'\"></div></td></tr><tr><td><div class=\"wait_text_5\" id=\"wait_looper_text_id_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]+'\">'+lTable.languages[cvjs_currentLanguage].WaitModal.BatchPDF+'</div></td></tr></table>');

				cvjs_setLooperPosition();
				jQuery('#printModal_'+floorplan_div).hide();

				var finalUrl =  cvjs_serverHandlersPath + cvjs_customPDFprintController;

				var filelist_data = {};

				var file_to_use = "";

				if( currentLoadedDrawingFullName.indexOf(".js")>-1 || currentLoadedDrawingFullName.indexOf(".svg")>-1 )
					file_to_use = currentLoadedDrawingFullName;
				else
					file_to_use = cvjs_conversion_originatingFile[cvjs_active_floorplan_div_nr ];


				filelist_data['file'] = file_to_use; //cvjs_conversion_originatingFile[cvjs_active_floorplan_div_nr ];
				filelist_data['param1_name'] = param_1;
				filelist_data['param1_value'] = value_1;
				filelist_data['paper_size'] = cvjs_printPaperSize;
				filelist_data['paper_orientation'] = cvjs_printOrientation;
				
				
					// 2018-01-25  // creating grayscale
				if (cvjs_printGrayscale){
					filelist_data['param2_name'] = "greyscale";
					filelist_data['param2_value'] = "";
				}
				else{
					filelist_data['param2_name'] = "";
					filelist_data['param2_value'] = "";					
				}
							

				jQuery.ajax({
					url:finalUrl,
					type: 'post',
					data: filelist_data,
					success: function(html){

						console.log("Response custom php: "+html);
						
						// We now ask to parse and make a print window similar to the standard php/servlet route, but based on a customer produced PDF file-load
					
						parseServerResponsePDFPrintCustom(html);
												
						jQuery("#wait_looper_"+floorplan_div_Array[cvjs_active_floorplan_div_nr]).hide();

					}

				});




			}


		}
		else{
	//		jQuery('#printModal').hide();





			cvjs_printCanvasPaperSize();
		}
	});

}


///////////// PRINT CONVERTED PDF                     DOWN




// function cvjs_LoadDrawing_Conversion_original

function cvjs_Conversion_toPDF_forPrint(floorplan_div, originatingContent, originatingUsername, originatingPassword){

//console.log(floorplan_div+" 2 "+originatingContent+" 3 "+originatingFileNameNoExtension+"  4 "+originatingUsername+" 5 "+originatingPassword);
	if (cvjs_debug) console.log(floorplan_div+" 2 "+originatingContent+" 3none  4 "+originatingUsername+" 5 "+originatingPassword);



//	jQuery('#wait_looper_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).html('<table class=\"waitlooperTable\" width=\"100\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" ><tr><td><div id=\"looper_image_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]+'\"></div></td></tr><tr><td><div class=\"wait_text_5\" id=\"wait_looper_text_id\">'+lTable.languages[cvjs_currentLanguage].WaitModal.BatchPDF+'</div></td></tr></table>');
//	jQuery('#wait_looper_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).html('<table class=\"waitlooperTable\" width=\"100\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" ><tr><td><div id=\"looper_image_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]+'\"></div></td></tr><tr><td><div class=\"wait_text_4\" id=\"wait_looper_text_id\">'+lTable.languages[cvjs_currentLanguage].LoadingModal.Loading+'</div></td></tr></table>');
//	jQuery("#wait_looper_text_id").html(lTable.languages[cvjs_currentLanguage].WaitModal.BatchPDF);


	jQuery('#wait_looper_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).html('<table class=\"waitlooperTable\" width=\"100\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" ><tr><td><div id=\"looper_image_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]+'\"></div></td></tr><tr><td><div class=\"wait_text_5\" id=\"wait_looper_text_id_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]+'\">'+lTable.languages[cvjs_currentLanguage].WaitModal.BatchPDF+'</div></td></tr></table>');

	cvjs_setLooperPosition();
	
	jQuery("#wait_looper_"+floorplan_div_Array[cvjs_active_floorplan_div_nr]).show();
	jQuery('#floorPlanCanvasObject_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).hide();

	
	// 3.3.01e
	if (printDebugFlag) jQuery('#floorPlanCanvasObject_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).show();
	

	var rest_nname_temp = {};
	var rest_vvalue_temp = {};

	for (var i=0; i<rest_nname[cvjs_active_floorplan_div_nr ].length; i++){

		if (rest_nname[cvjs_active_floorplan_div_nr ][i]=="f"){
			rest_nname_temp[i] = "f";
			rest_vvalue_temp[i] = "pdf";
		}
		else{
			rest_nname_temp[i] = rest_nname[cvjs_active_floorplan_div_nr ][i];
			rest_vvalue_temp[i] = rest_vvalue[cvjs_active_floorplan_div_nr ][i];

		}
	}

	// if there is no initialization of the parameters we use -f=js
	if (rest_nname_temp.length==undefined || rest_nname_temp.length==0){
		rest_nname_temp[0] = "f";
		rest_vvalue_temp[0] = "pdf";

	}

	// if there is no layout defined as page to view or if -basic is not defined, I want the model to be converted
	var modelflag= true;

	for (var i=0; i<rest_nname_temp.length; i++){
		if (rest_nname_temp[i]=="basic")  modelflag = false;
		if (rest_nname_temp[i]=="layout")  modelflag = false;
		if (rest_nname_temp[i]=="model")  modelflag = false;
		if (rest_nname_temp[i]=="layoutsonly")  modelflag = false;
		if (rest_nname_temp[i]=="lastsavedview")  modelflag = false;
		if (rest_nname_temp[i]=="firstlayout")  modelflag = false;
	}

	if (modelflag){
		var i=rest_nname_temp.length;
		if (rest_contentFormat.toLowerCase().indexOf("dwf")==0){   // for DWF, the first page in the set is found via -lastsavedview
			// if AX2015 , if AX2011
			rest_nname_temp[i] = "lastsavedview";

			// if AX2017
			if (rest_converter.indexOf("AutoXchange AX2017")==0)
				rest_nname_temp[i] = "firstlayout";

			if (rest_converter.indexOf("AutoXchange AX2019")==0)
				rest_nname_temp[i] = "firstlayout";

			// 4.1.01a
			if (rest_converter.indexOf("AutoXchange AX2020")==0)
				rest_nname_temp[i] = "firstlayout";
			

		}
		else{
			rest_nname_temp[i] = "model";
		}

		rest_vvalue_temp[i] = "";
		i=rest_nname_temp.length;
		rest_nname_temp[i] = "extents";
		rest_vvalue_temp[i] = "";
	}


	// if we have a pcf file, we have to tell that we are converting a dgn file
	if (rest_contentFormat.toLowerCase().indexOf("pcf")==0){
			var i=rest_nname_temp.length;
			rest_nname_temp[i] = "treatas";
			rest_vvalue_temp[i] = "DGN";
	}

	var l_len = rest_nname_temp.length;
	for (var i=0; i<l_len; i++){
		if (rest_nname_temp[i]=="RL"){
			rest_nname_temp.splice(i, 1);
			rest_vvalue_temp.splice(i, 1);
		}
	}

	var l_len = rest_nname_temp.length;
	for (var i=0; i<l_len; i++){
		if (rest_nname_temp[i]=="TL"){
			rest_nname_temp.splice(i, 1);
			rest_vvalue_temp.splice(i, 1);
		}
	}

	
	
	


//console.log(rest_nname[cvjs_active_floorplan_div_nr ].length);

	// here we are adding all customs parameter  2018-08-08

//console.log("XXXXXXXXXXXXXXXXXXXXXXXXXXXXX "+rest_nname_custom[cvjs_active_floorplan_div_nr ].length)

	if (rest_nname_custom[cvjs_active_floorplan_div_nr ].length>0){

			var l_len = rest_nname_temp.length;
			var c_len = rest_nname_custom[cvjs_active_floorplan_div_nr ].length;

			for (var i=0; i<c_len; i++){
				var flag = false;
				for (var j=0; j<l_len; j++){
					if (rest_nname_temp[j]==rest_nname_custom[cvjs_active_floorplan_div_nr ][i])
						flag = true;
					}
				if (!flag){
					rest_nname_temp[l_len] = rest_nname_custom[cvjs_active_floorplan_div_nr ][i];
					rest_vvalue_temp[l_len] = rest_vvalue_custom[cvjs_active_floorplan_div_nr ][i];
					l_len++;

				}
			}

	}

	

//console.log(rest_nname[cvjs_active_floorplan_div_nr ][0]);

	var contentStreamGraphics;
	var contentStreamNodes;
	var contentStreamData;
	var contentStreamThumb;

	var contentLocationGraphics;
	var contentLocationNodes;
	var contentLocationData;
	var contentLocationThumb;

	var conv_extr_request = new Object();
	conv_extr_request.action      = "pdf_creation";

	conv_extr_request.converter  = rest_converter ;
	conv_extr_request.version    = rest_version ;

	conv_extr_request.contentType  = rest_contentType;

	
	// 3.2.01b	
	originatingContent = originatingContent.replace(/\\/g, "/");
	// 3.2.01b	
	if (conv_extr_request.contentType == "file"){		
		if (originatingContent.indexOf("%")>0) // if %, then it is already URL encoded 
			conv_extr_request.contentLocation  = originatingContent;
		else
			conv_extr_request.contentLocation  = encodeURIComponent(originatingContent);
	}
	
	// 3.2.01b	
	if (conv_extr_request.contentType == "stream"){
		if (originatingContent.indexOf("%")>0) // if %, then it is already URL encoded 
			conv_extr_request.contentStream  = originatingContent;
		else
			conv_extr_request.contentStream  = encodeURIComponent(originatingContent);
	}

	// 3.2.01b	
	if (conv_extr_request.contentType == "embedded"){
		if (originatingContent.indexOf("%")>0) // if %, then it is already URL encoded 
			conv_extr_request.embeddedContent  = originatingContent;
		else
			conv_extr_request.embeddedContent  = encodeURIComponent(originatingContent);
	}

	conv_extr_request.contentFormat  = rest_contentFormat;
	conv_extr_request.contentUsername    = originatingUsername;
	conv_extr_request.contentPassword    = originatingPassword;
	conv_extr_request.userLabel  = rest_userLabel;

	
	// 3.2.01g
	if (rest_serviceCall){
		conv_extr_request.userLabel  = rest_ServiceToken;
		conv_extr_request.applicationPlatform = rest_applicationPlatform; 
		conv_extr_request.applicationPlatformUsername = rest_applicationPlatformUsername;
		conv_extr_request.applicationPlatformUserID = rest_applicationPlatformUserID; 
		if (conv_extr_request.contentResponse == "stream")
			conv_extr_request.leaveStreamOnServer = rest_leaveStreamOnServer;
		
	}
	
	

	conv_extr_request.contentResponse  = "file";  // we want to pick up a PDF

	conv_extr_request.parameters  = new Array();


	if (cvjs_debug) console.log("conv_extr_request.contentPassword x"+conv_extr_request.contentPassword+"x" );

	for (var i=0; i<rest_nname[cvjs_active_floorplan_div_nr ].length; i++){

		var params = new Object

		params.paramName = rest_nname_temp[i];
		params.paramValue = rest_vvalue_temp[i];

		conv_extr_request.parameters[i] = params;
	}

	
	// 2018-01-25  // creating grayscale
	if (cvjs_printGrayscale){
		var j = rest_nname[cvjs_active_floorplan_div_nr ].length;
		var params = new Object
		params.paramName = "greyscale";
		params.paramValue = "";
		conv_extr_request.parameters[j] = params;
	}

	
	
	
	
	
	api_data = JSON.stringify(conv_extr_request);

	tms_rest_api_url = tms_rest_api_url1+rest_php_version;


if (cvjs_debug) console.log(" index of"+tms_rest_api_url1.indexOf("tms-restful-api"));


	if (tms_rest_api_url1.indexOf("tms-restful-api")>-1){
		cvjs_passwordProtected = true;
		//cvjs_checkLicensePre();
		if (cvjs_isLicensed){
			cvjs_usr = "tms";
			cvjs_pwd = "restful";
		}

if (cvjs_debug) console.log(cvjs_isLicensed+" "+cvjs_usr+" "+cvjs_pwd);

	}

	var tms_rest_api_url_pw;


	if (cvjs_passwordProtected){
		var loc_1 = tms_rest_api_url.indexOf("//");
		var protocol_1 = tms_rest_api_url.substring(0,loc_1+2);
		var url_1 = tms_rest_api_url.substring(loc_1+2);
		tms_rest_api_url_pw = protocol_1+cvjs_usr+":"+cvjs_pwd+"@"+url_1;

	}else{
		tms_rest_api_url_pw = tms_rest_api_url;
	}

	// Encoding for Tomcat 8, xerces PHP server, we encode the json stream encodeURIComponent(api_data), previously only api_data
	var url_json = "";
	if (cvjs_encodeURIcall_server)
		url_json = tms_rest_api_url_pw+"?json="+encodeURIComponent(api_data);
	else
		url_json = tms_rest_api_url_pw+"?json="+api_data;
		
//	if (cvjs_debug) console.log(tms_rest_api_url_pw+" in makeConversion  request="+ encodeURIComponent(api_data));
	if (cvjs_debug) console.log(tms_rest_api_url_pw+" in makeConversion  request="+ encodeURIComponent(api_data)+"  non encoded request: "+api_data);

	

	if (cvjs_jsonp_handshake){

	if (cvjs_debug) console.log("before ajax call to php ");

		jQuery.ajax({
			url : url_json,
       		jsonp: "tms_restful_api",
        	dataType: 'jsonp',
			success:function(Api_response)
					{
	if (cvjs_debug) console.log("jsonP Conversion success: "+Api_response);

						parseServerResponsePDFPrint(Api_response);
					},
			error:function(xhr, status, error)
					{
						console.log("1 jsonp getEngines error="+xhr.responseText+" status="+status+" error="+error);
					}
		});
	}


	if (cvjs_servlet_handshake){

	if (cvjs_debug) console.log("1 before ajax call to Servlet");

	
		var filelist_data = {};
		filelist_data['request'] = api_data;
		
		if (cvjs_debug) console.log("1 before ajax call to Servlet filelist_data['request'] "+ filelist_data['request']);
	
		jQuery.ajax({
			url : tms_rest_api_url_pw,
			type: 'post',
			data: filelist_data,

			success:function(Api_response)
					{
	if (cvjs_debug) console.log("json Conversion success parseSErverResponsePDFPrint: "+Api_response);
						parseServerResponsePDFPrint(Api_response);

					},
			error:function(data_e)
					{
						console.log("2 json getEngines error="+data_e);
					}
		});
	}


	if (cvjs_post_handshake){

	if (cvjs_debug) console.log("before ajax post call");
			// not working for cross domain

		var json_data = {};
		json_data['json_data'] = api_data;

		jQuery.ajax({
			url : tms_rest_api_url_pw,
			type: 'POST',
        	data: json_data,
			success:function(Api_response)
					{
						if (cvjs_debug) console.log("post Conversion: "+Api_response);
						parseServerResponsePDFPrint(Api_response);

					},
			error:function(data_e)
					{
						console.log("2 json getEngines error="+data_e);
					}
		});
	}
};


String.prototype.replaceAll = function(str1, str2, ignore)
{
    return this.replace(new RegExp(str1.replace(/([\/\,\!\\\^\$\{\}\[\]\(\)\.\*\+\?\|\<\>\-\&])/g,"\\$&"),(ignore?"gi":"g")),(typeof(str2)=="string")?str2.replace(/\$/g,"$$$$"):str2);
}



function parseServerResponsePDFPrint(Api_response){

	var q = jQuery.parseJSON(Api_response);
	var local = false;

	if (q.errorCode == "E0"){
		//console.log("Everything is fine");
		jQuery("#looper").hide();
		jQuery('#wait_looper_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).hide();

	}
	else{

		// the file did not convert
		jQuery("#looper").hide();
		jQuery('#wait_looper_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).hide();
		var textString = "";

		if (q.errorCode == "E1"){
			textString = lTable.languages[cvjs_currentLanguage].InfoMessageModal.ServerSideFormatForPDFPrint;
			cvjs_displayInformationModal(floorplan_div_Array[cvjs_active_floorplan_div_nr], textString);
		}
		else{
			textString = "Server side conversion error, AutoXchange responded with errorcode: "+q.errorCode;
			cvjs_displayInformationModal(floorplan_div_Array[cvjs_active_floorplan_div_nr], textString);
		}

		return;

	}

	// loading an PDF from the server
	if (q.completedAction=="pdf_creation"){

		var filelocation = 	"";

		if (rest_contentResponse == "stream") filelocation = q.contentStreamData;
		if (rest_contentResponse == "file") filelocation = q.contentStreamData;

	if (cvjs_debug) 		console.log("filelocation "+filelocation);

		var fUrl = cvjs_serverHandlersPath + cvjs_returnPDFparamsController;
		var f_data = {};
		f_data['file'] = "";  // void

		
		
	if (cvjs_debug) 		console.log("fUrl "+fUrl);
		
		
		jQuery.ajax({
		  url: fUrl,
		  type: 'post',
		  data: f_data,
		  success: function(html){

	if (cvjs_debug) 		console.log("success "+html);

				var tempstr = html;
				var dir = tempstr.substring(0, tempstr.indexOf("|"));
				var tempstr = tempstr.substring(tempstr.indexOf("|")+1);
				var dir_url = tempstr.substring(0, tempstr.indexOf("|"));

				var is_explorer = (navigator.userAgent.indexOf('MSIE') > -1) || (navigator.userAgent.indexOf('Trident') > -1);

				printWindow = window.open('', 'CADViewer JS - Print', 'width='+screen.width*cvjs_print_to_pdf_windowRelativeSize+',height='+ screen.height*cvjs_print_to_pdf_windowRelativeSize);
				var text = "";

				printWindow.document.write('<!DOCTYPE html><html><title>CADViewer JS - Print</title><head><script src="'+cvjs_defaultJSPath+'/jquery-2.2.3.js" type="text/javascript"></script>');
				text = text + '<!DOCTYPE html><html><title>CADViewer JS - Print</title><head><script src="'+cvjs_defaultJSPath+'/jquery-2.2.3.js" type="text/javascript"></script>';

				printWindow.document.write('<script type="text/javascript">');
				text = text + '<script type="text/javascript">';
				// file=
				var xfilelocation = dir + filelocation.substring(filelocation.lastIndexOf('/')+1);
				xfilelocation= xfilelocation.replaceAll("\\","/");

				//printWindow.document.write("jQuery(window).on('beforeunload', function (){ jQuery.ajax({url:'"+cvjs_phpPath+"/cvjs_serverDeleteFileController?file="+xfilelocation+"', cache: false, success: function(html){}});  }); jQuery(window).on('unload', function (){ jQuery.ajax({url:'"+cvjs_phpPath+"/cvjs_serverDeleteFileController?file="+xfilelocation+"', cache: false, success: function(html){}})  }); window.onbeforeunload = function (){ jQuery.ajax({url:'"+cvjs_phpPath+"/cvjs_serverDeleteFileController?file="+xfilelocation+"', cache: false, success: function(html){}}) }; </script>");
				//text = text + "jQuery(window).on('beforeunload', function (){ jQuery.ajax({url:'"+cvjs_phpPath+"/cvjs_serverDeleteFileController?file="+xfilelocation+"', cache: false, success: function(html){}});  }); jQuery(window).on('unload', function (){ jQuery.ajax({url:'"+cvjs_phpPath+"/cvjs_serverDeleteFileController?file="+xfilelocation+"', cache: false, success: function(html){}})  }); window.onbeforeunload = function (){ jQuery.ajax({url:'"+cvjs_phpPath+"/cvjs_serverDeleteFileController?file="+xfilelocation+"', cache: false, success: function(html){}}) }; </script>";

				printWindow.document.write("jQuery(window).on('beforeunload', function (){ jQuery.ajax({url:'"+cvjs_serverHandlersPath+"/"+cvjs_serverDeleteFileController+"?file="+xfilelocation+"', cache: false, success: function(html){}});  }); jQuery(window).on('unload', function (){ jQuery.ajax({url:'"+cvjs_serverHandlersPath+"/"+cvjs_serverDeleteFileController+"?file="+xfilelocation+"', cache: false, success: function(html){}})  }); window.onbeforeunload = function (){ jQuery.ajax({url:'"+cvjs_serverHandlersPath+"/"+cvjs_serverDeleteFileController+"?file="+xfilelocation+"', cache: false, success: function(html){}}) }; </script>");
				text = text + "jQuery(window).on('beforeunload', function (){ jQuery.ajax({url:'"+cvjs_serverHandlersPath+"/"+cvjs_serverDeleteFileController+"?file="+xfilelocation+"', cache: false, success: function(html){}});  }); jQuery(window).on('unload', function (){ jQuery.ajax({url:'"+cvjs_serverHandlersPath+"/"+cvjs_serverDeleteFileController+"?file="+xfilelocation+"', cache: false, success: function(html){}})  }); window.onbeforeunload = function (){ jQuery.ajax({url:'"+cvjs_serverHandlersPath+"/"+cvjs_serverDeleteFileController+"?file="+xfilelocation+"', cache: false, success: function(html){}}) }; </script>";

			
				printWindow.document.write('</head><body><div id="pdf">');
				text = text + '</head><body><div id="pdf">';

	//				printWindow.document.write('<object width="1654" height="2339" type="application/pdf" data="'+filelocation+'" id="pdf_content"><p>Please install a PDF viewer, the CADViewer JS batch file PDF cannot be displayed.</p></object></div></body></html>');
	//				text = text + '<object width="1654" height="2339" type="application/pdf" data="'+filelocation+'" id="pdf_content"><p>Please install a PDF viewer, the CADViewer JS batch file PDF cannot be displayed.</p></object></div></body></html>';

				printWindow.document.write('<object width="'+screen.width*cvjs_print_to_pdf_windowRelativeSize+'" height="'+screen.width*cvjs_print_to_pdf_windowRelativeSize*2339/1654+'" type="application/pdf" data="'+filelocation+'" id="pdf_content"><p>Please install a PDF viewer, the CADViewer JS batch file PDF cannot be displayed.</p></object></div></body></html>');
				text = text + '<object width="'+screen.width*cvjs_print_to_pdf_windowRelativeSize+'" height="'+screen.width*cvjs_print_to_pdf_windowRelativeSize*2339/1654+'" type="application/pdf" data="'+filelocation+'" id="pdf_content"><p>Please install a PDF viewer, the CADViewer JS batch file PDF cannot be displayed.</p></object></div></body></html>';
								
				//console.log(text);

				printWindow.document.close(); //this seems to be the thing doing the trick
				printWindow.focus();

				//printWindow.print();
				//if (local) printWindow.close();
				//if (!local && is_explorer) printWindow.close();
			}
		});
	}

	// remove the print modal

	// fetch the link with the pdf

	// open the print-modal with the converted object

}





function parseServerResponsePDFPrintCustom(Api_response){


	Api_response = Api_response.replace(/\\/g, "/");

	if (cvjs_debug) 		console.log("Api_response "+Api_response);

	var q = jQuery.parseJSON(Api_response);
	var local = false;

	if (q.errorCode == "E0"){
		//console.log("Everything is fine");
		jQuery("#looper").hide();
		jQuery('#wait_looper_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).hide();

	}
	else{

		// the file did not convert
		jQuery("#looper").hide();
		jQuery('#wait_looper_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).hide();
		var textString = "";

		if (q.errorCode == "E1"){
			textString = lTable.languages[cvjs_currentLanguage].InfoMessageModal.ServerSideFormatForPDFPrint;
			cvjs_displayInformationModal(floorplan_div_Array[cvjs_active_floorplan_div_nr], textString);
		}
		else{
			textString = "Server side conversion error, AutoXchange responded with errorcode: "+q.errorCode;
			cvjs_displayInformationModal(floorplan_div_Array[cvjs_active_floorplan_div_nr], textString);
		}

		return;

	}

	// loading an SVG from the server
	if (q.completedAction=="pdf_creation"){

		var filelocation = 	"";

		if (rest_contentResponse == "stream") filelocation = q.contentStreamData;
		if (rest_contentResponse == "file") filelocation = q.contentStreamData;

	if (cvjs_debug) 		console.log("filelocation "+filelocation);

		var fUrl = cvjs_serverHandlersPath + cvjs_returnPDFparamsController;
		var f_data = {};
		f_data['file'] = "";  // void

		jQuery.ajax({
		  url: fUrl,
		  type: 'post',
		  data: f_data,
		  success: function(html){
				var tempstr = html;
				var dir = tempstr.substring(0, tempstr.indexOf("|"));
				var tempstr = tempstr.substring(tempstr.indexOf("|")+1);
				var dir_url = tempstr.substring(0, tempstr.indexOf("|"));

				var is_explorer = (navigator.userAgent.indexOf('MSIE') > -1) || (navigator.userAgent.indexOf('Trident') > -1);

				printWindow = window.open('', 'CADViewer JS - Print', 'width='+screen.width*cvjs_print_to_pdf_windowRelativeSize+',height='+ screen.height*cvjs_print_to_pdf_windowRelativeSize);
				var text = "";

				printWindow.document.write('<!DOCTYPE html><html><title>CADViewer JS - Print</title><head><script src="'+cvjs_defaultJSPath+'/jquery-2.2.3.js" type="text/javascript"></script>');
				text = text + '<!DOCTYPE html><html><title>CADViewer JS - Print</title><head><script src="'+cvjs_defaultJSPath+'/jquery-2.2.3.js" type="text/javascript"></script>';

				printWindow.document.write('<script type="text/javascript">');
				text = text + '<script type="text/javascript">';
				// file=
				var xfilelocation = dir + filelocation.substring(filelocation.lastIndexOf('/')+1);
				xfilelocation= xfilelocation.replaceAll("\\","/");

				printWindow.document.write("jQuery(window).on('beforeunload', function (){ jQuery.ajax({url:'"+cvjs_serverHandlersPath+"/"+cvjs_serverDeleteFileController+"?file="+xfilelocation+"', cache: false, success: function(html){}});  }); jQuery(window).on('unload', function (){ jQuery.ajax({url:'"+cvjs_serverHandlersPath+"/"+cvjs_serverDeleteFileController+"?file="+xfilelocation+"', cache: false, success: function(html){}})  }); window.onbeforeunload = function (){ jQuery.ajax({url:'"+cvjs_serverHandlersPath+"/"+cvjs_serverDeleteFileController+"?file="+xfilelocation+"', cache: false, success: function(html){}}) }; </script>");
				text = text + "jQuery(window).on('beforeunload', function (){ jQuery.ajax({url:'"+cvjs_serverHandlersPath+"/"+cvjs_serverDeleteFileController+"?file="+xfilelocation+"', cache: false, success: function(html){}});  }); jQuery(window).on('unload', function (){ jQuery.ajax({url:'"+cvjs_serverHandlersPath+"/"+cvjs_serverDeleteFileController+"?file="+xfilelocation+"', cache: false, success: function(html){}})  }); window.onbeforeunload = function (){ jQuery.ajax({url:'"+cvjs_serverHandlersPath+"/"+cvjs_serverDeleteFileController+"?file="+xfilelocation+"', cache: false, success: function(html){}}) }; </script>";


				printWindow.document.write('</head><body><div id="pdf">');
				text = text + '</head><body><div id="pdf">';

//				printWindow.document.write('<object width="1654" height="2339" type="application/pdf" data="'+filelocation+'" id="pdf_content"><p>Please install a PDF viewer, the CADViewer JS batch file PDF cannot be displayed.</p></object></div></body></html>');
//				text = text + '<object width="1654" height="2339" type="application/pdf" data="'+filelocation+'" id="pdf_content"><p>Please install a PDF viewer, the CADViewer JS batch file PDF cannot be displayed.</p></object></div></body></html>';

				printWindow.document.write('<object width="'+screen.width*cvjs_print_to_pdf_windowRelativeSize+'" height="'+screen.width*cvjs_print_to_pdf_windowRelativeSize*2339/1654+'" type="application/pdf" data="'+filelocation+'" id="pdf_content"><p>Please install a PDF viewer, the CADViewer JS batch file PDF cannot be displayed.</p></object></div></body></html>');
				text = text + '<object width="'+screen.width*cvjs_print_to_pdf_windowRelativeSize+'" height="'+screen.width*cvjs_print_to_pdf_windowRelativeSize*2339/1654+'" type="application/pdf" data="'+filelocation+'" id="pdf_content"><p>Please install a PDF viewer, the CADViewer JS batch file PDF cannot be displayed.</p></object></div></body></html>';

				
				
				//console.log(text);

				printWindow.document.close(); //this seems to be the thing doing the trick
				printWindow.focus();

				//printWindow.print();
				//if (local) printWindow.close();
				//if (!local && is_explorer) printWindow.close();
			}
		});
	}

	// remove the print modal

	// fetch the link with the pdf

	// open the print-modal with the converted object

}







///////  PRINT CONVERTED PDF UP







function cvjs_printConvertedPDF(){


	// set up call to converter to call current view and file-name to a pdf file

//	cvjs_Conversion_toPDF_forPrint(floorplan_div, originatingContent, originatingFileNameNoExtension, originatingUsername, originatingPassword);

	cvjs_Conversion_toPDF_forPrint(floorplan_div_Array[cvjs_active_floorplan_div_nr ], cvjs_conversion_originatingFile[cvjs_active_floorplan_div_nr ], cvjs_conversion_originatingUsername[cvjs_active_floorplan_div_nr ], cvjs_conversion_originatingPassword[cvjs_active_floorplan_div_nr ]);


}



var cvjs_PrintToScale = false;   // 3.3.02f    3.3.02g  - new parameter for print to scale


var cvjs_ctx;


/**
 * Function to print to papersize, based on settings provided in cvjs_setPrintOrientation(), cvjs_setPrintResolutionDpi() and cvjs_setPrintPaperSize()
 */
function cvjs_printCanvasPaperSize(){

	// case where cvjs_objectIsZoomedExtents = true;

	var svgString;
	var is_explorer = (navigator.userAgent.indexOf('MSIE') > -1) || (navigator.userAgent.indexOf('Trident') > -1);
	var is_firefox = navigator.userAgent.indexOf('Firefox') > -1;

	svgString = cvjs_rPaper[cvjs_active_floorplan_div_nr].toString();

	var svgStringOrg = svgString;

	if (printDebugFlag) console.log("1A "); //console.log("1A "+svgString);

	// we are changing the setting to be based on actual viewBox
	// NOTE!  - we must make the variable naming generic so it does not interfere

	var x_svg = viewBox[cvjs_active_floorplan_div_nr].X;
	var y_svg = viewBox[cvjs_active_floorplan_div_nr].Y;
	var width_svg_box = viewBoxWidth[cvjs_active_floorplan_div_nr];
	var height_svg_box = viewBoxHeight[cvjs_active_floorplan_div_nr];

	var tempString1 = svgString.substring(0, svgString.indexOf("width:")+6);
	var tempString2 = svgString.substring(svgString.indexOf("height:")+6);
	tempString2 = tempString2.substring(tempString2.indexOf(";"));
	svgString = tempString1+width_svg_box+"; height:"+height_svg_box+tempString2;

	var xml = svgString;
	xml = xml.replace(/xmlns=\"http:\/\/www.w3.org\/2000\/svg\"/g, '');
	svgString = xml;

	if (printDebugFlag) console.log("1B "); // console.log("1B "+svgString);

	var location = window.location.href;  //console.log(location);
	var is_local= false;
	if (location.indexOf("file:")>-1) is_local = true;

	//console.log( fileLoad_contentFormat.toLowerCase());
	//if (printDebugFlag) console.log("2B "+svgString);

//	if (printDebugFlag) window.prompt("Copy to clipboard: Ctrl+C, Enter", svgString);

	var widthHeightFactorSVG = width_svg_box/height_svg_box;    // which side to scale from is based on the actual box object
	var widthHeightFactorPaper = cvjs_printPixelWidth/cvjs_printPixelHeight;
	var widthHeightFactorSVGless1 = true;

	if (widthHeightFactorSVG>=1)
		widthHeightFactorSVGless1 = false;

    cvjs_ctx = jQuery("#floorPlanCanvasObject_"+floorplan_div_Array[cvjs_active_floorplan_div_nr])[0].getContext('2d');

	//return;

	// bitmap image loaded in stand-alone


	if ( fileLoad_contentFormat.toLowerCase().indexOf("png")>-1 || fileLoad_contentFormat.toLowerCase().indexOf("gif")>-1 || fileLoad_contentFormat.toLowerCase().indexOf("jpg")>-1){
	
	
	// NOTE 2018-02-14   WE DISABLE THE PURE BITMAP PRINT BECAUSE WE HAVE ADDED VECTOR FRAMES TO THE BITMAP, AND WE MAY ALSO HAVE STAMPS
	// CORRECTION, cannot change this because of cross-domain issues, when adding stamps for Newgen
		// we have to cut out the image
		var tempString1 = svgString.substring(0, svgString.indexOf("<image"));
		tempString2 = svgString.substring(svgString.indexOf("<image")+6);
		tempString2 = tempString2.substring(tempString2.indexOf("</image>")+8);
		svgString = tempString1+tempString2;

		if (!cvjs_objectIsZoomedExtents){  // bitmap zoomed in

			
/*
			if (cvjs_printOrientation.indexOf("landscape")==0){
				cvjs_ctx.canvas.height = Math.round(cvjs_printPixelHeight);
				cvjs_ctx.canvas.width = Math.round(cvjs_printPixelWidth);
				jQuery('#floorPlanCanvasObject_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).height(Math.round(cvjs_printPixelHeight));
				jQuery('#floorPlanCanvasObject_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).width(Math.round(cvjs_printPixelWidth));
				jQuery('#floorPlanCanvasObject_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).css("width",Math.round(cvjs_printPixelWidth));
				jQuery('#floorPlanCanvasObject_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).css("height",Math.round(cvjs_printPixelHeight));
			}else{
				cvjs_ctx.canvas.height = Math.round(cvjs_printPixelWidth);
				cvjs_ctx.canvas.width = Math.round(cvjs_printPixelHeight);
				jQuery('#floorPlanCanvasObject_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).height(Math.round(cvjs_printPixelWidth));
				jQuery('#floorPlanCanvasObject_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).width(Math.round(cvjs_printPixelHeight));
				jQuery('#floorPlanCanvasObject_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).css("width",Math.round(cvjs_printPixelHeight));
				jQuery('#floorPlanCanvasObject_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).css("height",Math.round(cvjs_printPixelWidth));

			}
*/
			widthHeightFactorSVG = widthHeightFactorPaper;
			widthHeightFactorSVGless1 = false;

			// let us find the fulle extents of the viewbox

			if (printDebugFlag) jQuery('#floorPlanCanvasObject_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).show();

			var tempString1 = svgString.substring(svgString.indexOf("width=")+7);
			var tempString1 = tempString1.substring(0, tempString1.indexOf("\""));

			if (cvjs_debug) console.log("print bitmap1 "+tempString1);

			var boxWidth = Number(tempString1)
			var tempString2 = svgString.substring(svgString.indexOf("height=")+8);
			//console.log(tempString2);
			var tempString2 = tempString2.substring(0, tempString2.indexOf("\""));

			if (cvjs_debug) console.log("print bitmap2 "+tempString1);

			var boxHeight = Number(tempString2)
			if (printDebugFlag) console.log("1C "); //console.log("1C "+svgString);

			cvjs_ctx.canvas.height = Math.round(boxHeight);
			cvjs_ctx.canvas.width = Math.round(boxWidth);
			jQuery('#floorPlanCanvasObject_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).height(Math.round(boxHeight));
			jQuery('#floorPlanCanvasObject_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).width(Math.round(boxWidth));
			jQuery('#floorPlanCanvasObject_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).css("width",Math.round(boxWidth));
			jQuery('#floorPlanCanvasObject_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).css("height",Math.round(boxHeight));


			if (printDebugFlag) console.log("viewBox[cvjs_active_floorplan_div_nr].X "+viewBox[cvjs_active_floorplan_div_nr].X+" viewBox[cvjs_active_floorplan_div_nr].Y "+viewBox[cvjs_active_floorplan_div_nr].Y+" viewBoxWidth[cvjs_active_floorplan_div_nr] "+viewBoxWidth[cvjs_active_floorplan_div_nr]+" viewBoxHeight[cvjs_active_floorplan_div_nr]"+viewBoxHeight[cvjs_active_floorplan_div_nr]+" boxWidth "+boxWidth+" boxHeight "+boxHeight);

			cvjs_ctx.drawImage(cvjs_rasterImageLoaded, viewBox[cvjs_active_floorplan_div_nr].X, viewBox[cvjs_active_floorplan_div_nr].Y, viewBoxWidth[cvjs_active_floorplan_div_nr], viewBoxHeight[cvjs_active_floorplan_div_nr], 0, 0, boxWidth, boxHeight);
			cvjs_ctx.drawSvg(svgString, 0, 0, boxWidth, boxHeight);
			cvjs_callPrintAfter_canvg(widthHeightFactorSVGless1, widthHeightFactorSVG);
			
			

		}
		else{  // bitmap extents
			if (printDebugFlag) console.log("1D "); // console.log("1D before "+svgString);
	
				
			//cvjs_ctx.canvas.height = Math.round(cvjs_rasterImageLoaded.height);
			//cvjs_ctx.canvas.width = Math.round(cvjs_rasterImageLoaded.width);
			
			// we use the extents of the layers_all 
			
			var bbox;

			if (!cvjs_customLayerContentAdded){
				bbox = layers_all.getBBox();
				cvjs_ctx.canvas.height = bbox.height;
				cvjs_ctx.canvas.width = bbox.width*1.2;  // we have problems with scaling on Chrome

			}
			else{

				bbox = cvjs_customLayerContent.getBBox();
				
				console.log(bbox.x+" "+bbox.y+"  "+bbox.height+"  "+bbox.width);
			
				cvjs_ctx.canvas.height = Math.round(cvjs_rasterImageLoaded.height);
				
				if ((bbox.width+bbox.x)>cvjs_rasterImageLoaded.width)
					cvjs_ctx.canvas.width = Math.round(bbox.x+ bbox.width*1.5);   // we have problems with scaling on Chrome
				else
					cvjs_ctx.canvas.width = Math.round(cvjs_rasterImageLoaded.width);
				

				if ((bbox.height+bbox.y)>cvjs_rasterImageLoaded.height)
					cvjs_ctx.canvas.height = Math.round(bbox.y+ bbox.height*1.5);   // we have problems with scaling on Chrome
				else
					cvjs_ctx.canvas.height = Math.round(cvjs_rasterImageLoaded.height);

			}
			
			
			
			jQuery('#floorPlanCanvasObject_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).height(Math.round(cvjs_rasterImageLoaded.height));
			jQuery('#floorPlanCanvasObject_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).width(Math.round(cvjs_rasterImageLoaded.width));
			jQuery('#floorPlanCanvasObject_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).css("width",Math.round(cvjs_rasterImageLoaded.width));
			jQuery('#floorPlanCanvasObject_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).css("height",Math.round(cvjs_rasterImageLoaded.height));
			if (printDebugFlag) jQuery('#floorPlanCanvasObject_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).show();

			cvjs_ctx.drawImage(cvjs_rasterImageLoaded, 0, 0, cvjs_rasterImageLoaded.width, cvjs_rasterImageLoaded.height);
			cvjs_ctx.drawSvg(svgString, 0, 0, viewBoxWidth[cvjs_active_floorplan_div_nr], viewBoxHeight[cvjs_active_floorplan_div_nr]);
			cvjs_callPrintAfter_canvg(widthHeightFactorSVGless1, widthHeightFactorSVG)
		}



	}
	else{
		// vector drawing  - all zoom levels
		// vector drawing, either .js or pure SVG


		// new 2016-10-18
		if (cvjs_printOrientation.indexOf("landscape")==0){
			cvjs_ctx.canvas.height = Math.round(cvjs_printPixelHeight);
			cvjs_ctx.canvas.width = Math.round(cvjs_printPixelWidth);
			jQuery('#floorPlanCanvasObject_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).height(Math.round(cvjs_printPixelHeight));
			jQuery('#floorPlanCanvasObject_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).width(Math.round(cvjs_printPixelWidth));
			jQuery('#floorPlanCanvasObject_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).css("width",Math.round(cvjs_printPixelWidth));
			jQuery('#floorPlanCanvasObject_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).css("height",Math.round(cvjs_printPixelHeight));
		}else{
			cvjs_ctx.canvas.height = Math.round(cvjs_printPixelWidth);
			cvjs_ctx.canvas.width = Math.round(cvjs_printPixelHeight);
			jQuery('#floorPlanCanvasObject_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).height(Math.round(cvjs_printPixelWidth));
			jQuery('#floorPlanCanvasObject_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).width(Math.round(cvjs_printPixelHeight));
			jQuery('#floorPlanCanvasObject_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).css("width",Math.round(cvjs_printPixelHeight));
			jQuery('#floorPlanCanvasObject_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).css("height",Math.round(cvjs_printPixelWidth));

		}

	

		// NOTE: IE ONLY, but works on other platforms	
		// 2017-12-18	
		// we have to clean out references to cvjs namespace before passing over to canvg		
		while (svgStringOrg.indexOf("xmlns:cvjs")>-1){
			//xmlns:cvjs="http://www.tailormade.com/"
			var index1 = svgStringOrg.indexOf("xmlns:cvjs");
			var index2 = svgStringOrg.indexOf('\"', index1);
			var index3 = svgStringOrg.indexOf('\"', index2+1);
//			console.log("xmlns: "+index1+" "+index2+" "+index3);	
			svgStringOrg = svgStringOrg.substring(0,index1-1)+svgStringOrg.substring(index3 +1);					
		}

		// we have to clean out references to cvjs: namespace objects before passing over to canvg				
		while (svgStringOrg.indexOf("cvjs:")>-1){
			var index1 = svgStringOrg.indexOf("cvjs:");
			var index2 = svgStringOrg.indexOf('\"', index1);
			var index3 = svgStringOrg.indexOf('\"', index2+1);
//			console.log("cvjs: "+index1+" "+index2+" "+index3);	
			svgStringOrg = svgStringOrg.substring(0,index1-1)+svgStringOrg.substring(index3 +1);			
		}

		
			// we have to clean out references to cvjs: namespace objects before passing over to canvg				
		while (svgStringOrg.indexOf("xmlns:NS")>-1){
			var index1 = svgStringOrg.indexOf("xmlns:NS");
			var index2 = svgStringOrg.indexOf("NS", index1+8);
			//window.alert("NS1 "+index1);
			
			var index4 = svgStringOrg.indexOf(' ', index2+2);     // NSxx whitespace
            var index3 = svgStringOrg.indexOf('>', index2+2);	  // NSxx>		
			if (index3<index4) index4 = index3;   // we take the separator that comes first
	
//			console.log("before "+svgStringOrg.substring(index1-30, index4+30)+"  end of before");
//			var index3 = svgStringOrg.indexOf('\"', index2);
//			var index4 = svgStringOrg.indexOf('\"', index3+1);
//			console.log("NS1: "+index1+" "+index2+" "+index3+" "+index4+"  "+svgStringOrg.substring(index1-10,index4+10));	

			svgStringOrg = svgStringOrg.substring(0,index1-1)+svgStringOrg.substring(index4);
					
//			console.log("after "+svgStringOrg.substring(index1-30, index1+100)+" end of after");
		}
			
		if (printDebugFlag) console.log(svgStringOrg);// console.log("1C "+svgString);

		// first we remove multiple instances of the xmlns definition of SVG    2017-12-18
		var xml = svgStringOrg;
		xml = xml.replace(/xmlns=\"http:\/\/www.w3.org\/2000\/svg\"/g, '');
		svgStringOrg = xml;
		
		// then we add a single instance of the xmlns definition of SVG    2017-12-18
		var indexsvg = svgStringOrg.indexOf('<svg');     // NSxx whitespace
		svgStringOrg = svgStringOrg.substring(0,indexsvg+4)+" xmlns=\"http://www.w3.org/2000/svg\" "+svgStringOrg.substring(indexsvg+4);



//		var xml = svgStringOrg;
//		xml = xml.replace(/xmlns=\"http:\/\/www.w3.org\/2000\/svg\"/g, '');
//		svgStringOrg = xml;

//		if (printDebugFlag) window.alert(tempString1+cvjs_printPixelWidth+"; height:"+cvjs_printPixelHeight+tempString2);


		var tempString1 = svgStringOrg.substring(0, svgStringOrg.indexOf("width:")+6);
		var tempString2 = svgStringOrg.substring(svgStringOrg.indexOf("height:")+6);
		tempString2 = tempString2.substring(tempString2.indexOf(";"));
		// new 2016-10-18
		if (cvjs_printOrientation.indexOf("landscape")==0){
			svgStringOrg = tempString1+cvjs_printPixelWidth+"; height:"+cvjs_printPixelHeight+tempString2;
		}
		else{
			svgStringOrg = tempString1+cvjs_printPixelHeight+"; height:"+cvjs_printPixelWidth+tempString2;
		}
		// end new 2016-10-18

		widthHeightFactorSVG = widthHeightFactorPaper;  // widthHeightFactocvjs_rPaper[cvjs_active_floorplan_div_nr];
		widthHeightFactorSVGless1 = false;
		if (printDebugFlag) console.log("1C ");// console.log("1C "+svgString);
		svgString = svgStringOrg;

		if (printDebugFlag) console.log("ÅÅÅÅÅÅÅÅÅÅÅÅÅÅ\n\r"+svgString);// console.log("1C "+svgString);



		
		// in case of PRINT to SCALE we need to adjust the viewBox to the proper scale
		// 3.3.02f    3.3.02g
		if (cvjs_PrintToScale){
					
			var printScale = jQuery("#cvjs_printToScaleValue").val();
		
			if (printDebugFlag) window.alert("printScale "+printScale);
			
			var scaleSplit = printScale.split(":");
		
			//scale_factor = 1;
			
			var UserSelectedScale = 1;     // 1:10 -> 0.1 , 1:100 -> 0.01, etc.


		
			if (scaleSplit.length == 2){
			
					UserSelectedScale = scaleSplit[0]/scaleSplit[1] 
			
					if (printDebugFlag) window.alert("OK Scale:"+UserSelectedScale);			
			}
			else{

					if (printDebugFlag) window.alert("not valid scale");
					jQuery("#wait_looper_"+floorplan_div_Array[cvjs_active_floorplan_div_nr]).hide();
					
					return;					
			
			}
			
			
			
			index1 = svgStringOrg.indexOf("viewBox=");
			var temp_string_0 = svgStringOrg.substring(0, index1+9)
			var temp_string_1 = svgStringOrg.substring(index1+9);
			index1 = temp_string_1.indexOf("\"");
			var temp_string_2= temp_string_1.substring(index1);
			// parse viewbox
			var v_box = temp_string_1.substring(0, index1);
			var v_res = v_box.split(" ");
				
			//		window.alert("XX"+v_res[2]+"X X"+v_res[3]+"XX");
						
			/**		
					
			<text id="cadviewer_worldUnits" style="stroke-width: 0;">
			{ "globalOrigin": { "x": -50, "y" : -50}, 
									"units": "mm",
									"svgToWorldUnits": 25
			}
			</text>
			<text id="cadviewer_drawingCoordinates" style="stroke-width: 0;">
			{ "DWG": 
				{ "lowerLeft": { "x": 0, "y" : 0}, 
				  "upperRight": { "x": 100, "y" : 100} 
				},
			 "SVG": 
				{ "lowerLeft": { "x": 0, "y" : 2500}, 
				  "upperRight": { "x": 2500, "y" : 0} 
				},
			 "Drawing Height": 2500
			}
			</text>


				cvjs_printPaperSize = "A4";
				cvjs_printPaperWidth_mm = 297;   // A4        - landscape
				cvjs_printPaperHeight_mm = 210;   // A4
				
			multiPages[cvjs_active_floorplan_div_nr].currentPage		

			var dwgDx = cvjs_drawingCoordinates[page].DWG.upperRight.x - cvjs_drawingCoordinates[page].DWG.lowerLeft.x;

			var dwgDy = cvjs_drawingCoordinates[page].DWG.upperRight.y - cvjs_drawingCoordinates[page].DWG.lowerLeft.y;

			**/		

				// adjust length and width according to scale

			var dwgDx = cvjs_drawingCoordinates[multiPages[cvjs_active_floorplan_div_nr].currentPage].DWG.upperRight.x - cvjs_drawingCoordinates[multiPages[cvjs_active_floorplan_div_nr].currentPage].DWG.lowerLeft.x;
			
			// NOTE!!!!!, here we have to adjust to the actual unit in original drawing, if mm, cm, in, feet, m, etc. 
			
			if (cvjs_units[cvjs_active_floorplan_div_nr] == "mm") {}; // do nothing
			if (cvjs_units[cvjs_active_floorplan_div_nr] == "cm") { dwgDx*=10; }; 
			if (cvjs_units[cvjs_active_floorplan_div_nr] == "m") { dwgDx*=1000; }; 
			if (cvjs_units[cvjs_active_floorplan_div_nr] == "in") { dwgDx*=25.4; }; 
			if (cvjs_units[cvjs_active_floorplan_div_nr] == "feet") { dwgDx*=304.8; }; 
		
		
			//  we assume that the shortest side of the paper termines the scale
		
			// we have to adjust to vertical or horizontal and change the width/height accordingly, due to paper output margins
			
			
			var scale_factor = 1;

			// we adjust as we remove 40mm in output print

			if (cvjs_printOrientation.indexOf("landscape")==0)
				scale_factor = (cvjs_printPaperHeight_mm-40)/dwgDx; 

			if (cvjs_printOrientation.indexOf("portrait")==0)	
				scale_factor = (cvjs_printPaperHeight_mm-40.0)/dwgDx; 
			
					
			
			scale_factor = scale_factor / UserSelectedScale;
			
			if (printDebugFlag) window.alert(cvjs_printOrientation+"  "+dwgDx+" cvjs_printPaperHeight_mm="+cvjs_printPaperHeight_mm+"  "+scale_factor);
						
			v_res[2] = v_res[2]*scale_factor;
			v_res[3] = v_res[3]*scale_factor;
				
			var vbox_string = v_res[0]+" "+v_res[1]+" "+v_res[2]+" "+v_res[3];
			// build the viewbox back together
				
			// build the svgString back together
					
			svgString = temp_string_0+vbox_string+temp_string_2;		
				// here we have to adjust depending on horizontal or vertical
					
			if (printDebugFlag) console.log("ÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖ\r\n")		
			if (printDebugFlag) console.log("ÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖ\r\n")		
			if (printDebugFlag) console.log("ÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖ\r\n")		
			if (printDebugFlag) console.log(svgString);				
					// pass over as print object
		}
		// up-up-up
		// 3.3.02f    3.3.02g
		// 3.3.02f    3.3.02g

		
	
		if (printDebugFlag) jQuery('#floorPlanCanvasObject_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).show();
		
if (cvjs_debug) console.log("floorPlanCanvasObject "+floorplan_div_Array[cvjs_active_floorplan_div_nr]+" "+svgString);		
		
		canvg('floorPlanCanvasObject_'+floorplan_div_Array[cvjs_active_floorplan_div_nr], svgString, { renderCallback: function() { cvjs_callPrintAfter_canvg(widthHeightFactorSVGless1, widthHeightFactorSVG);}} );
	}


	
}



function cvjs_callPrintAfter_canvg(widthHeightFactorSVGless1, widthHeightFactorSVG){

	if (printDebugFlag) console.log("before canvg");

	// new 2018-02-05
	var img = new Image;

	// 3.3.01e
	if (printDebugFlag) { console.log("no return from cvjs_callPrintAfter_canvg");}

		
//  let us move this to the loading of JPG/PNG/GIG image, it can be this source which is not allowed to me moved cross domaing
//	img.crossOrigin = "Anonymous";
		
		
	var canv = document.getElementById("floorPlanCanvasObject_"+floorplan_div_Array[cvjs_active_floorplan_div_nr]);
	var cvjs_ctx = jQuery("#floorPlanCanvasObject_"+floorplan_div_Array[cvjs_active_floorplan_div_nr])[0].getContext('2d');

	
	var canvw = canv.width;
	var canvh = canv.height;
	
		
	
	// FILL SPACES	
	// Identify all objects on the System ID Layer
	// Find the insertion point of each object
	// translate that insertion point into flood-fill
	// 3.3.01f
	if (cvjs_spaceFloodFill){
		// fill spaces
		cvjs_floodfill(cvjs_ctx, canvw, canvh, widthHeightFactorSVG, widthHeightFactorSVGless1);

		// extract png
		img = canv.toDataURL("image/png");

		// save png as html random name
		// 3.3.01f
		cvjs_serverSavePrintModeController = 6;
		
		var random = Math.random().toString().substring(2,5);
		var image_fileName = 'floodFill_'+random+'.png';
		
		sendServerStringToServer(img, image_fileName);

		
		// call php script to make png file
		
		// when return, call image tracer to make svg
		
		// edit svg to remove extra Z 
		
		// transform svg to drawing svg coordinates
		
		// make xml to dwgmerge2019/
		
		// call dwgmerge2019/
		
		// reload after -hl -la conversion calculation
			
		
		return;
	}
	// we hide if not floodfill
	if (printDebugFlag) jQuery('#floorPlanCanvasObject_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).hide();

	
	
	if (cvjs_printGrayscale){
		var imageData = cvjs_ctx.getImageData(0, 0, canv.width, canv.height);
		var data = imageData.data;
		for(var i = 0; i < data.length; i += 4) {
		  var brightness = 0.34 * data[i] + 0.5 * data[i + 1] + 0.16 * data[i + 2];
		  // red
		  data[i] = brightness;
		  // green
		  data[i + 1] = brightness;
		  // blue
		  data[i + 2] = brightness;
		}
		// overwrite original image
		cvjs_ctx.putImageData(imageData, 0, 0);
	}

//	var canv = document.getElementById("floorPlanCanvasObject");

	img = canv.toDataURL("image/png");
	// 2018-02-05	
//	var img = canv.toDataURL("image/png");

	

	if (printDebugFlag) console.log("Image canvas element width "+canv.width+" height "+canv.height);
	// here we recalculate the width/height factor to be based on the canvas element
	widthHeightFactorSVG  = canv.width/canv.height;

	if (widthHeightFactorSVG<1) widthHeightFactorSVGless1 = true; else widthHeightFactorSVGless1 = false;


	var translate = (cvjs_printPixelWidth - cvjs_printPixelHeight)/2;
	if (cvjs_printOrientation.indexOf("landscape")==0){
		cvjs_printImagePaperSizeRotated(img, screen.width*0.5, screen.height*0.75, widthHeightFactorSVGless1, widthHeightFactorSVG );  // this is the size of the page display
	}
	else{
		cvjs_printImagePaperSize(img, screen.width*0.5, screen.height*0.75, widthHeightFactorSVGless1, widthHeightFactorSVG );  // this is the size of the page display
	}
}


function cvjs_printImagePaperSizeRotated(image, wwidth, wheight, widthHeightFactorSVGless1, widthHeightFactorSVG ){

		var is_explorer = (navigator.userAgent.indexOf('MSIE') > -1) || (navigator.userAgent.indexOf('Trident') > -1);
		var location = window.location.href;  //console.log(location);
		var is_local= false;
		if (location.indexOf("file:")>-1) is_local = true;
		var printWindow;

		if (is_local){ // if local just make own window content
			//console.log("local rot");
			printWindow = window.open('', 'CADViewer JS - Print', 'height='+wheight+',width='+wwidth);
			printOnLoadedDocumentRotated(printWindow, image, widthHeightFactorSVGless1, widthHeightFactorSVG, true );
		}
		else{ // if web upload template so there can be a onload return call
			//console.log("web rot");
			printOnLoadedDocumentRotated_Server(image, widthHeightFactorSVGless1, widthHeightFactorSVG);
		}
}


function cvjs_printImagePaperSize(image, wwidth, wheight, widthHeightFactorSVGless1, widthHeightFactorSVG ){

		var is_explorer = (navigator.userAgent.indexOf('MSIE') > -1) || (navigator.userAgent.indexOf('Trident') > -1);
		var location = window.location.href;  //console.log(location);
		var is_local= false;
		if (location.indexOf("file:")>-1) is_local = true;
		var printWindow;

		if (is_local){ // if local just make own window content
			//console.log("local");
			printWindow = window.open('', 'CADViewer JS - Print', 'height='+wheight+',width='+wwidth);
			printOnLoadedDocument(printWindow, image, widthHeightFactorSVGless1, widthHeightFactorSVG, true );
		}
		else{ // if web upload template so there can be a onload return call
			//console.log("web ");
			printOnLoadedDocument_Server(image, widthHeightFactorSVGless1, widthHeightFactorSVG);
		}

}


function printOnLoadedDocument(printWindow, image, widthHeightFactorSVGless1, widthHeightFactorSVG, local ){

if (printDebugFlag) window.alert("printOnLoadedDocument");

	var is_explorer = (navigator.userAgent.indexOf('MSIE') > -1) || (navigator.userAgent.indexOf('Trident') > -1);

	printWindow.document.write('<!DOCTYPE html><html><head><title>CADViewer JS - Print</title>');
// style settings are overwriting the wwidth, wheight controls ....
	printWindow.document.write('<style>');
	printWindow.document.write(' body {');

	// portrait mode

	var pheight =  cvjs_printPaperWidth_mm -10;   // mm landscape long side
	var pwidth =  cvjs_printPaperHeight_mm  -10;  // mm landscape short side

	var translate = (cvjs_printPaperWidth_mm - cvjs_printPaperHeight_mm)/2;

	var ph1 = pheight;
	var pw1 = pwidth;

	printWindow.document.write('     height: '+ph1+'mm;');  // we make the height based on US letter 279,4mm minus 10mm
	printWindow.document.write('     width: '+pw1+'mm;');   // we make the width based on A4 210   US letter 215.9mm
	printWindow.document.write('     /* to centre page on screen*/');
	printWindow.document.write('     margin-left: auto;');
	printWindow.document.write('     margin-right: auto;');
	if (widthHeightFactorSVGless1){
		printWindow.document.write('     transform: translate(0mm ,0mm);');
		if (printDebugFlag)	console.log('less1 no rot    transform: translate(0mm ,0mm);');
	}else{
		printWindow.document.write('     transform: translate(0mm ,0mm);');
		if (printDebugFlag)	console.log('over1 no rot    transform: translate(0mm ,0mm);');
	}
	printWindow.document.write(' }');
	printWindow.document.write(' </style> ');
	printWindow.document.write('</head><body><img src=\'');
	printWindow.document.write(image);

	if (widthHeightFactorSVGless1){

		if (printDebugFlag)	console.log('b1 a \'  style=\"height: auto; width:'+(pw1-40)+'mm;\" /></body></html>');
		printWindow.document.write('\'  style=\"height: auto; width:'+(pw1-40)+'mm;\" /></body></html>');
	}
	else{
//		if (printDebugFlag)	console.log('b1 b   \'  style=\"height:'+((pw1-10)/widthHeightFactorSVG)+'mm; width: '+(pw1-10)+'mm;\" /></body></html>');
//		printWindow.document.write('\'  style=\"height:'+((pw1-10)/widthHeightFactorSVG)+'mm; width: '+(pw1-10)+'mm;\" /></body></html>');
		if (printDebugFlag)	console.log('b1 b   \'  style=\"height: : auto; width: '+(pw1-10)+'mm;\" /></body></html>');
		printWindow.document.write('\'  style=\"height: auto; width: '+(pw1-10)+'mm;\" /></body></html>');
	}
	printWindow.document.close(); //this seems to be the thing doing the trick
	printWindow.focus();
	printWindow.print();
	if (local) printWindow.close();
	if (!local && is_explorer) printWindow.close();

}



function printOnLoadedDocumentRotated(printWindow, image, widthHeightFactorSVGless1, widthHeightFactorSVG, local ){

if (printDebugFlag) window.alert("printOnLoadedDocumentRotated");


	var is_explorer = (navigator.userAgent.indexOf('MSIE') > -1) || (navigator.userAgent.indexOf('Trident') > -1);

	printWindow.document.write('<!DOCTYPE html><html><head><title>CADViewer JS - Print</title>');
	printWindow.document.write('<style>');
	printWindow.document.write(' body {');

	var pheight =  cvjs_printPaperWidth_mm -10;   // mm  landscape long side
	var pwidth =  cvjs_printPaperHeight_mm -10;  // mm  landscape short side

	var translate = (cvjs_printPaperWidth_mm - cvjs_printPaperHeight_mm)/2;

	//translate = 0;

	var ph1 = pheight;
	var pw1 = pwidth;

	printWindow.document.write('     height: '+ph1+'mm;');  // we make the height based on US letter 279,4mm minus 10mm
	printWindow.document.write('     width: '+pw1+'mm;');   // we make the width based on A4 210   US letter 215.9mm

	printWindow.document.write('     /* to centre page on screen*/');

	printWindow.document.write('     margin-left: auto;');
	printWindow.document.write('     margin-right: auto;');

	printWindow.document.write('     -webkit-transform: rotate(90deg);');
	printWindow.document.write('     -moz-transform: rotate(90deg);');

	if (widthHeightFactorSVGless1){
		printWindow.document.write('     transform: rotate(90deg) translate('+(-translate/2)+'mm, '+(translate)+'mm);');
		if (printDebugFlag)	console.log('less1  rot          transform: rotate(90deg) translate('+(-translate/2)+'mm, '+(translate)+'mm);');
	}else{
		printWindow.document.write('     transform: rotate(90deg) translate('+(-translate/2)+'mm, '+(translate)+'mm);');
		if (printDebugFlag)	console.log('over1  rot          transform: rotate(90deg) translate('+(-translate/2)+'mm, '+(translate)+'mm);');
	}
	printWindow.document.write(' };');
	printWindow.document.write(' </style> ');
	printWindow.document.write('</head><body ><div id=\"imagetag\"><img src=\'');

	printWindow.document.write(image);

	if (widthHeightFactorSVGless1){

		if (printDebugFlag)	console.log('b2 a \'  style=\"height: auto; width:'+(pw1-40)+'mm;\" /></body></html>');
		printWindow.document.write('\'  style=\"height: auto; width:'+(pw1-40)+'mm;\" /></body></html>');

	}
	else{

		var widthHeightFactorPaper = cvjs_printPixelWidth/cvjs_printPixelHeight;
		//console.log(widthHeightFactocvjs_rPaper[cvjs_active_floorplan_div_nr]);

		if (widthHeightFactorSVG>widthHeightFactorPaper){

			if (printDebugFlag)	console.log('b2 b 1 \'  style=\"height: auto; width:'+(ph1-40)+'mm;\" /></body></html>');
			printWindow.document.write('\'  style=\"height: auto; width:'+(ph1-40)+'mm;\" /></body></html>');

		}
		else{

			if (printDebugFlag)	console.log('b2 b 2 \'  style=\"height: auto; width:'+(ph1-40)+'mm;\" /></body></html>');
			printWindow.document.write('\'  style=\"height: auto; width:'+(ph1-40)+'mm;\" /></body></html>');

		}

	}
	printWindow.document.close(); //this seems to be the thing doing the trick
	printWindow.focus();
	printWindow.print();
	if (local) printWindow.close();
}



var cvjs_removePrintObject = true;
var cvjs_javaScriptsAbsoluteFolder = "../app/js";


/**
 * Set flag to clean temporary print object after use. Requires the cvjs_setServerHandlersPath() general php folder location to be defined with an absolute path
 * @param {boolean} flag - true for remove, false to leave as is
 */

function cvjs_removePrintObjectAfterPrint(flag){

	cvjs_removePrintObject = flag;

}


var JQ_absoluteFolder = false;


/**
 * Set javascripts absolute folder url path. Used for print object to find scripts folder to access jquery and ajax
 * @param {string} folder - absolute jQuery javascripts folder url path
 */

function cvjs_setJavaScriptsAbsoluteFolder(folder){

	cvjs_javaScriptsAbsoluteFolder = folder;
	JQ_absoluteFolder = false;


}



/**
 * Set javascripts absolute folder and jQuery url path. Used for print object to find scripts folder to access jquery and ajax
 * @param {string} folder - absolute jQuery javascripts folder url path and name
 */

function cvjs_setJavaScriptsJQ_AbsoluteFolder(folder){

	cvjs_javaScriptsAbsoluteFolder = folder;
	JQ_absoluteFolder = true;

}





function printOnLoadedDocumentRotated_Server(image, widthHeightFactorSVGless1, widthHeightFactorSVG){



	//3.3.02f  // 3.3.02g
	if (cvjs_PrintToScale){
		printOnLoadedDocumentRotated_Server_PrintToScale(image, widthHeightFactorSVGless1, widthHeightFactorSVG);
		return;
	}


	// in the case of batch print and stickynote creation, we send image directly to server
	if (cvjs_serverSavePrintModeController != 0){
		sendServerStringToServer(image, cvjs_serverSavePrintMode_serverPath+cvjs_serverSavePrintMode_image_fileName);
		return;
	}

if (printDebugFlag) window.alert("printOnLoadedDocumentRotated_Server");
	
		
	// standard processing of single page browser pop-up page print of canvas

	var temp_fileName = Math.floor((Math.random() * 1000) + 1);

	var	serverString = "";

	serverString = '<!DOCTYPE html><html><head><title>CADViewer JS - Print</title>';
	
	if (cvjs_removePrintObject){

		temp_fileName = Math.floor((Math.random() * 100000) + 1);

		var file_and_ext = "";
		if (cvjs_printObjectPathRelativeFlag){
			file_and_ext = cvjs_printObjectPath+temp_fileName+".html";
		}
		else{
			file_and_ext = cvjs_printObjectPathAbsoluteServer+temp_fileName+".html";
		}

		var finalUrl = cvjs_serverHandlersPath+cvjs_serverDeleteFileController+'?file='+encodeURIComponent(file_and_ext);


		if (JQ_absoluteFolder)
			serverString += '<script src="'+cvjs_javaScriptsAbsoluteFolder+'" type="text/javascript"></script>';
		else
			serverString += '<script src="'+cvjs_javaScriptsAbsoluteFolder+'/jquery-2.2.3.js" type="text/javascript"></script>';

		serverString += '<script type="text/javascript">';

		serverString += 'jQuery(window).on(\'beforeunload\', function ()';
		serverString += '{';
		serverString += 'jQuery.ajax({';
		serverString += 'url:\''+finalUrl+'\',';
		serverString += 'cache: false,';
		serverString += 'success: function(html){';
		serverString += '}';
		serverString += '});';
		serverString += '});';

		serverString += 'jQuery(window).on(\'unload\', function ()';
		serverString += '{';
		serverString += 'jQuery.ajax({';
		serverString += 'url:\''+finalUrl+'\',';
		serverString += 'cache: false,';
		serverString += 'success: function(html){';
		serverString += '}';
		serverString += '});';
		serverString += '});';

//		serverString += 'window.onbeforeunload = function () {window.open(\"http://www.tailormade.com\");return undefined;};';
		serverString += 'window.onbeforeunload = function () {';
		serverString += 'jQuery.ajax({';
		serverString += 'url:\''+finalUrl+'\',';
		serverString += 'cache: false,';
		serverString += 'success: function(html){';
		serverString += '}';
		serverString += '});';
		serverString += 'return undefined; }; ';

		serverString +='</script>';
	}

	
	// 2018-04-16 change into media - print control

	var is_chrome = navigator.userAgent.indexOf('Chrome') > -1;
	var is_firefox = navigator.userAgent.indexOf('Firefox') > -1;
	var is_explorer = (navigator.userAgent.indexOf('MSIE') > -1) || (navigator.userAgent.indexOf('Trident') > -1);

	var is_safari = navigator.userAgent.indexOf("Safari") > -1;
	var is_Opera = navigator.userAgent.indexOf("Presto") > -1;

	var is_Edge = navigator.userAgent.indexOf("Edge") > -1;

	if (is_Edge) is_chrome = false;
	
	

	var pheight =  cvjs_printPaperWidth_mm;   //10;   // mm  landscape long side
	var pwidth =  cvjs_printPaperHeight_mm;   //10;  // mm  landscape short side
	
	var ph1 = pheight;
	var pw1 = pwidth;


//window.alert(navigator.userAgent+"  "+is_chrome);
	
	if (is_chrome){
	
		serverString +="<style type=\"text/css\" media=\"print\">";
	 
	//window.alert("@media print "); 
	 
		serverString +="@page { "    					// works for Chrome, perfectly
		serverString +="    size: landscape";


//		serverString +="@media print { "             	// does not work in landscape for others
//		serverString +="    size: landscape";
			
		serverString +="}";
		serverString +="body {"; 
		serverString +="writing-mode: horizontal-tb";
		serverString +="}";
		serverString +="</style>";
	
	
	}
	else{
	
		serverString +='<style>';
		serverString +=' body {';

	//	    depressed 	// 2018-04-16 change into media - print control			
		
		var translate = (cvjs_printPaperWidth_mm - cvjs_printPaperHeight_mm)/2;
		//translate = 0;

//		window.alert("widthHeightFactorSVGless1 "+widthHeightFactorSVGless1+ "  translate "+translate);
			

		serverString +='     height: '+ph1+'mm;';  // we make the height based on US letter 279,4mm minus 10mm
		serverString +='     width: '+pw1+'mm;';   // we make the width based on A4 210   US letter 215.9mm
		serverString +='     /* to centre page on screen*/';

		serverString +='     margin-left: 10mm;';
		serverString +='     margin-right: 10mm;';
		serverString +='     margin-top: 10mm;';
		serverString +='     margin-bottom: 10mm;';

	//	serverString +='     -webkit-transform: rotate(90deg);';
	//	serverString +='     -moz-transform: rotate(90deg);';

		if (widthHeightFactorSVGless1){
			serverString +='     transform: rotate(90deg) translate('+(-translate/2)+'mm, '+(translate)+'mm);';
			if (printDebugFlag)	console.log('less1  rot          transform: rotate(90deg) translate('+(-translate/2)+'mm, '+(translate)+'mm);');
		}else{
	///		serverString +='     transform: rotate(90deg) translate('+(-translate/2*1.1)+'mm, '+(translate*1.4)+'mm);';
	//		serverString +='     transform: rotate(90deg) scale(0.9) translate('+(-translate/2*1.4)+'mm, '+(translate*1.4)+'mm);';
	//		serverString +='     -webkit-transform: rotate(90deg) translate('+(-translate/2)+'mm, '+(translate)+'mm);';
			serverString +='     transform: translate('+(-translate*1.5)+'mm, '+(-translate*1.2)+'mm) rotate(90deg); translate('+(+translate)+'mm, '+(+translate)+'mm) ';
			if (printDebugFlag)	console.log('over1  rot          transform: rotate(90deg) translate('+(-translate/2)+'mm, '+(translate)+'mm);');
		}
		serverString +=' };';
		serverString +=' </style> ';
	//*/

	}



	serverString +='</head><body onload=\"window.print();\"><div id=\"imagetag\"><img src=\'';
	serverString +=image;

	if (widthHeightFactorSVGless1){

		if (printDebugFlag)	console.log('b2 svg less 1 a  (pw1-40)    \'  style=\"height: auto; width:'+(pw1-40)+'mm;\" /></body></html>');
		serverString +='\'  style=\"height: auto; width:'+(pw1-40)+'mm;\" /></body></html>';

	}
	else{

		var widthHeightFactorPaper = cvjs_printPixelWidth/cvjs_printPixelHeight;
		//console.log(widthHeightFactocvjs_rPaper[cvjs_active_floorplan_div_nr]);

		if (widthHeightFactorSVG>widthHeightFactorPaper){

			if (printDebugFlag)	console.log('b2 b 1 (ph1-40) 40 removed  \'  style=\"height: auto; width:'+(ph1)+'mm;\" /></body></html>');
			serverString +='\'  style=\"height: auto; width:'+(ph1)+'mm;\" /></body></html>';

		}
		else{

//			if (printDebugFlag)	console.log('b2 b 2 (ph1-40) \'  style=\"height: auto; width:'+(ph1-40)+'mm;\" /></body></html>');
//			serverString +='\'  style=\"height: auto; width:'+(ph1-40)+'mm;\" /></body></html>';
		
			if (printDebugFlag)	console.log('b2 b 2 (ph1-40) \'  style=\"height: auto; width:'+(ph1-40)+'mm;\" /></body></html>');
			
//window.alert(ph1);			
			serverString +='\'  style=\"height: auto; width:'+(ph1-40)+'mm;\" /></body></html>';	
		}
	}
	sendServerStringToServer(serverString, temp_fileName);
}




// 3.3.02f    3.3.02g  - printToScale

function printOnLoadedDocumentRotated_Server_PrintToScale(image, widthHeightFactorSVGless1, widthHeightFactorSVG){


if (printDebugFlag) window.alert("printOnLoadedDocumentRotated_Server_ printToScale");


	// in the case of batch print and stickynote creation, we send image directly to server
	if (cvjs_serverSavePrintModeController != 0){
		sendServerStringToServer(image, cvjs_serverSavePrintMode_serverPath+cvjs_serverSavePrintMode_image_fileName);
		return;
	}

		
	// standard processing of single page browser pop-up page print of canvas

	var temp_fileName = Math.floor((Math.random() * 1000) + 1);

	var	serverString = "";

	serverString = '<!DOCTYPE html><html><head><title>CADViewer JS - Print</title>';
	
	if (cvjs_removePrintObject){

		temp_fileName = Math.floor((Math.random() * 100000) + 1);

		var file_and_ext = "";
		if (cvjs_printObjectPathRelativeFlag){
			file_and_ext = cvjs_printObjectPath+temp_fileName+".html";
		}
		else{
			file_and_ext = cvjs_printObjectPathAbsoluteServer+temp_fileName+".html";
		}

		var finalUrl = cvjs_serverHandlersPath+cvjs_serverDeleteFileController+'?file='+encodeURIComponent(file_and_ext);


		if (JQ_absoluteFolder)
			serverString += '<script src="'+cvjs_javaScriptsAbsoluteFolder+'" type="text/javascript"></script>';
		else
			serverString += '<script src="'+cvjs_javaScriptsAbsoluteFolder+'/jquery-2.2.3.js" type="text/javascript"></script>';

		serverString += '<script type="text/javascript">';

		serverString += 'jQuery(window).on(\'beforeunload\', function ()';
		serverString += '{';
		serverString += 'jQuery.ajax({';
		serverString += 'url:\''+finalUrl+'\',';
		serverString += 'cache: false,';
		serverString += 'success: function(html){';
		serverString += '}';
		serverString += '});';
		serverString += '});';

		serverString += 'jQuery(window).on(\'unload\', function ()';
		serverString += '{';
		serverString += 'jQuery.ajax({';
		serverString += 'url:\''+finalUrl+'\',';
		serverString += 'cache: false,';
		serverString += 'success: function(html){';
		serverString += '}';
		serverString += '});';
		serverString += '});';

//		serverString += 'window.onbeforeunload = function () {window.open(\"http://www.tailormade.com\");return undefined;};';
		serverString += 'window.onbeforeunload = function () {';
		serverString += 'jQuery.ajax({';
		serverString += 'url:\''+finalUrl+'\',';
		serverString += 'cache: false,';
		serverString += 'success: function(html){';
		serverString += '}';
		serverString += '});';
		serverString += 'return undefined; }; ';

		serverString +='</script>';
	}

	
	// 2018-04-16 change into media - print control

	var is_chrome = navigator.userAgent.indexOf('Chrome') > -1;
	var is_firefox = navigator.userAgent.indexOf('Firefox') > -1;
	var is_explorer = (navigator.userAgent.indexOf('MSIE') > -1) || (navigator.userAgent.indexOf('Trident') > -1);

	var is_safari = navigator.userAgent.indexOf("Safari") > -1;
	var is_Opera = navigator.userAgent.indexOf("Presto") > -1;

	var is_Edge = navigator.userAgent.indexOf("Edge") > -1;

	if (is_Edge) is_chrome = false;
	
	

	var pheight =  cvjs_printPaperWidth_mm;   
	var pwidth =  cvjs_printPaperHeight_mm;  
	
	var ph1 = pheight;
	var pw1 = pwidth;
	
if (printDebugFlag) window.alert(navigator.userAgent+" 3.3.02f g "+is_chrome+" ph1="+ph1+"  pw1="+pw1);


	// Fixed width/height, so any ajustment has to be scaled with Square(2), A size paper	
	// what happens if on US papersizes?
	
	// 3.3.02f    3.3.02g  - this relative measure is not sqrt 2 when on US paper sizes
	var square_two = cvjs_printPaperWidth_mm/cvjs_printPaperHeight_mm;

	var size_factor = 40;

	if (is_chrome){
		
		serverString +="<style type=\"text/css\" media=\"print\">";	 
		serverString +="@page { "    					// works for Chrome, perfectly
		serverString +="    size: landscape";			
		serverString +="}";
		serverString +="body {"; 
		serverString +="writing-mode: horizontal-tb";
		serverString +="}";
		serverString +="</style>";

	}
	else{
	
		if (is_firefox ){
			square_two = 1;
			size_factor = 0;
		}

		
		serverString +='<style>';
		serverString +=' body {';

	//	    depressed 	// 2018-04-16 change into media - print control			
		
		var translate = (cvjs_printPaperWidth_mm - cvjs_printPaperHeight_mm)/2;
		//translate = 0;

//		window.alert("widthHeightFactorSVGless1 "+widthHeightFactorSVGless1+ "  translate "+translate);
			
		
		serverString +='     height: '+ph1+'mm;';  // we make the height based on US letter 279,4mm minus 10mm
		serverString +='     width: '+pw1+'mm;';   // we make the width based on A4 210   US letter 215.9mm

		serverString +='     /* to centre page on screen*/';

		serverString +='     margin-left: 10mm;';     // 3.3.02g
		serverString +='     margin-right: 10mm;';
		serverString +='     margin-top: 10mm;';
		serverString +='     margin-bottom: 10mm;';

	//	serverString +='     -webkit-transform: rotate(90deg);';
	//	serverString +='     -moz-transform: rotate(90deg);';
	
		if (widthHeightFactorSVGless1){
			serverString +='     transform: rotate(90deg) translate('+(-translate/2)+'mm, '+(translate)+'mm);';
			if (printDebugFlag) console.log('less1  rot          transform: rotate(90deg) translate('+(-translate/2)+'mm, '+(translate)+'mm);');
		}else{
	///		serverString +='     transform: rotate(90deg) translate('+(-translate/2*1.1)+'mm, '+(translate*1.4)+'mm);';
	//		serverString +='     transform: rotate(90deg) scale(0.9) translate('+(-translate/2*1.4)+'mm, '+(translate*1.4)+'mm);';
	//		serverString +='     -webkit-transform: rotate(90deg) translate('+(-translate/2)+'mm, '+(translate)+'mm);';
			serverString +='     transform: translate('+(-translate*1.5)+'mm, '+(-translate*1.2)+'mm) rotate(90deg); translate('+(+translate)+'mm, '+(+translate)+'mm) ';
			if (printDebugFlag)	console.log('over1  rot          transform: rotate(90deg) translate('+(-translate/2)+'mm, '+(translate)+'mm);');
		}
		serverString +=' };';
		serverString +=' </style> ';
	//*/
	
	}

	
	
	serverString +='</head><body onload=\"window.print();\"><div id=\"imagetag\"><img src=\'';
	serverString +=image;

	
	if (is_Edge){
		pw1 = pheight;
		ph1 = pwidth;
	}
		
	
	// we have different factors depending on platform
	
	
	if (widthHeightFactorSVGless1){
		if (printDebugFlag)	window.alert('print scale b2 svg less 1 a  (pw1-40)    \'  style=\"height: '+(pw1-size_factor)+'mm ; width:'+(ph1-size_factor*square_two)+'mm;\" /></body></html>');
		serverString +='\'  style=\"height: '+(pw1-size_factor)+'mm ; width:'+(ph1-size_factor*square_two)+'mm;\" /></body></html>';
	}
	else{
		var widthHeightFactorPaper = cvjs_printPixelWidth/cvjs_printPixelHeight;
		if (widthHeightFactorSVG>widthHeightFactorPaper){
			if (printDebugFlag)	window.alert('print scale b2 b 1 (ph1-40) 40 removed  \'  style=\"height: '+(pw1-size_factor)+'mm ; width:'+(ph1-size_factor*square_two)+'mm;\" /></body></html>');
			serverString +='\'  style=\"height: '+(pw1-40)+'mm ; width:'+(ph1-40*square_two)+'mm;\" /></body></html>';
		}
		else{
			if (printDebugFlag)	window.alert('print scale b2 b 2 (ph1-40) \'  style=\"height: '+(pw1-size_factor)+'mm ; width:'+(ph1-size_factor*square_two)+'mm;\" /></body></html>');				
			serverString +='\'  style=\"height: '+(pw1-size_factor)+'mm ; width:'+(ph1-size_factor*square_two)+'mm;\" /></body></html>';
		}
	}			
	
	sendServerStringToServer(serverString, temp_fileName);
}


// 3.3.02f    3.3.02g - printToScale





function printOnLoadedDocument_Server(image, widthHeightFactorSVGless1, widthHeightFactorSVG){


if (printDebugFlag) window.alert("printOnLoadedDocument_Server");


	// in the case of batch print and stickynote creation, we send image directly to server
	if (cvjs_serverSavePrintModeController != 0){
		sendServerStringToServer(image, cvjs_serverSavePrintMode_serverPath+cvjs_serverSavePrintMode_image_fileName);
		return;
	}

	
	// standard processing of single page browser pop-up page print of canvas

	var temp_fileName = Math.floor((Math.random() * 1000) + 1);

	var	serverString = "";

	serverString = '<!DOCTYPE html><html><head><title>CADViewer JS - Print</title>';

	if (cvjs_removePrintObject){

		temp_fileName = Math.floor((Math.random() * 100000) + 1);

		var file_and_ext = "";
		if (cvjs_printObjectPathRelativeFlag){
			file_and_ext = cvjs_printObjectPath+temp_fileName+".html";
		}
		else{
			file_and_ext = cvjs_printObjectPathAbsoluteServer+temp_fileName+".html";
		}

		var finalUrl = cvjs_serverHandlersPath+cvjs_serverDeleteFileController+'?file='+encodeURIComponent(file_and_ext);

		if (JQ_absoluteFolder)
			serverString += '<script src="'+cvjs_javaScriptsAbsoluteFolder+'" type="text/javascript"></script>';
		else
			serverString += '<script src="'+cvjs_javaScriptsAbsoluteFolder+'/jquery-2.2.3.js" type="text/javascript"></script>';

		serverString += '<script type="text/javascript">';

		serverString += 'jQuery(window).on(\'beforeunload\', function ()';
		serverString += '{';
		serverString += 'jQuery.ajax({';
		serverString += 'url:\''+finalUrl+'\',';
		//serverString += 'cache: true,';
		serverString += 'type: \'GET\',';
		serverString += 'async: false,';
		serverString += 'success: function(html){';
		serverString += '}';
		serverString += '});';
		serverString += '});';

		serverString += 'jQuery(window).on(\'unload\', function ()';
		serverString += '{';
		serverString += 'jQuery.ajax({';
		serverString += 'url:\''+finalUrl+'\',';
		//serverString += 'cache: true,';
		serverString += 'type: \'GET\',';
		serverString += 'async: false,';
		serverString += 'success: function(html){';
		serverString += '}';
		serverString += '});';
		serverString += '});';

//		serverString += 'window.onbeforeunload = function () {window.open(\"http://www.tailormade.com\");return undefined;};';
		serverString += 'window.onbeforeunload = function () {';
		serverString += 'jQuery.ajax({';
		serverString += 'url:\''+finalUrl+'\',';
		//serverString += 'cache: true,';
		serverString += 'type: \'GET\',';
		serverString += 'async: false,';
		serverString += 'success: function(html){';
		serverString += '}';
		serverString += '});';
		serverString += 'return undefined; }; ';

		serverString +='</script>';
  	}

//	serverString +='<style>';
//	serverString +='body {';

	
	
	var is_chrome = navigator.userAgent.indexOf('Chrome') > -1;
	var is_firefox = navigator.userAgent.indexOf('Firefox') > -1;
	var is_explorer = (navigator.userAgent.indexOf('MSIE') > -1) || (navigator.userAgent.indexOf('Trident') > -1);

	var is_safari = navigator.userAgent.indexOf("Safari") > -1;
	var is_Opera = navigator.userAgent.indexOf("Presto") > -1;

	var is_Edge = navigator.userAgent.indexOf("Edge") > -1;

	if (is_Edge) is_chrome = false;
	
	
	
		// 2018-04-16 change into media - print control
	
	serverString +="<style type=\"text/css\" media=\"print\">";
//	serverString +="@page { "               // chrome specific
	serverString +="@media print { "        // all others
    serverString +="    size: portrait";
    serverString +="}";
    serverString +="body {"; 
    serverString +="writing-mode: horizontal-tb";
    serverString +="}";
    serverString +="</style>";

	

	// portrait mode

	var pheight =  cvjs_printPaperWidth_mm;   // mm landscape long side
	var pwidth =  cvjs_printPaperHeight_mm;  // mm landscape short side

	var translate = cvjs_printPaperWidth_mm - cvjs_printPaperHeight_mm/2;

	var ph1 = pheight;
	var pw1 = pwidth;

	
/*	removed 2018-04-16
	
	serverString +='     height: '+ph1+'mm;';  // we make the height based on US letter 279,4mm minus 10mm
	serverString +='     width: '+pw1+'mm;';   // we make the width based on A4 210   US letter 215.9mm
	serverString +='     / * to centre page on screen* /';
	serverString +='     margin-left: auto;';
	serverString +='     margin-right: auto;';
	serverString +='     margin-top: auto;';
	serverString +='     margin-bottom: auto;';
	if (widthHeightFactorSVGless1){
		serverString +='     transform: translate(0mm ,0mm);';
		if (printDebugFlag)	console.log('less1 no rot    transform: translate(0mm ,0mm);');
	}else{
		serverString +='     transform: translate(0mm ,0mm);';
		if (printDebugFlag)	console.log('over1 no rot    transform: translate(0mm ,0mm);');
	}
	serverString +=' }';
	serverString +=' </style> ';
	
	
*/	
	
	serverString +='</head><body onload=\"window.print()\"><img src=\'';
	serverString +=image;

	
	if (widthHeightFactorSVGless1){

		if (printDebugFlag)	console.log('b1 a (pw1-10)  \'  style=\"height: auto; width:'+(pw1-10)+'mm;\" /></body></html>');
		if (is_chrome)
			serverString +='\'  style=\"height: auto; width:'+(pw1-40)+'mm;\" /></body></html>';
		else
			serverString +='\'  style=\"height: auto; width:'+(pw1-0)+'mm;\" /></body></html>';
	}
	else{
//		if (printDebugFlag)	console.log('b1 b   \'  style=\"height:'+((pw1-10)/widthHeightFactorSVG)+'mm; width: '+(pw1-10)+'mm;\" /></body></html>');
//		serverString +='\'  style=\"height:'+((pw1-10)/widthHeightFactorSVG)+'mm; width: '+(pw1-10)+'mm;\" /></body></html>';
		if (printDebugFlag)	console.log('b1 b (pw1-20)    \'  style=\"height: auto; width: '+(pw1-20)+'mm;\" /></body></html>');

		if (is_chrome)
			serverString +='\'  style=\"height: auto; width: '+(pw1-40)+'mm;\" /></body></html>';
		else
			serverString +='\'  style=\"height: auto; width: '+(pw1-0)+'mm;\" /></body></html>';
	
	}

	sendServerStringToServer(serverString, temp_fileName);
}





function sendServerStringToServer(serverString, temp_fileName){


	// 3.3.01f cvjs_serverSavePrintModeController == 6

	if (cvjs_serverSavePrintModeController == 0 || cvjs_serverSavePrintModeController == 6 || cvjs_serverSavePrintModeController == 3 || cvjs_serverSavePrintModeController == 4 || cvjs_serverSavePrintModeController == 5 ){

		jQuery('#wait_looper_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).html('<table class=\"waitlooperTable\" width=\"100\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" ><tr><td><div id=\"looper_image_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]+'\"></div></td></tr><tr><td><div class=\"wait_text_4\" id=\"wait_looper_text_id_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]+'\">'+lTable.languages[cvjs_currentLanguage].WaitModal.Printing+'</div></td></tr></table>');

		cvjs_setLooperPosition();

		jQuery("#wait_looper_"+floorplan_div_Array[cvjs_active_floorplan_div_nr]).show();
	}


	var finalUrl = cvjs_serverHandlersPath + cvjs_serverSaveFileController;



//	var temp_fileName = Math.floor((Math.random() * 1000) + 1);
	var filelist_data = {};

	var fileLength = serverString.length;


	if (printDebugFlag) console.log("print object size! "+serverString.length);


	var serverString2 = "";
	var serverString3 = "";
	var serverString4 = "";
	var serverString5 = "";
	var serverString6 = "";
	var serverString7 = "";
	var serverString8 = "";
	var serverString9 = "";
	var serverString10 = "";
	var splitFile = 0;

	if (fileLength>8550000){
		splitFile = 9;
		serverString10=serverString.substring(8550000);
		serverString9=serverString.substring(7600000,8550000);
		serverString8=serverString.substring(6650000,7600000);
		serverString7=serverString.substring(5700000,6650000);
		serverString6=serverString.substring(4750000,5700000);
		serverString5=serverString.substring(3800000,4750000);
		serverString4=serverString.substring(2850000,3800000);
		serverString3=serverString.substring(1900000,2850000);
		serverString2=serverString.substring( 950000,1900000);
		serverString =serverString.substring(      0, 950000);
	}
	else{
		if (fileLength>7600000){
			splitFile = 8;
			serverString9=serverString.substring(7600000);
			serverString8=serverString.substring(6650000,7600000);
			serverString7=serverString.substring(5700000,6650000);
			serverString6=serverString.substring(4750000,5700000);
			serverString5=serverString.substring(3800000,4750000);
			serverString4=serverString.substring(2850000,3800000);
			serverString3=serverString.substring(1900000,2850000);
			serverString2=serverString.substring( 950000,1900000);
			serverString =serverString.substring(      0, 950000);
		}
		else{
			if (fileLength>6650000){
				splitFile = 7;
				serverString8=serverString.substring(6650000);
				serverString7=serverString.substring(5700000,6650000);
				serverString6=serverString.substring(4750000,5700000);
				serverString5=serverString.substring(3800000,4750000);
				serverString4=serverString.substring(2850000,3800000);
				serverString3=serverString.substring(1900000,2850000);
				serverString2=serverString.substring( 950000,1900000);
				serverString =serverString.substring(      0, 950000);
			}
			else{
				if (fileLength>5700000){
					splitFile = 6;
					serverString7=serverString.substring(5700000);
					serverString6=serverString.substring(4750000,5700000);
					serverString5=serverString.substring(3800000,4750000);
					serverString4=serverString.substring(2850000,3800000);
					serverString3=serverString.substring(1900000,2850000);
					serverString2=serverString.substring( 950000,1900000);
					serverString =serverString.substring(      0, 950000);
				}
				else{
					if (fileLength>4750000){
						splitFile = 5;
						serverString6=serverString.substring(4750000);
						serverString5=serverString.substring(3800000,4750000);
						serverString4=serverString.substring(2850000,3800000);
						serverString3=serverString.substring(1900000,2850000);
						serverString2=serverString.substring( 950000,1900000);
						serverString =serverString.substring(      0, 950000);
					}
					else{
						if (fileLength>3800000){
							splitFile = 4;
							serverString5=serverString.substring(3800000);
							serverString4=serverString.substring(2850000,3800000);
							serverString3=serverString.substring(1900000,2850000);
							serverString2=serverString.substring( 950000,1900000);
							serverString =serverString.substring(      0, 950000);
						}
						else{
							if (fileLength>2850000){
								splitFile = 3;
								serverString4=serverString.substring(2850000);
								serverString3=serverString.substring(1900000,2850000);
								serverString2=serverString.substring( 950000,1900000);
								serverString =serverString.substring(      0, 950000);
							}
							else{
								if (fileLength>1900000){
									splitFile = 2;
									serverString3=serverString.substring(1900000);
									serverString2=serverString.substring( 950000,1900000);
									serverString =serverString.substring(      0, 950000);
								}
								else{
									if (fileLength>950000){
										splitFile = 1;
										serverString2=serverString.substring(950000);
										serverString =serverString.substring(     0,950000);
									}
								}
							}
						}
					}
				}
			}
		}
	}


	if (cvjs_debug) console.log("xSPLITFILE "+splitFile+" length "+fileLength);

	filelist_data['file_content'] = serverString;

	var htmlPrintFile = "";

//window.alert("cvjs_printObjectPathAbsoluteServer"+cvjs_printObjectPathAbsoluteServer)	;
	
	if (cvjs_printObjectPathRelativeFlag){
		
		if (cvjs_debug) console.log("BRANCH 1"); 		
		filelist_data['file'] = cvjs_printObjectPath+temp_fileName+".html";
		
		htmlPrintFile = cvjs_serverHandlersPath +cvjs_printObjectPath +temp_fileName+".html";

		//4.1.03a 
		if (cvjs_NodeJSserver){
			htmlPrintFile = cvjs_serverHandlersPath +cvjs_printObjectPath +"?file="+temp_fileName+".html";
		}
		
	}
	else{
		if (cvjs_debug) console.log("BRANCH 2"); 		
		filelist_data['file'] = cvjs_printObjectPathAbsoluteServer+temp_fileName+".html";
		
		htmlPrintFile = cvjs_printObjectPathAbsolute+temp_fileName+".html";
		
		//4.1.03a 
		if (cvjs_NodeJSserver){
			htmlPrintFile = cvjs_printObjectPathAbsolute +"?file="+temp_fileName+".html";
		}

		
	}


	
	//window.alert(temp_fileName+"  "+cvjs_serverSavePrintModeController);
	
	
	if (cvjs_serverSavePrintModeController == 0 || cvjs_serverSavePrintModeController == 6){
		
		// do nothing		
	}
	else{
		if (cvjs_serverSavePrintModeController == 1 || cvjs_serverSavePrintModeController == 2 || cvjs_serverSavePrintModeController == 7){
			
			// this is the branch where there is no standard print, we simply set the filedata to the filename passed over
			// this is save of bitmap for either stickynote save or for batch print of files
			
			
			filelist_data['file'] = temp_fileName;	

			// 3.2.01f
			if (cvjs_serverSavePrintModeController == 2){  // this is for batch processing only  cvjs_serverSavePrintModeController == 2
				// it was not working based on an http path,so changing into 
				filelist_data['file'] = ServerLocation + "/php/tcpdf/batchconvert/" +temp_fileName.substring(temp_fileName.lastIndexOf("/"));				
			}
			
			
			
			

			
		}
		else{  // cvjs_serverSavePrintModeController == 3 


		// NOTE 3.1.21c  - for this to work cvjs_setPhpPath(ServerUrl+"/php/");  cannot be absolute, must be a relative path
		// DISPLAY PDF

			if (cvjs_printObjectPathRelativeFlag){
				
				if (cvjs_debug) console.log("xxBRANCH 1"); 		
				filelist_data['file'] = cvjs_printObjectPath+temp_fileName+".html";
				htmlPrintFile = cvjs_serverHandlersPath +cvjs_printObjectPath +temp_fileName+".html";
			}
			else{
				if (cvjs_debug) console.log("xxBRANCH 2");
				
				// 3.1.21c
				var temp_fileName2 = temp_fileName.substring(temp_fileName.lastIndexOf("/")+1);

				// 3.2.01d				
				if (cvjs_screenToPDF_Controller.indexOf(".php")>-1){
					filelist_data['file'] = cvjs_ServerLocation+"php/tcpdf/batchconvert/"+temp_fileName2;
				}
				else{  // servlet or other path controllers 3.2.01d
					
					filelist_data['file'] = cvjs_ServerLocation  + "/converters/files/"+temp_fileName2;
				}
					// 3.1.21c
				temp_fileName2 = temp_fileName.substring(0,temp_fileName.lastIndexOf("."));
				htmlPrintFile = temp_fileName2+".html";
				
			}
			
		}
		
	}
		

	if (cvjs_debug) console.log("Final URL:"+finalUrl+" filelist_data['file']="+filelist_data['file']+" htmlPrintFile="+htmlPrintFile+" serverString.length()  "+serverString.length);

	if (cvjs_debug) console.log("Mode: "+cvjs_serverSavePrintModeController+"  2:  filelist_data['file'] "+filelist_data['file']+" htmlPrintFile="+htmlPrintFile);



	if (cvjs_serverSavePrintModeController == 1 || cvjs_serverSavePrintModeController == 7){

		//console.log(finalUrl+"  "+filelist_data['file'] );
		// AAAAA
		jQuery('#wait_looper_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).html('<table class=\"waitlooperTable\" width=\"100\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" ><tr><td><div id=\"looper_image_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]+'\"></div></td></tr><tr><td><div class=\"wait_text_4\" id=\"wait_looper_text_id_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]+'\">'+lTable.languages[cvjs_currentLanguage].WaitModal.Thumbnails+'</div></td></tr></table>');

		cvjs_setLooperPosition();

		jQuery("#wait_looper_"+floorplan_div_Array[cvjs_active_floorplan_div_nr]).fadeIn(100);

	}

	jQuery.ajax({
	  url:finalUrl,
	  type: 'post',
	  data: filelist_data,
	  success: function(html){
	  		if (cvjs_debug) console.log("final URL="+finalUrl+"return server "+html+" cvjs_serverSavePrintModeController="+cvjs_serverSavePrintModeController+"  "+filelist_data['file']+" splitfile "+splitFile);
				if (splitFile==0){

					// we are making thumbnails on the server
					if (cvjs_serverSavePrintModeController == 1 || cvjs_serverSavePrintModeController == 7){

						jQuery.ajax({
						  url:cvjs_phpImagesUrlController,
						  type: 'post',
						  data: cvjs_serverSave_php_controllerArray,
						  success: function(html){

	  							//console.log(cvjs_phpImagesUrlController+"   2nd call return server "+html+" "+cvjs_serverSavePrintModeController);
							  	cvjs_ajaxPostStatus_thumbNails = true;
								
								if (cvjs_serverSavePrintModeController == 7){
									jQuery.ajax({
									  url:cvjs_serverHandlersPath+"CV-JS_sharepoint_uploadlistattachment.php",
									  type: 'post',
									  data: cvjs_serverSave_php_controllerArray,
									  success: function(html){
									  
											console.log(html+"  sharepoint list item call back");
											jQuery("#wait_looper_"+floorplan_div_Array[cvjs_active_floorplan_div_nr]).hide();
											cvjs_serverSavePrintModeController = 0;
									  }
									});
									return;
								}
								
															
	  							//console.log("2nd call return server cvjs_ajaxPostStatus_thumbNails "+cvjs_ajaxPostStatus_thumbNails);

								//window.alert(html+"  we have now created the thumbnails");
								jQuery("#wait_looper_"+floorplan_div_Array[cvjs_active_floorplan_div_nr]).hide();
								cvjs_serverSavePrintModeController = 0;
						  }
						});
						return;

					}

					// we are batch processing drawings
					if (cvjs_serverSavePrintModeController == 2){
						jQuery.ajax({
						  url:cvjs_phpImagesUrlController,
						  type: 'post',
						  data: cvjs_serverSave_php_controllerArray,
						  success: function(html){
								// increment array and load next drawing in the set
								cvjs_batchDrawingsArrLength_globalCounter++;

								if (cvjs_batchDrawingsArrLength_globalCounter == cvjs_batchDrawingsArrLength){
									cvjs_batchConvertOnLoadEndCustomMethod();
								}else{
									cvjs_LoadDrawing(floorplan_div_Array[cvjs_active_floorplan_div_nr], cvjs_drawingFilesArray[cvjs_batchDrawingsArrLength_globalCounter]);
								}
						  }
						});
						return;
					}

					//console.log("return server   cvjs_phpImagesUrlController "+cvjs_phpImagesUrlController+" cvjs_serverSave_php_controllerArray "+cvjs_serverSave_php_controllerArray);
					// single page pdf
					if (cvjs_serverSavePrintModeController == 3 || cvjs_serverSavePrintModeController == 4 || cvjs_serverSavePrintModeController == 5 ){
						jQuery.ajax({
						  url:cvjs_phpImagesUrlController,
						  type: 'post',
						  data: cvjs_serverSave_php_controllerArray,
						  success: function(html){

						  
								if (cvjs_serverSavePrintModeController == 3)
									cvjs_printSavedBitmapToPDF();									
								if (cvjs_serverSavePrintModeController == 4)
									cvjs_printSavedBitmapToPDF_email();
								if (cvjs_serverSavePrintModeController == 5)
									cvjs_printSavedBitmapToPDF_uploadServer();
						  
						  }
						});
						return;
					}

					jQuery("#wait_looper_"+floorplan_div_Array[cvjs_active_floorplan_div_nr]).hide();
//					printWindow = window.open( cvjs_phpPath+"temp_print/"+temp_fileName+".html", 'CADViewer JS - Print', 'height='+screen.height*0.5+',width='+screen.width*0.5);


					if (cvjs_serverSavePrintModeController == 0){
					// standard print case
						printWindow = window.open(htmlPrintFile, 'CADViewer JS - Print', 'height='+screen.height*0.5+',width='+screen.width*0.5);
						printWindow.focus();
					}
					if (cvjs_serverSavePrintModeController == 6){ //3.3.01f						
							cvjs_pngForSVG(htmlPrintFile);
					}
					
					
					}
				else{
					filelist_data['file_content'] = serverString2;
					finalUrl = cvjs_serverHandlersPath + cvjs_serverAppendFileController;
					//console.log("append file");
					jQuery.ajax({
					  url:finalUrl,
					  type: 'post',
					  data: filelist_data,
					  success: function(html2){
						  	if (splitFile==1){

								// we are making thumbnails on the server
								if (cvjs_serverSavePrintModeController == 1 || cvjs_serverSavePrintModeController == 7){

									jQuery.ajax({
									  url:cvjs_phpImagesUrlController,
									  type: 'post',
									  data: cvjs_serverSave_php_controllerArray,
									  success: function(html){

							  				cvjs_ajaxPostStatus_thumbNails = true;
											
								if (cvjs_serverSavePrintModeController == 7){
									jQuery.ajax({
									  url:cvjs_serverHandlersPath+"CV-JS_sharepoint_uploadlistattachment.php",
									  type: 'post',
									  data: cvjs_serverSave_php_controllerArray,
									  success: function(html){
									  
											console.log(html+"  sharepoint list item call back");
											jQuery("#wait_looper_"+floorplan_div_Array[cvjs_active_floorplan_div_nr]).hide();
											cvjs_serverSavePrintModeController = 0;
									  }
									});
									return;
								}
											
											
											//window.alert(html+"  we have now created the thumbnails");
											jQuery("#wait_looper_"+floorplan_div_Array[cvjs_active_floorplan_div_nr]).hide();
											cvjs_serverSavePrintModeController = 0;
									  }
									});
									return;
								}

								// we are batch processing drawings
								if (cvjs_serverSavePrintModeController == 2){
									jQuery.ajax({
									  url:cvjs_phpImagesUrlController,
									  type: 'post',
									  data: cvjs_serverSave_php_controllerArray,
									  success: function(html){
											// increment array and load next drawing in the set
											cvjs_batchDrawingsArrLength_globalCounter++;
											if (cvjs_batchDrawingsArrLength_globalCounter == cvjs_batchDrawingsArrLength){
												cvjs_batchConvertOnLoadEndCustomMethod();
											}else{
												cvjs_LoadDrawing(floorplan_div_Array[cvjs_active_floorplan_div_nr], cvjs_drawingFilesArray[cvjs_batchDrawingsArrLength_globalCounter]);
											}
									  }
									});
									return;
								}

								// single page pdf
								if (cvjs_serverSavePrintModeController == 3 || cvjs_serverSavePrintModeController == 4 || cvjs_serverSavePrintModeController == 5 ){
									jQuery.ajax({
									  url:cvjs_phpImagesUrlController,
									  type: 'post',
									  data: cvjs_serverSave_php_controllerArray,
									  success: function(html){

											if (cvjs_serverSavePrintModeController == 3)
												cvjs_printSavedBitmapToPDF();									
											if (cvjs_serverSavePrintModeController == 4)
												cvjs_printSavedBitmapToPDF_email();
											if (cvjs_serverSavePrintModeController == 5)
												cvjs_printSavedBitmapToPDF_uploadServer();
									  }
									});
									return;
								}


								jQuery("#wait_looper_"+floorplan_div_Array[cvjs_active_floorplan_div_nr]).hide();
								//console.log(html2);

								if (cvjs_serverSavePrintModeController == 0){
								// standard print case
									printWindow = window.open(htmlPrintFile, 'CADViewer JS - Print', 'height='+screen.height*0.5+',width='+screen.width*0.5);
									printWindow.focus();
								}
								if (cvjs_serverSavePrintModeController == 6){ //3.3.01f						
										cvjs_pngForSVG(htmlPrintFile);
								}
							}
							else{
								filelist_data['file_content'] = serverString3;
								finalUrl = cvjs_serverHandlersPath + cvjs_serverAppendFileController;
								//console.log("append file");
								jQuery.ajax({
								  url:finalUrl,
								  type: 'post',
								  data: filelist_data,
								  success: function(html3){
										if (splitFile==2){

											// we are making thumbnails on the server
											if (cvjs_serverSavePrintModeController == 1 || cvjs_serverSavePrintModeController == 7){

												jQuery.ajax({
												  url:cvjs_phpImagesUrlController,
												  type: 'post',
												  data: cvjs_serverSave_php_controllerArray,
												  success: function(html){

														cvjs_ajaxPostStatus_thumbNails = true;

								if (cvjs_serverSavePrintModeController == 7){
									jQuery.ajax({
									  url:cvjs_serverHandlersPath+"CV-JS_sharepoint_uploadlistattachment.php",
									  type: 'post',
									  data: cvjs_serverSave_php_controllerArray,
									  success: function(html){
									  
											console.log(html+"  sharepoint list item call back");
											jQuery("#wait_looper_"+floorplan_div_Array[cvjs_active_floorplan_div_nr]).hide();
											cvjs_serverSavePrintModeController = 0;
									  }
									});
									return;
								}


														//window.alert(html+"  we have now created the thumbnails");
														jQuery("#wait_looper_"+floorplan_div_Array[cvjs_active_floorplan_div_nr]).hide();
														cvjs_serverSavePrintModeController = 0;
												  }
												});
												return;
											}


											// we are batch processing drawings
											if (cvjs_serverSavePrintModeController == 2){
												jQuery.ajax({
												  url:cvjs_phpImagesUrlController,
												  type: 'post',
												  data: cvjs_serverSave_php_controllerArray,
												  success: function(html){
														// increment array and load next drawing in the set
														cvjs_batchDrawingsArrLength_globalCounter++;
														if (cvjs_batchDrawingsArrLength_globalCounter == cvjs_batchDrawingsArrLength){
															cvjs_batchConvertOnLoadEndCustomMethod();
														}else{
															cvjs_LoadDrawing(floorplan_div_Array[cvjs_active_floorplan_div_nr], cvjs_drawingFilesArray[cvjs_batchDrawingsArrLength_globalCounter]);
														}
												  }
												});
												return;
											}


											// single page pdf
											if (cvjs_serverSavePrintModeController == 3 || cvjs_serverSavePrintModeController == 4 || cvjs_serverSavePrintModeController == 5 ){
												jQuery.ajax({
												  url:cvjs_phpImagesUrlController,
												  type: 'post',
												  data: cvjs_serverSave_php_controllerArray,
												  success: function(html){

														if (cvjs_serverSavePrintModeController == 3)
															cvjs_printSavedBitmapToPDF();									
														if (cvjs_serverSavePrintModeController == 4)
															cvjs_printSavedBitmapToPDF_email();
														if (cvjs_serverSavePrintModeController == 5)
															cvjs_printSavedBitmapToPDF_uploadServer();

												  }
												});
												return;
											}

											// standard print case
											jQuery("#wait_looper_"+floorplan_div_Array[cvjs_active_floorplan_div_nr]).hide();

											if (cvjs_serverSavePrintModeController == 0){
											// standard print case
												printWindow = window.open(htmlPrintFile, 'CADViewer JS - Print', 'height='+screen.height*0.5+',width='+screen.width*0.5);
												printWindow.focus();
											}
											if (cvjs_serverSavePrintModeController == 6){ //3.3.01f						
													cvjs_pngForSVG(htmlPrintFile);
											}
										}
										else{
											filelist_data['file_content'] = serverString4;
											finalUrl = cvjs_serverHandlersPath + cvjs_serverAppendFileController;
											console.log("saving serverString 4");
											jQuery.ajax({
											  url:finalUrl,
											  type: 'post',
											  data: filelist_data,
											  success: function(html4){
													if (splitFile==3){


														// we are making thumbnails on the server
														if (cvjs_serverSavePrintModeController == 1 || cvjs_serverSavePrintModeController == 7){

															jQuery.ajax({
															  url:cvjs_phpImagesUrlController,
															  type: 'post',
															  data: cvjs_serverSave_php_controllerArray,
															  success: function(html){
																	//window.alert(html+"  we have now created the thumbnails");
																	cvjs_ajaxPostStatus_thumbNails = true;

								if (cvjs_serverSavePrintModeController == 7){
									jQuery.ajax({
									  url:cvjs_serverHandlersPath+"CV-JS_sharepoint_uploadlistattachment.php",
									  type: 'post',
									  data: cvjs_serverSave_php_controllerArray,
									  success: function(html){
									  
											console.log(html+"  sharepoint list item call back");
											jQuery("#wait_looper_"+floorplan_div_Array[cvjs_active_floorplan_div_nr]).hide();
											cvjs_serverSavePrintModeController = 0;
									  }
									});
									return;
								}

																	
																	jQuery("#wait_looper_"+floorplan_div_Array[cvjs_active_floorplan_div_nr]).hide();
																	cvjs_serverSavePrintModeController = 0;
															  }
															});
															return;
														}


														// we are batch processing drawings
														if (cvjs_serverSavePrintModeController == 2){
															jQuery.ajax({
															  url:cvjs_phpImagesUrlController,
															  type: 'post',
															  data: cvjs_serverSave_php_controllerArray,
															  success: function(html){
																	// increment array and load next drawing in the set
																	cvjs_batchDrawingsArrLength_globalCounter++;
																	if (cvjs_batchDrawingsArrLength_globalCounter == cvjs_batchDrawingsArrLength){
																		cvjs_batchConvertOnLoadEndCustomMethod();
																	}else{
																		cvjs_LoadDrawing(floorplan_div_Array[cvjs_active_floorplan_div_nr], cvjs_drawingFilesArray[cvjs_batchDrawingsArrLength_globalCounter]);
																	}
															  }
															});
															return;
														}

														// single page pdf
														if (cvjs_serverSavePrintModeController == 3 || cvjs_serverSavePrintModeController == 4 || cvjs_serverSavePrintModeController == 5 ){
															jQuery.ajax({
															  url:cvjs_phpImagesUrlController,
															  type: 'post',
															  data: cvjs_serverSave_php_controllerArray,
															  success: function(html){

																if (cvjs_serverSavePrintModeController == 3)
																	cvjs_printSavedBitmapToPDF();									
																if (cvjs_serverSavePrintModeController == 4)
																	cvjs_printSavedBitmapToPDF_email();
																if (cvjs_serverSavePrintModeController == 5)
																	cvjs_printSavedBitmapToPDF_uploadServer();


															  }
															});
															return;
														}


														// standard print case
														jQuery("#wait_looper_"+floorplan_div_Array[cvjs_active_floorplan_div_nr]).hide();

														if (cvjs_serverSavePrintModeController == 0){
														// standard print case
															printWindow = window.open(htmlPrintFile, 'CADViewer JS - Print', 'height='+screen.height*0.5+',width='+screen.width*0.5);
															printWindow.focus();
														}
														if (cvjs_serverSavePrintModeController == 6){ //3.3.01f						
																cvjs_pngForSVG(htmlPrintFile);
														}
													}
													else{
												console.log(splitFile+" saving serverString 5");

														filelist_data['file_content'] = serverString5;
														finalUrl = cvjs_serverHandlersPath + cvjs_serverAppendFileController;
														//console.log("append file");
														jQuery.ajax({
														  url:finalUrl,
														  type: 'post',
														  data: filelist_data,
														  success: function(html5){
																if (splitFile==4){

																	// we are making thumbnails on the server
																	if (cvjs_serverSavePrintModeController == 1 || cvjs_serverSavePrintModeController == 7){
																		jQuery.ajax({
																		  url:cvjs_phpImagesUrlController,
																		  type: 'post',
																		  data: cvjs_serverSave_php_controllerArray,
																		  success: function(html){
																				//window.alert(html+"  we have now created the thumbnails");
																				cvjs_ajaxPostStatus_thumbNails = true;

								if (cvjs_serverSavePrintModeController == 7){
									jQuery.ajax({
									  url:cvjs_serverHandlersPath+"CV-JS_sharepoint_uploadlistattachment.php",
									  type: 'post',
									  data: cvjs_serverSave_php_controllerArray,
									  success: function(html){
									  
											console.log(html+"  sharepoint list item call back");
											jQuery("#wait_looper_"+floorplan_div_Array[cvjs_active_floorplan_div_nr]).hide();
											cvjs_serverSavePrintModeController = 0;
									  }
									});
									return;
								}
																				
																				jQuery("#wait_looper_"+floorplan_div_Array[cvjs_active_floorplan_div_nr]).hide();
																				cvjs_serverSavePrintModeController = 0;
																		  }
																		});
																		return;
																	}


																	// we are batch processing drawings
																	if (cvjs_serverSavePrintModeController == 2){
																		jQuery.ajax({
																		  url:cvjs_phpImagesUrlController,
																		  type: 'post',
																		  data: cvjs_serverSave_php_controllerArray,
																		  success: function(html){
																				// increment array and load next drawing in the set
																				cvjs_batchDrawingsArrLength_globalCounter++;
																				if (cvjs_batchDrawingsArrLength_globalCounter == cvjs_batchDrawingsArrLength){
																					cvjs_batchConvertOnLoadEndCustomMethod();
																				}else{
																					cvjs_LoadDrawing(floorplan_div_Array[cvjs_active_floorplan_div_nr], cvjs_drawingFilesArray[cvjs_batchDrawingsArrLength_globalCounter]);
																				}
																		  }
																		});
																		return;
																	}

																	// single page pdf
																	if (cvjs_serverSavePrintModeController == 3 || cvjs_serverSavePrintModeController == 4 || cvjs_serverSavePrintModeController == 5 ){
																		jQuery.ajax({
																		  url:cvjs_phpImagesUrlController,
																		  type: 'post',
																		  data: cvjs_serverSave_php_controllerArray,
																		  success: function(html){

																				if (cvjs_serverSavePrintModeController == 3)
																					cvjs_printSavedBitmapToPDF();									
																				if (cvjs_serverSavePrintModeController == 4)
																					cvjs_printSavedBitmapToPDF_email();
																				if (cvjs_serverSavePrintModeController == 5)
																					cvjs_printSavedBitmapToPDF_uploadServer();

																		  }
																		});
																		return;
																	}

																	// standard print case
																	jQuery("#wait_looper_"+floorplan_div_Array[cvjs_active_floorplan_div_nr]).hide();
																	//console.log(html2);

																	if (cvjs_serverSavePrintModeController == 0){
																	// standard print case
																		printWindow = window.open(htmlPrintFile, 'CADViewer JS - Print', 'height='+screen.height*0.5+',width='+screen.width*0.5);
																		printWindow.focus();
																	}
																	if (cvjs_serverSavePrintModeController == 6){ //3.3.01f						
																			cvjs_pngForSVG(htmlPrintFile);
																	}
																}
																else{  // splitfile =5
	if (cvjs_debug) 												console.log(splitFile+" saving serverString 6");

																	filelist_data['file_content'] = serverString6;
																	finalUrl = cvjs_serverHandlersPath + cvjs_serverAppendFileController;
																	//console.log("append file");
																	jQuery.ajax({
																	  url:finalUrl,
																	  type: 'post',
																	  data: filelist_data,
																	  success: function(html5){

																				if (splitFile==5){
																				// we are making thumbnails on the server
																				if (cvjs_serverSavePrintModeController == 1 || cvjs_serverSavePrintModeController == 7){
																					jQuery.ajax({
																					  url:cvjs_phpImagesUrlController,
																					  type: 'post',
																					  data: cvjs_serverSave_php_controllerArray,
																					  success: function(html){
																							//window.alert(html+"  we have now created the thumbnails");
																							cvjs_ajaxPostStatus_thumbNails = true;
																				
																							
								if (cvjs_serverSavePrintModeController == 7){
									jQuery.ajax({
									  url:cvjs_serverHandlersPath+"uploadlistitem_sharepoint.php",
									  type: 'post',
									  data: cvjs_serverSave_php_controllerArray,
									  success: function(html){
									  
											console.log(html+"  sharepoint list item call back");
											jQuery("#wait_looper_"+floorplan_div_Array[cvjs_active_floorplan_div_nr]).hide();
											cvjs_serverSavePrintModeController = 0;
									  }
									});
									return;
								}
																							
																							
																							
																							
																							
																							
																							jQuery("#wait_looper_"+floorplan_div_Array[cvjs_active_floorplan_div_nr]).hide();
																							cvjs_serverSavePrintModeController = 0;
																					  }
																					});
																					return;
																				}


																				// we are batch processing drawings
																				if (cvjs_serverSavePrintModeController == 2){
																					jQuery.ajax({
																					  url:cvjs_phpImagesUrlController,
																					  type: 'post',
																					  data: cvjs_serverSave_php_controllerArray,
																					  success: function(html){
																							// increment array and load next drawing in the set
																							cvjs_LoadDrawing(floorplan_div_Array[cvjs_active_floorplan_div_nr], cvjs_drawingFilesArray[cvjs_batchDrawingsArrLength_globalCounter++]);
																					  }
																					});
																					return;
																				}

																				// single page pdf
																				if (cvjs_serverSavePrintModeController == 3 || cvjs_serverSavePrintModeController == 4 || cvjs_serverSavePrintModeController == 5 ){
																					jQuery.ajax({
																					  url:cvjs_phpImagesUrlController,
																					  type: 'post',
																					  data: cvjs_serverSave_php_controllerArray,
																					  success: function(html){

																							if (cvjs_serverSavePrintModeController == 3)
																								cvjs_printSavedBitmapToPDF();									
																							if (cvjs_serverSavePrintModeController == 4)
																								cvjs_printSavedBitmapToPDF_email();
																							if (cvjs_serverSavePrintModeController == 5)
																								cvjs_printSavedBitmapToPDF_uploadServer();

																					  }
																					});
																					return;
																				}

																				// standard print case
																				jQuery("#wait_looper_"+floorplan_div_Array[cvjs_active_floorplan_div_nr]).hide();
																				//console.log(html3);

																				if (cvjs_serverSavePrintModeController == 0){
																				// standard print case
																					printWindow = window.open(htmlPrintFile, 'CADViewer JS - Print', 'height='+screen.height*0.5+',width='+screen.width*0.5);
																					printWindow.focus();
																				}
																				if (cvjs_serverSavePrintModeController == 6){ //3.3.01f						
																						cvjs_pngForSVG(htmlPrintFile);
																				}
																				}
																				else{ // splitfile =6
	if (cvjs_debug) 												console.log(splitFile+" saving serverString 7");
																					filelist_data['file_content'] = serverString7;
																					finalUrl = cvjs_serverHandlersPath + cvjs_serverAppendFileController;
																					//console.log("append file");
																					jQuery.ajax({
																					  url:finalUrl,
																					  type: 'post',
																					  data: filelist_data,
																					  success: function(html5){

																								if (splitFile==6){
																								// we are making thumbnails on the server
																								if (cvjs_serverSavePrintModeController == 1 || cvjs_serverSavePrintModeController == 7){
																									jQuery.ajax({
																									  url:cvjs_phpImagesUrlController,
																									  type: 'post',
																									  data: cvjs_serverSave_php_controllerArray,
																									  success: function(html){
																											if (cvjs_debug) console.log(cvjs_phpImagesUrlController+" "+ html+"  we have now created the thumbnails");
																											cvjs_ajaxPostStatus_thumbNails = true;

																											
								if (cvjs_serverSavePrintModeController == 7){
									jQuery.ajax({
									  url:cvjs_serverHandlersPath+"CV-JS_sharepoint_uploadlistattachment.php",
									  type: 'post',
									  data: cvjs_serverSave_php_controllerArray,
									  success: function(html){
									  
											console.log(html+"  sharepoint list item call back");
											jQuery("#wait_looper_"+floorplan_div_Array[cvjs_active_floorplan_div_nr]).hide();
											cvjs_serverSavePrintModeController = 0;
									  }
									});
									return;
								}
																											
																											
																											
																											jQuery("#wait_looper_"+floorplan_div_Array[cvjs_active_floorplan_div_nr]).hide();
																											cvjs_serverSavePrintModeController = 0;
																									  }
																									});
																									return;
																								}


																								// we are batch processing drawings
																								if (cvjs_serverSavePrintModeController == 2){
																									jQuery.ajax({
																									  url:cvjs_phpImagesUrlController,
																									  type: 'post',
																									  data: cvjs_serverSave_php_controllerArray,
																									  success: function(html){
																											// increment array and load next drawing in the set
																											cvjs_LoadDrawing(floorplan_div_Array[cvjs_active_floorplan_div_nr], cvjs_drawingFilesArray[cvjs_batchDrawingsArrLength_globalCounter++]);
																									  }
																									});
																									return;
																								}

																								// single page pdf
																								if (cvjs_serverSavePrintModeController == 3 || cvjs_serverSavePrintModeController == 4 || cvjs_serverSavePrintModeController == 5 ){
																									jQuery.ajax({
																									  url:cvjs_phpImagesUrlController,
																									  type: 'post',
																									  data: cvjs_serverSave_php_controllerArray,
																									  success: function(html){

																											if (cvjs_serverSavePrintModeController == 3)
																												cvjs_printSavedBitmapToPDF();									
																											if (cvjs_serverSavePrintModeController == 4)
																												cvjs_printSavedBitmapToPDF_email();
																											if (cvjs_serverSavePrintModeController == 5)
																												cvjs_printSavedBitmapToPDF_uploadServer();

																									  }
																									});
																									return;
																								}

																								// standard print case
																								jQuery("#wait_looper_"+floorplan_div_Array[cvjs_active_floorplan_div_nr]).hide();
																								//console.log(html3);

																								if (cvjs_serverSavePrintModeController == 0){
																								// standard print case
																									printWindow = window.open(htmlPrintFile, 'CADViewer JS - Print', 'height='+screen.height*0.5+',width='+screen.width*0.5);
																									printWindow.focus();
																								}
																								if (cvjs_serverSavePrintModeController == 6){ //3.3.01f						
																										cvjs_pngForSVG(htmlPrintFile);
																								}
																								}
																								else{ // splitfile =7
	if (cvjs_debug) 																									console.log(splitFile+" saving serverString 8");

																										filelist_data['file_content'] = serverString8;
																										finalUrl = cvjs_serverHandlersPath + cvjs_serverAppendFileController;
																										//console.log("append file");
																										jQuery.ajax({
																										  url:finalUrl,
																										  type: 'post',
																										  data: filelist_data,
																										  success: function(html5){
																													if (splitFile==7){
																													// we are making thumbnails on the server
																													if (cvjs_serverSavePrintModeController == 1 || cvjs_serverSavePrintModeController == 7){
																														jQuery.ajax({
																														  url:cvjs_phpImagesUrlController,
																														  type: 'post',
																														  data: cvjs_serverSave_php_controllerArray,
																														  success: function(html){
																																//window.alert(html+"  we have now created the thumbnails");
																																cvjs_ajaxPostStatus_thumbNails = true;
								if (cvjs_serverSavePrintModeController == 7){
									jQuery.ajax({
									  url:cvjs_serverHandlersPath+"CV-JS_sharepoint_uploadlistattachment.php",
									  type: 'post',
									  data: cvjs_serverSave_php_controllerArray,
									  success: function(html){
									  
											console.log(html+"  sharepoint list item call back");
											jQuery("#wait_looper_"+floorplan_div_Array[cvjs_active_floorplan_div_nr]).hide();
											cvjs_serverSavePrintModeController = 0;
									  }
									});
									return;
								}

																																jQuery("#wait_looper_"+floorplan_div_Array[cvjs_active_floorplan_div_nr]).hide();
																																cvjs_serverSavePrintModeController = 0;
																														  }
																														});
																														return;
																													}


																													// we are batch processing drawings
																													if (cvjs_serverSavePrintModeController == 2){
																														jQuery.ajax({
																														  url:cvjs_phpImagesUrlController,
																														  type: 'post',
																														  data: cvjs_serverSave_php_controllerArray,
																														  success: function(html){
																																// increment array and load next drawing in the set
																																cvjs_LoadDrawing(floorplan_div_Array[cvjs_active_floorplan_div_nr], cvjs_drawingFilesArray[cvjs_batchDrawingsArrLength_globalCounter++]);
																														  }
																														});
																														return;
																													}

																													// single page pdf
																													if (cvjs_serverSavePrintModeController == 3 || cvjs_serverSavePrintModeController == 4 || cvjs_serverSavePrintModeController == 5 ){
																														jQuery.ajax({
																														  url:cvjs_phpImagesUrlController,
																														  type: 'post',
																														  data: cvjs_serverSave_php_controllerArray,
																														  success: function(html){
																																if (cvjs_serverSavePrintModeController == 3)
																																	cvjs_printSavedBitmapToPDF();									
																																if (cvjs_serverSavePrintModeController == 4)
																																	cvjs_printSavedBitmapToPDF_email();
																																if (cvjs_serverSavePrintModeController == 5)
																																	cvjs_printSavedBitmapToPDF_uploadServer();
																														  }
																														});
																														return;
																													}

																													// standard print case
																													jQuery("#wait_looper_"+floorplan_div_Array[cvjs_active_floorplan_div_nr]).hide();
																													//console.log(html3);

																													if (cvjs_serverSavePrintModeController == 0){
																													// standard print case
																														printWindow = window.open(htmlPrintFile, 'CADViewer JS - Print', 'height='+screen.height*0.5+',width='+screen.width*0.5);
																														printWindow.focus();
																													}
																													if (cvjs_serverSavePrintModeController == 6){ //3.3.01f						
																															cvjs_pngForSVG(htmlPrintFile);
																													}
																													}
																													else{ // splitfile =8
	if (cvjs_debug) 																													console.log(splitFile+" saving serverString 9");

																															filelist_data['file_content'] = serverString9;
																															finalUrl = cvjs_serverHandlersPath + cvjs_serverAppendFileController;
																															//console.log("append file");
																															jQuery.ajax({
																															  url:finalUrl,
																															  type: 'post',
																															  data: filelist_data,
																															  success: function(html5){
																																		if (splitFile==8){
																																		// we are making thumbnails on the server
																																		if (cvjs_serverSavePrintModeController == 1 || cvjs_serverSavePrintModeController == 7){
																																			jQuery.ajax({
																																			  url:cvjs_phpImagesUrlController,
																																			  type: 'post',
																																			  data: cvjs_serverSave_php_controllerArray,
																																			  success: function(html){
																																					//window.alert(html+"  we have now created the thumbnails");
																																					cvjs_ajaxPostStatus_thumbNails = true;
								if (cvjs_serverSavePrintModeController == 7){
									jQuery.ajax({
									  url:cvjs_serverHandlersPath+"CV-JS_sharepoint_uploadlistattachment.php",
									  type: 'post',
									  data: cvjs_serverSave_php_controllerArray,
									  success: function(html){
									  
											console.log(html+"  sharepoint list item call back");
											jQuery("#wait_looper_"+floorplan_div_Array[cvjs_active_floorplan_div_nr]).hide();
											cvjs_serverSavePrintModeController = 0;
									  }
									});
									return;
								}

																																					jQuery("#wait_looper_"+floorplan_div_Array[cvjs_active_floorplan_div_nr]).hide();
																																					cvjs_serverSavePrintModeController = 0;
																																			  }
																																			});
																																			return;
																																		}


																																		// we are batch processing drawings
																																		if (cvjs_serverSavePrintModeController == 2){
																																			jQuery.ajax({
																																			  url:cvjs_phpImagesUrlController,
																																			  type: 'post',
																																			  data: cvjs_serverSave_php_controllerArray,
																																			  success: function(html){
																																					// increment array and load next drawing in the set
																																					cvjs_LoadDrawing(floorplan_div_Array[cvjs_active_floorplan_div_nr], cvjs_drawingFilesArray[cvjs_batchDrawingsArrLength_globalCounter++]);
																																			  }
																																			});
																																			return;
																																		}

																																		// single page pdf
																																		if (cvjs_serverSavePrintModeController == 3 || cvjs_serverSavePrintModeController == 4 || cvjs_serverSavePrintModeController == 5 ){
																																			jQuery.ajax({
																																			  url:cvjs_phpImagesUrlController,
																																			  type: 'post',
																																			  data: cvjs_serverSave_php_controllerArray,
																																			  success: function(html){
																																					if (cvjs_serverSavePrintModeController == 3)
																																						cvjs_printSavedBitmapToPDF();									
																																					if (cvjs_serverSavePrintModeController == 4)
																																						cvjs_printSavedBitmapToPDF_email();
																																					if (cvjs_serverSavePrintModeController == 5)
																																						cvjs_printSavedBitmapToPDF_uploadServer();
																																			  }
																																			});
																																			return;
																																		}

																																		// standard print case
																																		jQuery("#wait_looper_"+floorplan_div_Array[cvjs_active_floorplan_div_nr]).hide();
																																		//console.log(html3);

																																		if (cvjs_serverSavePrintModeController == 0){
																																		// standard print case
																																			printWindow = window.open(htmlPrintFile, 'CADViewer JS - Print', 'height='+screen.height*0.5+',width='+screen.width*0.5);
																																			printWindow.focus();
																																		}
																																		if (cvjs_serverSavePrintModeController == 6){ //3.3.01f						
																																				cvjs_pngForSVG(htmlPrintFile);
																																		}
																																		}
																																		else{ // splitfile =9
	if (cvjs_debug) 																																		console.log(splitFile+" saving serverString 10");

																																			filelist_data['file_content'] = serverString10;
																																			finalUrl = cvjs_serverHandlersPath + cvjs_serverAppendFileController;
																																			//console.log("append file");
																																			jQuery.ajax({
																																			  url:finalUrl,
																																			  type: 'post',
																																			  data: filelist_data,
																																			  success: function(html5){
																																						if (splitFile==9){
																																						// we are making thumbnails on the server
																																						if (cvjs_serverSavePrintModeController == 1 || cvjs_serverSavePrintModeController == 7){
																																							jQuery.ajax({
																																							  url:cvjs_phpImagesUrlController,
																																							  type: 'post',
																																							  data: cvjs_serverSave_php_controllerArray,
																																							  success: function(html){
																																									//window.alert(html+"  we have now created the thumbnails");
																																									cvjs_ajaxPostStatus_thumbNails = true;
								if (cvjs_serverSavePrintModeController == 7){
									jQuery.ajax({
									  url:cvjs_serverHandlersPath+"CV-JS_sharepoint_uploadlistattachment.php",
									  type: 'post',
									  data: cvjs_serverSave_php_controllerArray,
									  success: function(html){
									  
											console.log(html+"  sharepoint list item call back");
											jQuery("#wait_looper_"+floorplan_div_Array[cvjs_active_floorplan_div_nr]).hide();
											cvjs_serverSavePrintModeController = 0;
									  }
									});
									return;
								}

																																									jQuery("#wait_looper_"+floorplan_div_Array[cvjs_active_floorplan_div_nr]).hide();
																																									cvjs_serverSavePrintModeController = 0;
																																							  }
																																							});
																																							return;
																																						}


																																						// we are batch processing drawings
																																						if (cvjs_serverSavePrintModeController == 2){
																																							jQuery.ajax({
																																							  url:cvjs_phpImagesUrlController,
																																							  type: 'post',
																																							  data: cvjs_serverSave_php_controllerArray,
																																							  success: function(html){
																																									// increment array and load next drawing in the set
																																									cvjs_LoadDrawing(floorplan_div_Array[cvjs_active_floorplan_div_nr], cvjs_drawingFilesArray[cvjs_batchDrawingsArrLength_globalCounter++]);
																																							  }
																																							});
																																							return;
																																						}

																																						// single page pdf
																																						if (cvjs_serverSavePrintModeController == 3 || cvjs_serverSavePrintModeController == 4 || cvjs_serverSavePrintModeController == 5 ){
																																							jQuery.ajax({
																																							  url:cvjs_phpImagesUrlController,
																																							  type: 'post',
																																							  data: cvjs_serverSave_php_controllerArray,
																																							  success: function(html){
																																									if (cvjs_serverSavePrintModeController == 3)
																																										cvjs_printSavedBitmapToPDF();									
																																									if (cvjs_serverSavePrintModeController == 4)
																																										cvjs_printSavedBitmapToPDF_email();
																																									if (cvjs_serverSavePrintModeController == 5)
																																										cvjs_printSavedBitmapToPDF_uploadServer();
																																							  }
																																							});
																																							return;
																																						}

																																						// standard print case
																																						jQuery("#wait_looper_"+floorplan_div_Array[cvjs_active_floorplan_div_nr]).hide();
																																						//console.log(html3);

																																							if (cvjs_serverSavePrintModeController == 0){
																																							// standard print case
																																								printWindow = window.open(htmlPrintFile, 'CADViewer JS - Print', 'height='+screen.height*0.5+',width='+screen.width*0.5);
																																								printWindow.focus();
																																							}
																																							if (cvjs_serverSavePrintModeController == 6){ //3.3.01f						
																																									cvjs_pngForSVG(htmlPrintFile);
																																							}
																																						}
																																						else{ // splitfile =10
	if (cvjs_debug) 																																						console.log(splitFile+" saving serverString 11 not implemented");








																																						}
																																			  }  // end success
																																			});









																																		}
																															  }  // end success
																															});

																													}

																										  }  // end success
																										});

																								}
																					  }  // end success
																					});
																				}
																	  }  // end success
																	});
																}
														  }  // end success
														});
													}
											  }  // end success
											});
										}
								  }  // end success
								});

							}
					  }  // end success
					});
				}
	  }  // end success

	});

}







/**  REDLINE /STICKYNOTE SAVE LOAD  - PRINT  */



//VVVVVVVVVVVS

var cvjs_displayMagnifyingGlassFlag = [false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false];
var cvjs_firstDisplayMagnifying = [true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true];

function cvjs_displayMagnifyingGlass(floorplan_div){


	// 3.0.15c   - add "_svg" to div, if called through external API
	if (floorplan_div.lastIndexOf("_svg") == floorplan_div.length-4){
			// do nothing
	}
	else{
		floorplan_div = floorplan_div + "_svg";
	}



	cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(floorplan_div);
	cvjs_displayMagnifyingGlassFlag[cvjs_active_floorplan_div_nr] = !cvjs_displayMagnifyingGlassFlag[cvjs_active_floorplan_div_nr];

	
	
	if (cvjs_displayMagnifyingGlassFlag[cvjs_active_floorplan_div_nr]){

			
		if (cvjs_interactiveMethod_Active[cvjs_active_floorplan_div_nr]) return;
		cvjs_interactiveMethod_Active[cvjs_active_floorplan_div_nr] = true;

		viewBox_X_magn = 0;
		viewBox_Y_magn = 0;
		viewBoxHeight_magn = 0;
		viewBoxWidth_magn = 0;

		if ( cvjs_firstDisplayMagnifying[cvjs_active_floorplan_div_nr]){
			cvjs_firstDisplayMagnifying[cvjs_active_floorplan_div_nr] = false;
			var pos = jQuery('#'+floorplan_div).position();
			var posmenu_x = pos.top+40;
			var posmenu_y = pos.left+jQuery('#'+floorplan_div).width()-648;
			if (posmenu_y <400) posmenu_y = 400;
			
	
			console.log(posmenu_x+"  "+posmenu_y);
			
			//jQuery('#cvjs_floorPlanMagnifyingGlassEncapsulate_'+floorplan_div).offset({ top: posmenu_x, left: posmenu_y });
			jQuery('#cvjs_floorPlanMagnifyingGlassEncapsulate_'+floorplan_div).offset({left:150+jQuery('#'+floorplan_div).position().left, top: 150+jQuery('#'+floorplan_div).position().top});

			}
		jQuery('#cvjs_floorPlanMagnifyingGlassEncapsulate_'+floorplan_div).show();
		cvjs_addHandleFunc_ZoomMagnifyingGlass();
	}
	else{

		jQuery('#cvjs_floorPlanMagnifyingGlassEncapsulate_'+floorplan_div).hide();
		cvjs_removeHandleFunc_ZoomMagnifyingGlass();

		cvjs_interactiveMethod_Active[cvjs_active_floorplan_div_nr] = false;

		// clean up the rubberband
		tPath_r = "M0,0";
		tRubberBand_r.attr({'path': tPath_r});
	}
}


function cvjs_exitBirdsEye(floorplan_div){

	cvjs_interactiveMethod_Active[cvjs_active_floorplan_div_nr] = false;

	cvjs_displayMagnifyingGlassFlag[cvjs_active_floorplan_div_nr] = false;

	jQuery('#cvjs_floorPlanMagnifyingGlassEncapsulate_'+floorplan_div).hide();
	cvjs_removeHandleFunc_ZoomMagnifyingGlass();

	// clean up the rubberband
	tPath_r = "M0,0";
	tRubberBand_r.attr({'path': tPath_r});

//	console.log("hello!");
//	jQuery('#cvjs_magnifyHeader').html("stuff...");

}







function cvjs_addHandleFunc_ZoomMagnifyingGlass() {

	tPath_r = "M" + firstX_r + "," + firstY_r;
	tRubberBand_r = cvjs_rPaper[cvjs_active_floorplan_div_nr].path(tPath_r).attr({stroke: "#b00000", fill : "none"});

	//myText = cvjs_rPaper[cvjs_active_floorplan_div_nr].text(40,90, '');

	canvas_width = jQuery("#"+floorplan_div_Array[cvjs_active_floorplan_div_nr]).width();
	canvas_height = jQuery("#"+floorplan_div_Array[cvjs_active_floorplan_div_nr]).height();

	var position = jQuery("#"+floorplan_div_Array[cvjs_active_floorplan_div_nr]).position();

	global_scale_X = canvas_width/viewBoxWidth[cvjs_active_floorplan_div_nr];
	global_scale_Y = canvas_height/viewBoxHeight[cvjs_active_floorplan_div_nr];

	if (global_scale_X<global_scale_Y)
		global_scale = global_scale_X;
	else
		global_scale = global_scale_Y;

	delta_x = (canvas_width - viewBoxWidth[cvjs_active_floorplan_div_nr]*global_scale)/2 -viewBox[cvjs_active_floorplan_div_nr].X*global_scale + position.left;
	delta_y = (canvas_height - viewBoxHeight[cvjs_active_floorplan_div_nr]*global_scale)/2 -viewBox[cvjs_active_floorplan_div_nr].Y*global_scale + position.top;

	handleGroup = cvjs_rPaper[cvjs_active_floorplan_div_nr].rect(actualLLX[cvjs_active_floorplan_div_nr],actualLLY[cvjs_active_floorplan_div_nr], actualURX[cvjs_active_floorplan_div_nr]-actualLLX[cvjs_active_floorplan_div_nr], actualURY[cvjs_active_floorplan_div_nr]-actualLLY[cvjs_active_floorplan_div_nr]).attr({fill: "#fff", "fill-opacity":"0.01"});
//	handleGroup.drag(move_cvjs_create_zoommagnify_rectangle,start_cvjs_create_zoommagnify_rectangle,stop_cvjs_create_zoommagnify_rectangle);
	handleGroup.mousemove(move_cvjs_create_zoommagnify_rectangle);
}

function cvjs_removeHandleFunc_ZoomMagnifyingGlass() {
	handleGroup.selectAll('handler').remove();
	handleGroup.remove();
	//console.log("handler removed");

}


var start_cvjs_create_zoommagnify_rectangle = function() {

	flag_rectangle= false;
	var zoomwindow_stroke = viewBoxWidth[cvjs_active_floorplan_div_nr]/400;

	var rectColor = "#0b0b0b";
	if (cvjs_blackBackground) rectColor = "#FbFbFb";
	console.log(cvjs_blackBackground+"  "+rectColor);

	var attr_2 =  '{\"stroke\": \"'+rectColor+'\", \"fill\" : \"none\", \"stroke-opacity\": \"0.5\", \"stroke-width\": \"'+zoomwindow_stroke+'\"}';
	var json_obj = jQuery.parseJSON(attr_2);
	tRubberBand_r.attr(json_obj);
}


var zoomwindow_counter = 0;


var cvjs_magnifyingGlassWidth = 648;
var cvjs_magnifyingGlassHeight = 450;
var cvjs_magnifyCanvasDrawn = true;

var magnify_startflag = true;
var startTime;
var deltaDist_pre;
var delta_dist;


// this is our idle mouse method

jQuery(document).ready(function(){

   idleTime = 0;

   //Increment the idle time counter every second.
   var idleInterval = setInterval(timerIncrement, 100);

   function timerIncrement()
   {
     idleTime++;
     if (idleTime > 2)
     {
       doIdleMouseSetting();
     }
   }

   //Zero the idle timer on mouse movement.
   jQuery(this).mousemove(function(e){
      idleTime = 0;
      magnify_startflag = true;
   });

   function doIdleMouseSetting()
   {

	//   console.log("idle mouse!");
      if (cvjs_displayMagnifyingGlassFlag[cvjs_active_floorplan_div_nr]){
			if (magnify_startflag){
				magnify_startflag = false;
				if (cvjs_magnifyCanvasDrawn && !viewBox_X_magn==0 && !viewBox_Y_magn==0 ){
					cvjs_magnifyCanvasDrawn = false;
					//tRubberBand_r.attr({fill: '#ff9999', "fill-opacity": "0.5", stroke: '#ff9999', 'stroke-opacity': "1"});
					cvjs_renderMagnifyingGlass(viewBox_X_magn, viewBox_Y_magn, viewBoxWidth_magn, viewBoxHeight_magn);
				}
			}
		}
   }

})



var viewBox_X_magn;
var viewBox_Y_magn;
var viewBoxHeight_magn;
var viewBoxWidth_magn;


function cvjs_move_birdseye(x,y){

	var text = x+" "+y+" flag "+cvjs_magnifyCanvasDrawn+" move top "+delta_dist+"                                                 ";

	text = x+" "+y+" flag "+cvjs_magnifyCanvasDrawn+" ";
	//jQuery("#myText").html(text);

	var delta = (actualURX[cvjs_active_floorplan_div_nr]-actualLLX[cvjs_active_floorplan_div_nr])/20;

		// 2016-04-11
	x = x+document.body.scrollLeft;
	y = y+document.body.scrollTop;

	firstX_r = x;
	firstY_r = y;

	tPath_r = "M" + ((firstX_r-delta_x)/global_scale-delta*1.44) + "," + ((firstY_r-delta_y)/global_scale-delta);
	tPath_r += "h" + (2*delta*1.44) + "v" + (2*delta)+"h"+(-2*delta*1.44)+"v"+(-2*delta)+" Z";

	tRubberBand_r.attr({'path': tPath_r});

	viewBox_X_magn = (firstX_r-delta_x)/global_scale-delta*0.98;
	viewBox_Y_magn = (firstY_r-delta_y)/global_scale-delta*0.98;
	viewBoxHeight_magn = 2*delta*0.96;
	viewBoxWidth_magn = 2*delta*0.96;

	delta_dist = Math.sqrt(Math.pow(x-lastX_r ,2)+Math.pow(y-lastY_r ,2));

}


var move_cvjs_create_zoommagnify_rectangle = function(e,x,y) {

	cvjs_move_birdseye(x,y);

}


function cvjs_renderMagnifyingGlass(viewBox_X_magn, viewBox_Y_magn, viewBoxWidth_magn, viewBoxHeight_magn){

	// case where cvjs_objectIsZoomedExtents = true;
	var svgString;
	var is_explorer = (navigator.userAgent.indexOf('MSIE') > -1) || (navigator.userAgent.indexOf('Trident') > -1);
	var is_firefox = navigator.userAgent.indexOf('Firefox') > -1;

	svgString = cvjs_rPaper[cvjs_active_floorplan_div_nr].toString();

	var svgStringOrg = svgString;

//console.log(svgString);

	// we are changing the setting to be based on magnify values
	// NOTE!  - we must make the variable naming generic so it does not interfere

	var x_svg = viewBox_X_magn;
	var y_svg = viewBox_Y_magn;

	var width_svg_box = viewBoxWidth_magn;
	var height_svg_box = viewBoxHeight_magn;

	var tempString1 = svgString.substring(0, svgString.indexOf("width:")+6);
	var tempString2 = svgString.substring(svgString.indexOf("height:")+6);
	tempString2 = tempString2.substring(tempString2.indexOf(";"));
//	svgString = tempString1+width_svg_box+"; height:"+height_svg_box+tempString2;

	svgString = tempString1+cvjs_magnifyingGlassWidth+"; height:"+cvjs_magnifyingGlassHeight+tempString2;


	var tempString1 = svgString.substring(0, svgString.indexOf("viewBox=")+9);
	var tempString2 = svgString.substring(svgString.indexOf("viewBox=")+10);
	var tempString2 = tempString2.substring(tempString2.indexOf("\""));

	svgString = tempString1+x_svg+" "+y_svg+" "+width_svg_box+" "+height_svg_box+tempString2;


	var xml = svgString;
	xml = xml.replace(/xmlns=\"http:\/\/www.w3.org\/2000\/svg\"/g, '');
	svgString = xml;


//console.log(svgString);


//	var widthHeightFactorSVG = width_svg/height_svg;    // which side to scale from is based on the actual box object
	var widthHeightFactorSVG = width_svg_box/height_svg_box;    // which side to scale from is based on the actual box object
	var widthHeightFactocrPaper = cvjs_printPixelWidth/cvjs_printPixelHeight;

//	console.log("widthHeightFactorSVG "+widthHeightFactorSVG+" widthHeightFactocvjs_rPaper[cvjs_active_floorplan_div_nr] "+widthHeightFactocvjs_rPaper[cvjs_active_floorplan_div_nr]);

    cvjs_ctx = jQuery("#floorPlanCanvasObject_"+floorplan_div_Array[cvjs_active_floorplan_div_nr])[0].getContext('2d');

	cvjs_ctx.canvas.height = Math.round(cvjs_magnifyingGlassHeight);
	cvjs_ctx.canvas.width = Math.round(cvjs_magnifyingGlassWidth);
	jQuery('#cvjs_floorPlanMagnifyingGlass_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).height(cvjs_magnifyingGlassHeight);
	jQuery('#cvjs_floorPlanMagnifyingGlass_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).width(cvjs_magnifyingGlassWidth);

	if (printDebugFlag) jQuery('#cvjs_floorPlanMagnifyingGlass_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).show();

	canvg('cvjs_floorPlanMagnifyingGlass_'+floorplan_div_Array[cvjs_active_floorplan_div_nr], svgString, { renderCallback: function() { cvjs_canvg_renderedMagnifyingGlass(false);}} );

	//console.log("svgString before calling "+svgString);
}


function cvjs_canvg_renderedMagnifyingGlass(mode){

	cvjs_magnifyCanvasDrawn = true;
	
	// why do we get this
	// block the return 2018-01-29
	if (true) return;

	if (cvjs_debug) console.log("do we reach this part");

	if (mode==false)
		setTimeout(function(){cvjs_canvg_renderedMagnifyingGlass(true)},256);
	else{
		cvjs_magnifyCanvasDrawn = true;
		return;
	}
}





	function cvjs_firstPage(floorplan_div){

		cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(floorplan_div);
		
		try{

			var numberofpages = multiPages[cvjs_active_floorplan_div_nr].multiPages;
			var currentpagenr = multiPages[cvjs_active_floorplan_div_nr].currentPage;
			var newpage = 0;
			var textString = "";
			if (newpage == currentpagenr-1){
				//console.log("First page");

				if (multiPages[cvjs_active_floorplan_div_nr].multiPages == 1)
					textString = lTable.languages[cvjs_currentLanguage].InfoMessageModal.SinglePage;
//					jQuery('#cvjs_informationModalText').html(lTable.languages[cvjs_currentLanguage].InfoMessageModal.SinglePage);
				else
					textString = lTable.languages[cvjs_currentLanguage].InfoMessageModal.FirstPage;
//					jQuery('#cvjs_informationModalText').html(lTable.languages[cvjs_currentLanguage].InfoMessageModal.FirstPage);

				cvjs_displayInformationModal(floorplan_div_Array[cvjs_active_floorplan_div_nr], textString);

				//jQuery('#info_messageModal').modal('show');

				return;
				// do nothing, as we are on the last page
			}
			var newfile = multiPages[cvjs_active_floorplan_div_nr].pages[newpage].fileName;
			//console.log(numberofpages+"  "+currentpagenr+" newpage="+newpage+"  newfile="+newfile);


			if (cvjs_loadDrawing_conversionMode){

				//console.log("conversion mode "+cvjs_loadDrawing_conversionMode);
				if (cvjs_conversion_getContentResponse()=="file"){   // this is a file so we just load up the page, it is already converted on the server
					//console.log("we have a file! path:"+cvjs_loaddrawing_FileNamePath[cvjs_active_floorplan_div_nr ]+" file: "+newfile);
					cvjs_LoadDrawing(floorplan_div_Array[cvjs_active_floorplan_div_nr ], cvjs_loaddrawing_FileNamePath[cvjs_active_floorplan_div_nr ], newfile);
				}
				if (cvjs_conversion_getContentResponse()=="stream"){   // this is a file so we just load up the page, it is already converted on the server
				// I want -basic -model or -layout to be replaced with the new page
					if (multiPages[cvjs_active_floorplan_div_nr].pages[newpage].pageName == "ModelSpace"){
						var changeflag= true;
						for (var i=0; i<rest_nname[cvjs_active_floorplan_div_nr ].length; i++){
							if (rest_nname[cvjs_active_floorplan_div_nr ][i]=="layout" && changeflag)  {changeflag = false; rest_nname[cvjs_active_floorplan_div_nr ][i] = "model"; rest_vvalue[cvjs_active_floorplan_div_nr ][i] = "";}
						}
						if (changeflag){
							rest_nname[cvjs_active_floorplan_div_nr ][rest_nname[cvjs_active_floorplan_div_nr ].length] = "model";
							rest_vvalue[cvjs_active_floorplan_div_nr ][rest_nname[cvjs_active_floorplan_div_nr ].length] = "";
						}
					}
					else{
						var changeflag= true;
						for (var i=0; i<rest_nname[cvjs_active_floorplan_div_nr ].length; i++){
							if (rest_nname[cvjs_active_floorplan_div_nr ][i]=="basic")  {changeflag = false; rest_nname[cvjs_active_floorplan_div_nr ][i] = "layout"; rest_vvalue[cvjs_active_floorplan_div_nr ][i] = escapeUnicode(multiPages[cvjs_active_floorplan_div_nr].pages[newpage].pageName);}
							if (rest_nname[cvjs_active_floorplan_div_nr ][i]=="layout"  && changeflag)  {changeflag = false; rest_nname[cvjs_active_floorplan_div_nr ][i] = "layout"; rest_vvalue[cvjs_active_floorplan_div_nr ][i] = escapeUnicode(multiPages[cvjs_active_floorplan_div_nr].pages[newpage].pageName);}
							if (rest_nname[cvjs_active_floorplan_div_nr ][i]=="model"  && changeflag)  {changeflag = false; rest_nname[cvjs_active_floorplan_div_nr ][i] = "layout"; rest_vvalue[cvjs_active_floorplan_div_nr ][i] = escapeUnicode(multiPages[cvjs_active_floorplan_div_nr].pages[newpage].pageName);}
							if (rest_nname[cvjs_active_floorplan_div_nr ][i]=="lastsavedview"  && changeflag)  {changeflag = false; rest_nname[cvjs_active_floorplan_div_nr ][i] = "layout"; rest_vvalue[cvjs_active_floorplan_div_nr ][i] = escapeUnicode(multiPages[cvjs_active_floorplan_div_nr].pages[newpage].pageName);}
							if (rest_nname[cvjs_active_floorplan_div_nr ][i]=="firstlayout"  && changeflag)  {changeflag = false; rest_nname[cvjs_active_floorplan_div_nr ][i] = "layout"; rest_vvalue[cvjs_active_floorplan_div_nr ][i] = escapeUnicode(multiPages[cvjs_active_floorplan_div_nr].pages[newpage].pageName);}
						}

						if (changeflag){
							rest_nname[cvjs_active_floorplan_div_nr ][rest_nname[cvjs_active_floorplan_div_nr ].length] = "layout";
							rest_vvalue[cvjs_active_floorplan_div_nr ][rest_nname[cvjs_active_floorplan_div_nr ].length] = multiPages[cvjs_active_floorplan_div_nr].pages[newpage].pageName;
						}
					}
					cvjs_LoadDrawing_Conversion(floorplan_div_Array[cvjs_active_floorplan_div_nr ], cvjs_conversion_originatingFile[cvjs_active_floorplan_div_nr ], newfile, cvjs_conversion_originatingUsername[cvjs_active_floorplan_div_nr ], cvjs_conversion_originatingPassword[cvjs_active_floorplan_div_nr ]);
				}
			}
			else{

				// multipage SVG file
				if (cvjs_SVG_multiPagesFlag[cvjs_active_floorplan_div_nr]){
					// set the currentpage
					cvjs_SVG_multiPages[cvjs_active_floorplan_div_nr].currentPage = 1;
					// we need to clear out the svg file
					cvjs_rPaper[cvjs_active_floorplan_div_nr] = null;

//					cvjs_LoadDrawing(floorplan_div_Array[cvjs_active_floorplan_div_nr ], cvjs_multipageURL_FileNamePath+"/"+newfile);
					
					
					
					// 2018-03-05
					// we have a wait loop built in to check if the drawing is created on server
					cvjs_checkSVGOnServerBeforeLoad(newfile);					
					
// 					if (!cvjs_multipagePDFtoSVG_PhpLoadFlag)  // standard load
//						cvjs_LoadDrawing(floorplan_div_Array[cvjs_active_floorplan_div_nr], cvjs_multipageURL_FileNamePath + "/"+ newfile );
//					else  // load via getFile
//						cvjs_LoadDrawing( floorplan_div_Array[cvjs_active_floorplan_div_nr], cvjs_phpPath+"getFile_09.php?fileTag="+cvjs_multipagePDFtoSVG_tempDir+"/"+newfile.substring(0, newfile.indexOf(".svg"))+"&remainOnServer=1&Type=svg"); 



//				
					
					
				}
				else  // standard case


					// 2017-08-08, here we have to distinquish between a .js load and .svg load
					if (currentLoadedDrawingFullName.toLowerCase().indexOf(".svg")>-1){
						var extension = currentLoadedDrawingFullName.substring(currentLoadedDrawingFullName.toLowerCase().lastIndexOf(".svg")+1);

						var path = "";  // 3.1.20e
						if (currentLoadedDrawingFullName.indexOf("fileName=")>-1){
							path = currentLoadedDrawingFullName.substring(0,currentLoadedDrawingFullName.lastIndexOf("fileName=")+9);							
						}
						else{  // standard case
							path = currentLoadedDrawingFullName.substring(0,currentLoadedDrawingFullName.lastIndexOf("/")+1);
						}


						cvjs_LoadDrawing(floorplan_div_Array[cvjs_active_floorplan_div_nr ], path+newfile+"."+extension );
					}
					else // standard .js file
						cvjs_LoadDrawing(floorplan_div_Array[cvjs_active_floorplan_div_nr ], cvjs_loaddrawing_FileNamePath[cvjs_active_floorplan_div_nr ], newfile);

			}

		}
		catch (err){
			var i=0;   // do nothing
			//return (err);
		}

		//console.log("open the first page in the set");
	}


	function cvjs_lastPage(floorplan_div){
	
		cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(floorplan_div);
	
		try{

			var numberofpages = multiPages[cvjs_active_floorplan_div_nr].multiPages;
			var currentpagenr = multiPages[cvjs_active_floorplan_div_nr].currentPage;
			var newpage = numberofpages-1;
			var textString = "";

			if (newpage == currentpagenr-1){
				//console.log("Last page");

				if (multiPages[cvjs_active_floorplan_div_nr].multiPages == 1)
					textString = lTable.languages[cvjs_currentLanguage].InfoMessageModal.SinglePage;
					//jQuery('#cvjs_informationModalText').html(lTable.languages[cvjs_currentLanguage].InfoMessageModal.SinglePage);
				else
					textString =lTable.languages[cvjs_currentLanguage].InfoMessageModal.LastPage;
					//jQuery('#cvjs_informationModalText').html(lTable.languages[cvjs_currentLanguage].InfoMessageModal.LastPage);


//				var textString = lTable.languages[cvjs_currentLanguage].InfoMessageModal.UnitLess:
				cvjs_displayInformationModal(floorplan_div_Array[cvjs_active_floorplan_div_nr], textString)

//				jQuery('#info_messageModal').modal('show');
				return;
				// do nothing, as we are on the last page
			}
			var newfile = multiPages[cvjs_active_floorplan_div_nr].pages[newpage].fileName;
			//console.log(numberofpages+"  "+currentpagenr+" newpage="+newpage+"  newfile="+newfile);


			if (cvjs_loadDrawing_conversionMode){

				//console.log("conversion mode "+cvjs_loadDrawing_conversionMode);
				if (cvjs_conversion_getContentResponse()=="file"){   // this is a file so we just load up the page, it is already converted on the server
					//console.log("we have a file! path:"+cvjs_loaddrawing_FileNamePath[cvjs_active_floorplan_div_nr ]+" file: "+newfile);
					cvjs_LoadDrawing(floorplan_div_Array[cvjs_active_floorplan_div_nr ], cvjs_loaddrawing_FileNamePath[cvjs_active_floorplan_div_nr ], newfile);
				}
				if (cvjs_conversion_getContentResponse()=="stream"){   // this is a file so we just load up the page, it is already converted on the server
				// I want -basic -model or -layout to be replaced with the new page
					var changeflag= true;

					if (multiPages[cvjs_active_floorplan_div_nr].pages[newpage].pageName == "ModelSpace"){
						var changeflag= true;
						for (var i=0; i<rest_nname[cvjs_active_floorplan_div_nr ].length; i++){
							if (rest_nname[cvjs_active_floorplan_div_nr ][i]=="layout" && changeflag)  {changeflag = false; rest_nname[cvjs_active_floorplan_div_nr ][i] = "model"; rest_vvalue[cvjs_active_floorplan_div_nr ][i] = "";}
						}
						if (changeflag){
							rest_nname[cvjs_active_floorplan_div_nr ][rest_nname[cvjs_active_floorplan_div_nr ].length] = "model";
							rest_vvalue[cvjs_active_floorplan_div_nr ][rest_nname[cvjs_active_floorplan_div_nr ].length] = "";
						}
					}
					else{
						var changeflag= true;
						for (var i=0; i<rest_nname[cvjs_active_floorplan_div_nr ].length; i++){
							if (rest_nname[cvjs_active_floorplan_div_nr ][i]=="basic")  {changeflag = false; rest_nname[cvjs_active_floorplan_div_nr ][i] = "layout"; rest_vvalue[cvjs_active_floorplan_div_nr ][i] = escapeUnicode(multiPages[cvjs_active_floorplan_div_nr].pages[newpage].pageName);}
							if (rest_nname[cvjs_active_floorplan_div_nr ][i]=="layout"  && changeflag)  {changeflag = false; rest_nname[cvjs_active_floorplan_div_nr ][i] = "layout"; rest_vvalue[cvjs_active_floorplan_div_nr ][i] = escapeUnicode(multiPages[cvjs_active_floorplan_div_nr].pages[newpage].pageName);}
							if (rest_nname[cvjs_active_floorplan_div_nr ][i]=="model"  && changeflag)  {changeflag = false; rest_nname[cvjs_active_floorplan_div_nr ][i] = "layout"; rest_vvalue[cvjs_active_floorplan_div_nr ][i] = escapeUnicode(multiPages[cvjs_active_floorplan_div_nr].pages[newpage].pageName);}
							if (rest_nname[cvjs_active_floorplan_div_nr ][i]=="lastsavedview"  && changeflag)  {changeflag = false; rest_nname[cvjs_active_floorplan_div_nr ][i] = "layout"; rest_vvalue[cvjs_active_floorplan_div_nr ][i] = escapeUnicode(multiPages[cvjs_active_floorplan_div_nr].pages[newpage].pageName);}
							if (rest_nname[cvjs_active_floorplan_div_nr ][i]=="firstlayout"  && changeflag)  {changeflag = false; rest_nname[cvjs_active_floorplan_div_nr ][i] = "layout"; rest_vvalue[cvjs_active_floorplan_div_nr ][i] = escapeUnicode(multiPages[cvjs_active_floorplan_div_nr].pages[newpage].pageName);}
						}

						if (changeflag){
							rest_nname[cvjs_active_floorplan_div_nr ][rest_nname[cvjs_active_floorplan_div_nr ].length] = "layout";
							rest_vvalue[cvjs_active_floorplan_div_nr ][rest_nname[cvjs_active_floorplan_div_nr ].length] = multiPages[cvjs_active_floorplan_div_nr].pages[newpage].pageName;
						}
					}

					cvjs_LoadDrawing_Conversion(floorplan_div_Array[cvjs_active_floorplan_div_nr ], cvjs_conversion_originatingFile[cvjs_active_floorplan_div_nr ], newfile, cvjs_conversion_originatingUsername[cvjs_active_floorplan_div_nr ], cvjs_conversion_originatingPassword[cvjs_active_floorplan_div_nr ]);
				}
			}
			else{
				// multipage SVG file
				if (cvjs_SVG_multiPagesFlag[cvjs_active_floorplan_div_nr]){
					// set the currentpage
					cvjs_SVG_multiPages[cvjs_active_floorplan_div_nr].currentPage = cvjs_SVG_multiPages[cvjs_active_floorplan_div_nr].multiPages;
					// we need to clear out the svg file
					cvjs_rPaper[cvjs_active_floorplan_div_nr] = null;


//					cvjs_LoadDrawing(floorplan_div_Array[cvjs_active_floorplan_div_nr ], cvjs_multipageURL_FileNamePath+"/"+newfile);



					// 2018-03-05
					// we have a wait loop built in to check if the drawing is created on server
					cvjs_checkSVGOnServerBeforeLoad(newfile);					
					
//					if (!cvjs_multipagePDFtoSVG_PhpLoadFlag)  // standard load
//						cvjs_LoadDrawing(floorplan_div_Array[cvjs_active_floorplan_div_nr], cvjs_multipageURL_FileNamePath + "/"+ newfile );
//					else  // load via getFile
//						cvjs_LoadDrawing( floorplan_div_Array[cvjs_active_floorplan_div_nr], cvjs_phpPath+"getFile_09.php?fileTag="+cvjs_multipagePDFtoSVG_tempDir+"/"+newfile.substring(0, newfile.indexOf(".svg"))+"&remainOnServer=1&Type=svg"); 
//				


				}
				else  // standard case

					// 2017-08-08, here we have to distinquish between a .js load and .svg load
					if (currentLoadedDrawingFullName.toLowerCase().indexOf(".svg")>-1){
						var extension = currentLoadedDrawingFullName.substring(currentLoadedDrawingFullName.toLowerCase().lastIndexOf(".svg")+1);

						var path = "";  // 3.1.20e
						if (currentLoadedDrawingFullName.indexOf("fileName=")>-1){
							path = currentLoadedDrawingFullName.substring(0,currentLoadedDrawingFullName.lastIndexOf("fileName=")+9);							
						}
						else{  // standard case
							path = currentLoadedDrawingFullName.substring(0,currentLoadedDrawingFullName.lastIndexOf("/")+1);
						}


						cvjs_LoadDrawing(floorplan_div_Array[cvjs_active_floorplan_div_nr ], path+newfile+"."+extension );
					}
					else // standard .js file
						cvjs_LoadDrawing(floorplan_div_Array[cvjs_active_floorplan_div_nr ], cvjs_loaddrawing_FileNamePath[cvjs_active_floorplan_div_nr ], newfile);
			}

		}
		catch (err){
			var i=0;   // do nothing
			//return (err);
		}

		//console.log("open the last page in the set");
	}


	function cvjs_nextPage(floorplan_div){

	
		cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(floorplan_div);
		
	
//	 if (cvjs_debug) window.alert(floorplan_div+" multiPages[cvjs_active_floorplan_div_nr].multiPages "+multiPages[cvjs_active_floorplan_div_nr].multiPages+" multiPages[cvjs_active_floorplan_div_nr].currentPage "+multiPages[cvjs_active_floorplan_div_nr].currentPage);
			

		try{
			var numberofpages = multiPages[cvjs_active_floorplan_div_nr].multiPages;
			var currentpagenr = multiPages[cvjs_active_floorplan_div_nr].currentPage;

			var newpage = currentpagenr+1;
			// make it the proper array number
			newpage = newpage-1;
			var textString = "";

			if (newpage > numberofpages-1){
//				console.log("Last page");

				if (multiPages[cvjs_active_floorplan_div_nr].multiPages == 1)
					textString = lTable.languages[cvjs_currentLanguage].InfoMessageModal.SinglePage;
					//jQuery('#cvjs_informationModalText').html(lTable.languages[cvjs_currentLanguage].InfoMessageModal.SinglePage);
				else
					textString = lTable.languages[cvjs_currentLanguage].InfoMessageModal.LastPage;
					//jQuery('#cvjs_informationModalText').html(lTable.languages[cvjs_currentLanguage].InfoMessageModal.LastPage);

//				jQuery('#info_messageModal').modal('show');

//				var textString = lTable.languages[cvjs_currentLanguage].InfoMessageModal.UnitLess;
				cvjs_displayInformationModal(floorplan_div_Array[cvjs_active_floorplan_div_nr], textString)


				return;
				// do nothing, as we are on the last page
			}
						
			var newfile = multiPages[cvjs_active_floorplan_div_nr].pages[newpage].fileName;

	if (cvjs_debug) 			console.log(numberofpages+"  "+currentpagenr+" newpage="+newpage+"  newfile="+newfile+" cvjs_loadDrawing_conversionMode "+cvjs_loadDrawing_conversionMode+" cvjs_loaddrawing_FileNamePath[cvjs_active_floorplan_div_nr ]="+cvjs_loaddrawing_FileNamePath[cvjs_active_floorplan_div_nr ]+" currentLoadedDrawingFullName="+currentLoadedDrawingFullName);


			if (cvjs_loadDrawing_conversionMode){

				//console.log("conversion mode "+cvjs_loadDrawing_conversionMode+"  newfile="+newfile);
				if (cvjs_conversion_getContentResponse()=="file"){   // this is a file so we just load up the page, it is already converted on the server
					//console.log("we have a file! path:"+cvjs_loaddrawing_FileNamePath[cvjs_active_floorplan_div_nr ]+" file: "+newfile);
					cvjs_LoadDrawing(floorplan_div_Array[cvjs_active_floorplan_div_nr ], cvjs_loaddrawing_FileNamePath[cvjs_active_floorplan_div_nr ], newfile);
				}
				if (cvjs_conversion_getContentResponse()=="stream"){   //
						// we need to set up the conversion parameters so the proper page is picked up

				// I want -basic -model or -layout to be replaced with the new page
					if (multiPages[cvjs_active_floorplan_div_nr].pages[newpage].pageName == "ModelSpace"){
						var changeflag= true;
						for (var i=0; i<rest_nname[cvjs_active_floorplan_div_nr ].length; i++){
							if (rest_nname[cvjs_active_floorplan_div_nr ][i]=="layout" && changeflag)  {changeflag = false; rest_nname[cvjs_active_floorplan_div_nr ][i] = "model"; rest_vvalue[cvjs_active_floorplan_div_nr ][i] = "";}
						}
						if (changeflag){
							rest_nname[cvjs_active_floorplan_div_nr ][rest_nname[cvjs_active_floorplan_div_nr ].length] = "model";
							rest_vvalue[cvjs_active_floorplan_div_nr ][rest_nname[cvjs_active_floorplan_div_nr ].length] = "";
						}
					}
					else{
						var changeflag= true;
						for (var i=0; i<rest_nname[cvjs_active_floorplan_div_nr ].length; i++){
							if (rest_nname[cvjs_active_floorplan_div_nr ][i]=="basic")  {changeflag = false; rest_nname[cvjs_active_floorplan_div_nr ][i] = "layout"; rest_vvalue[cvjs_active_floorplan_div_nr ][i] = escapeUnicode(multiPages[cvjs_active_floorplan_div_nr].pages[newpage].pageName);}
							if (rest_nname[cvjs_active_floorplan_div_nr ][i]=="layout"  && changeflag)  {changeflag = false; rest_nname[cvjs_active_floorplan_div_nr ][i] = "layout"; rest_vvalue[cvjs_active_floorplan_div_nr ][i] = escapeUnicode(multiPages[cvjs_active_floorplan_div_nr].pages[newpage].pageName);}
							if (rest_nname[cvjs_active_floorplan_div_nr ][i]=="model"  && changeflag)  {changeflag = false; rest_nname[cvjs_active_floorplan_div_nr ][i] = "layout"; rest_vvalue[cvjs_active_floorplan_div_nr ][i] = escapeUnicode(multiPages[cvjs_active_floorplan_div_nr].pages[newpage].pageName);}
							if (rest_nname[cvjs_active_floorplan_div_nr ][i]=="lastsavedview"  && changeflag)  {changeflag = false; rest_nname[cvjs_active_floorplan_div_nr ][i] = "layout"; rest_vvalue[cvjs_active_floorplan_div_nr ][i] = escapeUnicode(multiPages[cvjs_active_floorplan_div_nr].pages[newpage].pageName);}
							if (rest_nname[cvjs_active_floorplan_div_nr ][i]=="firstlayout"  && changeflag)  {changeflag = false; rest_nname[cvjs_active_floorplan_div_nr ][i] = "layout"; rest_vvalue[cvjs_active_floorplan_div_nr ][i] = escapeUnicode(multiPages[cvjs_active_floorplan_div_nr].pages[newpage].pageName);}

						}

						if (changeflag){
							rest_nname[cvjs_active_floorplan_div_nr ][rest_nname[cvjs_active_floorplan_div_nr ].length] = "layout";
							rest_vvalue[cvjs_active_floorplan_div_nr ][rest_nname[cvjs_active_floorplan_div_nr ].length] = multiPages[cvjs_active_floorplan_div_nr].pages[newpage].pageName;
						}
					}

					cvjs_LoadDrawing_Conversion(floorplan_div_Array[cvjs_active_floorplan_div_nr ], cvjs_conversion_originatingFile[cvjs_active_floorplan_div_nr ], newfile, cvjs_conversion_originatingUsername[cvjs_active_floorplan_div_nr ], cvjs_conversion_originatingPassword[cvjs_active_floorplan_div_nr ]);

				}
			}
			else{

	if (cvjs_debug) 				console.log("here");
	
		
				// multipage SVG file
				if (cvjs_SVG_multiPagesFlag[cvjs_active_floorplan_div_nr]){
					// set the currentpage
					cvjs_SVG_multiPages[cvjs_active_floorplan_div_nr].currentPage = cvjs_SVG_multiPages[cvjs_active_floorplan_div_nr].currentPage+1;
					// we need to clear out the svg file
					cvjs_rPaper[cvjs_active_floorplan_div_nr] = null;

//					cvjs_LoadDrawing(floorplan_div_Array[cvjs_active_floorplan_div_nr ], cvjs_multipageURL_FileNamePath+"/"+newfile);



					// 2018-03-05
					// we have a wait loop built in to check if the drawing is created on server
					cvjs_checkSVGOnServerBeforeLoad(newfile);					

					
//					if (!cvjs_multipagePDFtoSVG_PhpLoadFlag)  // standard load
//						cvjs_LoadDrawing(floorplan_div_Array[cvjs_active_floorplan_div_nr], cvjs_multipageURL_FileNamePath + "/"+ newfile );
//					else  // load via getFile
//						cvjs_LoadDrawing( floorplan_div_Array[cvjs_active_floorplan_div_nr], cvjs_phpPath+"getFile_09.php?fileTag="+cvjs_multipagePDFtoSVG_tempDir+"/"+newfile.substring(0, newfile.indexOf(".svg"))+"&remainOnServer=1&Type=svg"); 

						//				
					
					
//				
					
					
				}
				else  // standard case

					// 2017-08-08, here we have to distinquish between a .js load and .svg load
					if (currentLoadedDrawingFullName.toLowerCase().indexOf(".svg")>-1){
						var extension = currentLoadedDrawingFullName.substring(currentLoadedDrawingFullName.toLowerCase().lastIndexOf(".svg")+1);
	
						var path = "";  // 3.1.20e
						if (currentLoadedDrawingFullName.indexOf("fileName=")>-1){
							path = currentLoadedDrawingFullName.substring(0,currentLoadedDrawingFullName.lastIndexOf("fileName=")+9);							
						}
						else{  // standard case
							path = currentLoadedDrawingFullName.substring(0,currentLoadedDrawingFullName.lastIndexOf("/")+1);
						}
												
						cvjs_LoadDrawing(floorplan_div_Array[cvjs_active_floorplan_div_nr ], path+newfile+"."+extension );
					}
					else // standard .js file
						cvjs_LoadDrawing(floorplan_div_Array[cvjs_active_floorplan_div_nr ], cvjs_loaddrawing_FileNamePath[cvjs_active_floorplan_div_nr ], newfile);
			}

		}
		catch (err){
			var i=0;   // do nothing
			//return (err);
		}

	}


/**
 * Change page on the current drawing based on page number
 * @param {string} floorplan_div - name of <div> on which CADViewer JS is located
 * @param {int} newpagenumber - a number between 1 and the total pages in the drawing
 * @return {boolean} status - false if newpagenumber outside of range, true if page change

 */
	

	function cvjs_changePageByNumber(floorplan_div, newpagenumber){

	
		cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(floorplan_div);
		
	
//	 if (cvjs_debug) window.alert(floorplan_div+" multiPages[cvjs_active_floorplan_div_nr].multiPages "+multiPages[cvjs_active_floorplan_div_nr].multiPages+" multiPages[cvjs_active_floorplan_div_nr].currentPage "+multiPages[cvjs_active_floorplan_div_nr].currentPage);
			

		try{
			var numberofpages = multiPages[cvjs_active_floorplan_div_nr].multiPages;
			var currentpagenr = multiPages[cvjs_active_floorplan_div_nr].currentPage;
			var newpage = newpagenumber-1;

			// In case of a multipage PDF the page number is stored in a different array
			if (cvjs_SVG_multiPagesFlag[cvjs_active_floorplan_div_nr]){
				numberofpages = cvjs_SVG_multiPages[cvjs_active_floorplan_div_nr].multiPages
				newpage = newpagenumber-1;

								
				// make it the proper array number			
				if ( (newpage>=0)  && (newpage < numberofpages)) {
					// OK, do nothing
				}
				else{
					// we are outside the allowed numbers return
					
					textString = lTable.languages[cvjs_currentLanguage].InfoMessageModal.OutOfRange;
					cvjs_displayInformationModal(floorplan_div_Array[cvjs_active_floorplan_div_nr], textString)
				
					return false;
				}


			}else{

				// make it the proper array number			
				if ( (newpage>=0)  && (newpage<numberofpages)) {
					// OK, do nothing
				}
				else{
					// we are outside the allowed numbers return
					textString = lTable.languages[cvjs_currentLanguage].InfoMessageModal.OutOfRange;
					cvjs_displayInformationModal(floorplan_div_Array[cvjs_active_floorplan_div_nr], textString)
					return false;
				}

			
				
			}
			

			
			var textString = "";

			if (newpage > numberofpages-1){
//				console.log("Last page");

				if (multiPages[cvjs_active_floorplan_div_nr].multiPages == 1)
					textString = lTable.languages[cvjs_currentLanguage].InfoMessageModal.SinglePage;
					//jQuery('#cvjs_informationModalText').html(lTable.languages[cvjs_currentLanguage].InfoMessageModal.SinglePage);
				else
					textString = lTable.languages[cvjs_currentLanguage].InfoMessageModal.LastPage;
					//jQuery('#cvjs_informationModalText').html(lTable.languages[cvjs_currentLanguage].InfoMessageModal.LastPage);

//				jQuery('#info_messageModal').modal('show');

//				var textString = lTable.languages[cvjs_currentLanguage].InfoMessageModal.UnitLess;
				cvjs_displayInformationModal(floorplan_div_Array[cvjs_active_floorplan_div_nr], textString)


				return;
				// do nothing, as we are on the last page
			}
			var newfile = multiPages[cvjs_active_floorplan_div_nr].pages[newpage].fileName;

	if (cvjs_debug) 			console.log(numberofpages+"  "+currentpagenr+" newpage="+newpage+"  newfile="+newfile+" cvjs_loadDrawing_conversionMode "+cvjs_loadDrawing_conversionMode+" cvjs_loaddrawing_FileNamePath[cvjs_active_floorplan_div_nr ]="+cvjs_loaddrawing_FileNamePath[cvjs_active_floorplan_div_nr ]+" currentLoadedDrawingFullName="+currentLoadedDrawingFullName);


			if (cvjs_loadDrawing_conversionMode){

				//console.log("conversion mode "+cvjs_loadDrawing_conversionMode+"  newfile="+newfile);
				if (cvjs_conversion_getContentResponse()=="file"){   // this is a file so we just load up the page, it is already converted on the server
					//console.log("we have a file! path:"+cvjs_loaddrawing_FileNamePath[cvjs_active_floorplan_div_nr ]+" file: "+newfile);
					cvjs_LoadDrawing(floorplan_div_Array[cvjs_active_floorplan_div_nr ], cvjs_loaddrawing_FileNamePath[cvjs_active_floorplan_div_nr ], newfile);
				}
				if (cvjs_conversion_getContentResponse()=="stream"){   //
						// we need to set up the conversion parameters so the proper page is picked up

				// I want -basic -model or -layout to be replaced with the new page
					if (multiPages[cvjs_active_floorplan_div_nr].pages[newpage].pageName == "ModelSpace"){
						var changeflag= true;
						for (var i=0; i<rest_nname[cvjs_active_floorplan_div_nr ].length; i++){
							if (rest_nname[cvjs_active_floorplan_div_nr ][i]=="layout" && changeflag)  {changeflag = false; rest_nname[cvjs_active_floorplan_div_nr ][i] = "model"; rest_vvalue[cvjs_active_floorplan_div_nr ][i] = "";}
						}
						if (changeflag){
							rest_nname[cvjs_active_floorplan_div_nr ][rest_nname[cvjs_active_floorplan_div_nr ].length] = "model";
							rest_vvalue[cvjs_active_floorplan_div_nr ][rest_nname[cvjs_active_floorplan_div_nr ].length] = "";
						}
					}
					else{
						var changeflag= true;
						for (var i=0; i<rest_nname[cvjs_active_floorplan_div_nr ].length; i++){
							if (rest_nname[cvjs_active_floorplan_div_nr ][i]=="basic")  {changeflag = false; rest_nname[cvjs_active_floorplan_div_nr ][i] = "layout"; rest_vvalue[cvjs_active_floorplan_div_nr ][i] = escapeUnicode(multiPages[cvjs_active_floorplan_div_nr].pages[newpage].pageName);}
							if (rest_nname[cvjs_active_floorplan_div_nr ][i]=="layout"  && changeflag)  {changeflag = false; rest_nname[cvjs_active_floorplan_div_nr ][i] = "layout"; rest_vvalue[cvjs_active_floorplan_div_nr ][i] = escapeUnicode(multiPages[cvjs_active_floorplan_div_nr].pages[newpage].pageName);}
							if (rest_nname[cvjs_active_floorplan_div_nr ][i]=="model"  && changeflag)  {changeflag = false; rest_nname[cvjs_active_floorplan_div_nr ][i] = "layout"; rest_vvalue[cvjs_active_floorplan_div_nr ][i] = escapeUnicode(multiPages[cvjs_active_floorplan_div_nr].pages[newpage].pageName);}
							if (rest_nname[cvjs_active_floorplan_div_nr ][i]=="lastsavedview"  && changeflag)  {changeflag = false; rest_nname[cvjs_active_floorplan_div_nr ][i] = "layout"; rest_vvalue[cvjs_active_floorplan_div_nr ][i] = escapeUnicode(multiPages[cvjs_active_floorplan_div_nr].pages[newpage].pageName);}
							if (rest_nname[cvjs_active_floorplan_div_nr ][i]=="firstlayout"  && changeflag)  {changeflag = false; rest_nname[cvjs_active_floorplan_div_nr ][i] = "layout"; rest_vvalue[cvjs_active_floorplan_div_nr ][i] = escapeUnicode(multiPages[cvjs_active_floorplan_div_nr].pages[newpage].pageName);}

						}

						if (changeflag){
							rest_nname[cvjs_active_floorplan_div_nr ][rest_nname[cvjs_active_floorplan_div_nr ].length] = "layout";
							rest_vvalue[cvjs_active_floorplan_div_nr ][rest_nname[cvjs_active_floorplan_div_nr ].length] = multiPages[cvjs_active_floorplan_div_nr].pages[newpage].pageName;
						}
					}

					cvjs_LoadDrawing_Conversion(floorplan_div_Array[cvjs_active_floorplan_div_nr ], cvjs_conversion_originatingFile[cvjs_active_floorplan_div_nr ], newfile, cvjs_conversion_originatingUsername[cvjs_active_floorplan_div_nr ], cvjs_conversion_originatingPassword[cvjs_active_floorplan_div_nr ]);

				}
			}
			else{

	if (cvjs_debug) 				console.log("here");
				// multipage SVG file
				if (cvjs_SVG_multiPagesFlag[cvjs_active_floorplan_div_nr]){
					// set the currentpage
					cvjs_SVG_multiPages[cvjs_active_floorplan_div_nr].currentPage = newpage+1;  // +1, see below
//					cvjs_SVG_multiPages[cvjs_active_floorplan_div_nr].currentPage = cvjs_SVG_multiPages[cvjs_active_floorplan_div_nr].currentPage+1;
					// we need to clear out the svg file
					cvjs_rPaper[cvjs_active_floorplan_div_nr] = null;

//					cvjs_LoadDrawing(floorplan_div_Array[cvjs_active_floorplan_div_nr ], cvjs_multipageURL_FileNamePath+"/"+newfile);



					// 2018-03-05
					// we have a wait loop built in to check if the drawing is created on server
					cvjs_checkSVGOnServerBeforeLoad(newfile);					

					
//					if (!cvjs_multipagePDFtoSVG_PhpLoadFlag)  // standard load
//						cvjs_LoadDrawing(floorplan_div_Array[cvjs_active_floorplan_div_nr], cvjs_multipageURL_FileNamePath + "/"+ newfile );
//					else  // load via getFile
//						cvjs_LoadDrawing( floorplan_div_Array[cvjs_active_floorplan_div_nr], cvjs_phpPath+"getFile_09.php?fileTag="+cvjs_multipagePDFtoSVG_tempDir+"/"+newfile.substring(0, newfile.indexOf(".svg"))+"&remainOnServer=1&Type=svg"); 

						//				
					
					
//				
					
					
				}
				else  // standard case

					// 2017-08-08, here we have to distinquish between a .js load and .svg load
					if (currentLoadedDrawingFullName.toLowerCase().indexOf(".svg")>-1){
						var extension = currentLoadedDrawingFullName.substring(currentLoadedDrawingFullName.toLowerCase().lastIndexOf(".svg")+1);

						var path = "";  // 3.1.20e
						if (currentLoadedDrawingFullName.indexOf("fileName=")>-1){
							path = currentLoadedDrawingFullName.substring(0,currentLoadedDrawingFullName.lastIndexOf("fileName=")+9);							
						}
						else{  // standard case
							path = currentLoadedDrawingFullName.substring(0,currentLoadedDrawingFullName.lastIndexOf("/")+1);
						}
						
						cvjs_LoadDrawing(floorplan_div_Array[cvjs_active_floorplan_div_nr ], path+newfile+"."+extension );
					}
					else // standard .js file
						cvjs_LoadDrawing(floorplan_div_Array[cvjs_active_floorplan_div_nr ], cvjs_loaddrawing_FileNamePath[cvjs_active_floorplan_div_nr ], newfile);
			}

		}
		catch (err){
			var i=0;   // do nothing
			return false;

			//return (err);
		}
		
		return true;

	}

	
	
	
	

function escapeUnicode(str) {

    return str.replace(/[^\0-~]/g, function(ch) {
        return "\\u" + ("0000" + ch.charCodeAt().toString(16)).slice(-4);
    });
}





	function cvjs_previousPage(floorplan_div){
	
		cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(floorplan_div);
		
		try{

			var numberofpages = multiPages[cvjs_active_floorplan_div_nr].multiPages;
			var currentpagenr = multiPages[cvjs_active_floorplan_div_nr].currentPage;
			var newpage = currentpagenr-1;
			// make it the proper array number
			newpage = newpage-1;
			var textString = "";

			if (newpage < 0){
//				console.log("First page");

				if (multiPages[cvjs_active_floorplan_div_nr].multiPages == 1)
					textString = lTable.languages[cvjs_currentLanguage].InfoMessageModal.SinglePage;
				//	jQuery('#cvjs_informationModalText').html(lTable.languages[cvjs_currentLanguage].InfoMessageModal.SinglePage);
				else
					textString = lTable.languages[cvjs_currentLanguage].InfoMessageModal.FirstPage;
				//	jQuery('#cvjs_informationModalText').html(lTable.languages[cvjs_currentLanguage].InfoMessageModal.FirstPage);

//				jQuery('#info_messageModal').modal('show');
//				var textString = lTable.languages[cvjs_currentLanguage].InfoMessageModal.UnitLess;
				cvjs_displayInformationModal(floorplan_div_Array[cvjs_active_floorplan_div_nr], textString)


				return;
				// do nothing, as we are on the last page
			}
			var newfile = multiPages[cvjs_active_floorplan_div_nr].pages[newpage].fileName;
			//console.log(numberofpages+"  "+currentpagenr+" newpage="+newpage+"  newfile="+newfile);


			if (cvjs_loadDrawing_conversionMode){

				//console.log("conversion mode "+cvjs_loadDrawing_conversionMode);
				if (cvjs_conversion_getContentResponse()=="file"){   // this is a file so we just load up the page, it is already converted on the server
					//console.log("we have a file! path:"+cvjs_loaddrawing_FileNamePath[cvjs_active_floorplan_div_nr ]+" file: "+newfile);
					cvjs_LoadDrawing(floorplan_div_Array[cvjs_active_floorplan_div_nr ], cvjs_loaddrawing_FileNamePath[cvjs_active_floorplan_div_nr ], newfile);
				}
				if (cvjs_conversion_getContentResponse()=="stream"){   // this is a file so we just load up the page, it is already converted on the server
						// we need to set up the conversion parameters so the proper page is picked up
				// I want -basic -model or -layout to be replaced with the new page

					if (multiPages[cvjs_active_floorplan_div_nr].pages[newpage].pageName == "ModelSpace"){
						var changeflag= true;
						for (var i=0; i<rest_nname[cvjs_active_floorplan_div_nr ].length; i++){
							if (rest_nname[cvjs_active_floorplan_div_nr ][i]=="layout" && changeflag)  {changeflag = false; rest_nname[cvjs_active_floorplan_div_nr ][i] = "model"; rest_vvalue[cvjs_active_floorplan_div_nr ][i] = "";}
						}
						if (changeflag){
							rest_nname[cvjs_active_floorplan_div_nr ][rest_nname[cvjs_active_floorplan_div_nr ].length] = "model";
							rest_vvalue[cvjs_active_floorplan_div_nr ][rest_nname[cvjs_active_floorplan_div_nr ].length] = "";
						}
					}
					else{
						var changeflag= true;
						for (var i=0; i<rest_nname[cvjs_active_floorplan_div_nr ].length; i++){
							if (rest_nname[cvjs_active_floorplan_div_nr ][i]=="basic")  {changeflag = false; rest_nname[cvjs_active_floorplan_div_nr ][i] = "layout"; rest_vvalue[cvjs_active_floorplan_div_nr ][i] = escapeUnicode(multiPages[cvjs_active_floorplan_div_nr].pages[newpage].pageName);}
							if (rest_nname[cvjs_active_floorplan_div_nr ][i]=="layout"  && changeflag)  {changeflag = false; rest_nname[cvjs_active_floorplan_div_nr ][i] = "layout"; rest_vvalue[cvjs_active_floorplan_div_nr ][i] = escapeUnicode(multiPages[cvjs_active_floorplan_div_nr].pages[newpage].pageName);}
							if (rest_nname[cvjs_active_floorplan_div_nr ][i]=="model"  && changeflag)  {changeflag = false; rest_nname[cvjs_active_floorplan_div_nr ][i] = "layout"; rest_vvalue[cvjs_active_floorplan_div_nr ][i] = escapeUnicode(multiPages[cvjs_active_floorplan_div_nr].pages[newpage].pageName);}
							if (rest_nname[cvjs_active_floorplan_div_nr ][i]=="lastsavedview"  && changeflag)  {changeflag = false; rest_nname[cvjs_active_floorplan_div_nr ][i] = "layout"; rest_vvalue[cvjs_active_floorplan_div_nr ][i] = escapeUnicode(multiPages[cvjs_active_floorplan_div_nr].pages[newpage].pageName);}
							if (rest_nname[cvjs_active_floorplan_div_nr ][i]=="firstlayout"  && changeflag)  {changeflag = false; rest_nname[cvjs_active_floorplan_div_nr ][i] = "layout"; rest_vvalue[cvjs_active_floorplan_div_nr ][i] = escapeUnicode(multiPages[cvjs_active_floorplan_div_nr].pages[newpage].pageName);}
						}

						if (changeflag){
							rest_nname[cvjs_active_floorplan_div_nr ][rest_nname[cvjs_active_floorplan_div_nr ].length] = "layout";
							rest_vvalue[cvjs_active_floorplan_div_nr ][rest_nname[cvjs_active_floorplan_div_nr ].length] = multiPages[cvjs_active_floorplan_div_nr].pages[newpage].pageName;
						}
					}

					cvjs_LoadDrawing_Conversion(floorplan_div_Array[cvjs_active_floorplan_div_nr ], cvjs_conversion_originatingFile[cvjs_active_floorplan_div_nr ], newfile, cvjs_conversion_originatingUsername[cvjs_active_floorplan_div_nr ], cvjs_conversion_originatingPassword[cvjs_active_floorplan_div_nr ]);
				}
			}
			else{

				// multipage SVG file
				if (cvjs_SVG_multiPagesFlag[cvjs_active_floorplan_div_nr]){
					// set the currentpage
					cvjs_SVG_multiPages[cvjs_active_floorplan_div_nr].currentPage = cvjs_SVG_multiPages[cvjs_active_floorplan_div_nr].currentPage-1;
					// we need to clear out the svg file
					cvjs_rPaper[cvjs_active_floorplan_div_nr] = null;
//					cvjs_LoadDrawing(floorplan_div_Array[cvjs_active_floorplan_div_nr ], cvjs_multipageURL_FileNamePath+"/"+newfile);




					// 2018-03-05
					// we have a wait loop built in to check if the drawing is created on server
					cvjs_checkSVGOnServerBeforeLoad(newfile);					

					
//					if (!cvjs_multipagePDFtoSVG_PhpLoadFlag)  // standard load
//						cvjs_LoadDrawing(floorplan_div_Array[cvjs_active_floorplan_div_nr], cvjs_multipageURL_FileNamePath + "/"+ newfile );
//					else  // load via getFile
//						cvjs_LoadDrawing( floorplan_div_Array[cvjs_active_floorplan_div_nr], cvjs_phpPath+"getFile_09.php?fileTag="+cvjs_multipagePDFtoSVG_tempDir+"/"+newfile.substring(0, newfile.indexOf(".svg"))+"&remainOnServer=1&Type=svg"); 
//				



				}
				else  // standard case

					// 2017-08-08, here we have to distinquish between a .js load and .svg load
					if (currentLoadedDrawingFullName.toLowerCase().indexOf(".svg")>-1){
						var extension = currentLoadedDrawingFullName.substring(currentLoadedDrawingFullName.toLowerCase().lastIndexOf(".svg")+1);

						var path = "";  // 3.1.20e
						if (currentLoadedDrawingFullName.indexOf("fileName=")>-1){
							path = currentLoadedDrawingFullName.substring(0,currentLoadedDrawingFullName.lastIndexOf("fileName=")+9);							
						}
						else{  // standard case
							path = currentLoadedDrawingFullName.substring(0,currentLoadedDrawingFullName.lastIndexOf("/")+1);
						}

						cvjs_LoadDrawing(floorplan_div_Array[cvjs_active_floorplan_div_nr ], path+newfile+"."+extension );
					}
					else // standard .js file
						cvjs_LoadDrawing(floorplan_div_Array[cvjs_active_floorplan_div_nr ], cvjs_loaddrawing_FileNamePath[cvjs_active_floorplan_div_nr ], newfile);

			}

		}
		catch (err){
			var i=0;   // do nothing
			//return (err);
		}

		//console.log("load the previous page in the set");
	}








/**
 * Sets the the response of
 * @param {boolean} supressflag - true to supress hyperlink colors, false to keep standard highlight
 */

	function cvjs_setSupressHyperlinkColors(supressflag){

		cvjs_supressHyperlinkColors = supressflag


	}





/**
 * Sets the click response of URl links to either single click or double click
 * @param {int} click - 1: single click 2: double click
 */

	function cvjs_setUrl_singleDoubleClick(click){

		cvjs_Url_click_control = 1;

		if (click == 1)	cvjs_Url_click_control = 1;
		if (click == 2) cvjs_Url_click_control = 2;

	}


var cvjs_Url_encapsulate_callback = false;

/**
 * Encapsulate Url in JavaScript callback method cvjs_Url_callback(). Developer gets control over all hyperlinks in drawing
 * @param {boolean} true: enable callback method false: disable callback method (link directly from drawing)
 */
	function cvjs_encapsulateUrl_callback(flag){

		cvjs_Url_encapsulate_callback = flag;


	}





/**
 * Enable or disable pan operations with a smaller thumbnail drawing object, thereby increasing redraw speed.
 * For large drawings and on limited capacity devices, set this option to true.
 * @param {boolean} panState - true for pan with thumbnails, false for pan with original image
 */

	function cvjs_setPanState(panState){

		panWithThumb = panState;

	}


/**
 * Identify the id of the last Object Space selected - Object Spaces, Sticky Notes and Redlines are differentiated.
 * @return {string} objectId - The objectId is (-1) in case of no current object selected
 */

	function cvjs_idObjectClicked(){

		if (lastObj[cvjs_active_floorplan_div_nr] >= 0){

			var objectId = vqRooms[cvjs_active_floorplan_div_nr][lastObj[cvjs_active_floorplan_div_nr]].data("id");
			return objectId;
		}
		return -1;
	}


/**
 * Identify the id of the last Object Space selected - Object Spaces, Sticky Notes and Redlines are differentiated.
 * @return {string} objectId - The objectId is (-1) in case of no current object selected
 */

	function cvjs_IdObjectClicked(){

	//window.alert(lastObj[cvjs_active_floorplan_div_nr]);
		
		if (lastObj[cvjs_active_floorplan_div_nr]>= 0){

			var objectId = vqRooms[cvjs_active_floorplan_div_nr][lastObj[cvjs_active_floorplan_div_nr]].data("id");
			return objectId;
		}
		return -1;
	}




/**
 * Identify the name of the last Object Space selected - Object Spaces, Sticky Notes and Redlines are differentiated.
 * @return {string} Name - The Name is (-1) in case of no current object selected
 */

	function cvjs_NameObjectClicked(){

		if (lastObj[cvjs_active_floorplan_div_nr] >= 0){

			var Name = vqRooms[cvjs_active_floorplan_div_nr][lastObj[cvjs_active_floorplan_div_nr]].data("name");
			return Name;
		}
		return -1;
	}






/**
 * Identify the node identifier of the last Object Space selected - Object Spaces, Sticky Notes and Redlines are differentiated.
 * @return {string} nodeId - The nodeId is (-1) in case of no current object selected
 */

	function cvjs_NodeObjectClicked(){

		if (lastObj[cvjs_active_floorplan_div_nr] >= 0){

			var objectId = vqRooms[cvjs_active_floorplan_div_nr][lastObj[cvjs_active_floorplan_div_nr]].data("node");
			return objectId;
		}
		return -1;
	}


/**
 * Identify the node identifier of the last Sticky Note selected - Object Spaces, Sticky Notes and Redlines are differentiated.
 * @return {string} nodeId - The nodeId is (-1) in case of no current object selected
 */

	function cvjs_StickyNoteClicked(){

		if (lastObjStickyNote[cvjs_active_floorplan_div_nr] >= 0){
//console.log(lastObjStickyNote[cvjs_active_floorplan_div_nr]);

			var objectId = vqStickyNotes[lastObjStickyNote[cvjs_active_floorplan_div_nr]].data("node");
			return objectId;
		}
		return -1;
	}


	function hoverIn(elem) {

//console.log("hoverIn elem="+elem);

		if (lastElem != null){

			var attr_1 = "{\"stroke\" : \""+lastStroke+"\" , \"stroke-opacity\" : "+lastStrokeWidth+" }";
			var json_obj = jQuery.parseJSON(attr_1);
			lastElem.attr(json_obj);


			lastLink = "";
			jQuery("#display_tip").empty().hide();
		}

		lastElem = elem;
		lastStroke = elem.attr("stroke");
		lastStrokeWidth = elem.attr("stroke-width");


		elem.attr({stroke : "cyan", "stroke-opacity" : 4});
		var link = elem.data("hyperlink");

        var o = {
            left: mousex+10,
            top: mousey+10
        };
//console.log("o.left="+o.left+" o.right="+o.right);

		jQuery("#tool_tip").html("<img src=\"../drawings/"+link+"\" border=\"0\" />").show().offset(o);

	}

	function hoverOut(elem) {

//console.log("hoverOut");
//		elem.attr({"stroke" : "red", "stroke-opacity" : 0.10});
//		elem.attr({"stroke" : "red", "stroke-opacity" : 1});
//		elem.hide();
//		jQuery("#tip").empty().hide();
	}


	function doHyperlink(elem) {

//console.log("doHyperlink");
        var o = {
            left: mousex+10,
            top: mousey+10
        };


		var link = elem.data("hyperlink");

		if (flip == 0){
			flip = 1;
			//layer_1.attr({display : "none"});  // here we turn the layer off
			layer_all.drag();
			//cvjs_rPaper[cvjs_active_floorplan_div_nr].drag();
			cvjs_rPaper[cvjs_active_floorplan_div_nr].attr({viewBox : "0 0 800 600"});
		}
		else{
			flip = 0;
			//layer_1.attr({display : "inline"});  // here we turn the layer off
			layer_1.attr({transform : "rotate(10),scale(0.5)" });  //
			layer_2.attr({transform : "rotate(10),scale(0.5)" });  //
			//layer_1.undrag();
			layer_all.undrag();
			//cvjs_rPaper[cvjs_active_floorplan_div_nr].undrag();
		}

		if (lastLink != link)
			{
			lastLink = link;

//console.log("<img src=\"../drawings/"+link+"\" border=\"0\" >");

			jQuery("#display_tip").html("<img src=\"../drawings/"+link+"\" border=\"0\" >").show().offset(o);
			}
		else
			{
			lastLink = "";
			jQuery("#display_tip").empty().hide();
			}
	}



/**
 * Resize CADViewer JS canvas after browser window changes, automatic adjustment based on canvas size and location
 * @param {boolean} doResize - flag to do resize of canvas or not: Parameter doResize is set to false when calling cvjs_windowResize_ after initialization and loading of file. Parameter doResize is set to true when cvjs_windowResize is implemented into the function  jQuery(window).resize(function() {}
 * @param {string} floorplan - name of SVG element containing canvas
 */

function cvjs_windowResize_position(doResize, floorplan){

	// 3.0.13f
	cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(floorplan);

	cvjs_windowResize_position_WidthHeight(doResize, 0, 0, floorplan);

	
	// 3.3.01d
	// 3.3.04a
	if (!cvjs_topDownloadButtonPane)
		jQuery("#topIconMenu"+"_"+floorplan+"_svg").css({left: jQuery("#"+floorplan).position().left+1, top: jQuery("#"+floorplan).position().top+1});  // 3.3.01d
	else 
		jQuery("#topIconMenu"+"_"+floorplan+"_svg").css({left: jQuery("#"+floorplan).position().left+1, top: jQuery("#"+floorplan).position().top+1+cvjs_topDownloadButtonPane_adjustment});  // 3.3.01d
			
//	jQuery("#topIconMenu"+"_"+floorplan+"_svg").css({left: jQuery("#"+floorplan).position().left+1, top: jQuery("#"+floorplan).position().top+1});  // 3.3.01d

	if (true) return;

		
		
}

/**
 * Resize CADViewer JS canvas after browser window changes, automatic adjustment based on canvas size and location
 * @param {string} floorplan - name of SVG element containing canvas
 */

function cvjs_resizeWindow_position(floorplan){

	var doResize = true;	
	
	cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(floorplan);
	cvjs_windowResize_position_WidthHeight(doResize, 0, 0, floorplan);


		
	// 3.3.01d
	// 3.3.04a
	if (!cvjs_topDownloadButtonPane){
		jQuery("#topIconMenu"+"_"+floorplan+"_svg").css({left: jQuery("#"+floorplan).position().left+1, top: jQuery("#"+floorplan).position().top+1});  // 3.3.01d

		// 3.3.05e
		jQuery("#topIconMenu_placeholder_1_"+floorplan+"_svg").css({left: jQuery("#"+floorplan).position().left+1 +cvjs_iconmenu_pos_x, top: jQuery("#"+floorplan).position().top+1+cvjs_iconmenu_pos_y}); 
	}
	else{ 
		jQuery("#topIconMenu"+"_"+floorplan+"_svg").css({left: jQuery("#"+floorplan).position().left+1, top: jQuery("#"+floorplan).position().top+1+cvjs_topDownloadButtonPane_adjustment});  // 3.3.01d

		// 3.3.05e
		jQuery("#topIconMenu_placeholder_1_"+floorplan+"_svg").css({left: jQuery("#"+floorplan).position().left+1+cvjs_iconmenu_pos_x, top: jQuery("#"+floorplan).position().top+1+cvjs_topDownloadButtonPane_adjustment+cvjs_iconmenu_pos_y});
	}

		
	// 3.3.06c
//	var pos = jQuery("#"+floorplan).position();
//	jQuery('#gMenu_'+floorplan+"_svg").offset({ top: pos.top+cvjs_gMenu_pos_y, left: pos.left+cvjs_gMenu_pos_x });

	// 4.1.02l
	var pos_svg = jQuery("#"+floorplan+"_svg").position();
	jQuery('#gMenu_'+floorplan+"_svg").offset({ top: pos_svg.top+cvjs_gMenu_pos_y, left: pos_svg.left+cvjs_gMenu_pos_x });
	
//	window.alert("floorplan"+floorplan+" pos "+pos.top+"  "+pos.left+" svg "+pos_svg.top+"  "+pos_svg.left);		
	// 3.3.01d
//	jQuery("#topIconMenu"+"_"+floorplan+"_svg").css({left: jQuery("#"+floorplan).position().left+1, top: jQuery("#"+floorplan).position().top+1});  // 3.3.01d


	var pos = jQuery("#"+floorplan).position();

	// 4.1.01b
	var posmenu_x = pos.top+jQuery("#"+floorplan+"_svg").height()-75
	var posmenu_y = pos.left+jQuery("#"+floorplan+"_svg").width()-325;
	jQuery("#floatCompareDrawingMenu"+"_"+floorplan+"_svg").offset({ top: posmenu_x, left: posmenu_y});  
	
			
}




/**
 * Resize CADViewer JS canvas after browser window changes, automatic adjustment based on canvas size and location
 * @param {string} model3D - name of canvas element containing 3D model
 * @param {string} floorplan - name of SVG element containing floorplan
 */

function cvjs_resizeWindow_3D(model3D, floorplan){

	var doResize = true;	
	
	cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(floorplan);

//   We set the SVG canvas to very small.
	var position = jQuery("#"+floorplan).position();
	console.log("cvjs_resizeWindow_3D left "+position.left+"  top "+position.top)
	
	jQuery("#"+floorplan).css('position','relative');
	jQuery("#"+floorplan).css('display','block');
	jQuery("#"+floorplan).css('overflow','hidden');

	jQuery("#"+floorplan).width(jQuery("#"+model3D).width());
	jQuery("#"+floorplan).height(40);

	position = jQuery("#"+floorplan).position();
	console.log("cvjs_resizeWindow_3D left "+position.left+"  top "+position.top)
	
// we then set the top menu bars in relation to the model3D canvas

	var position = jQuery("#"+model3D).position();

	console.log("model3D " +position.top+"  "+position.left);
	
	jQuery("#topIconMenu"+"_"+floorplan+"_svg").css({left: jQuery("#"+model3D).position().left+1, top: jQuery("#"+model3D).position().top+1});  // 3.3.01d
	jQuery("#topIconMenu_placeholder_1_"+floorplan+"_svg").css({left: jQuery("#"+model3D).position().left+1 +cvjs_iconmenu_pos_x, top: jQuery("#"+model3D).position().top+1+cvjs_iconmenu_pos_y}); 
	jQuery('#gMenu_'+floorplan+"_svg").offset({ top: position.top+cvjs_gMenu_pos_y, left: position.left+cvjs_gMenu_pos_x });
	
	var posmenu_y = position.left+jQuery("#"+model3D).width()-475;
	
	
	var floorplan_div = +floorplan+"_svg";

	var menu1_width = jQuery('#topIconMenu_placeholder_1_'+floorplan_div).width();
	var menu_location = jQuery('#topIconMenu_'+floorplan_div).position();
	
	if (jQuery(floorplan).width()-menu1_width>392){  // no problem, we have space for menu
		jQuery("#topIconMenu"+"_"+floorplan_div).css({height: '32px'});
		jQuery('#topIconMenu_placeholder_2_'+floorplan_div).offset({ top: jQuery("#"+model3D).position().top+1, left: posmenu_y+ 78 });  // 475-392   392 on the size of the modal			
	}
	else{  // we need to lower the navigation menu
		jQuery('#topIconMenu_placeholder_2_'+floorplan_div).offset({ top: jQuery("#"+model3D).position().top+33, left: posmenu_y+ 78 });  // 475-392   392 on the size of the modal			
		jQuery("#topIconMenu"+"_"+floorplan_div).css({height: '64px'});
	}











	
}

/**
 * Resize CADViewer JS canvas after browser window changes, automatic adjustment based on canvas size and location
 * @param {float}   widthFloorplan - width of containing element in pixels
 * @param {float}   heightFloorplan - height of containing element in pixels
 * @param {string} floorplan - name of SVG element containing canvas
 */

function cvjs_resizeWindow_fixedSize(widthFloorplan, heightFloorplan, floorplan){

	var doResize = true;	
	cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(floorplan);

	cvjs_windowResize_position_WidthHeight(doResize, widthFloorplan, heightFloorplan, floorplan);
	
	// 3.3.01d
	jQuery("#topIconMenu"+"_"+floorplan+"_svg").css({left: jQuery("#"+floorplan).position().left+1, top: jQuery("#"+floorplan).position().top+1});  // 3.3.01d

	if (cvjs_debug) console.log("here insertion "+cvjs_iconmenu_pos_x);	
	// 3.3.05e
	jQuery("#topIconMenu_placeholder_1_"+floorplan+"_svg").css({left: jQuery("#"+floorplan).position().left+1+cvjs_iconmenu_pos_x, top: jQuery("#"+floorplan).position().top+1+cvjs_iconmenu_pos_y});


	// 3.3.06c
//	var pos = jQuery("#"+floorplan).position();
//	jQuery('#gMenu_'+floorplan+"_svg").offset({ top: pos.top+cvjs_gMenu_pos_y, left: pos.left+cvjs_gMenu_pos_x });

	// 4.1.02l
	var pos_svg = jQuery("#"+floorplan+"_svg").position();
	jQuery('#gMenu_'+floorplan+"_svg").offset({ top: pos_svg.top+cvjs_gMenu_pos_y, left: pos_svg.left+cvjs_gMenu_pos_x });

	
	var pos = jQuery("#"+floorplan).position();


	// 4.1.01b
	var posmenu_x = pos.top+jQuery("#"+floorplan+"_svg").height()-75
	var posmenu_y = pos.left+jQuery("#"+floorplan+"_svg").width()-325;
	jQuery("#floatCompareDrawingMenu"+"_"+floorplan+"_svg").offset({ top: posmenu_x, left: posmenu_y});  

	
}



/**
 * Resize CADViewer JS canvas after browser window changes, automatic adjustment based on canvas size and location
 * @param {float}   widthFloorplan - width of containing element in pixels
 * @param {float}   heightFloorplan - height of containing element in pixels
 * @param {string} floorplan - name of SVG element containing canvas
 * @param {int}   xPos - x position of element 
 * @param {int}   yPos - y position of element
 */

function cvjs_resizeWindow_fixedSize_location(widthFloorplan, heightFloorplan, floorplan, xPos, yPos){

	var doResize = true;	
	cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(floorplan);

	jQuery("#"+floorplan).css('position','relative');
	jQuery("#"+floorplan).position(xPos, yPos);
	jQuery("#"+floorplan+"_svg").position(xPos, yPos);
	
	
	
	
	cvjs_windowResize_position_WidthHeight(doResize, widthFloorplan, heightFloorplan, floorplan);
	
	// 3.3.01d
	jQuery("#topIconMenu"+"_"+floorplan+"_svg").css({left: jQuery("#"+floorplan).position().left+1, top: jQuery("#"+floorplan).position().top+1});  // 3.3.01d

	if (cvjs_debug) console.log("here insertion "+cvjs_iconmenu_pos_x);	
	// 3.3.05e
	jQuery("#topIconMenu_placeholder_1_"+floorplan+"_svg").css({left: jQuery("#"+floorplan).position().left+1+cvjs_iconmenu_pos_x, top: jQuery("#"+floorplan).position().top+1+cvjs_iconmenu_pos_y});


	// 3.3.06c
//	var pos = jQuery("#"+floorplan).position();
//	jQuery('#gMenu_'+floorplan+"_svg").offset({ top: pos.top+cvjs_gMenu_pos_y, left: pos.left+cvjs_gMenu_pos_x });

	// 4.1.02l
	var pos_svg = jQuery("#"+floorplan+"_svg").position();
	jQuery('#gMenu_'+floorplan+"_svg").offset({ top: pos_svg.top+cvjs_gMenu_pos_y, left: pos_svg.left+cvjs_gMenu_pos_x });

	
	var pos = jQuery("#"+floorplan).position();


	// 4.1.01b
	var posmenu_x = pos.top+jQuery("#"+floorplan+"_svg").height()-75
	var posmenu_y = pos.left+jQuery("#"+floorplan+"_svg").width()-325;
	jQuery("#floatCompareDrawingMenu"+"_"+floorplan+"_svg").offset({ top: posmenu_x, left: posmenu_y});  

	
}









	// internal method to do resize
 function cvjs_windowResize_position_WidthHeight(doResize, widthFloorplan, heightFloorplan, floorplan){

 	
 if (cvjs_debug) console.log(floorplan+" top resize "); 
   
		floorplan = floorplan+"_svg";   // 2017-12-07 change	
		var floorplan_div = floorplan;
		floorplan ="#"+floorplan;

    // NOTE!!!   we trigger resize when a <div> has been generated, we have therefore to abort if current <div> not initialize
		try{ jQuery(floorplan).position().top }catch(err){ console.log("ERROR!!!");return;}  // we return if empty
	//  3.3.01d

		

		var is_chrome = navigator.userAgent.indexOf('Chrome') > -1;
		var is_firefox = navigator.userAgent.indexOf('Firefox') > -1;
		var is_explorer = (navigator.userAgent.indexOf('MSIE') > -1) || (navigator.userAgent.indexOf('Trident') > -1);

		var is_safari = navigator.userAgent.indexOf("Safari") > -1;
		var is_Opera = navigator.userAgent.indexOf("Presto") > -1;
		if ((is_chrome)&&(is_safari)) {is_safari=false;}


		var position = jQuery(floorplan).position();

		jQuery(floorplan).css('position','absolute');
		jQuery(floorplan).css('display','block');
		jQuery(floorplan).css('overflow','hidden');

//		if (cvjs_debug) console.log("Resize setting position absolute, block, hidden");
		
		
//		console.log(jQuery(floorplan).width()+"   "+jQuery(floorplan).height());

		if (widthFloorplan==0){   // this is the original  cvjs_windowResize_position_
			jQuery(floorplan).width(jQuery(window).width()-position.left);
			jQuery(floorplan).height(jQuery(window).height()-position.top);
		}
		else{			
			jQuery(floorplan).width(widthFloorplan);
			jQuery(floorplan).height(heightFloorplan);
		}

		
		fpWidth = jQuery(floorplan).width();
		fpHeight = jQuery(floorplan).height();

		rpWidth[cvjs_active_floorplan_div_nr] = fpWidth;
		rpHeight[cvjs_active_floorplan_div_nr] = fpHeight;

		floorplan_width = jQuery(floorplan).width()*0.9;
		floorplan_height = jQuery(floorplan).height()*0.9;		
			
//console.log("2 "+floorplan_width+" viewBox "+viewBox);

		
		if (doResize){
            ResizeVq(fpWidth, fpHeight );
		
		}


		// 3.3.01d
		// HERE WE NEED TO REPOSITION TOP NAVIGATION MENU

		
//      3.3.01d     
 				
		var pos = jQuery(floorplan).position();
		var posmenu_x = (pos.top)+5;

		// 3.3.01d
		var posmenu_y = pos.left+jQuery(floorplan).width()-475;
		
		if (posmenu_y <40) posmenu_y = 40;
				
//console.log("resize y "+ posmenu_y+" x "+posmenu_x);				
		
		//jQuery('#floatNavigationMenu_'+floorplan_div).css('position','absolute');  // 3.0.13f
		jQuery('#floatNavigationMenu_'+floorplan_div).offset({ top: posmenu_x, left: posmenu_y });

//		jQuery('#gMenu_'+floorplan_div).offset({ top: pos.top+20, left: pos.left+20 });
// 3.3.02b
		jQuery('#gMenu_'+floorplan_div).offset({ top: pos.top+30, left: pos.left+20 });
		

// 3.3.06c		
		jQuery('#gMenu_'+floorplan_div).offset({ top: pos.top+cvjs_gMenu_pos_x, left: pos.left+cvjs_gMenu_pos_y });
				
		
		var menu1_width = jQuery('#topIconMenu_placeholder_1_'+floorplan_div).width();
		var menu_location = jQuery('#topIconMenu_'+floorplan_div).position();

//		window.alert(menu1_width+"  "+pos.top+"  "+menu_location.top);
		
//		window.alert("menu_location top "+jQuery('#topIconMenu_'+floorplan_div).position().top+" svg top "+pos.top)
		
		if (jQuery(floorplan).width()-menu1_width>392){  // no problem, we have space for menu
			jQuery("#topIconMenu"+"_"+floorplan_div).css({height: '32px'});
			jQuery('#topIconMenu_placeholder_2_'+floorplan_div).offset({ top: jQuery(floorplan).position().top+1, left: posmenu_y+ 78 });  // 475-392   392 on the size of the modal			
		}
		else{  // we need to lower the navigation menu
			jQuery('#topIconMenu_placeholder_2_'+floorplan_div).offset({ top: jQuery(floorplan).position().top+33, left: posmenu_y+ 78 });  // 475-392   392 on the size of the modal			
			jQuery("#topIconMenu"+"_"+floorplan_div).css({height: '64px'});
		}
			
//		console.log(floorplan+"  "+floorplan_div+"  "+doResize+"  "+jQuery(floorplan).width()+"   "+jQuery(floorplan).height()+"  "+pos+"  "+pos.top);
			
	}

	

/**
 * Resize CADViewer JS canvas after browser window changes, automatic adjustment based on canvas size and location
 * @param {boolean} doResize - flag to do resize of canvas or not: Parameter doResize is set to false when calling cvjs_windowResize_ after initialization and loading of file. Parameter doResize is set to true when cvjs_windowResize is implemented into the function  jQuery(window).resize(function() {}
 * @param {float}   widthFloorplan - width of containing element in pixels
 * @param {float}   heightFloorplan - height of containing element in pixels
 * @param {string} floorplan - name of SVG element containing canvas
 */

function cvjs_windowResize_fixedSize(doResize, widthFloorplan, heightFloorplan, floorplan){

	cvjs_windowResize_position_WidthHeight(doResize, widthFloorplan, heightFloorplan, floorplan);
	
	// 3.3.01d
	jQuery("#topIconMenu"+"_"+floorplan+"_svg").css({left: jQuery("#"+floorplan).position().left+1, top: jQuery("#"+floorplan).position().top+1});  // 3.3.01d
	
}




/** CVJS setup and canvas methods  **/



/* Stop IE crying if there is not console support */
if(!(window.console && console.log)) {
	console = {
	log:	function(){},
	debug:	function(){},
	info:	function(){},
	warn:	function(){},
	error:	function(){}
	};
}

//Raphael.fn.popup=function(x,y,text,size){txtattr={font:"12px Helvetica, Arial, sans-serif"}
//size=size||5;text=text||"";var res=this.set(),d=3;res.push(this.path().attr({fill:"#333333",stroke:"#333333"}));res.push(this.text(x,y,text).attr(txtattr).attr({fill:"#fff","font-family":"Helvetica, Arial"}));res.update=function(X,Y,WIDTH){X=X||x;Y=Y||y;var mmax=Math.max,mmin=Math.min,bb=this[1].getBBox(),w=bb.width/2,h=bb.height/2,dir=(X-bb.width<15)?3:1,X=(dir==1)?X:X+WIDTH,dx=[0,w+size*2,0,-w-size*2],dy=[-h*2-size*3,-h-size,0,-h-size],p=["M",X-dx[dir],Y-dy[dir],"l",-size,(dir==2)*-size,-mmax(w-size,0),0,"a",size,size,0,0,1,-size,-size,"l",0,-mmax(h-size,0),(dir==3)*-size,-size,(dir==3)*size,-size,0,-mmax(h-size,0),"a",size,size,0,0,1,size,-size,"l",mmax(w-size,0),0,size,!dir*-size,size,!dir*size,mmax(w-size,0),0,"a",size,size,0,0,1,size,size,"l",0,mmax(h-size,0),(dir==1)*size,size,(dir==1)*-size,size,0,mmax(h-size,0),"a",size,size,0,0,1,-size,size,"l",-mmax(w-size,0),0,"z"].join(","),xy=[{x:X,y:Y+size*2+h},{x:X-size*2-w,y:Y},{x:X,y:Y-size*2-h},{x:X+size*2+w,y:Y}][dir];xy.path=p;this.attr(xy);return this;};return res.update(x,y);};

//var lastObj;
var lastObj = [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1];

//var  popObj;
var popObj = [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1];



//var  lastObjHyperlink = -1;
var lastObjHyperlink = [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1];
//var  popObjHyperlink= -1;
var popObjHyperlink= [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1];

//var  lastObjStickyNote = -1;
var  lastObjStickyNote = [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1];

//var  spaceIdStickyNote[cvjs_active_floorplan_div_nr] = -1;
var  spaceIdStickyNote = [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1];;

//var  popObjStickyNote[cvjs_active_floorplan_div_nr] = -1;
var  popObjStickyNote = [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1];;



var touchCount = 0;
var x1 = 0;
var y1 = 0;
var x2 = 0;
var y2 = 0;
var pdx = 0 ;
var pdy = 0;
var vbx = 0;
var vby = 0;
var basex, basey;


var lastDx = 0;
var lastDy = 0;
var initFlagPolygons = true;


var DefaultZoomFactor = 1.075;
var DefaultZoomFactor_mouseWheel = 1.075;

function CheckPt(x,y)
{
	if (x < viewBox[cvjs_active_floorplan_div_nr].X)
		return false;
	if (x > (viewBox[cvjs_active_floorplan_div_nr].X+viewBox._viewBox[2]))
		return false;
	if (y < viewBox[cvjs_active_floorplan_div_nr].Y)
		return false;
	if (y > (viewBox[cvjs_active_floorplan_div_nr].Y+viewBox._viewBox[3]))
		return false;
	return true;
}

function CheckRoomOnScreen(spc)
{
	var bbox = spc.getBBox();
	var isOn = CheckPt(bbox.x, bbox.y);
	isOn = isOn && CheckPt(bbox.x2, bbox.y2);
	if (!isOn)
		{
		if ((bbox.width > viewBoxWidth[cvjs_active_floorplan_div_nr]) || (bbox.height > viewBoxHeight[cvjs_active_floorplan_div_nr]))
			zoomHere();
		else
			{
			viewBox[cvjs_active_floorplan_div_nr].X = bbox.x + ((bbox.width-viewBoxWidth[cvjs_active_floorplan_div_nr])/2);
			viewBox[cvjs_active_floorplan_div_nr].Y = bbox.y + ((bbox.height-viewBoxHeight[cvjs_active_floorplan_div_nr])/2);
			setView(cvjs_rPaper[cvjs_active_floorplan_div_nr], viewBox[cvjs_active_floorplan_div_nr].X, viewBox[cvjs_active_floorplan_div_nr].Y, viewBoxWidth[cvjs_active_floorplan_div_nr], viewBoxHeight[cvjs_active_floorplan_div_nr]);
			}
		}
}

function findRoom(rmid)
{
	for (spc in vqRooms[cvjs_active_floorplan_div_nr])
	{
		var vqid = vqRooms[cvjs_active_floorplan_div_nr][spc].data("id");
		if (vqid == rmid)
			{
			return spc;
			}
	}
	return -1;
}


function findStickyNotes(rmid)
{
	for (spc in vqStickyNotes)
	{
		var vqid = vqStickyNotes[spc].data("id");
		if (vqid == rmid)
			{
			return spc;
			}
	}
	return -1;
}


function findUrl(rmid)
{
	for (spc in vqURLs)
	{
		var vqid = vqURLs[spc].data("id");
		if (vqid == rmid)
			{
			return spc;
			}
	}
	return -1;
}


function findRoomById(rmid)
{
	for (spc in vqRooms[cvjs_active_floorplan_div_nr])
	{
		if (vqRooms[cvjs_active_floorplan_div_nr][spc].data("id") == rmid)
			return spc;
	}
	return -1;
}


function findIdFromNode(node)
{
	for (spc in vqRooms[cvjs_active_floorplan_div_nr])
	{
		if (vqRooms[cvjs_active_floorplan_div_nr][spc].data("node") == node)
			return vqRooms[cvjs_active_floorplan_div_nr][spc].data("id");
	}
	return -1;
}





function hidePop()
{

//console.log("hidePop  lastObj="+lastObj);

	if (lastObj[cvjs_active_floorplan_div_nr] >= 0 && lastObj[cvjs_active_floorplan_div_nr]< vqRooms[cvjs_active_floorplan_div_nr].length)
		{
		jQuery(vqRooms[cvjs_active_floorplan_div_nr][lastObj[cvjs_active_floorplan_div_nr]].node).qtip('hide');

		//vqRooms[cvjs_active_floorplan_div_nr][lastObj[cvjs_active_floorplan_div_nr]].attr(defaultColor);

		if (!cvjs_supressPopUpModal || cvjs_standardHighLightColors){
			vqRooms[cvjs_active_floorplan_div_nr][lastObj[cvjs_active_floorplan_div_nr]].attr(defaultColor);
		}
		else{
			if (vqRooms[cvjs_active_floorplan_div_nr][lastObj[cvjs_active_floorplan_div_nr]].data("linked")){
				vqRooms[cvjs_active_floorplan_div_nr][lastObj[cvjs_active_floorplan_div_nr]].attr(defaultColor_linked);
			}
			else{
				vqRooms[cvjs_active_floorplan_div_nr][lastObj[cvjs_active_floorplan_div_nr]].attr(defaultColor_unlinked);
			}
		}
		lastObj[cvjs_active_floorplan_div_nr] = -1;
		}


	if (popObj[cvjs_active_floorplan_div_nr] >= 0 && popObj[cvjs_active_floorplan_div_nr]< vqRooms[cvjs_active_floorplan_div_nr].length)
		{
		jQuery(vqRooms[cvjs_active_floorplan_div_nr][popObj[cvjs_active_floorplan_div_nr]].node).qtip('hide');

		//vqRooms[cvjs_active_floorplan_div_nr][popObj[cvjs_active_floorplan_div_nr]].attr(defaultColor);

		if (!cvjs_supressPopUpModal  || cvjs_standardHighLightColors){
			vqRooms[cvjs_active_floorplan_div_nr][popObj[cvjs_active_floorplan_div_nr]].attr(defaultColor);
		}
		else{
			if (vqRooms[cvjs_active_floorplan_div_nr][popObj[cvjs_active_floorplan_div_nr]].data("linked")){
				vqRooms[cvjs_active_floorplan_div_nr][popObj[cvjs_active_floorplan_div_nr]].attr(defaultColor_linked);
			}
			else{
				vqRooms[cvjs_active_floorplan_div_nr][popObj[cvjs_active_floorplan_div_nr]].attr(defaultColor_unlinked);
			}
		}
		popObj[cvjs_active_floorplan_div_nr] = -1;
		}
}


function hidePopStickyNotes()
{

//window.alert("we are returning now hidePop stickynote  c="+lastObj);
// this was blocked around 2017-10-02


// if (true) return;




// here we are returning


	if (lastObjStickyNote[cvjs_active_floorplan_div_nr] >= 0)
		{
		jQuery(vqStickyNotes[lastObjStickyNote[cvjs_active_floorplan_div_nr]].node).qtip('hide');

		//vqRooms[cvjs_active_floorplan_div_nr][lastObj[cvjs_active_floorplan_div_nr]].attr(defaultColor);

		if (!cvjs_supressPopUpModal  || cvjs_standardHighLightColors){
			vqStickyNotes[lastObjStickyNote[cvjs_active_floorplan_div_nr]].attr(defaultColor_StickyNotes);
		}
		else{
			if (vqStickyNotes[lastObjStickyNote[cvjs_active_floorplan_div_nr]].data("linked")){
				vqStickyNotes[lastObjStickyNote[cvjs_active_floorplan_div_nr]].attr(defaultColor_linked);
			}
			else{
				vqStickyNotes[lastObjStickyNote[cvjs_active_floorplan_div_nr]].attr(defaultColor_unlinked);
			}
		}
		lastObjStickyNote[cvjs_active_floorplan_div_nr] = -1;
		}


	if (popObjStickyNote[cvjs_active_floorplan_div_nr] >= 0)
		{
		jQuery(vqStickyNotes[popObjStickyNote[cvjs_active_floorplan_div_nr]].node).qtip('hide');

		//vqRooms[cvjs_active_floorplan_div_nr][popObj[cvjs_active_floorplan_div_nr]].attr(defaultColor);

		if (!cvjs_supressPopUpModal  || cvjs_standardHighLightColors){
			vqStickyNotes[popObjStickyNote[cvjs_active_floorplan_div_nr]].attr(defaultColor_StickyNotes);
		}
		else{
			if (vqStickyNotes[popObjStickyNote[cvjs_active_floorplan_div_nr]].data("linked")){
				vqStickyNotes[popObjStickyNote[cvjs_active_floorplan_div_nr]].attr(defaultColor_linked);
			}
			else{
				vqStickyNotes[popObjStickyNote[cvjs_active_floorplan_div_nr]].attr(defaultColor_unlinked);
			}
		}
		popObjStickyNote[cvjs_active_floorplan_div_nr] = -1;
		}
}





function cvjs_hidePop()
{

//console.log("cvjs_hidePop  lastObj="+lastObj);
	try{

		if (lastObj[cvjs_active_floorplan_div_nr] >= 0)
			{
			jQuery(vqRooms[cvjs_active_floorplan_div_nr][lastObj[cvjs_active_floorplan_div_nr]].node).qtip('hide');

			//vqRooms[cvjs_active_floorplan_div_nr][lastObj[cvjs_active_floorplan_div_nr]].attr(defaultColor);
			if (!cvjs_supressPopUpModal  || cvjs_standardHighLightColors){
				vqRooms[cvjs_active_floorplan_div_nr][lastObj[cvjs_active_floorplan_div_nr]].attr(defaultColor);
			}
			else{
				if (vqRooms[cvjs_active_floorplan_div_nr][lastObj[cvjs_active_floorplan_div_nr]].data("linked")){
					vqRooms[cvjs_active_floorplan_div_nr][lastObj[cvjs_active_floorplan_div_nr]].attr(defaultColor_linked);
				}
				else{
					vqRooms[cvjs_active_floorplan_div_nr][lastObj[cvjs_active_floorplan_div_nr]].attr(defaultColor_unlinked);
				}
			}

			lastObj[cvjs_active_floorplan_div_nr] = -1;
			}


		if (popObj >= 0)
			{
			jQuery(vqRooms[cvjs_active_floorplan_div_nr][popObj[cvjs_active_floorplan_div_nr]].node).qtip('hide');

			//vqRooms[cvjs_active_floorplan_div_nr][popObj[cvjs_active_floorplan_div_nr]].attr(defaultColor);
			if (!cvjs_supressPopUpModal || cvjs_standardHighLightColors){
				vqRooms[cvjs_active_floorplan_div_nr][popObj[cvjs_active_floorplan_div_nr]].attr(defaultColor);
			}
			else{
				if (vqRooms[cvjs_active_floorplan_div_nr][popObj[cvjs_active_floorplan_div_nr]].data("linked")){
					vqRooms[cvjs_active_floorplan_div_nr][popObj[cvjs_active_floorplan_div_nr]].attr(defaultColor_linked);
				}
				else{
					vqRooms[cvjs_active_floorplan_div_nr][popObj[cvjs_active_floorplan_div_nr]].attr(defaultColor_unlinked);
				}
			}

			popObj[cvjs_active_floorplan_div_nr] = -1;
			}

	}
	catch (err){
		return (err);
	}

	return true;
}




function cvjs_redrawPop()
{

	if (lastObj[cvjs_active_floorplan_div_nr] >= 0){


//		vqRooms[cvjs_active_floorplan_div_nr][lastObj[cvjs_active_floorplan_div_nr]].attr(defaultColor);
		if (!cvjs_supressPopUpModal || cvjs_standardHighLightColors){
			vqRooms[cvjs_active_floorplan_div_nr][lastObj[cvjs_active_floorplan_div_nr]].attr(selectColor);
		}
		else{
			if (vqRooms[cvjs_active_floorplan_div_nr][lastObj[cvjs_active_floorplan_div_nr]].data("linked")){
				vqRooms[cvjs_active_floorplan_div_nr][lastObj[cvjs_active_floorplan_div_nr]].attr(selectColor_linked);
			}
			else{
				vqRooms[cvjs_active_floorplan_div_nr][lastObj[cvjs_active_floorplan_div_nr]].attr(selectColor_unlinked);
			}
		}


		lastObj[cvjs_active_floorplan_div_nr] = -1;

		try{
			cvjs_NoObjectSelected();
		}
		catch(err){
			var ii = 0;
			//console.log();
		}
	}


	if (popObj >= 0){


//		vqRooms[cvjs_active_floorplan_div_nr][popObj[cvjs_active_floorplan_div_nr]].attr(defaultColor);
		if (!cvjs_supressPopUpModal || cvjs_standardHighLightColors){
			vqRooms[cvjs_active_floorplan_div_nr][popObj[cvjs_active_floorplan_div_nr]].attr(selectColor);
		}
		else{
			if (vqRooms[cvjs_active_floorplan_div_nr][popObj[cvjs_active_floorplan_div_nr]].data("linked")){
				vqRooms[cvjs_active_floorplan_div_nr][popObj[cvjs_active_floorplan_div_nr]].attr(selectColor_linked);
			}
			else{
				vqRooms[cvjs_active_floorplan_div_nr][popObj[cvjs_active_floorplan_div_nr]].attr(selectColor_unlinked);
			}
		}

		popObj[cvjs_active_floorplan_div_nr] = -1;

		try{
			cvjs_NoObjectSelected();
		}
		catch(err){
			var ii = 0;
			//console.log();
		}
	}

//console.log("hideOnlyPop  lastObj="+lastObj);

//	if (lastObj >= 0)
//		jQuery(vqRooms[cvjs_active_floorplan_div_nr][lastObj[cvjs_active_floorplan_div_nr]].node).qtip('hide');
}









function hideOnlyPop()
{


	// 3.3.01c
	vqRoomMouseSelect = false;

	
	
	
//console.log("ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ   hideOnlyPop  lastObj="+lastObj[cvjs_active_floorplan_div_nr]+" popObj="+popObj[cvjs_active_floorplan_div_nr]+" length="+vqRooms[cvjs_active_floorplan_div_nr].length);

// hideOnlyPop got the same functionality as hidePop

	if (lastObj[cvjs_active_floorplan_div_nr] >= 0  && lastObj[cvjs_active_floorplan_div_nr]< vqRooms[cvjs_active_floorplan_div_nr].length ){
		jQuery(vqRooms[cvjs_active_floorplan_div_nr][lastObj[cvjs_active_floorplan_div_nr]].node).qtip('hide');

//		vqRooms[cvjs_active_floorplan_div_nr][lastObj[cvjs_active_floorplan_div_nr]].attr(defaultColor);
		if (!cvjs_supressPopUpModal || cvjs_standardHighLightColors){
			vqRooms[cvjs_active_floorplan_div_nr][lastObj[cvjs_active_floorplan_div_nr]].attr(defaultColor);
		}
		else{
			if (vqRooms[cvjs_active_floorplan_div_nr][lastObj[cvjs_active_floorplan_div_nr]].data("linked")){
				vqRooms[cvjs_active_floorplan_div_nr][lastObj[cvjs_active_floorplan_div_nr]].attr(defaultColor_linked);
			}
			else{
				vqRooms[cvjs_active_floorplan_div_nr][lastObj[cvjs_active_floorplan_div_nr]].attr(defaultColor_unlinked);
			}
		}


		lastObj[cvjs_active_floorplan_div_nr] = -1;

		try{
			cvjs_NoObjectSelected();
		}
		catch(err){
			var ii = 0;
			//console.log();
		}
	}


	if (popObj[cvjs_active_floorplan_div_nr] >= 0 && popObj[cvjs_active_floorplan_div_nr]< vqRooms[cvjs_active_floorplan_div_nr].length){
		
		jQuery(vqRooms[cvjs_active_floorplan_div_nr][popObj[cvjs_active_floorplan_div_nr]].node).qtip('hide');

//		vqRooms[cvjs_active_floorplan_div_nr][popObj[cvjs_active_floorplan_div_nr]].attr(defaultColor);
		if (!cvjs_supressPopUpModal || cvjs_standardHighLightColors){
			vqRooms[cvjs_active_floorplan_div_nr][popObj[cvjs_active_floorplan_div_nr]].attr(defaultColor);
		}
		else{
			if (vqRooms[cvjs_active_floorplan_div_nr][popObj[cvjs_active_floorplan_div_nr]].data("linked")){
				vqRooms[cvjs_active_floorplan_div_nr][popObj[cvjs_active_floorplan_div_nr]].attr(defaultColor_linked);
			}
			else{
				vqRooms[cvjs_active_floorplan_div_nr][popObj[cvjs_active_floorplan_div_nr]].attr(defaultColor_unlinked);
			}
		}


		popObj[cvjs_active_floorplan_div_nr] = -1;

		try{

			//console.log("no object selected");

			cvjs_NoObjectSelected();
		}
		catch(err){
			var ii = 0;
			//console.log();
		}
	}
}


function hideOnlyStickyNote(note_nr)
{

var flag_obj = (lastObjStickyNote[cvjs_active_floorplan_div_nr]==popObjStickyNote[cvjs_active_floorplan_div_nr]);

if (cvjs_debug) console.log("before branch");

if (cvjs_debug_stickynotes) {
	if (cvjs_debug) console.log("hide pop");
	hidePopStickyNotes();
}



// Uncomment if you want the modals to stay visible
//	if (true) return;



/*

if (cvjs_debug_stickynotes) window.alert(flag_obj+" hide only note_nr "+note_nr+"   lastObjStickyNote[cvjs_active_floorplan_div_nr]"+lastObjStickyNote[cvjs_active_floorplan_div_nr]+" popObjStickyNote[cvjs_active_floorplan_div_nr] "+popObjStickyNote[cvjs_active_floorplan_div_nr]+" vqStickyNotes.length "+vqStickyNotes.length);
if (cvjs_debug_stickynotes) cvjs_clearDrawingStickyNotes();
//if (cvjs_debug_stickynotes) {if (true) return;		}

*/

	if (lastObjStickyNote[cvjs_active_floorplan_div_nr] >= 0){


//window.alert("1x now we hide");

		//window.alert("hide only stickynote  lastObjStickyNote[cvjs_active_floorplan_div_nr] visible  "+jQuery(vqStickyNotes[lastObjStickyNote[cvjs_active_floorplan_div_nr]].node.qtip).is(":visible"));
		//if (jQuery(vqStickyNotes[lastObjStickyNote[cvjs_active_floorplan_div_nr]].node.qtip).is(":visible")) jQuery(vqStickyNotes[lastObjStickyNote[cvjs_active_floorplan_div_nr]].node).qtip('hide');

			// cvjs_zoomIn();

				var myArr = {};
				var myvar=0;


				if (jQuery(vqStickyNotes[lastObjStickyNote[cvjs_active_floorplan_div_nr]].node.qtip).is(":visible")) jQuery(vqStickyNotes[lastObjStickyNote[cvjs_active_floorplan_div_nr]].node).qtip('hide');
/*

				if (cvjs_debug_stickynotes){
				jQuery( "div[id^=qtip-]" ).each(function( i ) {

					var id = jQuery(this).attr('id');

					myArr[i] = id;
					var myid = "#"+id;
					//jQuery(myid).remove();
					myvar++;
					console.log(id+" "+myid);

				});

				if (vjs_debug_stickynotes) window.alert("passing by myvar "+myvar);

				for (var j=0; j<myvar; j++){

						var temp = myArr[j];
						window.alert(" removing "+temp);
						try{
						document.getElementById(temp).remove();
						}catch(err) {window.alert(err);}

				}

				if (true) return;

				}
*/


/*

		if (isSmartPhoneOrTablet){

//	     jQuery("div[id^=qtip-]").qtip('destroy');

			if (cvjs_debug_stickynotes){

			jQuery("div[id^=qtip-]").remove();
			window.alert("zoom extents, we removed everything now returning......")
			if (true) return;
			}

			jQuery(vqStickyNotes[lastObjStickyNote[cvjs_active_floorplan_div_nr]].node).qtip('hide');


		}
		else{
			jQuery(vqStickyNotes[lastObjStickyNote[cvjs_active_floorplan_div_nr]].node).qtip('hide');
		}

*/


/*
		jQuery.when( jQuery(vqStickyNotes[note_nr].node).qtip('hide') ).done(function( x ) {
				window.alert("2 we have hidden"+x);
				jQuery(vqStickyNotes[lastObjStickyNote[cvjs_active_floorplan_div_nr]].node).qtip('hide')
					jQuery.when( jQuery(vqStickyNotes[lastObjStickyNote[cvjs_active_floorplan_div_nr]].node).qtip('destroy')).done(function( y ) {
				window.alert("we have destroyed "+y);
			});
		});
*/

		StickNoteEditMode = false;
		var tString = vqStickyNotes[lastObjStickyNote[cvjs_active_floorplan_div_nr]].data("text");

		//window.alert("1: "+tString);
		//tString = "This is a test!";


		cvjs_setStickyNoteText(tString);

		var htitle = "<table width=\"100%\"><tr><td cols=\"3\"><div class=\"cvjs_modal_header_stickynote_info_2\">#"+vqStickyNotes[lastObjStickyNote[cvjs_active_floorplan_div_nr]].data("id")+"</div><td class=\"cvjs_modal_header_stickynote_info_2_background\"></td><td class=\"cvjs_modal_header_1\" >"+vqStickyNotes[lastObjStickyNote[cvjs_active_floorplan_div_nr]].data("name")+"</td>"+
			"<td class=\"cvjs_modal_header_sticky_note_info_1\" id=\"stickyNoteIcon1\" onclick=\"cvjs_move_note();\" onmouseout=\"javascript:tip[cvjs_active_floorplan_div_nr].hide();\" onmouseover=\"javascript:cvjs_showStickynoteTip(\'"+lTable.languages[cvjs_currentLanguage].StickyNote.MoveNote+"\',1,"+lastObjStickyNote[cvjs_active_floorplan_div_nr]+");\" ><i class=\"glyphicon glyphicon-move\"></i></td>"+
			"<td class=\"cvjs_modal_header_sticky_note_info_1\" id=\"stickyNoteIcon2\" onclick=\"cvjs_edit_note();\" onmouseout=\"javascript:tip[cvjs_active_floorplan_div_nr].hide();\" onmouseover=\"javascript:cvjs_showStickynoteTip(\'"+lTable.languages[cvjs_currentLanguage].StickyNote.EditNote+"\',2,"+lastObjStickyNote[cvjs_active_floorplan_div_nr]+");\" ><i class=\"glyphicon glyphicon-edit\"></i></td>"+
			"<td class=\"cvjs_modal_header_sticky_note_info_1\" id=\"stickyNoteIcon3\" onclick=\"cvjs_delete_note();\" onmouseout=\"javascript:tip[cvjs_active_floorplan_div_nr].hide();\" onmouseover=\"javascript:cvjs_showStickynoteTip(\'"+lTable.languages[cvjs_currentLanguage].StickyNote.DeleteNote+"\',3,"+lastObjStickyNote[cvjs_active_floorplan_div_nr]+");\" ><i class=\"glyphicon glyphicon-trash\"></i></td>"+
			"<td class=\"cvjs_modal_header_sticky_note_info_2\" id=\"stickyNoteIcon4\" onclick=\"hideOnlyStickyNote("+lastObjStickyNote[cvjs_active_floorplan_div_nr]+");\" onmouseout=\"javascript:tip[cvjs_active_floorplan_div_nr].hide();\" onmouseover=\"javascript:cvjs_showStickynoteTip(\'"+lTable.languages[cvjs_currentLanguage].StickyNote.MinimizeNote+"\',4,"+lastObjStickyNote[cvjs_active_floorplan_div_nr]+");\" ><i class=\"glyphicon glyphicon-remove\"></i></td></tr>"+
			"</table>";


//if (true) return;
//window.alert("now we make a new note");

		jQuery(vqStickyNotes[lastObjStickyNote[cvjs_active_floorplan_div_nr]].node).qtip({content: {text: cvjsStickyNoteBody, title: htitle},
				style: {classes: 'qtip-bootstrap qtip-shadow qtip-rounded qtip-zindex'},
				position: {my: 'bottom center', at: 'top left'},
				hideOnHTMLClick: 'false'});

		jQuery(vqStickyNotes[lastObjStickyNote[cvjs_active_floorplan_div_nr]].node).qtip('hide');


//		vqRooms[cvjs_active_floorplan_div_nr][lastObj[cvjs_active_floorplan_div_nr]].attr(defaultColor);
		if (!cvjs_supressPopUpModal){
			vqStickyNotes[lastObjStickyNote[cvjs_active_floorplan_div_nr]].attr(defaultColor_StickyNotes);
		}
		else{
			if (vqStickyNotes[lastObjStickyNote[cvjs_active_floorplan_div_nr]].data("linked")){
				vqStickyNotes[lastObjStickyNote[cvjs_active_floorplan_div_nr]].attr(defaultColor_linked);
			}
			else{
				vqStickyNotes[lastObjStickyNote[cvjs_active_floorplan_div_nr]].attr(defaultColor_unlinked);
			}
		}

		lastObjStickyNote[cvjs_active_floorplan_div_nr] = -1;

		try{
			cvjs_NoObjectSelected();
		}
		catch(err){
			var ii = 0;
			//console.log();
		}
	}

	if (popObjStickyNote[cvjs_active_floorplan_div_nr] >= 0  &&  !flag_obj){  // only do this branch if they are different


		if (cvjs_debug_stickynotes) window.alert("2nd branch hide only stickynote  popObjStickyNote[cvjs_active_floorplan_div_nr] visible "+jQuery(vqStickyNotes[popObjStickyNote[cvjs_active_floorplan_div_nr]].node.qtip).is(":visible"));
//		jQuery(vqStickyNotes[popObjStickyNote[cvjs_active_floorplan_div_nr]].node).qtip('hide');
//		if (jQuery(vqStickyNotes[popObjStickyNote[cvjs_active_floorplan_div_nr]].node.qtip).is(":visible")) jQuery(vqStickyNotes[popObjStickyNote[cvjs_active_floorplan_div_nr]+1].node).qtip('hide');

		jQuery(vqStickyNotes[popObjStickyNote[cvjs_active_floorplan_div_nr]+1].node).qtip('hide');


		StickNoteEditMode = false;
		var tString = vqStickyNotes[popObjStickyNote[cvjs_active_floorplan_div_nr]].data("text");
		cvjs_setStickyNoteText(tString);


		var htitle = "<table width=\"100%\"><tr><td cols=\"3\"><div class=\"cvjs_modal_header_stickynote_info_2\">#"+vqStickyNotes[popObjStickyNote[cvjs_active_floorplan_div_nr]].data("id")+"</div><td class=\"cvjs_modal_header_stickynote_info_2_background\"></td><td class=\"cvjs_modal_header_1\" >"+vqStickyNotes[popObjStickyNote[cvjs_active_floorplan_div_nr]].data("name")+"</td>"+
			"<td class=\"cvjs_modal_header_sticky_note_info_1\" id=\"stickyNoteIcon1\" onclick=\"cvjs_move_note();\" onmouseout=\"javascript:tip[cvjs_active_floorplan_div_nr].hide();\" onmouseover=\"javascript:cvjs_showStickynoteTip(\'"+lTable.languages[cvjs_currentLanguage].StickyNote.MoveNote+"\',1,"+popObjStickyNote[cvjs_active_floorplan_div_nr]+");\" ><i class=\"glyphicon glyphicon-move\"></i></td>"+
			"<td class=\"cvjs_modal_header_sticky_note_info_1\" id=\"stickyNoteIcon2\" onclick=\"cvjs_edit_note();\" onmouseout=\"javascript:tip[cvjs_active_floorplan_div_nr].hide();\" onmouseover=\"javascript:cvjs_showStickynoteTip(\'"+lTable.languages[cvjs_currentLanguage].StickyNote.EditNote+"\',2,"+popObjStickyNote[cvjs_active_floorplan_div_nr]+");\" ><i class=\"glyphicon glyphicon-edit\"></i></td>"+
			"<td class=\"cvjs_modal_header_sticky_note_info_1\" id=\"stickyNoteIcon3\" onclick=\"cvjs_delete_note();\" onmouseout=\"javascript:tip[cvjs_active_floorplan_div_nr].hide();\" onmouseover=\"javascript:cvjs_showStickynoteTip(\'"+lTable.languages[cvjs_currentLanguage].StickyNote.DeleteNote+"\',3,"+popObjStickyNote[cvjs_active_floorplan_div_nr]+");\" ><i class=\"glyphicon glyphicon-trash\"></i></td>"+
			"<td class=\"cvjs_modal_header_sticky_note_info_2\" id=\"stickyNoteIcon4\" onclick=\"hideOnlyStickyNote("+popObjStickyNote[cvjs_active_floorplan_div_nr]+");\" onmouseout=\"javascript:tip[cvjs_active_floorplan_div_nr].hide();\" onmouseover=\"javascript:cvjs_showStickynoteTip(\'"+lTable.languages[cvjs_currentLanguage].StickyNote.MinimizeNote+"\',4,"+popObjStickyNote[cvjs_active_floorplan_div_nr]+");\" ><i class=\"glyphicon glyphicon-remove\"></i></td></tr>"+
			"</table>";


		jQuery(vqStickyNotes[popObjStickyNote[cvjs_active_floorplan_div_nr]].node).qtip({content: {text: cvjsStickyNoteBody, title: htitle},
				style: {classes: 'qtip-bootstrap qtip-shadow qtip-rounded qtip-zindex'},
				position: {my: 'bottom center', at: 'top left'},
				hideOnHTMLClick: 'false'});

//console.log("2: "+tString);



//		vqRooms[cvjs_active_floorplan_div_nr][popObj[cvjs_active_floorplan_div_nr]].attr(defaultColor);
		if (!cvjs_supressPopUpModal){
			vqStickyNotes[popObjStickyNote[cvjs_active_floorplan_div_nr]].attr(defaultColor_StickyNotes);
		}
		else{
			if (vqStickyNotes[popObjStickyNote[cvjs_active_floorplan_div_nr]].data("linked")){
				vqStickyNotes[popObjStickyNote[cvjs_active_floorplan_div_nr]].attr(defaultColor_linked);
			}
			else{
				vqStickyNotes[popObjStickyNote[cvjs_active_floorplan_div_nr]].attr(defaultColor_unlinked);
			}
		}

		popObjStickyNote[cvjs_active_floorplan_div_nr] = -1;

		try{
			cvjs_NoObjectSelected();
		}
		catch(err){
			var ii = 0;
			//console.log();
		}
	}
	else{
		popObjStickyNote[cvjs_active_floorplan_div_nr] = -1;
	}
}



function closeAllPopups(rmid)
    {
if (cvjs_debug) console.log("closeAllPopups");


	for (spc in vqRooms[cvjs_active_floorplan_div_nr])
	{
    	if (spc != rmid)
    		{
	//		if (spc != lastObj[cvjs_active_floorplan_div_nr])
				jQuery(vqRooms[cvjs_active_floorplan_div_nr][spc].node).qtip('hide');
			}
	}
}

function closeAllPopupsStickyNotes(rmid)
    {
	for (spc in vqStickyNotes)
	{
    	if (spc != rmid)
    		{
	//		if (spc != lastObj[cvjs_active_floorplan_div_nr])
				jQuery(vqStickyNotes[spc].node).qtip('hide');
			}
	}
}



function pick_space(trigger)
    {
	jQuery('#SearchResultsPanel').hide();
	cvjs_change_space(trigger);
	var spc = findRoom(trigger);
	if (spc)
		{
    	jQuery(vqRooms[cvjs_active_floorplan_div_nr][spc].node).qtip('show');
    	 popObj[cvjs_active_floorplan_div_nr] = spc;
		}
    }


function cvjs_pick_space(trigger)
    {

	cvjs_change_space(trigger);

//	change_space_fixed_location(trigger);

	var spc = findRoom(trigger);
	if (spc)
		{
    	jQuery(vqRooms[cvjs_active_floorplan_div_nr][spc].node).qtip('show');
       	 popObj[cvjs_active_floorplan_div_nr] = spc;
		}

//console.log("end cvjs_pick_space");

    }



function cvjs_zoomHere(){
	zoomHere();
}


function zoomHere()
{
	if (lastObj[cvjs_active_floorplan_div_nr] >= 0 && lastObj[cvjs_active_floorplan_div_nr]< vqRooms[cvjs_active_floorplan_div_nr].length)
		{
		jQuery(vqRooms[cvjs_active_floorplan_div_nr][lastObj[cvjs_active_floorplan_div_nr]].node).qtip('hide');
		if (popObj>=0) jQuery(vqRooms[cvjs_active_floorplan_div_nr][popObj[cvjs_active_floorplan_div_nr]].node).qtip('hide');

		bbox = vqRooms[cvjs_active_floorplan_div_nr][lastObj[cvjs_active_floorplan_div_nr]].getBBox();
		var rat = viewBoxWidth[cvjs_active_floorplan_div_nr]/viewBoxHeight[cvjs_active_floorplan_div_nr];
		var wid;
		var hgt;
		var cx = bbox.x + (bbox.width/2);
		var cy = bbox.y + (bbox.height/2);
		if (bbox.width > bbox.height)
			{
			wid = bbox.width*2;
			hgt = wid / rat;
			}
		else
			{
			hgt = bbox.height*2;
			wid = hgt * rat;
			}

		viewBox[cvjs_active_floorplan_div_nr].X = cx - wid/2;
		viewBox[cvjs_active_floorplan_div_nr].Y = cy - hgt/2;
		viewBoxWidth[cvjs_active_floorplan_div_nr] = wid;
		viewBoxHeight[cvjs_active_floorplan_div_nr] = hgt;

		var attr_2 = "{\"viewBox\" : \""+viewBox[cvjs_active_floorplan_div_nr].X+" "+viewBox[cvjs_active_floorplan_div_nr].Y+" "+viewBoxWidth[cvjs_active_floorplan_div_nr]+" "+viewBoxHeight[cvjs_active_floorplan_div_nr]+"\" }";
		var json_obj = jQuery.parseJSON(attr_2);
		cvjs_rPaper[cvjs_active_floorplan_div_nr].attr(json_obj);

//NNN		 setView(cvjs_rPaper[cvjs_active_floorplan_div_nr], viewBox[cvjs_active_floorplan_div_nr].X,viewBox[cvjs_active_floorplan_div_nr].Y,viewBoxWidth[cvjs_active_floorplan_div_nr],viewBoxHeight[cvjs_active_floorplan_div_nr]);
//		zoomScale = viewBoxWidth[cvjs_active_floorplan_div_nr]/cvjs_rPaper[cvjs_active_floorplan_div_nr].width;

//console.log("xx1 viewBoxWidth[cvjs_active_floorplan_div_nr] "+viewBoxWidth[cvjs_active_floorplan_div_nr]+" rpWidth[cvjs_active_floorplan_div_nr] "+rpWidth[cvjs_active_floorplan_div_nr]);

		zoomScale = viewBoxWidth[cvjs_active_floorplan_div_nr]/rpWidth[cvjs_active_floorplan_div_nr];

		lastObj[cvjs_active_floorplan_div_nr] = -1;
		}
	}


function zoomHere_Factor(node, factor){
	
	cvjs_zoomHere_Factor(node, factor);
	
	
}


/**
 * Zoom in over the extents of an object using a zoom factor
 * @param {String} rmid - Id of the Space Object to zoom over
 * @param {float} factor - zoom factor to zoom in over in percent
 */

function cvjs_zoomHere_ObjectId(rmid, factor){
	
	//var rm = findFixture(rmid);
	//var vqid = vqRooms[cvjs_active_floorplan_div_nr][spc].data("node");


	// 2018-01-08
	var vqid = findFixture(rmid);


	
//	factor = factor/100.0;

	if (factor == 0) factor = 100;

	factor = 1/factor *100.0;
	

	cvjs_zoomHere_Factor(vqid, factor);
	
}


/**
 * Zoom in over the extents of an object using a zoom factor
 * @param {String} rmid - Id of the Space Object to zoom over
 * @param {float} factor - zoom factor to zoom in over in percent
 * @param {String} floorplan_div - floorplan div to zoom over
 */

function cvjs_zoomHere_ObjectIdDiv(rmid, factor, floorplan_div){
	
	//var rm = findFixture(rmid);
	//var vqid = vqRooms[cvjs_active_floorplan_div_nr][spc].data("node");

	cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(floorplan_div+"_svg");   // add _svg to the main floorplan_div

	if (cvjs_debug) console.log(" IdDiv active floorplan "+cvjs_active_floorplan_div_nr+"  "+floorplan_div);
	
	// 2018-01-08
	var rm = findFixture(rmid);
	
	if (rm != -1){
	
		if (cvjs_debug) console.log(" rm= "+rm+"  "+rmid+" "+cvjs_active_floorplan_div_nr);
			
		var vqid = vqRooms[cvjs_active_floorplan_div_nr][rm].data("node");
		
	//	factor = factor/100.0;

		if (factor == 0) factor = 100;
		factor = 1/factor *100.0;
		
	cvjs_zoomHere_Factor(vqid, factor);

	}
}




/**
 * Zoom in over the extents of an object using a zoom factor
 * @param {String} node - NODE_ node object
 * @param {float} factor - zoom factor to zoom in over
 */

function cvjs_zoomHere_Factor(node, factor)
{
	if (cvjs_debug) 	console.log("zoomHere "+node+"  "+factor);
// DOES NOT WORK; NEED TO HANDLE qTIP properly


	if (cvjs_debug) 	console.log(" cvjs_active_floorplan_div_nr "+cvjs_active_floorplan_div_nr+"  length "+vqRooms[cvjs_active_floorplan_div_nr].length);


	for (i=0; i<vqRooms[cvjs_active_floorplan_div_nr].length; i++){

			if (cvjs_debug) console.log(node+"  "+vqRooms[cvjs_active_floorplan_div_nr][i].data("node"));
	
		if (node == vqRooms[cvjs_active_floorplan_div_nr][i].data("node")){

			bbox = vqRooms[cvjs_active_floorplan_div_nr][i].getBBox();
			var rat = viewBoxWidth[cvjs_active_floorplan_div_nr]/viewBoxHeight[cvjs_active_floorplan_div_nr];
			var wid;
			var hgt;
//			var cx = bbox.x + (bbox.width/factor);
//			var cy = bbox.y + (bbox.height/factor);
			var cx = bbox.x + (bbox.width/2);
			var cy = bbox.y + (bbox.height/2);
			if (bbox.width > bbox.height)
				{
				wid = bbox.width*factor;
				hgt = wid / rat;
				}
			else
				{
				hgt = bbox.height*factor;
				wid = hgt * rat;
				}

			viewBox[cvjs_active_floorplan_div_nr].X = cx - wid/2;
			viewBox[cvjs_active_floorplan_div_nr].Y = cy - hgt/2;
			viewBoxWidth[cvjs_active_floorplan_div_nr] = wid;
			viewBoxHeight[cvjs_active_floorplan_div_nr] = hgt;

			var attr_2 = "{\"viewBox\" : \""+viewBox[cvjs_active_floorplan_div_nr].X+" "+viewBox[cvjs_active_floorplan_div_nr].Y+" "+viewBoxWidth[cvjs_active_floorplan_div_nr]+" "+viewBoxHeight[cvjs_active_floorplan_div_nr]+"\" }";
			var json_obj = jQuery.parseJSON(attr_2);
			cvjs_rPaper[cvjs_active_floorplan_div_nr].attr(json_obj);

		//NNN		 setView(cvjs_rPaper[cvjs_active_floorplan_div_nr], viewBox[cvjs_active_floorplan_div_nr].X,viewBox[cvjs_active_floorplan_div_nr].Y,viewBoxWidth[cvjs_active_floorplan_div_nr],viewBoxHeight[cvjs_active_floorplan_div_nr]);
		//		zoomScale = viewBoxWidth[cvjs_active_floorplan_div_nr]/cvjs_rPaper[cvjs_active_floorplan_div_nr].width;

		//console.log("xx1 viewBoxWidth[cvjs_active_floorplan_div_nr] "+viewBoxWidth[cvjs_active_floorplan_div_nr]+" rpWidth[cvjs_active_floorplan_div_nr] "+rpWidth[cvjs_active_floorplan_div_nr]);

			zoomScale = viewBoxWidth[cvjs_active_floorplan_div_nr]/rpWidth[cvjs_active_floorplan_div_nr];

		};
	}
}





/**
 * Clears the drawing from any highlight or modals active on Space Objects
 */

function cvjs_clearDrawingSpaceObjects(){

	cvjs_clearDrawing();
}



function cvjs_clearDrawing()
{

//console.log(lastObj+" "+popObj);


	for (room in vqRooms[cvjs_active_floorplan_div_nr])
	{
		try
		  {
		  	if (room != lastObj[cvjs_active_floorplan_div_nr] || room != popObj){
		  		jQuery(vqRooms[cvjs_active_floorplan_div_nr][room].node).qtip('hide');

///				  vqRooms[cvjs_active_floorplan_div_nr][room].attr(defaultColor);  // 2015-02-01  - moved into conditional statement
					if (!cvjs_supressPopUpModal || cvjs_standardHighLightColors){
						vqRooms[cvjs_active_floorplan_div_nr][room].attr(defaultColor);
					}
					else{
						if (vqRooms[cvjs_active_floorplan_div_nr][room].data("linked")){
							vqRooms[cvjs_active_floorplan_div_nr][room].attr(defaultColor_linked);
						}
						else{
							vqRooms[cvjs_active_floorplan_div_nr][room].attr(defaultColor_unlinked);
						}
					}



	  		}
		  }
		catch(err)
		  {
		  //Handle errors here
		  }
	  }
}



/**
 * Clears the drawing from any highlight or modals active on StickyNotes
 */

function cvjs_clearDrawingStickyNotes()
{


//if (false) return;
if (cvjs_debug) console.log("cvjs_clearDrawingStickyNotes");

	try
	  {


		for (room in vqStickyNotes)
		{
//				if (room != lastObjStickyNote[cvjs_active_floorplan_div_nr] || room != popObjStickyNote[cvjs_active_floorplan_div_nr]){

				if (room != spaceIdStickyNote[cvjs_active_floorplan_div_nr] || room != lastObjStickyNote[cvjs_active_floorplan_div_nr]){


//console.log("cvjs_clearDrawingStickyNotes hide"+room+"  "+lastObjStickyNote[cvjs_active_floorplan_div_nr]+" "+lastObjStickyNote[cvjs_active_floorplan_div_nr]);

//				spaceIdStickyNote[cvjs_active_floorplan_div_nr] = rmid;
//				lastObjStickyNote[cvjs_active_floorplan_div_nr] = space;



//					jQuery(vqStickyNotes[room].node).qtip('hide');
					if (jQuery(vqStickyNotes[space].node.qtip).is(":visible")) jQuery(vqStickyNotes[space].node).qtip('hide');



	///				  vqRooms[cvjs_active_floorplan_div_nr][room].attr(defaultColor);  // 2015-02-01  - moved into conditional statement
						if (!cvjs_supressPopUpModal){
							vqStickyNotes[room].attr(defaultColor_StickyNotes);
						}
						else{
							if (vqStickyNotes[room].data("linked")){
								vqStickyNotes[room].attr(defaultColor_linked);
							}
							else{
								vqStickyNotes[room].attr(defaultColor_unlinked);
							}
						}
				}
		  }


	}
		catch(err)
	{
		console.log("cvjs_clearDrawingStickyNotes_ "+err);
	}

}



/**
 * Clears the drawing from any highlight or modals active on Hyperlinks
 */

function cvjs_clearDrawingHyperlinks()
{

//console.log("clear drawings hyperlinks");

	for (room in vqURLs)
	{
		try
		  {
//			console.log("room "+room+" lastObjHyperlink[cvjs_active_floorplan_div_nr] "+lastObjHyperlink[cvjs_active_floorplan_div_nr]+" popObjHyperlink[cvjs_active_floorplan_div_nr] "+ popObjHyperlink[cvjs_active_floorplan_div_nr]);

				if (room != lastObjHyperlink[cvjs_active_floorplan_div_nr] || room != popObjHyperlink[cvjs_active_floorplan_div_nr]){
					jQuery(vqURLs[room].node).qtip('hide');
				}
// changed so all hyperlinks objects are cleared


	///				  vqRooms[cvjs_active_floorplan_div_nr][room].attr(defaultColor);  // 2015-02-01  - moved into conditional statement
				if (!cvjs_supressHyperlinkColors){
					vqURLs[room].attr(defaultColor_Hyperlinks);
				}
				else{
					vqURLs[room].attr(defaultColor_Hyperlinks_blank);  // set colors ( note: change attribute name to something more applicable
				}


		  }
		catch(err)
		  {
		  //Handle errors here
		  }
	  }
}


/**
 * Clears the drawing from any redlines
 */

function cvjs_clearDrawingRedlines()
{

// empty
}





/**
 * Update redlines after page change
 */

function cvjs_updateDrawingRedlines(redlineStickyNoteLayer)
{


if (cvjs_debug) console.log(redlineStickyNoteLayer+"cvjs_updateDrawingRedlines(redlineStickyNoteLayer) cvjs_updateDrawingRedlines(redlineStickyNoteLayer) cvjs_updateDrawingRedlines(redlineStickyNoteLayer)");

try{

//QQQQQQQ
	if (cvjs_debug) console.log("cvjs_updateDrawingRedlines() redline length "+vqRedlines.length+"  "+vqStickyNotes.length);
	if (vqRedlines.length>0){
		//console.log(vqRedlines[0]);
		for (var i=0; i<vqRedlines.length; i++){
			// SETTING UP TEXT!
			if (vqRedlines[i].data("redline_text")!="none" && vqRedlines[i].data("redline_text")!=undefined ){
				var textString = vqRedlines[i].data("redline_text");
				var tArr = textString.split('<br>');
				try{
				cvjs_setCurrentRedlineValues_All(vqRedlines[i].data("node"), vqRedlines[i].data("name"),vqRedlines[i].data("id"), vqRedlines[i].data("layer"), vqRedlines[i].data("group"), vqRedlines[i].data("color"), vqRedlines[i].data("strokeWidth"), vqRedlines[i].data("fill"), vqRedlines[i].data("fill_opacity"), vqRedlines[i].data("transform"), vqRedlines[i].data("username"), vqRedlines[i].data("userid"), vqRedlines[i].data("currentPage"), vqRedlines[i].data("polypath_arrow"), vqRedlines[i].data("triangle_design"), vqRedlines[i].data("redline_text"), vqRedlines[i].data("drawingRotation"));

				vqRedlines[i] = redlineStickyNoteLayer.text(0,0, tArr).attr({stroke: cvjs_currentRedline_color, fill: cvjs_currentRedline_color, 'font-size': cvjs_reference_font_size, 'transform': vqRedlines[i].data("transform")});

				for (var jj=1; jj<tArr.length; jj++){
					var eml = jj+"em";
					vqRedlines[i].selectAll("tspan")[jj].attr({ x:0 , dy: '1em' });
				}

				vqRedlines[i].data("node", cvjs_currentRedline_underbar);
				vqRedlines[i].data("name", cvjs_currentRedline_name);
				vqRedlines[i].data("id", cvjs_currentRedline_id);
				vqRedlines[i].data("layer", cvjs_currentRedline_layer);
				vqRedlines[i].data("group", cvjs_currentRedline_group);
				vqRedlines[i].data("color", cvjs_currentRedline_color);
				vqRedlines[i].data("strokeWidth", cvjs_currentRedline_strokeWidth);
				vqRedlines[i].data("fill", cvjs_currentRedline_fill);
				vqRedlines[i].data("fill_opacity", cvjs_currentRedline_fill_opacity);
				vqRedlines[i].data("transform", cvjs_currentRedline_transform);
				vqRedlines[i].data("username", cvjs_currentRedline_username);
				vqRedlines[i].data("userid", cvjs_currentRedline_userid);
				vqRedlines[i].data("currentPage", cvjs_currentRedline_currentPage);
				vqRedlines[i].data("polypath_arrow", cvjs_currentRedline_polypath_arrow);
				vqRedlines[i].data("triangle_design", cvjs_currentRedline_triangle_design);
				vqRedlines[i].data("redline_text", cvjs_currentRedline_redline_text);
				vqRedlines[i].data("drawingRotation", cvjs_currentRedline_drawingRotation);

				vqRedlines[i].mousedown(function (e){
					if (cvjs_deleteRedlineFlag ){
						cvjs_deleteRedlineFlag = false;
						// delete redline
						var rednode = this.data("node");
						cvjs_setUpVqRedlines_deleteNode(rednode);
					}

				});


				vqRedlines[i].mouseover(function (e){
					
					
					tip[cvjs_active_floorplan_div_nr].css({ position:'fixed'});					
				

						var tipText = "UserName: "+this.data("username");
						tip[cvjs_active_floorplan_div_nr].html(tipText);
						tip[cvjs_active_floorplan_div_nr].show();


				var position = jQuery('#'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).position();
				var floorplan_pos = jQuery('#'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).css('position');				
				if (floorplan_pos == 'absolute'){ // absolute location,  so we use global variables
				   tip[cvjs_active_floorplan_div_nr].css("left", e.clientX+document.documentElement.scrollLeft+10).css("top", e.clientY+document.documentElement.scrollTop-25);
				}
				else{  // we have placed CV-JS inside a div and we have to make a relative position
					tip[cvjs_active_floorplan_div_nr].css("left", e.clientX-position.left+document.documentElement.scrollLeft+10).css("top", e.clientY-position.top+document.documentElement.scrollTop-25);
				}
							
				});

				vqRedlines[i].mouseout(function (e){
						tip[cvjs_active_floorplan_div_nr].hide();
				});

				
				if (vqRedlines[i].data("currentPage")!=multiPages[cvjs_active_floorplan_div_nr].currentPage)
					vqRedlines[i].attr(hide);
				else{
					vqRedlines[i].attr(show);
					try{
					if (vqRedlines[i].data("drawingRotation")!=0){
							cvjs_rotateAngle(vqRedlines[i].data("drawingRotation"), floorplan_div_Array[cvjs_active_floorplan_div_nr]);
					}
					} catch(err1){console.log(err1);}
				}
				
				
				}catch(err){console.log(err);}

			}
			else{
				// ARROW 
				if (vqRedlines[i].data("polypath_arrow")!="none" && vqRedlines[i].data("polypath_arrow")!=undefined ){
				try{

					cvjs_setCurrentRedlineValues_All(vqRedlines[i].data("node"), vqRedlines[i].data("name"),vqRedlines[i].data("id"), vqRedlines[i].data("layer"), vqRedlines[i].data("group"), vqRedlines[i].data("color"), vqRedlines[i].data("strokeWidth"), vqRedlines[i].data("fill"), vqRedlines[i].data("fill_opacity"), vqRedlines[i].data("transform"), vqRedlines[i].data("username"), vqRedlines[i].data("userid"), vqRedlines[i].data("currentPage"), vqRedlines[i].data("polypath_arrow"), vqRedlines[i].data("triangle_design"), vqRedlines[i].data("redline_text"), vqRedlines[i].data("drawingRotation"));

					
					// 2018-04-18  THIS WOULD CREATE DOUBLE ARROW, SO DELETE AFTER RELOAD WILL ONLY REMOVE ONE, THEREFORE THIS HAS BEEN REMOVED
/*
					vqRedlines[i] =redlineStickyNoteLayer.g(redlineStickyNoteLayer.polyline(vqRedlines[i].data("triangle_design")).attr({ transform: vqRedlines[i].data("transform"), fill: vqRedlines[i].data("color")}),
								   redlineStickyNoteLayer.path(vqRedlines[i].data("polypath_arrow")).attr({stroke: vqRedlines[i].data("color"), "stroke-width": vqRedlines[i].data("strokeWidth")*cvjs_redlineThickness_scaleFactor, fill: vqRedlines[i].data("fill"), "fill-opacity": vqRedlines[i].data("fill_opacity")}))
								   .data("node", vqRedlines[i].data("node"));
*/								   

					redlineStickyNoteLayer.add(vqRedlines[i]);


					}catch(err){console.log(err);}

					vqRedlines[i].data("node", cvjs_currentRedline_underbar);
					vqRedlines[i].data("name", cvjs_currentRedline_name);
					vqRedlines[i].data("id", cvjs_currentRedline_id);
					vqRedlines[i].data("layer", cvjs_currentRedline_layer);
					vqRedlines[i].data("group", cvjs_currentRedline_group);
					vqRedlines[i].data("color", cvjs_currentRedline_color);
					vqRedlines[i].data("strokeWidth", cvjs_currentRedline_strokeWidth);
					vqRedlines[i].data("fill", cvjs_currentRedline_fill);
					vqRedlines[i].data("fill_opacity", cvjs_currentRedline_fill_opacity);
					vqRedlines[i].data("transform", cvjs_currentRedline_transform);
					vqRedlines[i].data("username", cvjs_currentRedline_username);
					vqRedlines[i].data("userid", cvjs_currentRedline_userid);
					vqRedlines[i].data("currentPage", cvjs_currentRedline_currentPage);
					vqRedlines[i].data("polypath_arrow", cvjs_currentRedline_polypath_arrow);
					vqRedlines[i].data("triangle_design", cvjs_currentRedline_triangle_design);
					vqRedlines[i].data("redline_text", cvjs_currentRedline_redline_text);					
					vqRedlines[i].data("drawingRotation", cvjs_currentRedline_drawingRotation)

					vqRedlines[i].mousedown(function (e){
						if (cvjs_deleteRedlineFlag ){
							cvjs_deleteRedlineFlag = false;
							// delete redline
							var rednode = this.data("node");
							//console.log(rednode);
							cvjs_setUpVqRedlines_deleteNode(rednode);
						}

					});
					vqRedlines[i].mouseover(function (e){

				tip[cvjs_active_floorplan_div_nr].css({ position:'fixed'});					
					
							var tipText = "UserName: "+this.data("username");
							tip[cvjs_active_floorplan_div_nr].html(tipText);
							tip[cvjs_active_floorplan_div_nr].show();
							
							var position = jQuery('#'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).position();
							var floorplan_pos = jQuery('#'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).css('position');				
							if (floorplan_pos == 'absolute'){ // absolute location,  so we use global variables
							//console.log("absolute");
							   tip[cvjs_active_floorplan_div_nr].css("left", e.clientX+document.documentElement.scrollLeft+10).css("top", e.clientY+document.documentElement.scrollTop-25);
							}
							else{  // we have placed CV-JS inside a div and we have to make a relative position
								//console.log("inside");
								tip[cvjs_active_floorplan_div_nr].css("left", e.clientX-position.left+document.documentElement.scrollLeft+10).css("top", e.clientY-position.top+document.documentElement.scrollTop-25);
							}
								
					});

					vqRedlines[i].mouseout(function (e){
							tip[cvjs_active_floorplan_div_nr].hide();
					});

		


		
					if (vqRedlines[i].data("currentPage")!=multiPages[cvjs_active_floorplan_div_nr].currentPage)
						vqRedlines[i].attr(hide);
					else{
						vqRedlines[i].attr(show);
						try{
						if (vqRedlines[i].data("drawingRotation")!=0){
								cvjs_rotateAngle(vqRedlines[i].data("drawingRotation"), floorplan_div_Array[cvjs_active_floorplan_div_nr]);
//														window.alert("2 rotate red "+ vqRedlines[i].data("drawingRotation"));

						}
						} catch(err1){console.log(err1);}
					}
					




			}
			else
				redlineStickyNoteLayer.add(vqRedlines[i]);


//console.log("before add");				
//					cvjs_rPaper[cvjs_active_floorplan_div_nr].add(vqRedlines[i]);


					
if (cvjs_debug) console.log(vqRedlines[i]+"  "+vqRedlines[i].data("currentPage")+" multi "+multiPages[cvjs_active_floorplan_div_nr].currentPage+(vqRedlines[i].data("currentPage")!=multiPages[cvjs_active_floorplan_div_nr].currentPage));
		//			console.log(vqRedlines[i]);
		
		
					if (vqRedlines[i].data("currentPage")!=multiPages[cvjs_active_floorplan_div_nr].currentPage)
						vqRedlines[i].attr(hide);
					else{
						vqRedlines[i].attr(show);
						try{
						if (vqRedlines[i].data("drawingRotation")!=0){
								cvjs_rotateAngle(vqRedlines[i].data("drawingRotation"), floorplan_div_Array[cvjs_active_floorplan_div_nr]);

//						window.alert("3 rotate red "+ vqRedlines[i].data("drawingRotation"));
								
						}
						} catch(err1){console.log(err1);}
					}
	
//					if (vqRedlines[i].data("currentPage")!=multiPages[cvjs_active_floorplan_div_nr].currentPage)
//						vqRedlines[i].attr(hide);
//					else
//						vqRedlines[i].attr(show);
				}
			}
	}





	var node = new Array();

	if (vqStickyNotes.length>0){
		//console.log(vqStickyNotes[0]);
		for (var i=0; i<vqStickyNotes.length; i++){
			//cvjs_rPaper[cvjs_active_floorplan_div_nr].add(vqStickyNotes[i]);
//			cvjs_rPaper[cvjs_active_floorplan_div_nr].add(vqStickyNotes[i]);
//			cvjs_rPaper[cvjs_active_floorplan_div_nr].add(node[i]);

if (cvjs_debug) console.log("loop "+vqStickyNotes[i].data("name"));

			cvjs_setCurrentStickyNoteValues_All( vqStickyNotes[i].data("node"), vqStickyNotes[i].data("name"), vqStickyNotes[i].data("id"), vqStickyNotes[i].data("layer"), vqStickyNotes[i].data("group"), vqStickyNotes[i].data("text"), vqStickyNotes[i].data("userid"), vqStickyNotes[i].data("date"), vqStickyNotes[i].data("linked"), vqStickyNotes[i].data("transform"), vqStickyNotes[i].data("currentPage"), vqStickyNotes[i].data("drawingRotation"));
//
			var rightadjustment = 0;
			if (i<10) rightadjustment = 3;

 vqStickyNotes[i] =redlineStickyNoteLayer.group(redlineStickyNoteLayer.path("M0,0h20v20h-20v-20Z").attr({stroke: "#000000", "stroke-width" : "1.0"}),
				   redlineStickyNoteLayer.path("M7,12h1.3M9.5,12h3.5M11.25,12v5M9.75,12v1.75M12.75,12v1.75M10.5,17h1.5M7,13.5h1.3M7,15.25h3M7,17.0h2.2").attr({stroke: "#000000", "stroke-width" : "0.5"}),
				   redlineStickyNoteLayer.text((3+rightadjustment),9,"#"+vqStickyNotes[i].data("id")).attr({"font-size": "8px", "font-style": "italic", stroke: "#000000", "stroke-width" : "0.3", "fill" : "#000000", "fill-opacity" : 1.0}))
				   .attr({'transform': vqStickyNotes[i].data("transform"), "opacity" : "1"})
				   .attr({	fill: '#FFF', "fill-opacity": "0.8", stroke: '#000', 'stroke-opacity': "1" })
				   .data("node", vqStickyNotes[i].data("node"));


			redlineStickyNoteLayer.add( vqStickyNotes[i]);
			
//window.alert("cvjs_setUpVqStickyNotes_currentNode_PageChange "+cvjs_currentStickyNote_underbar+" "+i+"  "+multiPages[cvjs_active_floorplan_div_nr].currentPage);			
			cvjs_setUpVqStickyNotes_currentNode_PageChange(cvjs_rPaper[cvjs_active_floorplan_div_nr], cvjs_currentStickyNote_underbar, i);
			
			if (vqStickyNotes[i].data("currentPage")!=multiPages[cvjs_active_floorplan_div_nr].currentPage)
				vqStickyNotes[i].attr(hide);
			else{
				vqStickyNotes[i].attr(show);
				try{
					if (vqStickyNotes[i].data("drawingRotation")!=0){
							cvjs_rotateAngle(vqStickyNotes[i].data("drawingRotation"), floorplan_div_Array[cvjs_active_floorplan_div_nr]);

//						window.alert("rotate sticky "+ vqStickyNotes[i].data("drawingRotation"));
							
					}
				} catch(err1){console.log(err1);}



			}
		}



	}

//	window.alert(redlineStickyNoteLayer);
	
	cvjs_rPaper[cvjs_active_floorplan_div_nr].add(redlineStickyNoteLayer); //  - this works for dwg

//	cvjs_SVGGroup[cvjs_active_floorplan_div_nr].add(redlineStickyNoteLayer);	
//	cvjs_masterBackground[cvjs_active_floorplan_div_nr].add(redlineStickyNoteLayer);
	
	redlineStickyNoteLayer.prepend(cvjs_masterBackground[cvjs_active_floorplan_div_nr]);
	
	
}
catch(err) {console.log("cvjs_updateDrawingRedlines "+err);}

}



function cvjs_clearAllDrawing()
{

//console.log("clearAll");
//console.log("clear lastobj"+lastObj);
	for (room in vqRooms[cvjs_active_floorplan_div_nr])
	{
		//vqRooms[cvjs_active_floorplan_div_nr][room].attr(defaultColor);  // 2015-02-01  - moved into conditional statement
		if (!cvjs_supressPopUpModal || cvjs_standardHighLightColors){
			vqRooms[cvjs_active_floorplan_div_nr][room].attr(defaultColor);
		}
		else{
			if (vqRooms[cvjs_active_floorplan_div_nr][room].data("linked")){
				vqRooms[cvjs_active_floorplan_div_nr][room].attr(defaultColor_linked);
			}
			else{
				vqRooms[cvjs_active_floorplan_div_nr][room].attr(defaultColor_unlinked);
			}
		}


		try
		  {
		  	if (room != lastObj[cvjs_active_floorplan_div_nr] || room != popObj){
		  		jQuery(vqRooms[cvjs_active_floorplan_div_nr][room].node).qtip('hide');

	  		}
		  }
		catch(err)
		  {
		  //Handle errors here
		  }
	  }
}



/**
 * Highlights a URL with a given style on a given layer
 * @param {string} Id - Id of the URL to highlight
 * @param {object} roomstyle - JSON formattet object containg the styling of the URL
 * @param {string} layer - layer on which to draw the highlight
 */


function cvjs_highlightURL(urlid, roomstyle, layer){

	cvjs_highlightURL_layersort(urlid, roomstyle, layer, "");

}


function cvjs_highlightURL_layersort(rmid, roomstyle, layer, layer2)
{
	var rm = findUrl(rmid);

	if (rm >= 0 )
		{

// we do not know what to do with lastobject
//		lastObj[cvjs_active_floorplan_div_nr] = rm;

		var strRoom = (vqURLs[rm].attr()).toString();

		var strLayer = layer.toString();

		// find the path

		var path1 ="";
		var path_flag = true;
		var cx =0;
		var cy =0;
		var r =0;

		if (strRoom.indexOf("path")>-1){
			path_flag = true;
			var pos1 = strRoom.indexOf(" d=");
			var pathStr1 = strRoom.substring(pos1+4);
			//console.log(pathStr1);
			var pos1A = pathStr1.indexOf("\" ");
			path1 = pathStr1.substring(0, pos1A);
		}

//console.log("path1 "+path1);

		if (strRoom.indexOf("circle")>-1){
			path_flag = false;

			var p_cx = strRoom.indexOf(" cx=");
			var s1_cx = strRoom.substring(p_cx+5);
			var p2_cx = s1_cx.indexOf("\"");
			cx = s1_cx.substring(0, p2_cx)

			var p_cy = strRoom.indexOf(" cy=");
			var s1_cy = strRoom.substring(p_cy+5);
			var p2_cy = s1_cy.indexOf("\"");
			cy = s1_cy.substring(0, p2_cy)


			var p_r = strRoom.indexOf(" r=");
			var s1_r = strRoom.substring(p_r+4);
			var p2_r = s1_r.indexOf("\"");
			r = s1_r.substring(0, p2_r)
		}

//console.log("r "+r);



//console.log("pos1="+pos1+" pos2="+pos2);
//		var path1 = strRoom.substring(pos1+3, pos2-1);

if (cvjs_debug) console.log("cvjs_highlightRoomCSS_layersort "+strRoom+" "+cx+" "+cy+" "+r);


		var pos2 = strRoom.indexOf(" fill=");
		var style = strRoom.substring(pos2+1);

		var styleString = JSON.stringify(roomstyle);
		styleString = styleString.toString();
		var splitString = styleString.split(",");
		var fill_var = "#fff";
		var fillopacity_var = "0.5";  // 
		var stroke_var = "#fff";
		var strokewidth_var = 1;
		var strokelinejoin_var = "round";
		var strokeopacity_var = "1";

//console.log("splitString="+splitString+"  length="+splitString.length);


		for (var i=0; i<splitString.length; i++){

			var styleObject = splitString[i];

			if (styleObject.indexOf('"fill"')>-1){
				fill_var = styleObject.substring(styleObject.indexOf(':')+1);
				if (fill_var.indexOf('}')>-1)
					fill_var = fill_var.substring(0, fill_var.indexOf('}'));
			}
			if (styleObject.indexOf('"fill-opacity"')>-1){
				fillopacity_var = styleObject.substring(styleObject.indexOf(':')+1);
				if (fillopacity_var.indexOf('}')>-1)
					fillopacity_var = fillopacity_var.substring(0, fillopacity_var.indexOf('}'));
			}

			if (styleObject.indexOf('"stroke"')>-1){
				stroke_var = styleObject.substring(styleObject.indexOf(':')+1);
				if (stroke_var.indexOf('}')>-1)
					stroke_var = stroke_var.substring(0, stroke_var.indexOf('}'));
			}

			if (styleObject.indexOf('"stroke-width"')>-1){
				strokewidth_var = styleObject.substring(styleObject.indexOf(':')+1);
				if (strokewidth_var.indexOf('}')>-1)
					strokewidth_var = strokewidth_var.substring(0, strokewidth_var.indexOf('}'));
			}

			if (styleObject.indexOf('"stroke-opacity"')>-1){
				strokeopacity_var = styleObject.substring(styleObject.indexOf(':')+1);
				if (strokeopacity_var.indexOf('}')>-1)
					strokeopacity_var = strokeopacity_var.substring(0, strokeopacity_var.indexOf('}'));
			}

//console.log("strokeopacity_var "+strokeopacity_var);


			if (styleObject.indexOf('"stroke-linejoin"')>-1){
				strokelinejoin_var = styleObject.substring(styleObject.indexOf(':')+1);
				if (strokelinejoin_var.indexOf('}')>-1)
					strokelinejoin_var = strokelinejoin_var.substring(0, strokelinejoin_var.indexOf('}'));
//console.log("strokelinejoin_var "+strokelinejoin_var);


			}
		}


		try{

			var attr_2 = '{ \"fill\" : '+fill_var+' , \"fill-opacity\": '+fillopacity_var+' , \"stroke\": '+stroke_var+', \"stroke-width\": '+strokewidth_var+', \"stroke-opacity\": '+strokeopacity_var+',  \"stroke-linejoin\": '+strokelinejoin_var+' }';

			var json_obj = jQuery.parseJSON(attr_2);

//console.log(path_flag+" Location path1="+path1+" "+cx+" "+cy+" "+r);

			if (path_flag)
				layer.add(cvjs_rPaper[cvjs_active_floorplan_div_nr].path(path1).attr(json_obj));
			else
				layer.add(cvjs_rPaper[cvjs_active_floorplan_div_nr].circle(cx,cy,r,r).attr(json_obj));



			// layer is prepended the vqroom and drag layer so always below the layer with selectable objects

			try{
				layer2.prepend(layer);
			}
			catch (err){
				var iii = 0;
			}
			return 1;

		}
		catch(err){

		if (cvjs_debug) console.log("A2 "+err);
			return -1;

		}

	}

	return -1;
}



function findURL(urlid)
{
	for (spc in vqURLs)
	{
		var vqid = vqURLs[spc].data("id");

//if (spc == 114 || spc == 115 || spc == 116) console.log("rmid "+rmid+"  vqid="+vqid);

		if (vqid == urlid)
			{
			return spc;
			}
	}
	return -1;
}



function cvjs_highlightRoomCSS(rmid, roomstyle)
{
	var rm = findRoom(rmid);
	if (rm >= 0)
	{
		lastObj[cvjs_active_floorplan_div_nr] = rm;
		vqRooms[cvjs_active_floorplan_div_nr][rm].attr(roomstyle);
	}
}




/**
 * Highlights all Space Objects with a given style on a given layer
 * @param {object} roomstyle - JSON formattet object containg the styling of the Space Objects
 * @param {string} layer - layer on which to draw the highlights
 */

function cvjs_highlightAllSpaceObjects(roomstyle, layer)
{
	for (spc in vqRooms[cvjs_active_floorplan_div_nr])
	{
		cvjs_highlightRoomCSS_layer(vqRooms[cvjs_active_floorplan_div_nr][spc].data("id"), roomstyle, layer);
	}
}





function cvjs_highlightAllRooms_layer(roomstyle, layer)
{
	for (spc in vqRooms[cvjs_active_floorplan_div_nr])
	{
		cvjs_highlightRoomCSS_layer(vqRooms[cvjs_active_floorplan_div_nr][spc].data("id"), roomstyle, layer);
	}
}



/**
 * Highlights a Space Object with a given style on a given layer
 * @param {string} Id - Id of the Space Object to highlight
 * @param {object} roomstyle - JSON formattet object containg the styling of the SpaceObject
 * @param {string} layer - layer on which to draw the highlight
 * @param {string} floorplan_div - floorplan div with CADViewer JS instance
 */

function cvjs_highlightSpaceObjectIdDiv(rmid, roomstyle, layer, floorplan_div)
{

	cvjs_highlightRoomCSS_layersortDiv(rmid, roomstyle, layer, floorplan_div);

}




/**
 * Highlights a Space Object with a given style on a given layer
 * @param {string} Id - Id of the Space Object to highlight
 * @param {object} roomstyle - JSON formattet object containg the styling of the SpaceObject
 * @param {string} layer - layer on which to draw the highlight
 */

function cvjs_highlightSpaceObjectId(rmid, roomstyle, layer)
{

	cvjs_highlightRoomCSS_layersort(rmid, roomstyle, layer, layer_vqrooms[cvjs_active_floorplan_div_nr]);

}

/**
 * Highlights a Space Object with a given style on a given layer
 * @param {string} Id - Id of the Space Object to highlight
 * @param {object} roomstyle - JSON formattet object containg the styling of the SpaceObject
 * @param {string} layer - layer on which to draw the highlight
 */

function cvjs_highlightRoomCSS_layer(rmid, roomstyle, layer)
{

	cvjs_highlightRoomCSS_layersort(rmid, roomstyle, layer, layer_vqrooms[cvjs_active_floorplan_div_nr]);

}


/**
 * Highlights a Space Object with a given style on a given layer
 * @param {string} rmid - Id of the Space Object to highlight
 * @param {object} roomstyle - JSON formattet object containg the styling of the SpaceObject
 * @param {string} layer - layer on which to draw the highlight
 * @param {string} floorplan_div - name of the div on which the CADViewerJS instance is placed
 * @return {boolean} false if rmid not found otherwise true
 */

function cvjs_highlightRoomCSS_layersortDiv(rmid, roomstyle, layer, floorplan_div){
	
	var svgdiv = floorplan_div+"_svg";
	var returnvalue;
	
	cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(svgdiv);
	returnvalue = cvjs_highlightRoomCSS_layersort(rmid, roomstyle, layer, layer_vqrooms[cvjs_active_floorplan_div_nr]);
	
	if (returnvalue == -1) return false;
	else return true;

	return false;
	
}







/**
 * Highlights a Space Object with a given style on a given layer
 * @param {string} Id - Id of the Space Object to highlight
 * @param {object} roomstyle - JSON formattet object containg the styling of the SpaceObject
 * @param {string} layer - layer on which to draw the highlight
 * @param {string} layer2 - layer is put on top of layer2
 */

function cvjs_highlightRoomCSS_layersort(rmid, roomstyle, layer, layer2)
{
	var rm = findFixture(rmid);

	if (rm == -1) return -1;
	
	if (rm >= 0 )
		{

//if (cvjs_debug) console.log("rmid "+rmid+" rm="+rm);
		lastObj[cvjs_active_floorplan_div_nr] = rm;
		//vqRooms[cvjs_active_floorplan_div_nr][rm].attr(roomstyle);

		// console.log("before layer add "+layer+" rm="+rm);

//if (cvjs_debug) console.log("vqRooms[cvjs_active_floorplan_div_nr][rm] "+vqRooms[cvjs_active_floorplan_div_nr][rm]);

		var strRoom;

		try{
				strRoom = vqRooms[cvjs_active_floorplan_div_nr][rm].toString();

		//console.log("1 strRoom "+strRoom);

			if (strRoom.indexOf("path")>0 || strRoom.indexOf("circle")>0 ){

				//window.alert("we got path");
			}
			else{
				strRoom = (vqRooms[cvjs_active_floorplan_div_nr][rm].attr()).toString();
				//window.alert("2");
			}

		}catch (exception) {

			strRoom = (vqRooms[cvjs_active_floorplan_div_nr][rm].attr()).toString();
				//window.alert("3");
		}



//if (cvjs_debug) console.log("strRoom "+strRoom);

		var strLayer = layer.toString();

//console.log("strLayer "+strLayer);

		// find the path

		var path1 ="";
		var path_flag = true;
		var cx =0;
		var cy =0;
		var r =0;

		if (strRoom.indexOf("path")>-1){
			path_flag = true;
			var pos1 = strRoom.indexOf(" d=");
			var pathStr1 = strRoom.substring(pos1+4);
			//console.log(pathStr1);
			var pos1A = pathStr1.indexOf("\" ");
			path1 = pathStr1.substring(0, pos1A);
		}

//console.log("path1 "+path1);

		if (strRoom.indexOf("circle")>-1){
			path_flag = false;

			var p_cx = strRoom.indexOf(" cx=");
			var s1_cx = strRoom.substring(p_cx+5);
			var p2_cx = s1_cx.indexOf("\"");
			cx = s1_cx.substring(0, p2_cx)

			var p_cy = strRoom.indexOf(" cy=");
			var s1_cy = strRoom.substring(p_cy+5);
			var p2_cy = s1_cy.indexOf("\"");
			cy = s1_cy.substring(0, p2_cy)


			var p_r = strRoom.indexOf(" r=");
			var s1_r = strRoom.substring(p_r+4);
			var p2_r = s1_r.indexOf("\"");
			r = s1_r.substring(0, p2_r)
		}

//console.log("r "+r);



//console.log("pos1="+pos1+" pos2="+pos2);
//		var path1 = strRoom.substring(pos1+3, pos2-1);

//console.log("cvjs_highlightRoomCSS_layersort "+strRoom+" "+cx+" "+cy+" "+r);


		var pos2 = strRoom.indexOf(" fill=");
		var style = strRoom.substring(pos2+1);

		var styleString = JSON.stringify(roomstyle);
		styleString = styleString.toString();
		var splitString = styleString.split(",");
		var fill_var = "#fff";
		var fillopacity_var = "0.5";
		var stroke_var = "#fff";
		var strokewidth_var = 1;
		var strokelinejoin_var = '"round"';
		var strokelinecap_var = '"round"';
		var strokeopacity_var = "1";


//console.log("splitString="+splitString+"  length="+splitString.length);


		for (var i=0; i<splitString.length; i++){

			var styleObject = splitString[i];

			if (styleObject.indexOf('"fill"')>-1){
				fill_var = styleObject.substring(styleObject.indexOf(':')+1);
				if (fill_var.indexOf('}')>-1)
					fill_var = fill_var.substring(0, fill_var.indexOf('}'));
			}
			if (styleObject.indexOf('"fill-opacity"')>-1){
				fillopacity_var = styleObject.substring(styleObject.indexOf(':')+1);
				if (fillopacity_var.indexOf('}')>-1)
					fillopacity_var = fillopacity_var.substring(0, fillopacity_var.indexOf('}'));
			}

			if (styleObject.indexOf('"stroke"')>-1){
				stroke_var = styleObject.substring(styleObject.indexOf(':')+1);
				if (stroke_var.indexOf('}')>-1)
					stroke_var = stroke_var.substring(0, stroke_var.indexOf('}'));
			}

			if (styleObject.indexOf('"stroke-width"')>-1){
				strokewidth_var = styleObject.substring(styleObject.indexOf(':')+1);
				if (strokewidth_var.indexOf('}')>-1)
					strokewidth_var = strokewidth_var.substring(0, strokewidth_var.indexOf('}'));
			}

			if (styleObject.indexOf('"stroke-opacity"')>-1){
				strokeopacity_var = styleObject.substring(styleObject.indexOf(':')+1);
				if (strokeopacity_var.indexOf('}')>-1)
					strokeopacity_var = strokeopacity_var.substring(0, strokeopacity_var.indexOf('}'));
			}

//console.log("strokeopacity_var "+strokeopacity_var);


			if (styleObject.indexOf('"stroke-linejoin"')>-1){
				strokelinejoin_var = styleObject.substring(styleObject.indexOf(':')+1);
				if (strokelinejoin_var.indexOf('}')>-1)
					strokelinejoin_var = strokelinejoin_var.substring(0, strokelinejoin_var.indexOf('}'));
//console.log("strokelinejoin_var "+strokelinejoin_var);

			}

			if (styleObject.indexOf('"stroke-linecap"')>-1){
				strokelinecap_var = styleObject.substring(styleObject.indexOf(':')+1);
				if (strokelinecap_var.indexOf('}')>-1)
					strokelinecap_var = strokelinecap_var.substring(0, strokelinecap_var.indexOf('}'));
if (cvjs_debug) console.log("strokelinecap_var "+strokelinecap_var);

			}



		}


		try{

			var attr_2 = '{ \"fill\" : '+fill_var+' , \"fill-opacity\": '+fillopacity_var+' , \"stroke\": '+fill_var+', \"stroke-width\": '+strokewidth_var+', \"stroke-opacity\": '+strokeopacity_var+',  \"stroke-linejoin\": '+strokelinejoin_var+',  \"stroke-linecap\": '+strokelinecap_var+' }';

//if (cvjs_debug) console.log("attr2 "+attr_2);

			var json_obj = jQuery.parseJSON(attr_2);

//console.log(path_flag+" Location path1="+path1+" "+cx+" "+cy+" "+r);

			if (path_flag)
				layer.add(cvjs_rPaper[cvjs_active_floorplan_div_nr].path(path1).attr(json_obj));
			else
				layer.add(cvjs_rPaper[cvjs_active_floorplan_div_nr].circle(cx,cy,r,r).attr(json_obj));



			// layer is prepended the vqroom and drag layer so always below the layer with selectable objects

			try{
				layer2.prepend(layer);
			}
			catch (err){
				var iii = 0;
			}
			return 1;

		}
		catch(err){

		if (cvjs_debug) console.log("A2 "+err);
			return -1;

		}

	}

	return -1;
}


/**
 * Highlights a Space Object bordr with a given style on a given layer
 * @param {string} rmid - Id of the Space Object to highlight
 * @param {object} roomstyle - JSON formattet object containg the styling of the SpaceObject
 * @param {string} layer - layer on which to draw the highlight
 * @param {string} floorplan_div - name of the div on which the CADViewerJS instance is placed
 * @param {floar} lineWeightFactor - scale factor on border line weight
 * @return {boolean} false if rmid not found otherwise true
 */

 
function cvjs_highlightSpaceBorderCSS_layersortDiv(rmid, roomstyle, layer, floorplan_div, lineWeightFactor)
{

	var svgdiv = floorplan_div+"_svg";
	var returnvalue;

	cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(svgdiv);
	returnvalue = cvjs_highlightSpaceBorderCSS_layersort(rmid, roomstyle, layer, layer_vqrooms[cvjs_active_floorplan_div_nr], lineWeightFactor);

	if (returnvalue == -1) return false;
	else return true;

	return false;
	
}







/**
 * Highlights a Space Object bordr with a given style on a given layer
 * @param {string} Id - Id of the Space Object to highlight
 * @param {object} roomstyle - JSON formattet object containg the styling of the SpaceObject
 * @param {string} layer - layer on which to draw the highlight
 * @param {string} layer2 - layer is put on top of layer2
 * @param {floar} lineWeightFactor - scale factor on border line weight
 */

function cvjs_highlightSpaceBorderCSS_layersort(rmid, roomstyle, layer, layer2, lineWeightFactor)
{
	var rm = findFixture(rmid);

	if (rm >= 0 )
		{

if (cvjs_debug) console.log("rmid "+rmid+" rm="+rm);
		lastObj[cvjs_active_floorplan_div_nr] = rm;
		//vqRooms[cvjs_active_floorplan_div_nr][rm].attr(roomstyle);

		// console.log("before layer add "+layer+" rm="+rm);

//console.log("vqRooms[cvjs_active_floorplan_div_nr][rm] "+vqRooms[cvjs_active_floorplan_div_nr][rm]);

		var strRoom;

		try{
				strRoom = vqRooms[cvjs_active_floorplan_div_nr][rm].toString();

		//console.log("1 strRoom "+strRoom);

			if (strRoom.indexOf("path")>0 || strRoom.indexOf("circle")>0 ){

				//window.alert("we got path");
			}
			else{
				strRoom = (vqRooms[cvjs_active_floorplan_div_nr][rm].attr()).toString();
				//window.alert("2");
			}

		}catch (exception) {

			strRoom = (vqRooms[cvjs_active_floorplan_div_nr][rm].attr()).toString();
				//window.alert("3");
		}



//console.log("strRoom "+strRoom);

		var strLayer = layer.toString();

//console.log("strLayer "+strLayer);

		// find the path

		var path1 ="";
		var path_flag = true;
		var cx =0;
		var cy =0;
		var r =0;

		if (strRoom.indexOf("path")>-1){
			path_flag = true;
			var pos1 = strRoom.indexOf(" d=");
			var pathStr1 = strRoom.substring(pos1+4);
			//console.log(pathStr1);
			var pos1A = pathStr1.indexOf("\" ");
			path1 = pathStr1.substring(0, pos1A);
		}

//console.log("path1 "+path1);

		if (strRoom.indexOf("circle")>-1){
			path_flag = false;

			var p_cx = strRoom.indexOf(" cx=");
			var s1_cx = strRoom.substring(p_cx+5);
			var p2_cx = s1_cx.indexOf("\"");
			cx = s1_cx.substring(0, p2_cx)

			var p_cy = strRoom.indexOf(" cy=");
			var s1_cy = strRoom.substring(p_cy+5);
			var p2_cy = s1_cy.indexOf("\"");
			cy = s1_cy.substring(0, p2_cy)


			var p_r = strRoom.indexOf(" r=");
			var s1_r = strRoom.substring(p_r+4);
			var p2_r = s1_r.indexOf("\"");
			r = s1_r.substring(0, p2_r)
		}

//console.log("r "+r);



//console.log("pos1="+pos1+" pos2="+pos2);
//		var path1 = strRoom.substring(pos1+3, pos2-1);

//console.log("cvjs_highlightRoomCSS_layersort "+strRoom+" "+cx+" "+cy+" "+r);


		var pos2 = strRoom.indexOf(" fill=");
		var style = strRoom.substring(pos2+1);

		var styleString = JSON.stringify(roomstyle);
		styleString = styleString.toString();
		var splitString = styleString.split(",");
		var fill_var = "#fff";
		var fillopacity_var = "0.01";
		var stroke_var = "#fff";
		var strokewidth_var = 1;
		var strokelinejoin_var = '"round"';
		var strokelinecap_var = '"round"';
		var strokeopacity_var = "1";


		var fill_var_org = '"#fff"';
		var fillopacity_var_org = "0.0";
		var stroke_var = "#fff";
		var strokewidth_var_org = 1;
		var strokelinejoin_var_org = "round";
		var strokeopacity_var_org = "1";


//console.log("splitString="+splitString+"  length="+splitString.length);


		for (var i=0; i<splitString.length; i++){

			var styleObject = splitString[i];

			if (styleObject.indexOf('"fill"')>-1){
				fill_var = styleObject.substring(styleObject.indexOf(':')+1);
				if (fill_var.indexOf('}')>-1)
					fill_var = fill_var.substring(0, fill_var.indexOf('}'));
			}
			if (styleObject.indexOf('"fill-opacity"')>-1){
				fillopacity_var = styleObject.substring(styleObject.indexOf(':')+1);
				if (fillopacity_var.indexOf('}')>-1)
					fillopacity_var = fillopacity_var.substring(0, fillopacity_var.indexOf('}'));
			}

			if (styleObject.indexOf('"stroke"')>-1){
				stroke_var = styleObject.substring(styleObject.indexOf(':')+1);
				if (stroke_var.indexOf('}')>-1)
					stroke_var = stroke_var.substring(0, stroke_var.indexOf('}'));
			}

			if (styleObject.indexOf('"stroke-width"')>-1){
				strokewidth_var = styleObject.substring(styleObject.indexOf(':')+1);
				if (strokewidth_var.indexOf('}')>-1)
					strokewidth_var = strokewidth_var.substring(0, strokewidth_var.indexOf('}'));
			}

			if (styleObject.indexOf('"stroke-opacity"')>-1){
				strokeopacity_var = styleObject.substring(styleObject.indexOf(':')+1);
				if (strokeopacity_var.indexOf('}')>-1)
					strokeopacity_var = strokeopacity_var.substring(0, strokeopacity_var.indexOf('}'));
			}

//console.log("strokeopacity_var "+strokeopacity_var);


			if (styleObject.indexOf('"stroke-linejoin"')>-1){
				strokelinejoin_var = styleObject.substring(styleObject.indexOf(':')+1);
				if (strokelinejoin_var.indexOf('}')>-1)
					strokelinejoin_var = strokelinejoin_var.substring(0, strokelinejoin_var.indexOf('}'));
//console.log("strokelinejoin_var "+strokelinejoin_var);

			}

			if (styleObject.indexOf('"stroke-linecap"')>-1){
				strokelinecap_var = styleObject.substring(styleObject.indexOf(':')+1);
				if (strokelinecap_var.indexOf('}')>-1)
					strokelinecap_var = strokelinecap_var.substring(0, strokelinecap_var.indexOf('}'));
if (cvjs_debug) console.log("2 strokelinecap_var "+strokelinecap_var);

			}

		}


		try{

			var attr_2 = '{ \"fill\" : '+fill_var_org+' , \"fill-opacity\": '+fillopacity_var_org+' , \"stroke\": '+stroke_var+', \"stroke-width\": '+strokewidth_var*lineWeightFactor+', \"stroke-opacity\": '+strokeopacity_var_org+',  \"stroke-linejoin\": '+strokelinejoin_var+' }';

//			var attr_2 = '{ \"fill\" : '+fill_var+' , \"fill-opacity\": '+fillopacity_var+' , \"stroke\": '+fill_var+', \"stroke-width\": '+strokewidth_var+', \"stroke-opacity\": '+strokeopacity_var+',  \"stroke-linejoin\": '+strokelinejoin_var+',  \"stroke-linecap\": '+strokelinecap_var+' }';


if (cvjs_debug) console.log(attr_2);


			var json_obj = jQuery.parseJSON(attr_2);

//console.log(path_flag+" Location path1="+path1+" "+cx+" "+cy+" "+r);

			if (path_flag)
				layer.add(cvjs_rPaper[cvjs_active_floorplan_div_nr].path(path1).attr(json_obj));
			else
				layer.add(cvjs_rPaper[cvjs_active_floorplan_div_nr].circle(cx,cy,r,r).attr(json_obj));



			// layer is prepended the vqroom and drag layer so always below the layer with selectable objects

			try{
				layer2.prepend(layer);
			}
			catch (err){
				var iii = 0;
			}
			return 1;

		}
		catch(err){

		if (cvjs_debug) console.log("A2 "+err);
			return -1;

		}

	}

	return -1;
}





function findFixture(rmid)
{

	//console.log("findFixture   vqRooms.ength "+vqRooms[cvjs_active_floorplan_div_nr].length+"  "+cvjs_active_floorplan_div_nr);
	
	for (spc in vqRooms[cvjs_active_floorplan_div_nr])
	{
		var vqid = vqRooms[cvjs_active_floorplan_div_nr][spc].data("id");

//		console.log("find fixture vqid "+vqid+"  "+cvjs_active_floorplan_div_nr+"  "+rmid);
		
//if (spc == 114 || spc == 115 || spc == 116) console.log("rmid "+rmid+"  vqid="+vqid);

		if (vqid == rmid)
			{
				
				
			//console.log("match "+spc);	
				
			return spc;
			}
	}
	
	if (cvjs_debug) console.log("no match!");
	
	return -1;
}




function cvjs_highlightFixtureCSS_layersort(rmid, roomstyle, layer, layer2, scale)
{
	var rm = findFixture(rmid);

	if (rm >= 0 )
		{

//console.log("rmid "+rmid+" rm="+rm);
		lastObj[cvjs_active_floorplan_div_nr] = rm;
		//vqRooms[cvjs_active_floorplan_div_nr][rm].attr(roomstyle);

		// console.log("before layer add "+layer+" rm="+rm);

		var strRoom = (vqRooms[cvjs_active_floorplan_div_nr][rm].attr()).toString();

//console.log("strRoom "+strRoom);

		var strLayer = layer.toString();

//console.log("strLayer "+strLayer);

		// find the path

		var path1;
		var path_flag = true;
		var cx;
		var cy;
		var r;

		if (strRoom.indexOf("path")>-1){
			path_flag = true;
			var pos1 = strRoom.indexOf(" d=");
			var pathStr1 = strRoom.substring(pos1+4);
			//console.log(pathStr1);
			var pos1A = pathStr1.indexOf("\" ");
			path1 = pathStr1.substring(0, pos1A);
		}


		if (strRoom.indexOf("circle")>-1){
			path_flag = false;

			var p_cx = strRoom.indexOf(" cx=");
			var s1_cx = strRoom.substring(p_cx+5);
			var p2_cx = s1_cx.indexOf("\"");
			cx = s1_cx.substring(0, p2_cx)

			var p_cy = strRoom.indexOf(" cy=");
			var s1_cy = strRoom.substring(p_cy+5);
			var p2_cy = s1_cy.indexOf("\"");
			cy = s1_cy.substring(0, p2_cy)


			var p_r = strRoom.indexOf(" r=");
			var s1_r = strRoom.substring(p_r+4);
			var p2_r = s1_r.indexOf("\"");
			r = s1_r.substring(0, p2_r)
		}



//console.log("pos1="+pos1+" pos2="+pos2);
//		var path1 = strRoom.substring(pos1+3, pos2-1);

//console.log("cvjs_highlightFixtureCSS_layersort "+strRoom+" "+cx+" "+cy+" "+r);


		var pos2 = strRoom.indexOf(" fill=");
		var style = strRoom.substring(pos2+1);

		var styleString = JSON.stringify(roomstyle);
		styleString = styleString.toString();
		var splitString = styleString.split(",");
		var fill_var = "#fff";
		var fillopacity_var = "0.5";
		var stroke_var = "#fff";
		var strokewidth_var = 1;
		var strokelinejoin_var = "round";
		var strokeopacity_var = "1";

//console.log("splitString="+splitString+"  length="+splitString.length);



		for (var i=0; i<splitString.length; i++){

			var styleObject = splitString[i];

			if (styleObject.indexOf('"fill"')>-1){
				fill_var = styleObject.substring(styleObject.indexOf(':')+1);
				if (fill_var.indexOf('}')>-1)
					fill_var = fill_var.substring(0, fill_var.indexOf('}'));
			}
			if (styleObject.indexOf('"fill-opacity"')>-1){
				fillopacity_var = styleObject.substring(styleObject.indexOf(':')+1);
				if (fillopacity_var.indexOf('}')>-1)
					fillopacity_var = fillopacity_var.substring(0, fillopacity_var.indexOf('}'));
			}

			if (styleObject.indexOf('"stroke"')>-1){
				stroke_var = styleObject.substring(styleObject.indexOf(':')+1);
				if (stroke_var.indexOf('}')>-1)
					stroke_var = stroke_var.substring(0, stroke_var.indexOf('}'));
			}

			if (styleObject.indexOf('"stroke-width"')>-1){
				strokewidth_var = styleObject.substring(styleObject.indexOf(':')+1);
				if (strokewidth_var.indexOf('}')>-1)
					strokewidth_var = strokewidth_var.substring(0, strokewidth_var.indexOf('}'));
			}

			if (styleObject.indexOf('"stroke-opacity"')>-1){
				strokeopacity_var = styleObject.substring(styleObject.indexOf(':')+1);
				if (strokeopacity_var.indexOf('}')>-1)
					strokeopacity_var = strokeopacity_var.substring(0, strokeopacity_var.indexOf('}'));
			}

//console.log("strokeopacity_var "+strokeopacity_var);


			if (styleObject.indexOf('"stroke-linejoin"')>-1){
				strokelinejoin_var = styleObject.substring(styleObject.indexOf(':')+1);
				if (strokelinejoin_var.indexOf('}')>-1)
					strokelinejoin_var = strokelinejoin_var.substring(0, strokelinejoin_var.indexOf('}'));
//console.log("strokelinejoin_var "+strokelinejoin_var);


			}
		}


		try{

			var attr_2 = '{ \"fill\" : '+fill_var+' , \"fill-opacity\": '+fillopacity_var+' , \"stroke\": '+stroke_var+', \"stroke-width\": '+strokewidth_var+', \"stroke-opacity\": '+strokeopacity_var+',  \"stroke-linejoin\": '+strokelinejoin_var+' }';

			var json_obj = jQuery.parseJSON(attr_2);


//console.log("path1="+path1+" "+cx+" "+cy+" "+r);

			if (path_flag)
				layer.add(cvjs_rPaper[cvjs_active_floorplan_div_nr].path(path1).transform(scale).attr(json_obj));
			else
				layer.add(cvjs_rPaper[cvjs_active_floorplan_div_nr].circle(cx,cy,r,r).transform(scale).attr(json_obj));



			// layer is prepended the vqroom and drag layer so always below the layer with selectable objects

			try{
				layer2.prepend(layer);
			}
			catch (err){
				var iii = 0;
			}


	//	layer.add(cvjs_rPaper[cvjs_active_floorplan_div_nr].path(path1).attr({fill: '#08519c', "fill-opacity": "0.5", stroke: '#08519c', 'stroke-width': 1, 'stroke-linejoin': 'round'}));
	//	layer.add(cvjs_rPaper[cvjs_active_floorplan_div_nr].path("M604.746,324.826l-0.251,0.025h-0.276l-0.301,0.025l-0.276,0.025l-0.276,0.025l-0.276,0.050l-0.301,0.050l-0.276,0.050l-0.276,0.050l-0.276,0.075l-0.276,0.075l-0.276,0.075l-0.276,0.100l-0.251,0.100l-0.276,0.100l-0.276,0.100l-0.251,0.125l-0.251,0.100l-0.251,0.151l-0.251,0.125l-0.251,0.151l-0.251,0.151l-0.251,0.151l-0.226,0.151l-0.251,0.176l-0.226,0.176l-0.226,0.176l-0.226,0.176l-0.226,0.201l-0.201,0.176l-0.201,0.201l-0.201,0.201l-0.201,0.226l-0.176,0.201l-0.176,0.226l-0.201,0.226l-0.151,0.226l-0.176,0.226l-0.151,0.251l-0.176,0.226l-0.125,0.251l-0.151,0.251l-0.125,0.251l-0.151,0.251l-0.100,0.276l-0.125,0.251l-0.100,0.276l-0.125,0.251l-0.075,0.276l-0.100,0.276").attr(fill_styles));
	//		console.log("A2 ");

			return 1;

		}
		catch(err){

		if (cvjs_debug) console.log("A2 "+err);
			return -1;

		}

	}

	return -1;
}




function cvjs_highlightRoomRGB(rmid, r,g,b)
{
	var rm = findRoom(rmid);
	if (rm >= 0)
	{
		lastObj[cvjs_active_floorplan_div_nr] = rm;
		vqRooms[cvjs_active_floorplan_div_nr][rm].attr({fill: rgb(r,g,b), "fill-opacity": "0.7"});
	}
}




function cvjs_highlightRoomHex(rmid, hex)
{
	var rm = findRoom(rmid);
	if (rm >= 0)
	{
		lastObj[cvjs_active_floorplan_div_nr] = rm;
		vqRooms[cvjs_active_floorplan_div_nr][rm].attr({fill: '#'+hex, "fill-opacity": "0.7"});
	}
}

function cvjs_highlightRoomByIdHex(rmid, hex)
{
	var rm = findRoomById(rmid);
	if (rm >= 0)
		{
		lastObj[cvjs_active_floorplan_div_nr] = rm;
		vqRooms[cvjs_active_floorplan_div_nr][rm].attr({fill: '#'+hex, "fill-opacity": "0.7"});
		}
}

function clearRoom(rmid)
{
	var rm = findRoom(rmid);
	if (rm >= 0)
	{
		//vqRooms[cvjs_active_floorplan_div_nr][rm].attr(defaultColor);
		if (!cvjs_supressPopUpModal || cvjs_standardHighLightColors){
			vqRooms[cvjs_active_floorplan_div_nr][rm].attr(defaultColor);
		}
		else{
			if (vqRooms[cvjs_active_floorplan_div_nr][rm].data("linked")){
				vqRooms[cvjs_active_floorplan_div_nr][rm].attr(defaultColor_linked);
			}
			else{
				vqRooms[cvjs_active_floorplan_div_nr][rm].attr(defaultColor_unlinked);
			}
		}


	}
}

function cvjs_highlightRoomImmediate(rmid)
{
	cvjs_clearDrawing();
	var rm = findRoom(rmid);
	if (rm >= 0)
	{

		lastObj[cvjs_active_floorplan_div_nr] = rm;

		//vqRooms[cvjs_active_floorplan_div_nr][lastObj[cvjs_active_floorplan_div_nr]].attr(defaultColor);   // 2015-02-01
		if (!cvjs_supressPopUpModal || cvjs_standardHighLightColors){
			vqRooms[cvjs_active_floorplan_div_nr][rm].attr(selectColor);
		}
		else{
			if (vqRooms[cvjs_active_floorplan_div_nr][rm].data("linked")){
				vqRooms[cvjs_active_floorplan_div_nr][rm].attr(selectColor_linked);
			}
			else{
				vqRooms[cvjs_active_floorplan_div_nr][rm].attr(selectColor_unlinked);
			}
		}

		return rm;
	}

	return rm;
}


function cvjs_highlightRoomImmediateHyperlinks(rmid)
{
	cvjs_clearDrawingHyperlinks();



	var rm = findUrl(rmid)

	if (rm >= 0)
	{
		lastObjHyperlink[cvjs_active_floorplan_div_nr] = rm;

		//vqRooms[cvjs_active_floorplan_div_nr][lastObj[cvjs_active_floorplan_div_nr]].attr(defaultColor);   // 2015-02-01
		if (!cvjs_supressPopUpModal){
			if (!cvjs_supressHyperlinkColors){
				vqURLs[rm].attr(selectColor);
			}
			else{
				vqURLs[rm].attr(defaultColor_Hyperlinks_blank);  // set colors ( note: change attribute name to something more applicable
			}




		}
		else{


			if (!cvjs_supressHyperlinkColors){
				vqURLs[rm].attr(defaultColor_Hyperlinks);
			}
			else{
				vqURLs[rm].attr(defaultColor_Hyperlinks_blank);  // set colors ( note: change attribute name to something more applicable
			}

//			if (vqURLs[rm].data("linked")){
//				vqURLs[rm].attr(selectColor_linked);
//			}
//			else{
//				vqURLs[rm].attr(selectColor_unlinked);
//			}
		}

		return rm;
	}

	return rm;
}







function cvjs_highlightRoomImmediateStickyNotes(rmid)
{
	cvjs_clearDrawingStickyNotes();
	var rm = findStickyNotes(rmid);
	if (rm >= 0)
	{
		lastObjStickyNote[cvjs_active_floorplan_div_nr] = rm;

		//vqRooms[cvjs_active_floorplan_div_nr][lastObj[cvjs_active_floorplan_div_nr]].attr(defaultColor);   // 2015-02-01
		if (!cvjs_supressPopUpModal){
			vqStickyNotes[rm].attr(selectColor_StickyNotes);
		}
		else{
			if (vqStickyNotes[rm].data("linked")){
				vqStickyNotes[rm].attr(selectColor_linked);
			}
			else{
				vqStickyNotes[rm].attr(selectColor_unlinked);
			}
		}

		return rm;
	}

	return rm;
}




function cvjs_highlightRoomImmediateNoClearDrawing(rmid)
{
	var rm = findRoom(rmid);
	if (rm >= 0)
	{
		lastObj[cvjs_active_floorplan_div_nr] = rm;


		if (!cvjs_supressPopUpModal || cvjs_standardHighLightColors){
			vqRooms[cvjs_active_floorplan_div_nr][rm].attr(selectColor);
		}
		else{
			if (vqRooms[cvjs_active_floorplan_div_nr][rm].data("linked")){
				vqRooms[cvjs_active_floorplan_div_nr][rm].attr(selectColor_linked);
			}
			else{
				vqRooms[cvjs_active_floorplan_div_nr][rm].attr(selectColor_unlinked);
			}
		}

//		vqRooms[cvjs_active_floorplan_div_nr][rm].attr(selectColor);

		return rm;
	}
}




function highlightRoomVqId(rm)
{
	cvjs_clearDrawing();
	lastObj[cvjs_active_floorplan_div_nr] = rm;
	vqRooms[cvjs_active_floorplan_div_nr][rm].attr(highlight);
}

function highlightRoom(rmid)
{
	cvjs_clearDrawing();
	var rm = findRoom(rmid);
	if (rm >= 0)
	{
		lastObj[cvjs_active_floorplan_div_nr] = rm;
		vqRooms[cvjs_active_floorplan_div_nr][rm].animate(highlight,300);
		return rm;
	}
}


/**
* Activate modal on Space Object
 * @param {string} rmid - Id of space object modal to activate
 */

function cvjs_activateSpaceObjectModal_Id(rmid){

	change_space_fixed_location(rmid);

}


/**
* Activate modal on Space Object
 * @param {string} node - Node of space object modal to activate
 */

function cvjs_activateSpaceObjectModal_Node(node){

	var rmid = findIdFromNode(node);
	change_space_fixed_location(rmid);

}



var cvjs_supressPopUpModal_callback_JS = false; // 3.3.02d


function change_space_fixed_location(rmid, active_floorplan_div_nr){

	if (active_floorplan_div_nr!= undefined)
		cvjs_active_floorplan_div_nr = active_floorplan_div_nr;


	if (cvjs_debug) console.log("change_space_fixed_location "+rmid+"  "+active_floorplan_div_nr);


	// 3.3.02d
	if (cvjs_supressPopUpModal_callback_JS){
		
		// hide modal
		
		// call callback method
		hidePop();
		if (rmid == 0){

				closeAllPopups(-1);
				try{
					cvjs_NoObjectSelected();
				}
				catch(err){
					var ii = 0;
					//console.log();
				}
		}
		else{
				space = cvjs_highlightRoomImmediate(rmid);
				if (space >= 0){
					spaceId = rmid;
					lastObj[cvjs_active_floorplan_div_nr] = space;
					jQuery(vqRooms[cvjs_active_floorplan_div_nr][space].node).qtip('destroy');
				}
		}	

		cvjs_change_space(rmid);
		//window.alert("callback");
		
		return;
	}
	
	
	
	
	
	
	
	
// if we are in VQ callback mode:

	if (cvjs_callbackForModalDisplayVar){

		var popupmenu = cvjs_customModalPopUpBody(rmid);
		var room = findRoom(rmid);

console.log(popupmenu);

		 var htitle = "";


		 // test
		 cvjs_isLicensed = true;


		 if (cvjs_isLicensed){

			  htitle = "<table width=\"100%\"><tr><td class=\"cvjs_modal_header_1\" onclick=\"cvjs_popupTitleClick(\'"+vqRooms[cvjs_active_floorplan_div_nr][room].data("id")+"\');\">"+vqRooms[cvjs_active_floorplan_div_nr][room].data("name")+"</td>"+
					"<td class=\"cvjs_modal_header_info_1\" onclick=\"hideOnlyPop("+room+");\"><i class=\"glyphicon glyphicon-remove\"></i></td></tr>"+
					"<tr><td cols=\"2\"><h4 id=\"cvjs_modal_header_info_2\">"+vqRooms[cvjs_active_floorplan_div_nr][room].data("type")+"</h4></td></tr></table>";

			// here we use the values from the license key check
			// if less than 30 dayse left:
			// instead of vqRooms[cvjs_active_floorplan_div_nr][room].data("type") we write "NOTE: Expires in " x "days, please renew!"

			console.log("we are licensed  "+cvjs_licensedDaysLeft);

		}
		else{  // not licensed, no dynamic db content displayed

			popupmenu= "<div><strong>NOTE:</strong> Database connection <br>";
			popupmenu += "disabled, please renew database <br>";
			popupmenu += "connectivity license.<br></div>";


			console.log("we are not-licensed  "+cvjs_licensedDaysLeft);


		}

		jQuery(vqRooms[cvjs_active_floorplan_div_nr][room].node).qtip({content: {text: popupmenu, title: htitle},
			style: {classes: 'qtip-bootstrap qtip-shadow qtip-rounded qtip-zindex'},
			position: {my: 'bottom center', at: 'top left'}, //   my: 'bottom center', at: 'top center'
			hideOnHTMLClick: 'false'});

// if data set is "poPulated"  we build the modal and simply just display

		var node = vqRooms[cvjs_active_floorplan_div_nr][room].data("node");

		//console.log(node);
		//cvjs_populateMyCustomPopUpBody(rmid,node);

		var status = cvjs_getAttributeStatus(node);

		// if data set is "unpopulated", we abort and do the callback call
	}






	hidePop();
	if (rmid == 0){

			closeAllPopups(-1);
			try{
				cvjs_NoObjectSelected();
			}
			catch(err){
				var ii = 0;
				//console.log();
			}
	}
	else{
	//console.log("fixed location 2");
			space = cvjs_highlightRoomImmediate(rmid);

			
			
				
			
	//console.log("fixed location 3");
			if (space >= 0){
				spaceId = rmid;
				lastObj[cvjs_active_floorplan_div_nr] = space;


				if (cvjs_supressPopUpModal==true){

// 2017-11-22
//					jQuery(vqRooms[cvjs_active_floorplan_div_nr][space].node).qtip('show');
	//				jQuery(vqRooms[cvjs_active_floorplan_div_nr][space].node).qtip('hide');

					// 2017-11-22
					jQuery(vqRooms[cvjs_active_floorplan_div_nr][space].node).qtip('destroy');


					//jQuery(mytooltip).qtip("destroy");

				}
				else{
					jQuery(vqRooms[cvjs_active_floorplan_div_nr][space].node).qtip('show');

						// 2017-09-17  make draggable
					   var oArr = {};
					   jQuery("*[id]").each(function() {
						   var id = jQuery(this).attr('id');
						   if (!oArr[id]) oArr[id] = true;
					   });

					   for (var prop in oArr){
							var target = "#"+prop;
							try{
								if (jQuery(target).attr("id").indexOf("qtip-")==0){
									var title = target+"-title";
									var content = target+"-content";

									if (target.indexOf("-title")>0) {
											//console.log("nothing "+target);
									}
									else{
										if ( target.indexOf("-content")>0 ){
											//console.log("nothing "+target);
										}
										else{
											console.log("drag "+target);

											jQuery( function() {
												jQuery(target).draggable({ cancel: '+content+' });

											} );
										}
									}
								}
							}catch(err){}
						}


					if (cvjs_callbackForModalDisplayVar){
						if (cvjs_getAttributeStatus(node)=="unpopulated")
							cvjs_callbackForModalDisplay(rmid, node);
						else
							cvjs_populateMyCustomPopUpBody(rmid,node);					}

				}
				popObj[cvjs_active_floorplan_div_nr] = space;

			}

	//console.log("2 cvjs_supressPopUpModal "+cvjs_supressPopUpModal);

			try{
				
				// 2018-01-10:  how do I know which div I have clicked?
	
/*	
				console.log("HERE!");
				var mysvg;
				for (var i=0; i<floorplan_div_Array.length; i++){
					var searchItem = "[id="+floorplan_div_Array[i]+"]";
					
					console.log(searchItem);
					
					mysvg = jQuery(this).parent(searchItem).attr("id");
					console.log(mysvg);	
				}
				
				window.alert("mysvg "+mysvg);
	*/			
				//cvjs_ObjectSelected(rmid, floorplan_div_Array[cvjs_active_floorplan_div_nr]);
				
				
				// 3.0.14e
				if (cluster_host_flag==1 && cvjs_supressPopUpModal==true){  // we are in creation mode					
					xcvjs_ObjectSelected(rmid, floorplan_div_Array[cvjs_active_floorplan_div_nr]);
				}
				else{					
					cvjs_ObjectSelected(rmid, floorplan_div_Array[cvjs_active_floorplan_div_nr]);
				}
				
				
				
				
			}
			catch(err){
				var iii = 0;
				//console.log();
			}

	//console.log("3 cvjs_supressPopUpModal "+cvjs_supressPopUpModal);

	}
	
	
	// 3.2.01i
	if (cvjs_supressPopUpModal){

		cvjs_update_done_edit_location_fields(rmid);
	}	
	
}

//STICKYNNN
function change_space_fixed_locationStickyNotes(rmid){


if (cvjs_debug_stickynotes) window.alert("rmid ="+rmid);

hidePopStickyNotes();

	if (rmid == 0){

			closeAllPopupsStickyNotes(-1);
			try{
				cvjs_NoObjectSelectedStickyNotes();
			}
			catch(err){
				var ii = 0;
				//console.log();
			}
	}
	else{

			space = cvjs_highlightRoomImmediateStickyNotes(rmid);

//space = findStickyNotes(rmid);



if (cvjs_debug_stickynotes) window.alert("X in change_space_fixed    cvjs_supressPopUpModal "+cvjs_supressPopUpModal+"  "+space+" spaceIdStickNote "+spaceIdStickyNote[cvjs_active_floorplan_div_nr]+" lastObjStickyNote[cvjs_active_floorplan_div_nr]  "+lastObjStickyNote[cvjs_active_floorplan_div_nr]);
//window.alert(jQuery(vqStickyNotes[space].node).is(":visible"));

//if (true) return;

			if (space >= 0){
				spaceIdStickyNote[cvjs_active_floorplan_div_nr] = rmid;
				lastObjStickyNote[cvjs_active_floorplan_div_nr] = space;

				if (cvjs_supressPopUpModal==true){

				
//					jQuery(vqStickyNotes[space].node).qtip('hide');
					
					// 2017-09-27
					if (jQuery(vqStickyNotes[space].node.qtip).is(":visible")) jQuery(vqStickyNotes[space].node).qtip('hide');

//					jQuery(vqStickyNotes[space].node).qtip('show');
//					jQuery(vqStickyNotes[space].node).qtip('hide');

if (cvjs_debug_stickynotes) window.alert("1 stickynote show hide");
				}
				else{

					//if (true) return;//

					if (cvjs_debug_stickynotes) window.alert("1 stickynote show, node status "+jQuery(vqStickyNotes[space].node.qtip).is(":visible")+ "  "+ vqStickyNotes.length);


/*

					for (var i=0; i<vqStickyNotes.length; i++){

						if (i!=space) {

							if (!jQuery(vqStickyNotes[space].node.qtip).is(":visible")) jQuery(vqStickyNotes[space].node).qtip('show');

							//jQuery(vqStickyNotes[i].node).qtip('show');

							console.log(i+" show");
							}
						else {
							//jQuery(vqStickyNotes[i].node).qtip('hide');
							if (jQuery(vqStickyNotes[space].node.qtip).is(":visible")) jQuery(vqStickyNotes[space].node).qtip('hide');
							console.log(i+" hide");

							}
					}

					if (true) return;

	*/

//					jQuery(vqStickyNotes[space].node).qtip('show');

					// 2017-09-27 only display if invisible

					if (!jQuery(vqStickyNotes[space].node.qtip).is(":visible")) {
						jQuery.when( jQuery(vqStickyNotes[space].node).qtip('show') ).then(function( data, textStatus, jqXHR ) {

							// we are showing the qtip
						});
					}


					var divs = document.getElementsByTagName("div");
					for(var i = 0; i < divs.length; i++){
					   //console.log(divs[i].id);
					   if ( ((divs[i].id).indexOf("qtip-")>-1) && ((divs[i].id).indexOf("-content")==-1) && ((divs[i].id).indexOf("-title")==-1)) StickNoteQtipDiv = divs[i].id;
				    }

				}
				popObjStickyNote[cvjs_active_floorplan_div_nr] = space;

//window.alert("stop");

			}

			try{
				cvjs_ObjectSelectedStickyNotes(rmid);
			}
			catch(err){
				var iii = 0;
				//console.log();
			}
	}
}




function change_space_fixed_locationHyperlink(rmid){


	// this method is not implemented yet 2016-02-12
	// hidePopHyperlinks();



	// when this method is activated it creates and error in panning after a hyperlink has been selected.
	// blocked with a return 2016-02-12

	//if (true) return;
	//console.log("change space Hyper");

	if (rmid == 0){

			closeAllPopupsHyperlinks(-1);
			try{
				cvjs_NoObjectSelectedHyperlinks();
			}
			catch(err){
				var ii = 0;
				//console.log();
			}
	}
	else{

			space = cvjs_highlightRoomImmediateHyperlinks(rmid);

			if (space >= 0){
				spaceIdHyperlink = rmid;
				lastObjHyperlink[cvjs_active_floorplan_div_nr] = space;

				if (cvjs_supressPopUpModal==true){

					jQuery(vqURLs[space].node).qtip('show');
					jQuery(vqURLs[space].node).qtip('hide');

				}
				else{
					jQuery(vqURLs[space].node).qtip('show');
				}
				popObjHyperlink[cvjs_active_floorplan_div_nr] = space;

			}

			try{
				cvjs_ObjectSelectedHyperlink(rmid);
			}
			catch(err){
				var iii = 0;
				//console.log(err);
			}
	}
}


var cvjs_menu_firing = false;


var cvjs_initDataMapsDisplay = true;

var cvjs_modalsInitialized = false;

var cvjs_modalsInitialized_FileLoadModal = false;

/**
 * Initializes CADViewer JS modals, method to set up modals for print, background change, redline color and thickness change
*/


var zindex = 1000;
var zindexcounter =0;

var cvjs_containmentModalLeft = 150;
var cvjs_containmentModalTop = 150;
var cvjs_containmentModalRight = 150;
var cvjs_containmentModalBottom = 150;

// 3.3.04a
var cvjs_topDownloadButtonPane = false;
var cvjs_topDownloadButtonPane_adjustment = 50;



function cvjs_InitializeModals(floorplan_modal){


	// loading and initializing multiple times  - we try to clean up for this usage
	// highlight and room modals are broken after double initializations

//if (cvjs_debug) window.alert("cvjs_InitializeModals "+floorplan_modal+"  ");


//	jQuery("#cvjs_Modal").html("");
//	jQuery("#gMenu").html("");
//	jQuery("#wait_looper_"+floorplan_div_Array[cvjs_active_floorplan_div_nr]).html("");
//	jQuery("#cvjs_modals").html("");
//	jQuery("#tip").html("");
	
	
	
	
	
	
// we have to ensure the instance is initialized only once!	
	for (i=0; i<floorplans_divs_Initialized.length; i++){	
//		console.log("X"+floorplans_divs_Initialized[i]);
		if (floorplans_divs_Initialized[i] == floorplan_modal){
			console.log(cvjs_versionNumber+" floorplan "+floorplan_modal+" is already initialized, returning");
			return;
		}
	}	
	var flooplanFlag = true;
	var counter = 0;
	while (flooplanFlag){
		if (floorplans_divs_Initialized[counter] == ""){
			floorplans_divs_Initialized[counter] = floorplan_modal;
			flooplanFlag = false;
		}
		counter++;
	}
		
//	for (i=0; i<floorplans_divs_Initialized.length; i++){
//		console.log("X"+floorplans_divs_Initialized[i]);
//	}
	
		

	cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(floorplan_modal+"_svg");
	
	
	jQuery("#"+floorplan_div_Array[cvjs_active_floorplan_div_nr]).html("");

	
	floorPlan_Modal = floorplan_modal;  // we set the cvjs_Modal to the floorPlan definision
	floorPlan_div = floorplan_modal+"_svg";	

	var floorplan_div = floorPlan_div;


	// 3.3.04a - download button pane
//	jQuery("#"+floorPlan_Modal).append("<div class=\"topDownloadButtonPane\" id=\"topDownloadButtonPane"+"_"+floorplan_div+"\" >Hello World!<div id=\"downloadbutton\" style=\"vertical-align: middle;\" width=\"200\" height=\"70\">Hello this is the download button! <div></div>");
	jQuery("#"+floorPlan_Modal).append("<div class=\"topDownloadButtonPane\" id=\"topDownloadButtonPane"+"_"+floorplan_div+"\" ><table id=\"CVTable\"  width=\"1000\" height=\""+cvjs_topDownloadButtonPane_adjustment+"\" ><tr id=\"downloadrow\" ><td style=\"vertical-align: middle\" width=\"200\" height=\""+cvjs_topDownloadButtonPane_adjustment+"\"><div id=\"downloadbutton\">Hello this is the download button! <div></td></tr></table></div>");	
//	jQuery("#"+floorPlan_Modal).append("<div class=\"topDownloadButtonPane\" id=\"topDownloadButtonPane"+"_"+floorplan_div+"\" ><table id=\"CVTable\"  width=\"1000\" height=\""+cvjs_topDownloadButtonPane_adjustment+"\" border=\"1\"><tr id=\"downloadrow\" style=\"vertical-align: middle;margin-bottom: 5px; border: 2px solid blue\"><td style=\"vertical-align: middle;margin-bottom: 5px; border: 2px solid green\" width=\"200\" height=\""+cvjs_topDownloadButtonPane_adjustment+"\"><div id=\"downloadbutton\" style=\"margin-bottom: 5px ; border: 3px solid yellow\" >Hello this is the download button! <div></td></tr></table></div>");
	
	
/**
//		<td style="vertical-align: middle;" width="200" height="70">
//	<div id="downloadbutton" >Hello this is the download button! <div>

 	<table id="CVTable"  width="100%" height="1000" border="1">
	<tr id="downloadrow">	
	<td style="vertical-align: middle;" width="200" height="70">
	<div id="downloadbutton" >Hello this is the download button! <div>
	</td>
	</tr>
	</table>
**/
	
	
	
	jQuery("#topDownloadButtonPane"+"_"+floorplan_div).hide();
	
	jQuery("#"+floorPlan_Modal).append("<svg id=\""+floorPlan_div+"\"></svg>");
	jQuery("#"+floorPlan_Modal).append("<div id=\"gMenu"+"_"+floorplan_div+"\"></div><div id=\"tip"+"_"+floorplan_div+"\" ></div><div class=\"wait_looper\" id=\"wait_looper"+"_"+floorplan_div+"\"></div><div id=\"cvjs_modals"+"_"+floorplan_div+"\" ></div>");

	

	// topIconMenu  Icons + navigation Menu
	// 3.3.01a
	//jQuery("#"+floorPlan_Modal).append("<div class=\"topIconMenu\" id=\"topIconMenu"+"_"+floorplan_div+"\" style=\"overflow:hidden;\" ><div class=\"topIconMenu_placeholder_1\" id=\"topIconMenu_placeholder_1"+"_"+floorplan_div+"\"  style=\"display:inline-block\"  ></div><div class=\"topIconMenu_placeholder_2\" id=\"topIconMenu_placeholder_2"+"_"+floorplan_div+"\" style=\"display:inline-block\"  ></div></div>");

	// 3.3.05c
	jQuery("#"+floorPlan_Modal).append("<div class=\"topIconMenu_placeholder_1\" id=\"topIconMenu_placeholder_1"+"_"+floorplan_div+"\"  ></div>");
	jQuery("#"+floorPlan_Modal).append("<div class=\"topIconMenu_placeholder_2\" id=\"topIconMenu_placeholder_2"+"_"+floorplan_div+"\"  ></div>");

	
	
	// put it at the location of the <svg> div
	jQuery("#topIconMenu"+"_"+floorplan_div).css({left: jQuery("#"+floorPlan_Modal).position().left+1, top: jQuery("#"+floorPlan_Modal).position().top+1});  // 3.3.01d
	jQuery("#topIconMenu"+"_"+floorplan_div).css({width: '100%'});
	jQuery("#topIconMenu"+"_"+floorplan_div).css({height: '32px'});
	jQuery("#topIconMenu"+"_"+floorplan_div).css({position: 'absolute'});
	jQuery("#topIconMenu"+"_"+floorplan_div).css({'z-index': 2 });
	jQuery("#topIconMenu"+"_"+floorplan_div).css({display: 'block'});
	

	// 3.3.05c
	// make the top Navigation menu draggable
	jQuery("#topIconMenu_placeholder_2"+"_"+floorplan_div).css({'z-index': 2 });
	jQuery("#topIconMenu_placeholder_2"+"_"+floorplan_div).css({display: 'block'});
	jQuery("#topIconMenu_placeholder_2"+"_"+floorplan_div).css({position: 'absolute'});
	jQuery("#topIconMenu_placeholder_2"+"_"+floorplan_div).css({overflow: 'visible'});
	//
	jQuery("#topIconMenu_placeholder_1"+"_"+floorplan_div).css({'z-index': 2 });
	jQuery("#topIconMenu_placeholder_1"+"_"+floorplan_div).css({display: 'block'});
	jQuery("#topIconMenu_placeholder_1"+"_"+floorplan_div).css({position: 'absolute'});
	jQuery("#topIconMenu_placeholder_1"+"_"+floorplan_div).css({overflow: 'visible'});
	
	jQuery("#topIconMenu_placeholder_2"+"_"+floorplan_div).draggable();	
	jQuery("#topIconMenu_placeholder_1"+"_"+floorplan_div ).draggable();
	
	// 3.3.05c
	jQuery("#topIconMenu"+"_"+floorplan_div).draggable();



	
	
	// 3.3.01c
	// we set the icon interface 
	cvjs_setIconInterfaceControls_MimimumDisk_internal(true, floorPlan_Modal);
	
	//
	
	// 3.3.01b  - building the top navigation menu
	cvjs_LoadTopNavigationMenu(floorPlan_Modal);
	
	// check flag to turn page navigation menu on or off
	// if (cvjs_loadTopIconNavigationVisible==false) 
	
	
	// check flag to build top icon menu
	
	// if no icon menu load file
	// set standard page 1+2+3
	
	// if XML icon menu file, then load the file and build menu system based on icon menu file. 
	// allow a maximum of 3 pages, allows only the API defined methods
	// if there is only one page, then the page change icon is turned off

//	window.alert(floorplan_div+"  "+cvjs_loadTopIconMenuXML[cvjs_interfaceCounterIndex(floorplan_div)]+"  "+cvjs_interfaceCounterIndex(floorplan_div));
	
	if ( cvjs_loadTopIconMenuXML[cvjs_interfaceCounterIndex(floorplan_div)] ){
		// load XML
		var cvjs_XMLloadLocation = cvjs_serverHandlersPath + cvjs_serverLoadFileController;
		var js_data = {};
		js_data['file'] = cvjs_ServerLocation+"/app/js/menu_config/"+cvjs_topIconMenuXML[cvjs_interfaceCounterIndex(floorplan_div)];
	
if (cvjs_debug) console.log("opening menu config "+js_data['file']+"  cvjs_XMLloadLocation "+cvjs_XMLloadLocation );
	
		jQuery.ajax({
		  url:cvjs_XMLloadLocation,
		  type: 'post',
		  data: js_data,
		  success: function(xmlMenuString){

		  
if (cvjs_debug) console.log("menu "+xmlMenuString);		  
		  
//			var xmlMenuString = "<cvjs><totalpages>3</totalpages><startpage>1</startpage><pages><page1><command>cvjs_LayerList</command><command>cvjs_Print</command></page1><page2><command>cvjs_calibrateMeasurement</command><command>cvjs_activateLineThicknessModal</command></page2></pages></cvjs>";
			var x2js = new X2JS();	
			
//			window.alert(xmlMenuString+" "+x2js.xml_str2json(xmlMenuString));
			var cvjsIconMenu_json = JSON.stringify(x2js.xml_str2json(xmlMenuString));		
//			window.alert(cvjsIconMenu_json);

			var cvjsIconMenu = x2js.xml_str2json(xmlMenuString);
			// the start page is only for intialization, after the user takes over
			cvjs_TopIconMenu_pageNumber[cvjs_interfaceCounterIndex(floorplan_div)] = cvjsIconMenu.cvjs.iconmenu.startpage-1;

//	window.alert("  start page="+cvjs_TopIconMenu_pageNumber[cvjs_interfaceCounterIndex(floorplan_div)]+"  "+cvjsIconMenu.cvjs.iconmenu.pages.page.command);
			cvjs_topIconMenu[cvjs_interfaceCounterIndex(floorplan_div)] = cvjsIconMenu;			
			cvjs_LoadTopIconMenuXML(floorplan_div, cvjsIconMenu );
						
//window.alert("  start page="+cvjs_TopIconMenu_pageNumber[cvjs_interfaceCounterIndex(floorplan_div)]);
		 },
		 error:function(data_e){console.log("Error "+data_e); return;}
	   });				
	}
	else{
		// call standard creation modal
		// 3 icon pages
//		window.alert("cvjs_loadTopIconMenuXML="+cvjs_loadTopIconMenuXML);
		cvjs_LoadTopIconMenu(floorplan_div);
	}
	
		
	// we provide standard xml settings for all samples
	
	// possibly the functionality can be license key controlled
	

	jQuery("#tip"+"_"+floorplan_div).css({position: 'absolute'});
	jQuery("#tip"+"_"+floorplan_div).css({border: '1px solid gray'});
	jQuery("#tip"+"_"+floorplan_div).css({'z-index': 2000});
	jQuery("#tip"+"_"+floorplan_div).css({color: "#333"});
	jQuery("#tip"+"_"+floorplan_div).css({'background-color': "#efefef"});
	jQuery("#tip"+"_"+floorplan_div).css({padding: "3px"});
	jQuery("#tip"+"_"+floorplan_div).css({'max-width': "300px"});
	jQuery("#tip"+"_"+floorplan_div).css({'white-space': "nowrap"});
	jQuery("#tip"+"_"+floorplan_div).css({'font-family': "arial, verdana, sans-serif"});
	jQuery("#tip"+"_"+floorplan_div).css({'font-size': "0.75em"});
	
		
	tip[cvjs_active_floorplan_div_nr] = jQuery("#tip"+"_"+floorplan_div);
	jQuery("#tip"+"_"+floorplan_div).hide();
	
	
	

	// jQuery("#gMenu"+"_"+floorplan_div).css({border: '2px solid gray'});
	jQuery("#gMenu"+"_"+floorplan_div).css({width: '80px'});
	jQuery("#gMenu"+"_"+floorplan_div).css({height: '300px'});
	jQuery("#gMenu"+"_"+floorplan_div).css({position: 'absolute'});
//	jQuery("#gMenu"+"_"+floorplan_div).css({'z-index': zindex});
	jQuery("#gMenu"+"_"+floorplan_div).css({'z-index': 1000 });
	jQuery("#gMenu"+"_"+floorplan_div).css({display: 'block'});


//	jQuery("#gMenu"+"_"+floorplan_div).css({left: 130, top: 40});


/*
		jQuery("#gMenu"+"_"+floorplan_div).css({width: '40px'});
		jQuery("#gMenu"+"_"+floorplan_div).css({height: '120px'});


	if (cvjs_iconInterfaceClassicSkin_MinimumDisk[cvjs_active_floorplan_div_nr]){
		
				
	}
*/

	
	//window.alert(zindex);
	zindexcounter++;
	zindex -= zindexcounter*10;
	
	
	
	
//	window.alert("hello 1  "+jQuery("#"+"gMenu").position().left+" "+jQuery("#"+"gMenu").position().top+"  "+document.documentElement.scrollLeft+"  "+document.documentElement.scrollTop);
//	window.alert("hello 2 "+jQuery("#"+floorplan_div_Array[cvjs_active_floorplan_div_nr]).position().left+" "+jQuery("#"+floorplan_div_Array[cvjs_active_floorplan_div_nr]).position().top+"  "+document.documentElement.scrollLeft+"  "+document.documentElement.scrollTop);
	
	
	jQuery("#cvjs_modals"+"_"+floorplan_div).append("<div id=\"cvjs_spaceObjectAdminSettings"+"_"+floorplan_div+"\"></div><div id=\"cvjs_spaceObjectInputPanel"+"_"+floorplan_div+"\"></div>");
	jQuery("#cvjs_spaceObjectAdminSettings"+"_"+floorplan_div).hide();   // 2017-12-07 - hidden
	jQuery("#cvjs_spaceObjectInputPanel"+"_"+floorplan_div).hide(); // 2017-12-07 - hidden
		
	jQuery("#cvjs_modals"+"_"+floorplan_div).append("<table id=\"floorPlanCanvasObject_table"+"_"+floorplan_div+"\"><tr><td><canvas id=\"floorPlanCanvasObject"+"_"+floorplan_div+"\" width=\"10\" height=\"10\"></canvas></td></tr></table>");
	jQuery("#floorPlanCanvasObject_"+floorplan_div).hide(); // 2017-12-07 - hidden	
	jQuery("#floorPlanCanvasObject_table"+"_"+floorplan_div).hide(); // 2017-12-12 - hidden

	//3.3.01f
	jQuery("#cvjs_modals"+"_"+floorplan_div).append("<table id=\"floorPlanCanvasObjectSpace_table"+"_"+floorplan_div+"\"><tr><td><canvas id=\"floorPlanCanvasObjectSpace"+"_"+floorplan_div+"\" width=\"10\" height=\"10\"></canvas></td></tr></table>");
	
	
	
	if (printDebugFlag) jQuery("#floorPlanCanvasObject_table"+"_"+floorplan_div).show(); // 3.3.01e
	
	
	// generic color modal - for external applications
//	jQuery("#cvjs_modals").append("<table><tr><td><div id=\"genericColorModal\" class=\"modal fade\"><div class=\"modal-dialog modal-dialog-md\"><div class=\"modal-content\"><div class=\"modal-header\"><button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\">&times;</button><a href=\"http://www.cadviewerjs.com\"><h4 class=\"modal-title\"><a href=\"http://cadviewerjs.com\"><img src=\""+cvjs_imagesLocation+"logoJS.png\" width=\"30\" height=\"30\" alt=\"CADViewer JS Logo\" /></a><canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas>Select Color</h4></div><div class=\"color_modal-body\"><br><canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas>Color:<canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas><input value=\"ff0000\" class=\"cvjs_inputRedlineColor jscolor {width:101, padding:10, shadow:false, borderWidth:0, backgroundColor:\'transparent\', insetColor:\'#000\', onFineChange:\'cvjs_setGenericColorFromPicker(this)\'}\"><canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas><input type=\"button\" name=\"bThinkness\" value=\"OK\" onClick=\"cvjs_setGenericColorViaButton();\" ><br><br><br><br><br><br><br></div></div></div></div></td></tr></table>");


	jQuery("#cvjs_modals"+"_"+floorplan_div).append("<map name=\"PanZoomMap\" ><area shape=\"rect\" alt=\"\" title=\"Zoom Extents\" coords=\"16,6,69,58\" href=\"javascript:cvjs_resetZoomPan();\"/><area shape=\"rect\" alt=\"\" title=\"Zoom In\" coords=\"16,66,69,115\" href=\"javascript:cvjs_zoomIn(\""+floorplan_div+"\");\"/><area shape=\"rect\" alt=\"\" title=\"Zoom Out\" coords=\"16,116,69,161\" href=\"javascript:cvjs_zoomOut();\"/><area shape=\"rect\" alt=\"\" title=\"Zoom Window\" coords=\"16,162,69,210\" href=\"javascript:cvjs_zoomWindow();\"/><area shape=\"rect\" alt=\"\" title=\"Load Last Page\" coords=\"16,220,69,255\" href=\"javascript:cvjs_lastPage(\""+floorplan_div+"\");\"/><area shape=\"rect\" alt=\"\" title=\"Load Next Page\" coords=\"16,256,69,289\" href=\"javascript:cvjs_nextPage(\""+floorplan_div+"\");\"/><area shape=\"rect\" alt=\"\" title=\"Load Previous Page\" coords=\"16,290,69,324\" href=\"javascript:cvjs_previousPage(\""+floorplan_div+"\");\"/><area shape=\"rect\" alt=\"\" title=\"Load First Page\" coords=\"16,325,69,360\" href=\"javascript:cvjs_firstPage(\""+floorplan_div+"\");\"/></map>");

	//icon interface when pagechange model is hidden
	jQuery("#cvjs_modals"+"_"+floorplan_div).append("<map name=\"cvjsToolbarMap_p1\"><area shape=\"rect\" alt=\"\" title=\"Previous Icon Page\" coords=\"6,5,20,20\" href=\"javascript:cvjs_changePreviousIconPage(\""+floorplan_div+"\");\"/><area shape=\"rect\" alt=\"\" title=\"Next Icon Page\" coords=\"41,5,56,20\" href=\"javascript:cvjs_changeNextIconPage(\""+floorplan_div+"\");\"/><area shape=\"rect\" alt=\"\" title=\"Layer List\" coords=\"5,29,29,53\" href=\"javascript:cvjs_LayerList();\"/><area shape=\"rect\" alt=\"\" title=\"Print\" coords=\"32,29,57,53\" href=\"javascript:cvjs_Print();\"/><area shape=\"rect\" alt=\"\" title=\"Zoom In\" coords=\"5,57,29,80\" href=\"javascript:cvjs_zoomIn(\""+floorplan_div+"\");\"/><area shape=\"rect\" alt=\"\" title=\"Zoom Out\" coords=\"32,57,56,80\" href=\"javascript:cvjs_zoomOut();\"/><area shape=\"rect\" alt=\"\" title=\"Zoom Extents\" coords=\"6,84,29,107\" href=\"javascript:cvjs_resetZoomPan();\"/><area shape=\"rect\" alt=\"\" title=\"Zoom Window\" coords=\"33,84,57,107\" href=\"javascript:cvjs_zoomWindow();\"/><area shape=\"rect\" alt=\"\" title=\"About\" coords=\"5,111,29,135\" href=\"javascript:cvjs_displayInformationModal_Mode(\'0\');\"/><area shape=\"rect\" alt=\"\" title=\"Background Color\" coords=\"32,111,57,135\" href=\"javascript:cvjs_setBackgroundColor();\"/><area shape=\"rect\" alt=\"\" title=\"File Load\" coords=\"5,138,29,161\" href=\"javascript:cvjs_openFileLoadToServer();\"/><area shape=\"rect\" alt=\"\" title=\"Search Text\" coords=\"32,138,56,161\" href=\"javascript:cvjs_interactiveSearchText();\"/><area shape=\"rect\" alt=\"\" title=\"Free\" coords=\"5,164,29,188\" href=\"javascript:cvjs_displayInformationModal_Mode(\'1');\"/><area shape=\"rect\" alt=\"\" title=\"Layer Off\" coords=\"32,164,56,188\" href=\"javascript:cvjs_interactiveLayerOff();\"/><area shape=\"rect\" alt=\"\" title=\"Swap Layers\" coords=\"5,191,29,216\" href=\"javascript:cvjs_swapLayersInDrawing();\"/><area shape=\"rect\" alt=\"\" title=\"All Layers On\" coords=\"32,191,56,216\" href=\"javascript:cvjs_allLayersInDrawingOn();\"/><area shape=\"rect\" alt=\"\" title=\"Measurement\" coords=\"5,219,29,242\" href=\"javascript:cvjs_Measurement();\"/><area shape=\"rect\" alt=\"\" title=\"Calibrate Measurement\" coords=\"32,219,56,242\" href=\"javascript:cvjs_calibrateMeasurement();\"/><area shape=\"rect\" alt=\"\" title=\"Load Previous Page\" coords=\"5,246,29,269\" href=\"javascript:cvjs_previousPage();\"/><area shape=\"rect\" alt=\"\" title=\"Load Next Page\" coords=\"32,246,56,269\" href=\"javascript:cvjs_nextPage();\"/><area shape=\"rect\" alt=\"\" title=\"Load First Page\" coords=\"5,273,29,297\" href=\"javascript:cvjs_firstPage();\"/><area shape=\"rect\" alt=\"\" title=\"Load Last Page\" coords=\"32,273,56,297\" href=\"javascript:cvjs_lastPage();\"/></map>");
	jQuery("#cvjs_modals"+"_"+floorplan_div).append("<map name=\"cvjsToolbarMap_p2\"><area shape=\"rect\" alt=\"\" title=\"Previous Icon Page\" coords=\"6,5,20,20\" href=\"javascript:cvjs_changePreviousIconPage(\""+floorplan_div+"\");\"/><area shape=\"rect\" alt=\"\" title=\"Next Icon Page\" coords=\"41,5,56,20\" href=\"javascript:cvjs_changeNextIconPage(\""+floorplan_div+"\");\"/><area shape=\"rect\" alt=\"\" title=\"Save Redline\" coords=\"5,29,29,53\" href=\"javascript:cvjs_saveStickyNotesRedlinesUser();\"/><area shape=\"rect\" alt=\"\" title=\"Load Redline\" coords=\"32,29,57,53\" href=\"javascript:cvjs_loadStickyNotesRedlinesUser();\"/><area shape=\"rect\" alt=\"\" title=\"Delete Single Redline\" coords=\"5,57,29,80\" href=\"javascript:cvjs_deleteSingleRedline();\"/><area shape=\"rect\" alt=\"\" title=\"Delete Last Redline\" coords=\"32,57,56,80\" href=\"javascript:cvjs_deleteLastRedline();\"/><area shape=\"rect\" alt=\"\" title=\"Redline Color\" coords=\"6,84,29,107\" href=\"javascript:cvjs_setRedlineColor();\"/><area shape=\"rect\" alt=\"\" title=\"Redline Thickness\" coords=\"33,84,57,107\" href=\"javascript:cvjs_setRedlineThickness();\"/><area shape=\"rect\" alt=\"\" title=\"Make Stickynote\" coords=\"5,111,29,135\" href=\"javascript:cvjs_drawStickyNote();\"/><area shape=\"rect\" alt=\"\" title=\"Free\" coords=\"32,111,57,135\" href=\"javascript:cvjs_displayInformationModal_Mode('1');\"/><area shape=\"rect\" alt=\"\" title=\"Freehand Redline\" coords=\"5,138,29,161\" href=\"javascript:cvjs_drawRedline_Freehand();\"/><area shape=\"rect\" alt=\"\" title=\"Redline Cloud\" coords=\"32,138,56,161\" href=\"javascript:cvjs_drawRedlineCloud();\"/><area shape=\"rect\" alt=\"\" title=\"Redline Filled Polygon\" coords=\"5,164,29,188\" href=\"javascript:cvjs_drawRedlineFilledPolygon();\"/><area shape=\"rect\" alt=\"\" title=\"Redline Polyline\" coords=\"32,164,56,188\" href=\"javascript:cvjs_drawRedlinePolyline();\"/><area shape=\"rect\" alt=\"\" title=\"Redline Filled Rectangle\" coords=\"5,191,29,216\" href=\"javascript:cvjs_drawRedlineFilledRectangle();\"/><area shape=\"rect\" alt=\"\" title=\"Redline Rectangle\" coords=\"32,191,56,216\" href=\"javascript:cvjs_drawRedlineRectangle();\"/><area shape=\"rect\" alt=\"\" title=\"Redline Arrow\" coords=\"5,219,29,242\" href=\"javascript:cvjs_drawRedlineArrow();\"/><area shape=\"rect\" alt=\"\" title=\"Redline Text\" coords=\"32,219,56,242\" href=\"javascript:cvjs_drawRedlineText();\"/><area shape=\"rect\" alt=\"\" title=\"Load Previous Page\" coords=\"5,246,29,269\" href=\"javascript:cvjs_previousPage();\"/><area shape=\"rect\" alt=\"\" title=\"Load Next Page\" coords=\"32,246,56,269\" href=\"javascript:cvjs_nextPage();\"/><area shape=\"rect\" alt=\"\" title=\"Load First Page\" coords=\"5,273,29,297\" href=\"javascript:cvjs_firstPage();\"/><area shape=\"rect\" alt=\"\" title=\"Load Last Page\" coords=\"32,273,56,297\" href=\"javascript:cvjs_lastPage();\"/></map>");
	jQuery("#cvjs_modals"+"_"+floorplan_div).append("<map name=\"cvjsToolbarMap_p3\"><area shape=\"rect\" alt=\"\" title=\"Previous Icon Page\" coords=\"6,5,20,20\" href=\"javascript:cvjs_changePreviousIconPage(\""+floorplan_div+"\");\"/><area shape=\"rect\" alt=\"\" title=\"Next Icon Page\" coords=\"41,5,56,20\" href=\"javascript:cvjs_changeNextIconPage(\""+floorplan_div+"\");\"/><area shape=\"rect\" alt=\"\" title=\"Publish Space Object Structure\" coords=\"5,29,29,53\" href=\"javascript:cvjs_displaySpaceObjectsStructure();\"/><area shape=\"rect\" alt=\"\" title=\"Load Floorplan and create Space Objects\" coords=\"32,29,57,53\" href=\"javascript:cvjs_loadDrawingsWithSpaceObjects();\"/><area shape=\"rect\" alt=\"\" title=\"Settings\" coords=\"5,57,29,80\" href=\"javascript:cvjs_spaceObjectSettings();\"/><area shape=\"rect\" alt=\"\" title=\"Select Object\" coords=\"32,57,56,80\" href=\"javascript:cvjs_SelectSpaceObject();\"/><area shape=\"rect\" alt=\"\" title=\"Rectangle Space Object\" coords=\"6,84,29,107\" href=\"javascript:cvjs_addRectangleSpaceObject();\"/><area shape=\"rect\" alt=\"\" title=\"Polygon Space Object\" coords=\"33,84,57,107\" href=\"javascript:cvjs_addPolygonSpaceObject();\"/><area shape=\"rect\" alt=\"\" title=\"Circle Space Object\" coords=\"5,111,29,135\" href=\"javascript:cvjs_addCircleSpaceObject();\"/><area shape=\"rect\" alt=\"\" title=\"Copy Circle Space Object\" coords=\"32,111,57,135\" href=\"javascript:cvjs_copyCircleSpaceObject();\"/><area shape=\"rect\" alt=\"\" title=\"Delete Space Object\" coords=\"5,138,29,161\" href=\"javascript:cvjs_deleteSpaceObject();\"/><area shape=\"rect\" alt=\"\" title=\"Free\" coords=\"32,138,56,161\" href=\"javascript:cvjs_displayInformationModal_Mode(\'1\');\"/><area shape=\"rect\" alt=\"\" title=\"Layer List\" coords=\"5,164,29,188\" href=\"javascript:cvjs_LayerListSpaceObject();\"/><area shape=\"rect\" alt=\"\" title=\"Free\" coords=\"32,164,56,188\" href=\"javascript:cvjs_displayInformationModal_Mode(\'1\');\"/><area shape=\"rect\" alt=\"\" title=\"Free\" coords=\"5,191,29,216\" href=\"javascript:cvjs_displayInformationModal_Mode(\'1\');\"/><area shape=\"rect\" alt=\"\" title=\"Layer Off\" coords=\"32,191,56,216\" href=\"javascript:cvjs_interactiveLayerOff();\"/><area shape=\"rect\" alt=\"\" title=\"cvjs_swapLayersInDrawing()\" coords=\"5,219,29,242\" href=\"javascript:cvjs_swapLayersInDrawing();\"/><area shape=\"rect\" alt=\"\" title=\"All Layers On\" coords=\"32,219,56,242\" href=\"javascript:cvjs_allLayersInDrawingOn();\"/><area shape=\"rect\" alt=\"\" title=\"Load Previous Page\" coords=\"5,246,29,269\" href=\"javascript:cvjs_previousPage();\"/><area shape=\"rect\" alt=\"\" title=\"Load Next Page\" coords=\"32,246,56,269\" href=\"javascript:cvjs_nextPage();\"/><area shape=\"rect\" alt=\"\" title=\"Load First Page\" coords=\"5,273,29,297\" href=\"javascript:cvjs_firstPage();\"/><area shape=\"rect\" alt=\"\" title=\"Load Last Page\" coords=\"32,273,56,297\" href=\"javascript:cvjs_lastPage();\"/></map>");

	// modal interface when pagechange model is visible
	jQuery("#cvjs_modals"+"_"+floorplan_div).append("<map name=\"cvjsToolbarMap_p1_3\"><area shape=\"rect\" alt=\"\" title=\"Previous Icon Page\" coords=\"6,5,20,20\" href=\"javascript:cvjs_changePreviousIconPage(\""+floorplan_div+"\");\"/><area shape=\"rect\" alt=\"\" title=\"Next Icon Page\" coords=\"41,5,56,20\" href=\"javascript:cvjs_changeNextIconPage(\""+floorplan_div+"\");\"/><area shape=\"rect\" alt=\"\" title=\"Layer List\" coords=\"5,29,29,53\" href=\"javascript:cvjs_LayerList();\"/><area shape=\"rect\" alt=\"\" title=\"Print\" coords=\"32,29,57,53\" href=\"javascript:cvjs_Print();\"/><area shape=\"rect\" alt=\"\" title=\"Zoom In\" coords=\"5,57,29,80\" href=\"javascript:cvjs_zoomIn(\""+floorplan_div+"\");\"/><area shape=\"rect\" alt=\"\" title=\"Zoom Out\" coords=\"32,57,56,80\" href=\"javascript:cvjs_zoomOut();\"/><area shape=\"rect\" alt=\"\" title=\"Zoom Extents\" coords=\"6,84,29,107\" href=\"javascript:cvjs_resetZoomPan();\"/><area shape=\"rect\" alt=\"\" title=\"Zoom Window\" coords=\"33,84,57,107\" href=\"javascript:cvjs_zoomWindow();\"/><area shape=\"rect\" alt=\"\" title=\"About\" coords=\"5,111,29,135\" href=\"javascript:cvjs_displayInformationModal_Mode(\'0');\"/><area shape=\"rect\" alt=\"\" title=\"Background Color\" coords=\"32,111,57,135\" href=\"javascript:cvjs_setBackgroundColor();\"/><area shape=\"rect\" alt=\"\" title=\"File Load\" coords=\"5,138,29,161\" href=\"javascript:cvjs_openFileLoadToServer();\"/><area shape=\"rect\" alt=\"\" title=\"Search Text\" coords=\"32,138,56,161\" href=\"javascript:cvjs_interactiveSearchText();\"/><area shape=\"rect\" alt=\"\" title=\"Free\" coords=\"5,164,29,188\" href=\"javascript:cvjs_displayInformationModal_Mode(\'1\');\"/><area shape=\"rect\" alt=\"\" title=\"Layer Off\" coords=\"32,164,56,188\" href=\"javascript:cvjs_interactiveLayerOff();\"/><area shape=\"rect\" alt=\"\" title=\"Swap Layers\" coords=\"5,191,29,216\" href=\"javascript:cvjs_swapLayersInDrawing();\"/><area shape=\"rect\" alt=\"\" title=\"All Layers On\" coords=\"32,191,56,216\" href=\"javascript:cvjs_allLayersInDrawingOn();\"/><area shape=\"rect\" alt=\"\" title=\"Measurement\" coords=\"5,219,29,242\" href=\"javascript:cvjs_Measurement();\"/><area shape=\"rect\" alt=\"\" title=\"Calibrate Measurement\" coords=\"32,219,56,242\" href=\"javascript:cvjs_calibrateMeasurement();\"/><area shape=\"rect\" alt=\"\" title=\"Free\" coords=\"5,246,29,269\" href=\"javascript:cvjs_displayInformationModal_Mode(\'1');\"/><area shape=\"rect\" alt=\"\" title=\"Free\" coords=\"32,246,56,269\" href=\"javascript:cvjs_displayInformationModal_Mode(\'1\');\"/></map>");
	jQuery("#cvjs_modals"+"_"+floorplan_div).append("<map name=\"cvjsToolbarMap_p2_3\"><area shape=\"rect\" alt=\"\" title=\"Previous Icon Page\" coords=\"6,5,20,20\" href=\"javascript:cvjs_changePreviousIconPage(\""+floorplan_div+"\");\"/><area shape=\"rect\" alt=\"\" title=\"Next Icon Page\" coords=\"41,5,56,20\" href=\"javascript:cvjs_changeNextIconPage(\""+floorplan_div+"\");\"/><area shape=\"rect\" alt=\"\" title=\"Save Redline\" coords=\"5,29,29,53\" href=\"javascript:cvjs_saveStickyNotesRedlinesUser();\"/><area shape=\"rect\" alt=\"\" title=\"Load Redline\" coords=\"32,29,57,53\" href=\"javascript:cvjs_loadStickyNotesRedlinesUser();\"/><area shape=\"rect\" alt=\"\" title=\"Delete Single Redline\" coords=\"5,57,29,80\" href=\"javascript:cvjs_deleteSingleRedline();\"/><area shape=\"rect\" alt=\"\" title=\"Delete Last Redline\" coords=\"32,57,56,80\" href=\"javascript:cvjs_deleteLastRedline();\"/><area shape=\"rect\" alt=\"\" title=\"Redline Color\" coords=\"6,84,29,107\" href=\"javascript:cvjs_setRedlineColor();\"/><area shape=\"rect\" alt=\"\" title=\"Redline Thickness\" coords=\"33,84,57,107\" href=\"javascript:cvjs_setRedlineThickness();\"/><area shape=\"rect\" alt=\"\" title=\"Make Stickynote\" coords=\"5,111,29,135\" href=\"javascript:cvjs_drawStickyNote();\"/><area shape=\"rect\" alt=\"\" title=\"Free\" coords=\"32,111,57,135\" href=\"javascript:cvjs_displayInformationModal_Mode(\'1\');\"/><area shape=\"rect\" alt=\"\" title=\"Freehand Redline\" coords=\"5,138,29,161\" href=\"javascript:cvjs_drawRedline_Freehand();\"/><area shape=\"rect\" alt=\"\" title=\"Redline Cloud\" coords=\"32,138,56,161\" href=\"javascript:cvjs_drawRedlineCloud();\"/><area shape=\"rect\" alt=\"\" title=\"Redline Filled Polygon\" coords=\"5,164,29,188\" href=\"javascript:cvjs_drawRedlineFilledPolygon();\"/><area shape=\"rect\" alt=\"\" title=\"Redline Polyline\" coords=\"32,164,56,188\" href=\"javascript:cvjs_drawRedlinePolyline();\"/><area shape=\"rect\" alt=\"\" title=\"Redline Filled Rectangle\" coords=\"5,191,29,216\" href=\"javascript:cvjs_drawRedlineFilledRectangle();\"/><area shape=\"rect\" alt=\"\" title=\"Redline Rectangle\" coords=\"32,191,56,216\" href=\"javascript:cvjs_drawRedlineRectangle();\"/><area shape=\"rect\" alt=\"\" title=\"Redline Arrow\" coords=\"5,219,29,242\" href=\"javascript:cvjs_drawRedlineArrow();\"/><area shape=\"rect\" alt=\"\" title=\"Redline Text\" coords=\"32,219,56,242\" href=\"javascript:cvjs_drawRedlineText();\"/><area shape=\"rect\" alt=\"\" title=\"Free\" coords=\"5,246,29,269\" href=\"javascript:cvjs_displayInformationModal_Mode(\'1\');\"/><area shape=\"rect\" alt=\"\" title=\"Clear Visible Redlines\" coords=\"32,246,56,269\" href=\"javascript:cvjs_clearCurrentRedline();\"/></map>");
	jQuery("#cvjs_modals"+"_"+floorplan_div).append("<map name=\"cvjsToolbarMap_p3_3\"><area shape=\"rect\" alt=\"\" title=\"Previous Icon Page\" coords=\"6,5,20,20\" href=\"javascript:cvjs_changePreviousIconPage(\""+floorplan_div+"\");\"/><area shape=\"rect\" alt=\"\" title=\"Next Icon Page\" coords=\"41,5,56,20\" href=\"javascript:cvjs_changeNextIconPage(\""+floorplan_div+"\");\"/><area shape=\"rect\" alt=\"\" title=\"Publish Space Object Structure\" coords=\"5,29,29,53\" href=\"javascript:cvjs_displaySpaceObjectsStructure();\"/><area shape=\"rect\" alt=\"\" title=\"Load Floorplan and create Space Objects\" coords=\"32,29,57,53\" href=\"javascript:cvjs_loadDrawingsWithSpaceObjects();\"/><area shape=\"rect\" alt=\"\" title=\"Settings\" coords=\"5,57,29,80\" href=\"javascript:cvjs_spaceObjectSettings();\"/><area shape=\"rect\" alt=\"\" title=\"Select Object\" coords=\"32,57,56,80\" href=\"javascript:cvjs_SelectSpaceObject();\"/><area shape=\"rect\" alt=\"\" title=\"Rectangle Space Object\" coords=\"6,84,29,107\" href=\"javascript:cvjs_addRectangleSpaceObject();\"/><area shape=\"rect\" alt=\"\" title=\"Polygon Space Object\" coords=\"33,84,57,107\" href=\"javascript:cvjs_addPolygonSpaceObject();\"/><area shape=\"rect\" alt=\"\" title=\"Cirle Space Object\" coords=\"5,111,29,135\" href=\"javascript:cvjs_addCircleSpaceObject();\"/><area shape=\"rect\" alt=\"\" title=\"Copy Circle Space Object\" coords=\"32,111,57,135\" href=\"javascript:cvjs_copyCircleSpaceObject();\"/><area shape=\"rect\" alt=\"\" title=\"Delete Space Object\" coords=\"5,138,29,161\" href=\"javascript:cvjs_deleteSpaceObject();\"/><area shape=\"rect\" alt=\"\" title=\"Free\" coords=\"32,138,56,161\" href=\"javascript:cvjs_displayInformationModal_Mode(\'1\');\"/><area shape=\"rect\" alt=\"\" title=\"Layer List\" coords=\"5,164,29,188\" href=\"javascript:cvjs_LayerListSpaceObject();\"/><area shape=\"rect\" alt=\"\" title=\"Free\" coords=\"32,164,56,188\" href=\"javascript:cvjs_displayInformationModal_Mode(\'1\');\"/><area shape=\"rect\" alt=\"\" title=\"Free\" coords=\"5,191,29,216\" href=\"javascript:cvjs_displayInformationModal_Mode(\'1\');\"/><area shape=\"rect\" alt=\"\" title=\"Layer Off\" coords=\"32,191,56,216\" href=\"javascript:cvjs_interactiveLayerOff();\"/><area shape=\"rect\" alt=\"\" title=\"cvjs_swapLayersInDrawing()\" coords=\"5,219,29,242\" href=\"javascript:cvjs_swapLayersInDrawing();\"/><area shape=\"rect\" alt=\"\" title=\"All Layers On\" coords=\"32,219,56,242\" href=\"javascript:cvjs_allLayersInDrawingOn();\"/><area shape=\"rect\" alt=\"\" title=\"Free\" coords=\"5,246,29,269\" href=\"javascript:cvjs_displayInformationModal_Mode(\'1\');\"/><area shape=\"rect\" alt=\"\" title=\"Free\" coords=\"32,246,56,269\" href=\"javascript:cvjs_displayInformationModal_Mode(\'1\');\"/></map>");

	// modal interface when pagechange model is visible - update 08-11-2016, added new page for image uploads
//	jQuery("#cvjs_modals").append("<map name=\"cvjsToolbarMap_p1_8"+"_"+floorplan_div+"\"><area id=\"previousIconPage_p1_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\"  coords=\"6,5,20,20\" href=\"javascript:cvjs_changePreviousIconPage(\""+floorplan_div+"\");\"/><area id=\"nextIconPage_p1_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" title=\"Next Icon Page\" coords=\"41,5,56,20\" href=\"javascript:cvjs_changeNextIconPage(\""+floorplan_div+"\");\"/><area shape=\"rect\" alt=\"\" title=\"Layer List\" coords=\"5,29,29,53\" href=\"javascript:cvjs_LayerList();\"/><area shape=\"rect\" alt=\"\" title=\"Print\" coords=\"32,29,57,53\" href=\"javascript:cvjs_Print();\"/><area shape=\"rect\" alt=\"\" title=\"Zoom In\" coords=\"5,57,29,80\" href=\"javascript:cvjs_zoomIn(\""+floorplan_div+"\");\"/><area shape=\"rect\" alt=\"\" title=\"Zoom Out\" coords=\"32,57,56,80\" href=\"javascript:cvjs_zoomOut();\"/><area shape=\"rect\" alt=\"\" title=\"Zoom Extents\" coords=\"6,84,29,107\" href=\"javascript:cvjs_resetZoomPan();\"/><area shape=\"rect\" alt=\"\" title=\"Zoom Window\" coords=\"33,84,57,107\" href=\"javascript:cvjs_zoomWindow();\"/><area shape=\"rect\" alt=\"\" title=\"Toggle Black/White\" coords=\"5,111,29,135\" href=\"javascript:cvjs_toggleBlackWhite();\"/><area shape=\"rect\" alt=\"\" title=\"Background Color\" coords=\"32,111,57,135\" href=\"javascript:cvjs_setBackgroundColor();\"/><area shape=\"rect\" alt=\"\" title=\"File Load\" coords=\"5,138,29,161\" href=\"javascript:cvjs_openFileLoadToServer();\"/><area shape=\"rect\" alt=\"\" title=\"Search Text\" coords=\"32,138,56,161\" href=\"javascript:cvjs_interactiveSearchText();\"/><area shape=\"rect\" alt=\"\" title=\"About\" coords=\"5,164,29,188\" href=\"javascript:cvjs_displayInformationModal_Mode(\'0\');\"/><area shape=\"rect\" alt=\"\" title=\"Layer Off\" coords=\"32,164,56,188\" href=\"javascript:cvjs_interactiveLayerOff();\"/><area shape=\"rect\" alt=\"\" title=\"Swap Layers\" coords=\"5,191,29,216\" href=\"javascript:cvjs_swapLayersInDrawing();\"/><area shape=\"rect\" alt=\"\" title=\"All Layers On\" coords=\"32,191,56,216\" href=\"javascript:cvjs_allLayersInDrawingOn();\"/><area shape=\"rect\" alt=\"\" title=\"Measurement\" coords=\"5,219,29,242\" href=\"javascript:cvjs_Measurement();\"/><area shape=\"rect\" alt=\"\" title=\"Calibrate Measurement\" coords=\"32,219,56,242\" href=\"javascript:cvjs_calibrateMeasurement();\"/><area shape=\"rect\" alt=\"\" title=\"Toggle Birds-Eye Window\" coords=\"5,246,29,269\" href=\"javascript:cvjs_displayMagnifyingGlass();\"/><area shape=\"rect\" alt=\"\" title=\"Adjust Line Thickeness\" coords=\"32,246,56,269\" href=\"javascript:cvjs_activateLineThicknessModal();\"/></map>");







tip[cvjs_active_floorplan_div_nr] = jQuery("#tip"+"_"+floorplan_div);
//tip[cvjs_active_floorplan_div_nr].hide().css("left", floorplan_width).css("top", floorplan_height);

var tipText = "";



jQuery("#tip"+"_"+floorplan_div).css({position: 'absolute'});
jQuery("#tip"+"_"+floorplan_div).css({border: '1px solid gray'});
jQuery("#tip"+"_"+floorplan_div).css({'z-index': 2000});
jQuery("#tip"+"_"+floorplan_div).css({color: "#333"});
jQuery("#tip"+"_"+floorplan_div).css({'background-color': "#efefef"});
jQuery("#tip"+"_"+floorplan_div).css({padding: "3px"});
jQuery("#tip"+"_"+floorplan_div).css({'max-width': "300px"});
jQuery("#tip"+"_"+floorplan_div).css({'white-space': "nowrap"});
jQuery("#tip"+"_"+floorplan_div).css({'font-family': "arial, verdana, sans-serif"});
jQuery("#tip"+"_"+floorplan_div).css({'font-size': "0.75em"});









/// PAGE 1        TOOLTIPS
	if (cvjs_devMode)
		jQuery("#cvjs_modals"+"_"+floorplan_div).append("<map name=\"cvjsToolbarMap_p1_8"+"_"+floorplan_div+"\"><area id=\"previousIconPage_p1_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\"  coords=\"6,5,20,20\" href=\"javascript:cvjs_changePreviousIconPage(\'"+floorplan_div+"\');\"/><area id=\"nextIconPage_p1_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"41,5,56,20\" href=\"javascript:cvjs_changeNextIconPage(\'"+floorplan_div+"\');\"/><area id=\"layerList_p1_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,29,29,53\" href=\"javascript:cvjs_LayerList();\"/><area id=\"print_p1_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"32,29,57,53\" href=\"javascript:cvjs_Print(\""+floorplan_div+"\");\"/><area id=\"zoomin_p1_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,57,29,80\" href=\"javascript:cvjs_zoomIn(\""+floorplan_div+"\");\"/><area id=\"zoomout_p1_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"32,57,56,80\" href=\"javascript:cvjs_zoomOut();\"/><area id=\"zoomextents_p1_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\"  coords=\"6,84,29,107\" href=\"javascript:cvjs_resetZoomPan();\"/><area id=\"zoomwindow_p1_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"33,84,57,107\" onclick=\"cvjs_zoomWindow();\"  /><area id=\"toggle_p1_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,111,29,135\" href=\"javascript:cvjs_toggleBlackWhite();\"/><area id=\"background_p1_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"32,111,57,135\" href=\"javascript:cvjs_setBackgroundColor();\"/><area id=\"fileload_p1_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,138,29,161\" href=\"javascript:cvjs_openFileLoadToServer();\"/><area id=\"search_p1_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"32,138,56,161\" href=\"javascript:cvjs_interactiveSearchText();\"/><area id=\"about_p1_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\"  coords=\"5,164,29,188\" href=\"javascript:cvjs_displayInformationModal_Mode(\'0\');\"/><area id=\"layeroff_p1_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"32,164,56,188\" href=\"javascript:cvjs_interactiveLayerOff();\"/><area id=\"swap_p1_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,191,29,216\" href=\"javascript:cvjs_swapLayersInDrawing();\"/><area id=\"alllayerson_p1_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\"  coords=\"32,191,56,216\" href=\"javascript:cvjs_allLayersInDrawingOn();\"/><area id=\"measurement_p1_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\"  coords=\"5,219,29,242\" href=\"javascript:cvjs_Measurement();\"/><area id=\"calibrate_p1_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\"  coords=\"32,219,56,242\" href=\"javascript:cvjs_calibrateMeasurement();\"/><area id=\"bird_p1_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\"  coords=\"5,246,29,269\" href=\"javascript:cvjs_displayMagnifyingGlass(\""+floorplan_div+"\");\"/><area area id=\"thickness_p1_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\"  coords=\"32,246,56,269\" href=\"javascript:cvjs_activateLineThicknessModal();\"/></map>");
	else
		jQuery("#cvjs_modals"+"_"+floorplan_div).append("<map name=\"cvjsToolbarMap_p1_8"+"_"+floorplan_div+"\"><area id=\"previousIconPage_p1_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\"  coords=\"6,5,20,20\" onclick=\"cvjs_changePreviousIconPage(\'"+floorplan_div+"\');\"/><area id=\"nextIconPage_p1_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"41,5,56,20\" onclick=\"cvjs_changeNextIconPage(\'"+floorplan_div+"\');\"/><area id=\"layerList_p1_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,29,29,53\" onclick=\"cvjs_LayerList(\'"+floorplan_div+"\');\"/><area id=\"print_p1_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"32,29,57,53\" onclick=\"cvjs_Print(\'"+floorplan_div+"\');\"/><area id=\"zoomin_p1_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,57,29,80\" onclick=\"cvjs_zoomIn(\'"+floorplan_div+"\');\"/><area id=\"zoomout_p1_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"32,57,56,80\" onclick=\"cvjs_zoomOut(\'"+floorplan_div+"\');\"/><area id=\"zoomextents_p1_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\"  coords=\"6,84,29,107\" onclick=\"cvjs_resetZoomPan(\'"+floorplan_div+"\');\"/><area id=\"zoomwindow_p1_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"33,84,57,107\" onclick=\"cvjs_zoomWindow(\'"+floorplan_div+"\');\"  /><area id=\"toggle_p1_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,111,29,135\" onclick=\"cvjs_toggleBlackWhite(\'"+floorplan_div+"\');\"/><area id=\"background_p1_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"32,111,57,135\" onclick=\"cvjs_setBackgroundColor(\'"+floorplan_div+"\');\"/><area id=\"fileload_p1_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,138,29,161\" onclick=\"cvjs_openFileLoadToServer(\'"+floorplan_div+"\');\"/><area id=\"search_p1_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"32,138,56,161\" onclick=\"cvjs_interactiveSearchText(\'"+floorplan_div+"\');\"/><area id=\"about_p1_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\"  coords=\"5,164,29,188\" onclick=\"cvjs_displayInformationModal_Mode(\'0\');\"/><area id=\"layeroff_p1_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"32,164,56,188\" onclick=\"cvjs_interactiveLayerOff(\'"+floorplan_div+"\');\"/><area id=\"swap_p1_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,191,29,216\" onclick=\"cvjs_swapLayersInDrawing(\'"+floorplan_div+"\');\"/><area id=\"alllayerson_p1_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\"  coords=\"32,191,56,216\" onclick=\"cvjs_allLayersInDrawingOn(\'"+floorplan_div+"\');\"/><area id=\"measurement_p1_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\"  coords=\"5,219,29,242\" onclick=\"cvjs_Measurement(\'"+floorplan_div+"\');\"/><area id=\"calibrate_p1_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\"  coords=\"32,219,56,242\" onclick=\"cvjs_calibrateMeasurement(\'"+floorplan_div+"\');\"/><area id=\"bird_p1_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\"  coords=\"5,246,29,269\" onclick=\"cvjs_displayMagnifyingGlass(\'"+floorplan_div+"\');\"/><area area id=\"thickness_p1_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\"  coords=\"32,246,56,269\" onclick=\"cvjs_activateLineThicknessModal(\'"+floorplan_div+"\');\"/></map>");


	jQuery('#previousIconPage_p1_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "previousIconPage_p1_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);
			
			
		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
						
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p1_8.PreviousPage);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top-12);
		});

	jQuery('#previousIconPage_p1_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});


	jQuery('#nextIconPage_p1_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "nextIconPage_p1_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);
			
			
		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p1_8.NextPage);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left+20).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top-12);
		});

	jQuery('#nextIconPage_p1_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});


	jQuery('#layerList_p1_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "layerList_p1_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);

			
		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p1_8.LayerList);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+15);
		});

	jQuery('#layerList_p1_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});


	jQuery('#print_p1_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "print_p1_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);
			
	
			
		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p1_8.Print);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left+73).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+39);
		});

	jQuery('#print_p1_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});


	jQuery('#zoomin_p1_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "zoomin_p1_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);
			


			
		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p1_8.ZoomIn);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+41);
		});

	jQuery('#zoomin_p1_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});


	jQuery('#zoomout_p1_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "zoomout_p1_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);
			
		
		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p1_8.ZoomOut);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left+73).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+66);
		});

	jQuery('#zoomout_p1_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});


	jQuery('#zoomextents_p1_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "zoomextents_p1_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);
			
		
		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p1_8.ZoomExtents);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+68);
		});

	jQuery('#zoomextents_p1_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});


	jQuery('#zoomwindow_p1_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "zoomwindow_p1_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);
								
		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p1_8.ZoomWindow);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left+73).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+93);
		});

	jQuery('#zoomwindow_p1_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});



	jQuery('#toggle_p1_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "toggle_p1_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);
			
						
		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p1_8.Toggle);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+95);
		});

	jQuery('#toggle_p1_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});


	jQuery('#background_p1_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "background_p1_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);
			
			
		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p1_8.Background);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left+73).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+120);
		});

	jQuery('#background_p1_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});



	jQuery('#fileload_p1_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "fileload_p1_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);
			
			
		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p1_8.FileLoad);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+122);
		});

	jQuery('#fileload_p1_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});


	jQuery('#search_p1_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "search_p1_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);
			
			
		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p1_8.Search);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left+73).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+147);
		});

	jQuery('#search_p1_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});


	jQuery('#about_p1_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "about_p1_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);
			
			
		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p1_8.About);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+149);
		});

	jQuery('#about_p1_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});


	jQuery('#layeroff_p1_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "layeroff_p1_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);
			
			
		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p1_8.LayerOff);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left+73).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+174);
		});

	jQuery('#layeroff_p1_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});


	jQuery('#swap_p1_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "swap_p1_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);
			
			
		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p1_8.SwapLayers);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+176);
		});

	jQuery('#swap_p1_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});


	jQuery('#alllayerson_p1_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "alllayerson_p1_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);
			
			
		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p1_8.AllLayersOn);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left+73).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+201);
		});

	jQuery('#alllayerson_p1_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});


	jQuery('#measurement_p1_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "measurement_p1_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);
			
			
		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p1_8.Measurement);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+203);
		});

	jQuery('#measurement_p1_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});


	jQuery('#calibrate_p1_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "calibrate_p1_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);
			
			
		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p1_8.Calibrate);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left+73).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+228);
		});

	jQuery('#calibrate_p1_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});


	jQuery('#bird_p1_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "bird_p1_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);
			
			
		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p1_8.BirdsEye);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+230);
		});

	jQuery('#bird_p1_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});


	jQuery('#thickness_p1_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "thickness_p1_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);
			
			
		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p1_8.LineThickness);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left+73).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+255);
		});

	jQuery('#thickness_p1_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});


/// PAGE 1 - END



/// PAGE 2        TOOLTIPS

	if (cvjs_devMode)
		jQuery("#cvjs_modals"+"_"+floorplan_div).append("<map name=\"cvjsToolbarMap_p2_8"+"_"+floorplan_div+"\"><area id=\"previousIconPage_p2_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"6,5,20,20\" href=\"javascript:cvjs_changePreviousIconPage(\'"+floorplan_div+"\");\'/><area id=\"nextIconPage_p2_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\"  coords=\"41,5,56,20\" href=\"javascript:cvjs_changeNextIconPage(\'"+floorplan_div+"\');\"/><area id=\"saveredline_p2_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,29,29,53\" href=\"javascript:cvjs_saveStickyNotesRedlinesUser();\"/><area id=\"loadredline_p2_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"32,29,57,53\" href=\"javascript:cvjs_loadStickyNotesRedlinesUser();\"/><area id=\"deletesingle_p2_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,57,29,80\" href=\"javascript:cvjs_deleteSingleRedline();\"/><area id=\"deletelast_p2_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"32,57,56,80\" href=\"javascript:cvjs_deleteLastRedline();\"/><area id=\"color_p2_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"6,84,29,107\" href=\"javascript:cvjs_setRedlineColor();\"/><area id=\"thickness_p2_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"33,84,57,107\" href=\"javascript:cvjs_setRedlineThickness();\"/><area id=\"stickynote_p2_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,111,29,135\" href=\"javascript:cvjs_drawStickyNote();\"/><area id=\"clear_p2_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"32,111,57,135\" href=\"javascript:cvjs_clearCurrentRedline("+floorplan_div+");\"/><area id=\"freehand_p2_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,138,29,161\" href=\"javascript:cvjs_drawRedline_Freehand();\"/><area id=\"cloud_p2_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"32,138,56,161\" href=\"javascript:cvjs_drawRedlineEllipseCloud();\"/><area id=\"filledpolygon_p2_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,164,29,188\" href=\"javascript:cvjs_drawRedlineFilledPolygon();\"/><area id=\"polyline_p2_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"32,164,56,188\" href=\"javascript:cvjs_drawRedlinePolyline();\"/><area id=\"filledrect_p2_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,191,29,216\" href=\"javascript:cvjs_drawRedlineFilledRectangle();\"/><area id=\"rect_p2_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"32,191,56,216\" href=\"javascript:cvjs_drawRedlineRectangle();\"/><area id=\"arrow_p2_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,219,29,242\" href=\"javascript:cvjs_drawRedlineArrow();\"/><area id=\"text_p2_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\"  coords=\"32,219,56,242\" href=\"javascript:cvjs_drawRedlineText();\"/><area id=\"extents_p2_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,246,29,269\" href=\"javascript:cvjs_resetZoomPan();\"/><area id=\"zoomwindow_p2_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"32,246,56,269\" href=\"javascript:cvjs_zoomWindow();\"/></map>");
	else
		jQuery("#cvjs_modals"+"_"+floorplan_div).append("<map name=\"cvjsToolbarMap_p2_8"+"_"+floorplan_div+"\"><area id=\"previousIconPage_p2_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"6,5,20,20\" onclick=\"cvjs_changePreviousIconPage(\'"+floorplan_div+"\');\"/><area id=\"nextIconPage_p2_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\"  coords=\"41,5,56,20\" onclick=\"cvjs_changeNextIconPage(\'"+floorplan_div+"\');\"/><area id=\"saveredline_p2_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,29,29,53\" onclick=\"cvjs_saveStickyNotesRedlinesUser(\'"+floorplan_div+"\');\"/><area id=\"loadredline_p2_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"32,29,57,53\" onclick=\"cvjs_loadStickyNotesRedlinesUser(\'"+floorplan_div+"\');\"/><area id=\"deletesingle_p2_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,57,29,80\" onclick=\"cvjs_deleteSingleRedline(\'"+floorplan_div+"\');\"/><area id=\"deletelast_p2_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"32,57,56,80\" onclick=\"cvjs_deleteLastRedline(\'"+floorplan_div+"\');\"/><area id=\"color_p2_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"6,84,29,107\" onclick=\"cvjs_setRedlineColor(\'"+floorplan_div+"\');\"/><area id=\"thickness_p2_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"33,84,57,107\" onclick=\"cvjs_setRedlineThickness(\'"+floorplan_div+"\');\"/><area id=\"stickynote_p2_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,111,29,135\" onclick=\"cvjs_drawStickyNote(\'"+floorplan_div+"\');\"/><area id=\"clear_p2_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"32,111,57,135\" onclick=\"cvjs_clearCurrentRedline(\'"+floorplan_div+"\');\"/><area id=\"freehand_p2_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,138,29,161\" onclick=\"cvjs_drawRedline_Freehand(\'"+floorplan_div+"\');\"/><area id=\"cloud_p2_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"32,138,56,161\" onclick=\"cvjs_drawRedlineEllipseCloud(\'"+floorplan_div+"\');\"/><area id=\"filledpolygon_p2_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,164,29,188\" onclick=\"cvjs_drawRedlineFilledPolygon(\'"+floorplan_div+"\');\"/><area id=\"polyline_p2_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"32,164,56,188\" onclick=\"cvjs_drawRedlinePolyline(\'"+floorplan_div+"\');\"/><area id=\"filledrect_p2_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,191,29,216\" onclick=\"cvjs_drawRedlineFilledRectangle(\'"+floorplan_div+"\');\"/><area id=\"rect_p2_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"32,191,56,216\" onclick=\"cvjs_drawRedlineRectangle(\'"+floorplan_div+"\');\"/><area id=\"arrow_p2_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,219,29,242\" onclick=\"cvjs_drawRedlineArrow(\'"+floorplan_div+"\');\"/><area id=\"text_p2_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\"  coords=\"32,219,56,242\" onclick=\"cvjs_drawRedlineText(\'"+floorplan_div+"\');\"/><area id=\"merge_p2_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,246,29,269\" onclick=\"cvjs_mergeDXFDWG(\'"+floorplan_div+"\');\"/><area id=\"publishpdf_p2_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"32,246,56,269\" onclick=\"cvjs_publishPDF(\'"+floorplan_div+"\');\"/></map>");


	jQuery('#previousIconPage_p2_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "previousIconPage_p2_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);
			
			
		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p2_8.PreviousPage);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top-12);
		});

	jQuery('#previousIconPage_p2_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});


	jQuery('#nextIconPage_p2_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "nextIconPage_p2_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);
			
			
		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p2_8.NextPage);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left+20).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top-12);
		});

	jQuery('#nextIconPage_p2_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});


	jQuery('#saveredline_p2_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "saveredline_p2_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);
			
			
		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p2_8.SaveRedline);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+15);
		});

	jQuery('#saveredline_p2_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});


	jQuery('#loadredline_p2_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "loadredline_p2_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);
			
			
		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p2_8.LoadRedline);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left+73).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+39);
		});

	jQuery('#loadredline_p2_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});


	jQuery('#deletesingle_p2_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "deletesingle_p2_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);
			
			
		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p2_8.DeleteSingle);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+41);
		});

	jQuery('#deletesingle_p2_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});


	jQuery('#deletelast_p2_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "deletelast_p2_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);
			
			
		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p2_8.DeleteLast);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left+73).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+66);
		});

	jQuery('#deletelast_p2_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});


	jQuery('#color_p2_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "color_p2_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);
			
			
		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p2_8.Color);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+68);
		});

	jQuery('#color_p2_8'+"_"+floorplan_div).mouseout(function()
		{

			tip[cvjs_active_floorplan_div_nr].hide();
		});


	jQuery('#thickness_p2_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "thickness_p2_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);
			
			
		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p2_8.Thickness);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left+73).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+93);
		});

	jQuery('#thickness_p2_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});



	jQuery('#stickynote_p2_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "stickynote_p2_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);
			
			
		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p2_8.StickyNote);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+95);
		});

	jQuery('#stickynote_p2_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});


	jQuery('#clear_p2_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "clear_p2_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);
			
			
		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p2_8.ClearAll);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left+73).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+120);
		});

	jQuery('#clear_p2_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});



	jQuery('#freehand_p2_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "freehand_p2_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);
			
			
		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p2_8.Freehand);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+122);
		});

	jQuery('#freehand_p2_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});


	jQuery('#cloud_p2_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "cloud_p2_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);
			
			
		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p2_8.Cloud);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left+73).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+147);
		});

	jQuery('#cloud_p2_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});


	jQuery('#filledpolygon_p2_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "filledpolygon_p2_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);
			
			
		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p2_8.FilledPolygon);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+149);
		});

	jQuery('#filledpolygon_p2_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});


	jQuery('#polyline_p2_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "polyline_p2_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);
			
			
		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p2_8.Polyline);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left+73).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+174);
		});

	jQuery('#polyline_p2_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});


	jQuery('#filledrect_p2_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "filledrect_p2_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);
			
			
		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p2_8.FilledRectangle);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+176);
		});

	jQuery('#filledrect_p2_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});


	jQuery('#rect_p2_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "rect_p2_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);
			
			
		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p2_8.Rectangle);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left+73).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+201);
		});

	jQuery('#rect_p2_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});


	jQuery('#arrow_p2_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "arrow_p2_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);
			
			
		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p2_8.Arrow);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+203);
		});

	jQuery('#arrow_p2_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});


	jQuery('#text_p2_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "text_p2_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);
			
			
		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p2_8.Text);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left+73).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+228);
		});

	jQuery('#text_p2_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});


	jQuery('#merge_p2_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "merge_p2_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);
			
			
		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p2_8.MergeAsDXF);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+230);
		});

	jQuery('#merge_p2_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});


	jQuery('#publishpdf_p2_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "publishpdf_p2_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);
			
			
		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p2_8.PublishAsPDF);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left+73).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+255);
		});

	jQuery('#publishpdf_p2_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});


/// PAGE 2       END


/// PAGE 3        TOOLTIPS

//	if (cvjs_devMode)
//		jQuery("#cvjs_modals"+"_"+floorplan_div).append("<map name=\"cvjsToolbarMap_p3_8"+"_"+floorplan_div+"\"><area id=\"previousIconPage_p3_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"6,5,20,20\" href=\"javascript:cvjs_changePreviousIconPage(\'"+floorplan_div+"\');\"/><area id=\"nextIconPage_p3_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"41,5,56,20\" href=\"javascript:cvjs_changeNextIconPage(\'"+floorplan_div+"\');\"/><area id=\"loadlink_p3_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,29,29,53\" href=\"javascript:cvjs_loadAllImageLinks();\"/><area id=\"insertlink_p3_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"32,29,57,53\" href=\"javascript:cvjs_insertImageLink();\"/><area id=\"savelink_p3_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,57,29,80\" href=\"javascript:cvjs_saveAllImageLinks();\"/><area id=\"clearlink_p3_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"32,57,56,80\" href=\"javascript:cvjs_clearAllImageLinks();\"/><area id=\"quickcount_p3_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"6,84,29,107\" href=\"javascript:cvjs_quickCount();\"/><area id=\"countsum_p3_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"33,84,57,107\" href=\"javascript:cvjs_showMeCounts(\'"+floorplan_div+"\');\"/><area id=\"clearcount_p3_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,111,29,135\" href=\"javascript:cvjs_clearQuickCounts();\"/><area id=\"free2_p3_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"32,111,57,135\" href=\"javascript:cvjs_displayInformationModal_Mode(\'1\');\"/><area id=\"compare1_p3_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,138,29,161\" href=\"javascript:cvjs_compareDrawings_LoadSecondDrawing();\"/><area id=\"compare3_p3_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"32,138,56,161\" href=\"javascript:cvjs_compareDrawings_ToggleDrawings();\"/><area id=\"compare4_p3_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,164,29,188\" href=\"javascript:cvjs_compareDrawings_ToggleDrawingOverlay();\"/><area id=\"compare5_p3_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"32,164,56,188\" href=\"javascript:cvjs_exitCompareDrawings();\"/><area id=\"joincollab_p3_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,191,29,216\" href=\"javascript:cvjs_start_collab();\"/><area id=\"makepresenter_p3_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"32,191,56,216\" href=\"javascript:cvjs_make_collab_presenter();\"/><area id=\"clearcollab_p3_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,219,29,242\" href=\"javascript:cvjs_clear_collab_redline();\"/><area id=\"stopcollab_p3_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"32,219,56,242\" href=\"javascript:cvjs_stop_collab();\"/><area id=\"extents_p3_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,246,29,269\" href=\"javascript:cvjs_resetZoomPan();\"/><area id=\"zoomwindow_p3_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"32,246,56,269\" href=\"javascript:cvjs_zoomWindow();\"/></map>");
//	else
//		jQuery("#cvjs_modals"+"_"+floorplan_div).append("<map name=\"cvjsToolbarMap_p3_8"+"_"+floorplan_div+"\"><area id=\"previousIconPage_p3_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"6,5,20,20\" onclick=\"cvjs_changePreviousIconPage(\'"+floorplan_div+"\');\"/><area id=\"nextIconPage_p3_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"41,5,56,20\" onclick=\"cvjs_changeNextIconPage(\'"+floorplan_div+"\');\"/><area id=\"loadlink_p3_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,29,29,53\" onclick=\"cvjs_loadAllImageLinks(\'"+floorplan_div+"\');\"/><area id=\"insertlink_p3_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"32,29,57,53\" onclick=\"cvjs_insertImageLink(\'"+floorplan_div+"\');\"/><area id=\"savelink_p3_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,57,29,80\" onclick=\"cvjs_saveAllImageLinks(\'"+floorplan_div+"\');\"/><area id=\"clearlink_p3_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"32,57,56,80\" onclick=\"cvjs_clearAllImageLinks(\'"+floorplan_div+"\');\"/><area id=\"quickcount_p3_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"6,84,29,107\" onclick=\"cvjs_quickCount(\'"+floorplan_div+"\');\"/><area id=\"countsum_p3_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"33,84,57,107\" onclick=\"cvjs_showMeCounts(\'"+floorplan_div+"\');\"/><area id=\"clearcount_p3_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,111,29,135\" onclick=\"cvjs_clearQuickCounts(\'"+floorplan_div+"\');\"/><area id=\"free2_p3_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"32,111,57,135\" onclick=\"cvjs_displayInformationModal_Mode(\'1\');\"/><area id=\"compare1_p3_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,138,29,161\" onclick=\"cvjs_compareDrawings_LoadSecondDrawing(\'"+floorplan_div+"\');\"/><area id=\"compare3_p3_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"32,138,56,161\" onclick=\"cvjs_compareDrawings_ToggleDrawings(\'"+floorplan_div+"\');\"/><area id=\"compare4_p3_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,164,29,188\" onclick=\"cvjs_compareDrawings_ToggleDrawingOverlay(\'"+floorplan_div+"\');\"/><area id=\"compare5_p3_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"32,164,56,188\" onclick=\"cvjs_exitCompareDrawings(\'"+floorplan_div+"\');\"/><area id=\"joincollab_p3_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,191,29,216\" onclick=\"cvjs_start_collab(\'"+floorplan_div+"\');\"/><area id=\"makepresenter_p3_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"32,191,56,216\" onclick=\"cvjs_make_collab_presenter(\'"+floorplan_div+"\');\"/><area id=\"clearcollab_p3_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,219,29,242\" onclick=\"cvjs_clear_collab_redline(\'"+floorplan_div+"\');\"/><area id=\"stopcollab_p3_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"32,219,56,242\" onclick=\"cvjs_stop_collab(\'"+floorplan_div+"\');\"/><area id=\"extents_p3_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,246,29,269\" onclick=\"cvjs_resetZoomPan(\'"+floorplan_div+"\');\"/><area id=\"zoomwindow_p3_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"32,246,56,269\" onclick=\"cvjs_zoomWindow(\'"+floorplan_div+"\');\"/></map>");


	
	jQuery("#cvjs_modals"+"_"+floorplan_div).append("<map name=\"cvjsToolbarMap_p3_8"+"_"+floorplan_div+"\"><area id=\"previousIconPage_p3_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"6,5,20,20\" onclick=\"cvjs_changePreviousIconPage(\'"+floorplan_div+"\');\"/><area id=\"nextIconPage_p3_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"41,5,56,20\" onclick=\"cvjs_changeNextIconPage(\'"+floorplan_div+"\');\"/><area id=\"loadlink_p3_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,56,29,79\" onclick=\"cvjs_loadAllImageLinks(\'"+floorplan_div+"\');\"/><area id=\"insertlink_p3_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"32,57,57,80\" onclick=\"cvjs_insertImageLink(\'"+floorplan_div+"\');\"/><area id=\"savelink_p3_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,83,29,107\" onclick=\"cvjs_saveAllImageLinks(\'"+floorplan_div+"\');\"/><area id=\"clearlink_p3_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"32,83,56,107\" onclick=\"cvjs_clearAllImageLinks(\'"+floorplan_div+"\');\"/><area id=\"quickcount_p3_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,111,29,134\" onclick=\"cvjs_quickCount(\'"+floorplan_div+"\');\"/><area id=\"countsum_p3_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"33,110,57,134\" onclick=\"cvjs_showMeCounts(\'"+floorplan_div+"\');\"/><area id=\"clearcount_p3_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,136,29,161\" onclick=\"cvjs_clearQuickCounts(\'"+floorplan_div+"\');\"/><area id=\"free3_p3_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"32,138,57,161\" onclick=\"cvjs_displayInformationModal_Mode(\'1\');\"/><area id=\"publishpdf_p3_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"32,246,56,269\" onclick=\"cvjs_publishPDF(\'"+floorplan_div+"\');\"/><area id=\"free2_p3_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"32,28,56,53\" onclick=\"cvjs_displayInformationModal_Mode(\'1\');\"/><area id=\"free4_p3_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,164,29,188\" onclick=\"cvjs_displayInformationModal_Mode(\'1\');\"/><area id=\"free5_p3_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"32,164,56,188\" onclick=\"cvjs_displayInformationModal_Mode(\'1\');\"/><area id=\"free6_p3_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,191,29,216\" onclick=\"cvjs_displayInformationModal_Mode(\'1\');\"/><area id=\"free7_p3_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"32,191,56,216\" onclick=\"cvjs_displayInformationModal_Mode(\'1\');\"/><area id=\"free8_p3_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,219,29,242\" onclick=\"cvjs_displayInformationModal_Mode(\'1\');\"/><area id=\"free9_p3_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"32,219,56,242\" onclick=\"cvjs_displayInformationModal_Mode(\'1\');\"/><area id=\"free10_p3_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,246,29,269\" onclick=\"cvjs_displayInformationModal_Mode(\'1\');\"/><area id=\"free11_p3_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,28,29,53\" onclick=\"cvjs_displayInformationModal_Mode(\'1\');\"/></map>");
	
	
	
	
	jQuery('#previousIconPage_p3_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "previousIconPage_p3_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);
			
			
		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p3_8.PreviousPage);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top-12);
		});

	jQuery('#previousIconPage_p3_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});


	jQuery('#nextIconPage_p3_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "nextIconPage_p3_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);
			
			
		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p3_8.NextPage);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left+20).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top-12);
		});

	jQuery('#nextIconPage_p3_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});


	jQuery('#loadlink_p3_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "loadlink_p3_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);
			
			
		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p3_8.LoadLink);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+41);
		});

	jQuery('#loadlink_p3_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});


	jQuery('#insertlink_p3_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "insertlink_p3_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);
			
			
		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p3_8.InsertLink);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left+73).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+66);
		});

	jQuery('#insertlink_p3_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});


	jQuery('#savelink_p3_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "savelink_p3_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);
			
			
		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p3_8.SaveLink);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+68);
		});

	jQuery('#savelink_p3_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});


	jQuery('#clearlink_p3_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "clearlink_p3_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);
			
			
		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p3_8.ClearLink);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left+73).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+93);
		});

	jQuery('#clearlink_p3_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});




	jQuery('#quickcount_p3_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "quickcount_p3_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);
			
			
		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p3_8.QuickCount);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+95);   // 95
		});

	jQuery('#quickcount_p3_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});


	jQuery('#countsum_p3_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "countsum_p3_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);
			
			
		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p3_8.CountSum);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left+73).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+120);  // 120
		});

	jQuery('#countsum_p3_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});



	jQuery('#clearcount_p3_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "clearcount_p3_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);
			
			
		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p3_8.ClearCount);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+122);  // 122
		});

	jQuery('#clearcount_p3_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});


	jQuery('#publishpdf_p3_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "publishpdf_p3_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);
			
			
		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p3_8.PublishAsPDF);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left+73).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+255);
			
																										// 0, 15
		});

	jQuery('#publishpdf_p3_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});


	jQuery('#free3_p3_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "free3_p3_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);
			
			
		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p3_8.Free);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left+73).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+147);  // 93   // 68
		});

	jQuery('#free3_p3_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});


	jQuery('#free2_p3_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "free2_p3_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);
			
			
		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p3_8.Free);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left+73).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+39);  // 93
		});

	jQuery('#free2_p3_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});



	jQuery('#free4_p3_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "free4_p3_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);
			
			
		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p3_8.Free);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+149);
		});

	jQuery('#free4_p3_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});


	jQuery('#free5_p3_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "free5_p3_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);
			
			
		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p3_8.Free);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left+73).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+174);
		});

	jQuery('#free5_p3_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});


	jQuery('#free6_p3_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "free6_p3_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);
			
			
		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p3_8.Free);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+176);
		});

	jQuery('#free6_p3_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});


	jQuery('#free7_p3_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "free7_p3_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);
			
			
		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p3_8.CollaborationTakeControl);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left+73).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+201);
		});

	jQuery('#free7_p3_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});


	jQuery('#free8_p3_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "free8_p3_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);
			
			
		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p3_8.Free);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+203);
		});

	jQuery('#free8_p3_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});


	jQuery('#free9_p3_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "free9_p3_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);
			
			
		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p3_8.Free);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left+73).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+228);
		});

	jQuery('#free9_p3_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});


	jQuery('#free10_p3_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "free10_p3_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);
			
			
		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p3_8.Free);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+230);
		});

	jQuery('#free10_p3_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});


	jQuery('#free11_p3_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "free11_p3_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);
			
			
		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p3_8.Free);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left+0).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+15);
		});

	jQuery('#free11_p3_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});
/// PAGE 3       END





/// PAGE 4        TOOLTIPS

//	if (cvjs_devMode)
//		jQuery("#cvjs_modals"+"_"+floorplan_div).append("<map name=\"cvjsToolbarMap_p4_8"+"_"+floorplan_div+"\"><area id=\"previousIconPage_p4_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"6,5,20,20\" href=\"javascript:cvjs_changePreviousIconPage(\'"+floorplan_div+"\');\"/><area id=\"nextIconPage_p4_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"41,5,56,20\" href=\"javascript:cvjs_changeNextIconPage(\'"+floorplan_div+"\');\"/><area id=\"loadlink_p4_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,29,29,53\" href=\"javascript:cvjs_loadAllImageLinks();\"/><area id=\"insertlink_p4_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"32,29,57,53\" href=\"javascript:cvjs_insertImageLink();\"/><area id=\"savelink_p4_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,57,29,80\" href=\"javascript:cvjs_saveAllImageLinks();\"/><area id=\"clearlink_p4_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"32,57,56,80\" href=\"javascript:cvjs_clearAllImageLinks();\"/><area id=\"quickcount_p4_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"6,84,29,107\" href=\"javascript:cvjs_quickCount();\"/><area id=\"countsum_p4_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"33,84,57,107\" href=\"javascript:cvjs_showMeCounts(\'"+floorplan_div+"\');\"/><area id=\"clearcount_p4_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,111,29,135\" href=\"javascript:cvjs_clearQuickCounts();\"/><area id=\"free2_p4_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"32,111,57,135\" href=\"javascript:cvjs_displayInformationModal_Mode(\'1\');\"/><area id=\"compare1_p4_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,138,29,161\" href=\"javascript:cvjs_compareDrawings_LoadSecondDrawing();\"/><area id=\"compare3_p4_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"32,138,56,161\" href=\"javascript:cvjs_compareDrawings_ToggleDrawings();\"/><area id=\"compare4_p4_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,164,29,188\" href=\"javascript:cvjs_compareDrawings_ToggleDrawingOverlay();\"/><area id=\"compare5_p4_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"32,164,56,188\" href=\"javascript:cvjs_exitCompareDrawings();\"/><area id=\"joincollab_p4_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,191,29,216\" href=\"javascript:cvjs_start_collab();\"/><area id=\"makepresenter_p4_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"32,191,56,216\" href=\"javascript:cvjs_make_collab_presenter();\"/><area id=\"clearcollab_p4_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,219,29,242\" href=\"javascript:cvjs_clear_collab_redline();\"/><area id=\"stopcollab_p4_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"32,219,56,242\" href=\"javascript:cvjs_stop_collab();\"/><area id=\"extents_p4_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,246,29,269\" href=\"javascript:cvjs_resetZoomPan();\"/><area id=\"zoomwindow_p4_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"32,246,56,269\" href=\"javascript:cvjs_zoomWindow();\"/></map>");
//	else
//		jQuery("#cvjs_modals"+"_"+floorplan_div).append("<map name=\"cvjsToolbarMap_p4_8"+"_"+floorplan_div+"\"><area id=\"previousIconPage_p4_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"6,5,20,20\" onclick=\"cvjs_changePreviousIconPage(\'"+floorplan_div+"\');\"/><area id=\"nextIconPage_p4_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"41,5,56,20\" onclick=\"cvjs_changeNextIconPage(\'"+floorplan_div+"\');\"/><area id=\"loadlink_p4_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,29,29,53\" onclick=\"cvjs_loadAllImageLinks(\'"+floorplan_div+"\');\"/><area id=\"insertlink_p4_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"32,29,57,53\" onclick=\"cvjs_insertImageLink(\'"+floorplan_div+"\');\"/><area id=\"savelink_p4_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,57,29,80\" onclick=\"cvjs_saveAllImageLinks(\'"+floorplan_div+"\');\"/><area id=\"clearlink_p4_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"32,57,56,80\" onclick=\"cvjs_clearAllImageLinks(\'"+floorplan_div+"\');\"/><area id=\"quickcount_p4_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"6,84,29,107\" onclick=\"cvjs_quickCount(\'"+floorplan_div+"\');\"/><area id=\"countsum_p4_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"33,84,57,107\" onclick=\"cvjs_showMeCounts(\'"+floorplan_div+"\');\"/><area id=\"clearcount_p4_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,111,29,135\" onclick=\"cvjs_clearQuickCounts(\'"+floorplan_div+"\');\"/><area id=\"free2_p4_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"32,111,57,135\" onclick=\"cvjs_displayInformationModal_Mode(\'1\');\"/><area id=\"compare1_p4_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,138,29,161\" onclick=\"cvjs_compareDrawings_LoadSecondDrawing(\'"+floorplan_div+"\');\"/><area id=\"compare3_p4_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"32,138,56,161\" onclick=\"cvjs_compareDrawings_ToggleDrawings(\'"+floorplan_div+"\');\"/><area id=\"compare4_p4_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,164,29,188\" onclick=\"cvjs_compareDrawings_ToggleDrawingOverlay(\'"+floorplan_div+"\');\"/><area id=\"compare5_p4_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"32,164,56,188\" onclick=\"cvjs_exitCompareDrawings(\'"+floorplan_div+"\');\"/><area id=\"joincollab_p4_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,191,29,216\" onclick=\"cvjs_start_collab(\'"+floorplan_div+"\');\"/><area id=\"makepresenter_p4_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"32,191,56,216\" onclick=\"cvjs_make_collab_presenter(\'"+floorplan_div+"\');\"/><area id=\"clearcollab_p4_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,219,29,242\" onclick=\"cvjs_clear_collab_redline(\'"+floorplan_div+"\');\"/><area id=\"stopcollab_p4_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"32,219,56,242\" onclick=\"cvjs_stop_collab(\'"+floorplan_div+"\');\"/><area id=\"extents_p4_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,246,29,269\" onclick=\"cvjs_resetZoomPan(\'"+floorplan_div+"\');\"/><area id=\"zoomwindow_p4_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"32,246,56,269\" onclick=\"cvjs_zoomWindow(\'"+floorplan_div+"\');\"/></map>");

	
	jQuery("#cvjs_modals"+"_"+floorplan_div).append("<map name=\"cvjsToolbarMap_p4_8"+"_"+floorplan_div+"\"><area id=\"previousIconPage_p4_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"6,5,20,20\" onclick=\"cvjs_changePreviousIconPage(\'"+floorplan_div+"\');\"/><area id=\"nextIconPage_p4_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"41,5,56,20\" onclick=\"cvjs_changeNextIconPage(\'"+floorplan_div+"\');\"/><area id=\"free3_p4_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,138,29,161\" onclick=\"cvjs_displayInformationModal_Mode(\'1\');\"/><area id=\"free4_p4_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"32,138,56,161\" onclick=\"cvjs_displayInformationModal_Mode(\'1\');\"/><area id=\"free5_p4_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,164,29,188\" onclick=\"cvjs_displayInformationModal_Mode(\'1\');\"/><area id=\"free6_p4_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"32,164,56,188\" onclick=\"cvjs_displayInformationModal_Mode(\'1\');\"/><area id=\"free7_p4_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"6,84,29,107\" onclick=\"cvjs_displayInformationModal_Mode(\'1\');\"/><area id=\"free8_p4_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"33,84,57,107\" onclick=\"cvjs_displayInformationModal_Mode(\'1\');\"/><area id=\"free9_p4_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,111,29,135\" onclick=\"cvjs_displayInformationModal_Mode(\'1\');\"/><area id=\"free2_p4_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"32,111,57,135\" onclick=\"cvjs_displayInformationModal_Mode(\'1\');\"/><area id=\"compare1_p4_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,29,29,53\" onclick=\"cvjs_compareDrawings_LoadSecondDrawing(\'"+floorplan_div+"\');\"/><area id=\"compare3_p4_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"32,29,57,53\" onclick=\"cvjs_compareDrawings_ToggleDrawings(\'"+floorplan_div+"\');\"/><area id=\"compare4_p4_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,57,29,80\" onclick=\"cvjs_compareDrawings_ToggleDrawingOverlay(\'"+floorplan_div+"\');\"/><area id=\"compare5_p4_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"32,57,56,80\" onclick=\"cvjs_exitCompareDrawings(\'"+floorplan_div+"\');\"/><area id=\"joincollab_p4_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,191,29,216\" onclick=\"cvjs_start_collab(\'"+floorplan_div+"\');\"/><area id=\"makepresenter_p4_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"32,191,56,216\" onclick=\"cvjs_make_collab_presenter(\'"+floorplan_div+"\');\"/><area id=\"clearcollab_p4_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,219,29,242\" onclick=\"cvjs_clear_collab_redline(\'"+floorplan_div+"\');\"/><area id=\"stopcollab_p4_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"32,219,56,242\" onclick=\"cvjs_stop_collab(\'"+floorplan_div+"\');\"/><area id=\"extents_p4_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,246,29,269\" onclick=\"cvjs_resetZoomPan(\'"+floorplan_div+"\');\"/><area id=\"zoomwindow_p4_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"32,246,56,269\" onclick=\"cvjs_zoomWindow(\'"+floorplan_div+"\');\"/></map>");
		
	
	
	jQuery('#previousIconPage_p4_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "previousIconPage_p4_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);
			
			
		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p4_8.PreviousPage);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top-12);
		});

	jQuery('#previousIconPage_p4_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});


	jQuery('#nextIconPage_p4_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "nextIconPage_p4_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);
			
			
		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p4_8.NextPage);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left+20).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top-12);
		});

	jQuery('#nextIconPage_p4_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});


	jQuery('#free3_p4_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "free3_p4_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);
			
			
		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p4_8.Free);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+122); // 122
		});

	jQuery('#free3_p4_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});


	jQuery('#free4_p4_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "free4_p4_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);
			
			
		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p4_8.Free);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left+73).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+147);  //147
		});

	jQuery('#free4_p4_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});


	jQuery('#free5_p4_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "free5_p4_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);
			
			
		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p4_8.Free);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+149);  //149 41
		});

	jQuery('#free5_p4_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});


	jQuery('#free6_p4_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "free6_p4_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);
			
			
		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p4_8.Free);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left+73).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+174);  // 174 66
		});

	jQuery('#free6_p4_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});




	jQuery('#free7_p4_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "free7_p4_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);
			
			
		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p4_8.Free);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+68);   // 95
		});

	jQuery('#free7_p4_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});


	jQuery('#free8_p4_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "free8_p4_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);
			
			
		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p4_8.Free);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left+73).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+93);  // 120
		});

	jQuery('#free8_p4_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});



	jQuery('#free9_p4_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "free9_p4_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);
			
			
		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p4_8.ClearCount);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+95);  // 122
		});

	jQuery('#free9_p4_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});


	jQuery('#compare3_p4_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "compare3_p4_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);
			
			
		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p4_8.CompareToggle);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left+73).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+39);  // 147
		});

	jQuery('#compare3_p4_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});


	jQuery('#compare1_p4_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "compare1_p4_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);
			
			
		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p4_8.CompareLoad);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+15) // 122;  // 93   // 68
		});

	jQuery('#compare1_p4_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});


	jQuery('#free2_p4_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "free2_p4_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);
			
			
		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p4_8.Free);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left+73).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+120);  // 93
		});

	jQuery('#free2_p4_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});



	jQuery('#compare4_p4_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "compare4_p4_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);
			
			
		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p4_8.CompareToggleOverlay);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+41); //149 41
		});

	jQuery('#compare4_p4_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});


	jQuery('#compare5_p4_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "compare5_p4_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);
			
			
		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p4_8.CompareExit);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left+73).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+66); //174 66
		});

	jQuery('#compare5_p4_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});


	jQuery('#joincollab_p4_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "joincollab_p4_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);
			
			
		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p4_8.CollaborationJoinSession);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+176);
		});

	jQuery('#joincollab_p4_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});


	jQuery('#makepresenter_p4_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "makepresenter_p4_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);
			
			
		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p4_8.CollaborationTakeControl);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left+73).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+201);
		});

	jQuery('#makepresenter_p4_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});


	jQuery('#clearcollab_p4_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "clearcollab_p4_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);
			
			
		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p4_8.CollaborationClearSession);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+203);
		});

	jQuery('#clearcollab_p4_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});


	jQuery('#stopcollab_p4_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "stopcollab_p4_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);
			
			
		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p4_8.CollaborationLeaveSession);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left+73).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+228);
		});

	jQuery('#stopcollab_p4_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});


	jQuery('#extents_p4_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "extents_p4_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);
			
			
		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p4_8.ZoomExtents);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+230);
		});

	jQuery('#extents_p4_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});


	jQuery('#zoomwindow_p4_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "zoomwindow_p4_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);
			
			
		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p4_8.ZoomWindow);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left+73).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+255);
		});

	jQuery('#zoomwindow_p4_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});
/// PAGE 4      END




/// PAGE 5        TOOLTIPS

	if (cvjs_devMode)
		jQuery("#cvjs_modals"+"_"+floorplan_div).append("<map name=\"cvjsToolbarMap_p5_8"+"_"+floorplan_div+"\"><area id=\"previousIconPage_p5_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"6,5,20,20\" href=\"javascript:cvjs_changePreviousIconPage(\'"+floorplan_div+"\');\"/><area id=\"nextIconPage_p5_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"41,5,56,20\" href=\"javascript:cvjs_changeNextIconPage(\'"+floorplan_div+"\');\"/><area id=\"settings_p5_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,29,29,53\" href=\"javascript:cvjs_spaceObjectSettings();\"/><area id=\"mode_p5_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"32,29,57,53\" href=\"javascript:cvjs_changeSpaceObjectDisplayMode();\"/><area id=\"load_p5_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,57,29,80\" href=\"javascript:cvjs_loadDrawingsWithSpaceObjects();\"/><area id=\"layerlist_p5_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"32,57,56,80\" href=\"javascript:cvjs_LayerListSpaceObject();\"/><area id=\"rect_p5_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"6,84,29,107\" href=\"javascript:cvjs_addRectangleSpaceObject();\"/><area id=\"polygon_p5_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"33,84,57,107\" href=\"javascript:cvjs_addPolygonSpaceObject();\"/><area id=\"circle_p5_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,111,29,135\" href=\"javascript:cvjs_addCircleSpaceObject();\"/><area id=\"copycircle_p5_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"32,111,57,135\" href=\"javascript:cvjs_copyCircleSpaceObject();\"/><area id=\"delete_p5_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,138,29,161\" href=\"javascript:cvjs_deleteSpaceObject();\"/><area id=\"selectpolygon_p5_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"32,138,56,161\" href=\"javascript:cvjs_setSpacePolygonOnLayer();\"/><area id=\"publish_p5_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,164,29,188\" href=\"javascript: cvjs_displaySpaceObjectsStructure();\"/><area id=\"free1_p5_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"32,164,56,188\" href=\"javascript:cvjs_displayInformationModal_Mode(\'1\');\"/><area id=\"free2_p5_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,191,29,216\" href=\"javascript:cvjs_displayInformationModal_Mode(\'1\');\"/><area id=\"layeroff_p5_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"32,191,56,216\" href=\"javascript:cvjs_interactiveLayerOff();\"/><area id=\"swap_p5_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,219,29,242\" href=\"javascript:cvjs_swapLayersInDrawing();\"/><area id=\"alllayerson_p5_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"32,219,56,242\" href=\"javascript:cvjs_allLayersInDrawingOn();\"/><area id=\"zoomextents_p5_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,246,29,269\" href=\"javascript:cvjs_resetZoomPan();\"/><area id=\"zoomwindow_p5_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"32,246,56,269\" href=\"javascript:cvjs_zoomWindow();\"/></map>");
	else
		jQuery("#cvjs_modals"+"_"+floorplan_div).append("<map name=\"cvjsToolbarMap_p5_8"+"_"+floorplan_div+"\"><area id=\"previousIconPage_p5_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"6,5,20,20\" onclick=\"cvjs_changePreviousIconPage(\'"+floorplan_div+"\');\"/><area id=\"nextIconPage_p5_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"41,5,56,20\" onclick=\"cvjs_changeNextIconPage(\'"+floorplan_div+"\');\"/><area id=\"settings_p5_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,29,29,53\" onclick=\"cvjs_spaceObjectSettings(\'"+floorplan_div+"\');\"/><area id=\"mode_p5_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"32,29,57,53\" onclick=\"cvjs_changeSpaceObjectDisplayMode(\'"+floorplan_div+"\');\"/><area id=\"load_p5_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,57,29,80\" onclick=\"cvjs_loadDrawingsWithSpaceObjects(\'"+floorplan_div+"\');\"/><area id=\"layerlist_p5_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"32,57,56,80\" onclick=\"cvjs_LayerListSpaceObject(\'"+floorplan_div+"\');\"/><area id=\"rect_p5_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"6,84,29,107\" onclick=\"cvjs_addRectangleSpaceObject(\'"+floorplan_div+"\');\"/><area id=\"polygon_p5_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"33,84,57,107\" onclick=\"cvjs_addPolygonSpaceObject(\'"+floorplan_div+"\');\"/><area id=\"circle_p5_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,111,29,135\" onclick=\"cvjs_addCircleSpaceObject(\'"+floorplan_div+"\');\"/><area id=\"copycircle_p5_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"32,111,57,135\" onclick=\"cvjs_copyCircleSpaceObject(\'"+floorplan_div+"\');\"/><area id=\"delete_p5_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,138,29,161\" onclick=\"cvjs_deleteSpaceObject(\'"+floorplan_div+"\');\"/><area id=\"selectpolygon_p5_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"32,138,56,161\" onclick=\"cvjs_setSpacePolygonOnLayer(\'"+floorplan_div+"\');\"/><area id=\"publish_p5_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,164,29,188\" onclick=\" cvjs_displaySpaceObjectsStructure(\'"+floorplan_div+"\');\"/><area id=\"downloadsvg_p5_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"32,164,56,188\" onclick=\"cvjs_saveAsSVG(\'"+floorplan_div+"\');\"/><area id=\"free2_p5_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,191,29,216\" onclick=\"cvjs_displayInformationModal_Mode(\'1\');\"/><area id=\"layeroff_p5_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"32,191,56,216\" onclick=\"cvjs_interactiveLayerOff(\'"+floorplan_div+"\');\"/><area id=\"swap_p5_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,219,29,242\" onclick=\"cvjs_swapLayersInDrawing(\'"+floorplan_div+"\');\"/><area id=\"alllayerson_p5_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"32,219,56,242\" onclick=\"cvjs_allLayersInDrawingOn(\'"+floorplan_div+"\');\"/><area id=\"zoomextents_p5_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"5,246,29,269\" onclick=\"cvjs_resetZoomPan(\'"+floorplan_div+"\');\"/><area id=\"zoomwindow_p5_8"+"_"+floorplan_div+"\" shape=\"rect\" alt=\"\" coords=\"32,246,56,269\" onclick=\"cvjs_zoomWindow(\'"+floorplan_div+"\');\"/></map>");


	jQuery('#previousIconPage_p5_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "previousIconPage_p5_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);
						
		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p5_8.PreviousPage);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top-12);
		});

	jQuery('#previousIconPage_p5_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});


	jQuery('#nextIconPage_p5_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "nextIconPage_p5_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);


		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p5_8.NextPage);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left+20).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top-12);
		});

	
	jQuery('#publish_p5_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "publish_p5_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);


		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p5_8.Publish);
			tip[cvjs_active_floorplan_div_nr].show();
//			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+5);
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+134);
		});

	jQuery('#publish_p5_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});


	jQuery('#load_p5_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "load_p5_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);


		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p5_8.Load);
			tip[cvjs_active_floorplan_div_nr].show();
//			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left+73).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+39);
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+41);
		});

	jQuery('#load_p5_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});


	jQuery('#settings_p5_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "settings_p5_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);


		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p5_8.Settings);
			tip[cvjs_active_floorplan_div_nr].show();
//			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+41);
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+12);
		});

	jQuery('#settings_p5_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});


	jQuery('#selectobject_p5_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "selectobject_p5_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);


		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p5_8.SelectObject);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left+73).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+66);
		});

	jQuery('#selectobject_p5_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});


	jQuery('#rect_p5_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "rect_p5_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);


		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p5_8.Rect);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+68);
		});

	jQuery('#rect_p5_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});


	jQuery('#polygon_p5_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "polygon_p5_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);


		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p5_8.Polygon);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left+73).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+93);
		});

	jQuery('#polygon_p5_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});



	jQuery('#circle_p5_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "circle_p5_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);


		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p5_8.Circle);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+95);
		});

	jQuery('#circle_p5_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});


	jQuery('#copycircle_p5_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "copycircle_p5_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);


		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p5_8.CopyCircle);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left+73).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+120);
		});

	jQuery('#copycircle_p5_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});



	jQuery('#delete_p5_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplad_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "delete_p5_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);


		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p5_8.Delete);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+122);
		});

	jQuery('#delete_p5_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});


	jQuery('#layerlist_p5_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "layerlist_p5_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);


		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p5_8.LayerList);
			tip[cvjs_active_floorplan_div_nr].show();
//			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left+73).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+147);
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left+73).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+66);

		});

	jQuery('#layerlist_p5_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});


	jQuery('#mode_p5_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "mode_p5_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);


		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p5_8.Mode);
			tip[cvjs_active_floorplan_div_nr].show();
//			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+134);
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left+73).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+39);
		});

	jQuery('#mode_p5_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});


	jQuery('#selectpolygon_p5_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "selectpolygon_p5_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);


		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p5_8.SelectPolygon);
			tip[cvjs_active_floorplan_div_nr].show();
//			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left+73).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+174);
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left+73).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+147);

		});

	jQuery('#selectpolygon_p5_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});

		
		
	jQuery('#nextIconPage_p5_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});

		
	jQuery('#downloadsvg_p5_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "downloadsvg_p5_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);


		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p5_8.DownloadSVG);
			tip[cvjs_active_floorplan_div_nr].show();
//			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+5);
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left+73).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+174);
		});

	jQuery('#downloadsvg_p5_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});

		
		
		

	jQuery('#free1_p5_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "free1_p5_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);


		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p5_8.Free);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left+73).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+174);
		});

	jQuery('#free1_p5_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});



	jQuery('#free2_p5_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "free2_p5_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);


		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p5_8.Free);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+176);
		});

	jQuery('#free2_p5_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});


	jQuery('#layeroff_p5_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "layeroff_p5_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);


		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p5_8.LayerOff);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left+73).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+201);
		});

	jQuery('#layeroff_p5_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});


	jQuery('#swap_p5_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "swap_p5_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);


		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p5_8.SwapLayers);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+203);
		});

	jQuery('#swap_p5_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});


	jQuery('#alllayerson_p5_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "alllayerson_p5_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);


		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p5_8.AllLayersOn);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left+73).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+228);
		});

	jQuery('#alllayerson_p5_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});


	jQuery('#zoomextents_p5_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "zoomextents_p5_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);


		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p5_8.ZoomExtents);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+230);
		});

	jQuery('#zoomextents_p5_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});


	jQuery('#zoomwindow_p5_8'+"_"+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "zoomwindow_p5_8";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			//console.log(cvjs_active_floorplan_div_nr);


		  	jQuery(this).css('cursor','pointer'); tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p5_8.ZoomWindow);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left+73).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+255);
		});

	jQuery('#zoomwindow_p5_8'+"_"+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});

/// PAGE 5       END




	// classic skin
	jQuery("#cvjs_modals"+"_"+floorplan_div).append("<map name=\"PanZoomMapClassic_"+floorplan_div+"\" ><area shape=\"rect\" alt=\"\" title=\"Zoom In\" coords=\"16,164,69,211\" href=\"javascript:cvjs_zoomIn(\""+floorplan_div+"\");\"/><area shape=\"rect\" alt=\"\" title=\"Zoom Out\" coords=\"16,211,69,258\" href=\"javascript:cvjs_zoomOut();\"/><area shape=\"rect\" alt=\"\" title=\"Zoom Extents\" coords=\"16,94,69,141\" href=\"javascript:cvjs_resetZoomPan();\"/><area shape=\"polygon\" alt=\"\" title=\"Pan Left\"  coords=\"13,29,32,23,29,44,9,56,5,39,6,21,9,13,13,11\" href=\"javascript:cvjs_panLeft();\"/><area shape=\"polygon\" alt=\"\" title=\"Pan Right\" coords=\"50,22,70,8,76,20,78,39,74,53,66,60,50,39,50,21\" href=\"javascript:cvjs_panRight();\"/><area shape=\"polygon\" alt=\"\" title=\"Pan Down\"  coords=\"13,57,31,43,50,42,65,61,55,69,42,69,25,68,19,63\" href=\"javascript:cvjs_panDown();\"/><area shape=\"polygon\" alt=\"\" title=\"Pan Up\"    coords=\"13,17,32,22,52,22,69,29,60,0,51,0,36,0,22,0,13,8\" href=\"javascript:cvjs_panUp();\"/><area shape=\"rect\" alt=\"\" title=\"Zoom Extents\" coords=\"30,22,50,43\" href=\"javascript:cvjs_resetZoomPan();\"/></map>");
	jQuery("#cvjs_modals"+"_"+floorplan_div).append("<map name=\"ZoomExtentsDeviceMapClassic_"+floorplan_div+"\" ><area shape=\"rect\" alt=\"\" title=\"Zoom In\" coords=\"16,75,69,124\" href=\"javascript:cvjs_zoomIn(\""+floorplan_div+"\");\"/><area shape=\"rect\" alt=\"\" title=\"Zoom Out\" coords=\"16,127,69,173\" href=\"javascript:cvjs_zoomOut();\"/><area shape=\"rect\" alt=\"\" title=\"Zoom Extents\" coords=\"16,6,69,54\" href=\"javascript:cvjs_resetZoomPan();\"/></map>");


//	jQuery("#cvjs_modals"+"_"+floorplan_div).append("<div id=\"floatNavigationMenu_"+floorplan_div+"\" class=\"changePagebox1\"><a class=\"cvjs_fastback\" id=\"cvjs_fastback_"+floorplan_div+"\" href=\"javascript:cvjs_firstPage(\'"+floorplan_div+"\');\"></a><a class=\"cvjs_back\" id=\"cvjs_back_"+floorplan_div+"\" href=\"javascript:cvjs_previousPage(\'"+floorplan_div+"\');\"></a><a class=\"cvjs_enterpagenumber\" id=\"cvjs_enterpagenumber_"+floorplan_div+"\" href=\"javascript:cvjs_enterPageChangeNumber(\'"+floorplan_div+"\');\"></a><div class=\"cvjs_floatpagemenutext\" id=\"floatpagemenuText_"+floorplan_div+"\">nr    page name</div><a class=\"cvjs_forward\" id=\"cvjs_forward_"+floorplan_div+"\" href=\"javascript:cvjs_nextPage(\'"+floorplan_div+"\');\"></a><a class=\"cvjs_fastforward\" id=\"cvjs_fastforward_"+floorplan_div+"\" href=\"javascript:cvjs_lastPage(\'"+floorplan_div+"\');\"></a></div>");


	jQuery("#cvjs_modals"+"_"+floorplan_div).append("<div id=\"floatNavigationMenu_"+floorplan_div+"\" class=\"changePagebox1\"><a class=\"cvjs_zoomextents\" id=\"cvjs_zoomextents_"+floorplan_div+"\" href=\"javascript:cvjs_zoomExtents(\'"+floorplan_div+"\');\"></a><a class=\"cvjs_zoomwindow\" id=\"cvjs_zoomwindow_"+floorplan_div+"\" href=\"javascript:cvjs_zoomWindow(\'"+floorplan_div+"\');\"></a><a class=\"cvjs_rotateforward\" id=\"cvjs_rotateforward_"+floorplan_div+"\" href=\"javascript:cvjs_rotateForward(\'"+floorplan_div+"\');\"></a><a class=\"cvjs_rotateback\" id=\"cvjs_rotateback_"+floorplan_div+"\" href=\"javascript:cvjs_rotateBackward(\'"+floorplan_div+"\');\"></a><a class=\"cvjs_fastback\" id=\"cvjs_fastback_"+floorplan_div+"\" href=\"javascript:cvjs_firstPage(\'"+floorplan_div+"\');\"></a><a class=\"cvjs_back\" id=\"cvjs_back_"+floorplan_div+"\" href=\"javascript:cvjs_previousPage(\'"+floorplan_div+"\');\"></a><a class=\"cvjs_enterpagenumber\" id=\"cvjs_enterpagenumber_"+floorplan_div+"\" href=\"javascript:cvjs_enterPageChangeNumber(\'"+floorplan_div+"\');\"></a><a class=\"cvjs_selectpagefromlist\" id=\"cvjs_selectpagefromlist_"+floorplan_div+"\" href=\"javascript:cvjs_selectPageFromList(\'"+floorplan_div+"\');\"></a><div id=\"floatpagemenuText_"+floorplan_div+"\">nr    page name</div><a class=\"cvjs_forward\" id=\"cvjs_forward_"+floorplan_div+"\" href=\"javascript:cvjs_nextPage(\'"+floorplan_div+"\');\"></a><a class=\"cvjs_fastforward\" id=\"cvjs_fastforward_"+floorplan_div+"\" href=\"javascript:cvjs_lastPage(\'"+floorplan_div+"\');\"></a></div>");
	
// 4.1.01b	
	jQuery("#cvjs_modals"+"_"+floorplan_div).append("<div id=\"floatCompareDrawingMenu_"+floorplan_div+"\" class=\"compareDrawingbox1\"><div class=\"compareDrawingbox1Text1\" id=\"compareDrawingMenuText1_"+floorplan_div+"\">xxxxxxx</div><div class=\"compareDrawingbox1Text2\" id=\"compareDrawingMenuText2_"+floorplan_div+"\"></div></div>");	
	jQuery("#floatCompareDrawingMenu"+"_"+floorplan_div).css({'z-index': 2 });
	jQuery("#floatCompareDrawingMenu"+"_"+floorplan_div).css({display: 'block'});
	jQuery("#floatCompareDrawingMenu"+"_"+floorplan_div).css({position: 'absolute'});
	jQuery("#floatCompareDrawingMenu"+"_"+floorplan_div).css({overflow: 'visible'});
	jQuery("#floatCompareDrawingMenu"+"_"+floorplan_div).draggable();
	jQuery("#floatCompareDrawingMenu"+"_"+floorplan_div).hide();	
	
	
	
	// file menu modals split into several append statements

//	var serverfileModalString = "<table><tr><td><div id=\"cvjs_serverFileLoadModal\" class=\"measurement_modal-body\" ><div class=\"modal-content\"><div class=\"modal-header\"><button type=\"button\" class=\"close\" data-dismiss=\"modal\" onClick=\"cvjs_exitServerFileLoadModal();\">&times;</button><table ><tr><td height=\"30px\"><a href=\"http://cadviewerjs.com\"><img src=\""+cvjs_imagesLocation+"logoJS.png\" width=\"30\" height=\"30\" alt=\"CADViewer JS Logo\" /></a></td><td><canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas></td><td><h4 class=\"modal-title\"></canvas><div id=\"serverFileModalName\">XXX</div></div></h4></td><td></td>       </tr></table>";

var serverfileModalString = "<table  class=\"cvjs_serverFileLoadModalTable\" id=\"cvjs_serverFileLoadModal_table\" ><tr><td><div id=\"cvjs_serverFileLoadModal\" class=\"measurement_modal-body\" ><div class=\"modal-content\"><div class=\"modal-header\"><button type=\"button\" class=\"close\" data-dismiss=\"modal\" onClick=\"cvjs_exitServerFileLoadModal();\">&times;</button><table><tr><td><a href=\"http://cadviewerjs.com\"><img src=\""+cvjs_imagesLocation+"logoJS.png\" width=\"30\" height=\"30\" alt=\"CADViewer JS Logo\" /></a></td><td><canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas></td><td><h4 class=\"modal-title\"><div id=\"serverFileModalName\">XXX</div></h4></td><td></td></tr></table></div>";

	serverfileModalString += "<div id=\"modalHeaderAdjustment\">x<div><div id=\"SelectFloorPlanPanel\"><div id=\"addFloorPlanTable\"><table id=\"\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td class=\"fb_12\"><img id=\"select_file\" src=\""+cvjs_imagesLocation+"tools/addFloorPlan.png\" border=\"0\" width=\"497\" height=\"29\" alt=\"Select File\" /><div style=\'height: 0px;width: 0px; overflow:hidden;\'><input id=\"cvjs_upfile\" type=\"file\" multiple value=\"Reset form\" onchange=\"cvjs_add_file_object('cvjs_upfile');\"/></div></td></tr><tr height=\"10\"><td height=\"10\"><img id=\"dummy2\" src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td height=\"10\"><img id=\"dummy2\" src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td></tr></table></div>";
//	serverfileModalString += "<div id=\"addRedlineTable\"><table id=\"select_save_changes\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" ><tr><td><img src=\""+cvjs_imagesLocation+"5x5.png\" border=\"1\" width=\"3\" height=\"3\" /></td><td class=\"select_tag_text_upload_redline\">"+lTable.languages[cvjs_currentLanguage].SaveRedlineModal.Upload+"</td><td><div id=\"inputRedlineFileName\">Name goes here</div></td><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"50\" height=\"10\" /></td><td><div ><div id=\"button2-no_upload_redline\"><img id=\"uploadredline_modal_cancel_image\" class=\"icon_img\" src=\""+cvjs_imagesLocation+"tools/Cancel_Inactive_4.png\" border=\"0\"></div></div></td><td><td><div style=\"width: 111px\" ><div id=\"button1-upload_redline\"><img id=\"uploadredline_modal_proceed_image\" class=\"icon_img\" src=\""+cvjs_imagesLocation+"tools/Proceed_111x28_Up.png\" border=\"0\"></div></div></td><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"30\" height=\"10\" /></td></tr><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"20\" /></td></tr></table></div>";
	serverfileModalString += "<div id=\"addRedlineTable\"><table id=\"select_save_changes\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" ><tr><td><img src=\""+cvjs_imagesLocation+"5x5.png\" border=\"1\" width=\"3\" height=\"3\" /></td><td class=\"select_tag_text_upload_redline\">"+lTable.languages[cvjs_currentLanguage].SaveRedlineModal.Upload+"</td><td><div id=\"inputRedlineFileName\">Name goes here</div></td><td><div id=\"button2-no_upload_redline\"><img id=\"uploadredline_modal_cancel_image\" class=\"icon_img\" src=\""+cvjs_imagesLocation+"tools/Cancel_Inactive_4.png\" border=\"0\"></div></td><td><td><div style=\"width: 111px\" ><div id=\"button1-upload_redline\"><img id=\"uploadredline_modal_proceed_image\" class=\"icon_img\" src=\""+cvjs_imagesLocation+"tools/Proceed_111x28_Up.png\" border=\"0\"></div></div></td><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"30\" height=\"10\" /></td></tr><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"20\" /></td></tr></table></div>";

	serverfileModalString += "<table id=\"filterByInfoTablex\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td class=\"fb_112\"><div id=\"cvjs_cvRoomTextLayersOnLoad\" class=\"select_tag_text_top\"></div></td></tr></table>";

	serverfileModalString += "<table id=\"filterByInfoTable\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td><img src=\""+cvjs_imagesLocation+"5x5.png\" border=\"1\" width=\"3\" height=\"3\" /></td><td class=\"fb_112\"><div id=\"infoFileModalNameDrawing\" class=\"select_tag_text_top\">DRAWING / FILENAME</div></td><td class=\"fb_3\"><div id=\"editing\" class=\"select_tag_text_blue\">Edit</div></td><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"7\" height=\"7\" /></td></tr></table><div class=\"horizontal_line\"></div>";

	serverfileModalString += "<div id=\"attention_bitmap\" ><table id=\"filterByTable_attention\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10y.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_11\"><div id=\"attention_1\" class=\"select_file_text_attention\">Attention</div></td><td class=\"fb_11\"><div style=\"float:right;margin-right:18px;margin-top:0px;\" id=\"CloseAttentionBitmap\"><img src=\""+cvjs_imagesLocation+"crossXy.png\" border=\"0\"></div></td></tr></table>";
	serverfileModalString += "<table id=\"filterByInfoTable_attention\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10y.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_1\"><div id=\"attention_2\" class=\"select_tag_text_attention\">For best results, use a vector drawing or a grayscale bitmap to ensure legibility.</div></td></tr><tr><td><img src=\""+cvjs_imagesLocation+"6x6y.png\" border=\"1\" width=\"6\" height=\"6\" /></td></tr></table><div class=\"horizontal_line_yellow\"></div></div>";
	serverfileModalString += "<div id=\"SelectFloorPlan\">";
	serverfileModalString += "<div id=\"1floor1\" ><table id=\"filterByTableFileInput\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_11\"><div id=\"1floor1_1\" class=\"select_file_text\">Floor Tag</div></td></tr></table><table id=\"filterByInfoTable\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\"/></td><td class=\"fb_1\"><div id=\"1floor1_2\" class=\"select_tag_text\">filename1.ext</div></td></tr></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"1floor2\" ><table id=\"filterByTableFileInput\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_11\"><div id=\"1floor2_1\" class=\"select_file_text\">Floor Tag</div></td></tr></table><table id=\"filterByInfoTable\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_1\"><div id=\"1floor2_2\" class=\"select_tag_text\">filename1.ext</div></td></tr></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"1floor3\" ><table id=\"filterByTableFileInput\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_11\"><div id=\"1floor3_1\" class=\"select_file_text\">Floor Tag</div></td></tr></table><table id=\"filterByInfoTable\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_1\"><div id=\"1floor3_2\" class=\"select_tag_text\">filename1.ext</div></td></tr></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"1floor4\" ><table id=\"filterByTableFileInput\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_11\"><div id=\"1floor4_1\" class=\"select_file_text\">Floor Tag</div></td></tr></table><table id=\"filterByInfoTable\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_1\"><div id=\"1floor4_2\" class=\"select_tag_text\">filename1.ext</div></td></tr></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"1floor5\" ><table id=\"filterByTableFileInput\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_11\"><div id=\"1floor5_1\" class=\"select_file_text\">Floor Tag</div></td></tr></table><table id=\"filterByInfoTable\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_1\"><div id=\"1floor5_2\" class=\"select_tag_text\">filename1.ext</div></td></tr></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"1floor6\" ><table id=\"filterByTableFileInput\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_11\"><div id=\"1floor6_1\" class=\"select_file_text\">Floor Tag</div></td></tr></table><table id=\"filterByInfoTable\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_1\"><div id=\"1floor6_2\" class=\"select_tag_text\">filename1.ext</div></td></tr></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"1floor7\" ><table id=\"filterByTableFileInput\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_11\"><div id=\"1floor7_1\" class=\"select_file_text\">Floor Tag</div></td></tr></table><table id=\"filterByInfoTable\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_1\"><div id=\"1floor7_2\" class=\"select_tag_text\">filename1.ext</div></td></tr></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"1floor8\" ><table id=\"filterByTableFileInput\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_11\"><div id=\"1floor8_1\" class=\"select_file_text\">Floor Tag</div></td></tr></table><table id=\"filterByInfoTable\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_1\"><div id=\"1floor8_2\" class=\"select_tag_text\">filename1.ext</div></td></tr></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"1floor9\" ><table id=\"filterByTableFileInput\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_11\"><div id=\"1floor9_1\" class=\"select_file_text\">Floor Tag</div></td></tr></table><table id=\"filterByInfoTable\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_1\"><div id=\"1floor9_2\" class=\"select_tag_text\">filename1.ext</div></td></tr></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"1floor10\" ><table id=\"filterByTableFileInput\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_11\"><div id=\"1floor10_1\" class=\"select_file_text\">Floor Tag</div></td></tr></table><table id=\"filterByInfoTable\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_1\"><div id=\"1floor10_2\" class=\"select_tag_text\">filename1.ext</div></td></tr></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"1floor11\" ><table id=\"filterByTableFileInput\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_11\"><div id=\"1floor11_1\" class=\"select_file_text\">Floor Tag</div></td></tr></table><table id=\"filterByInfoTable\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_1\"><div id=\"1floor11_2\" class=\"select_tag_text\">filename1.ext</div></td></tr></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"1floor12\" ><table id=\"filterByTableFileInput\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_11\"><div id=\"1floor12_1\" class=\"select_file_text\">Floor Tag</div></td></tr></table><table id=\"filterByInfoTable\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_1\"><div id=\"1floor12_2\" class=\"select_tag_text\">filename1.ext</div></td></tr></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"1floor13\" ><table id=\"filterByTableFileInput\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_11\"><div id=\"1floor13_1\" class=\"select_file_text\">Floor Tag</div></td></tr></table><table id=\"filterByInfoTable\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_1\"><div id=\"1floor13_2\" class=\"select_tag_text\">filename1.ext</div></td></tr></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"1floor14\" ><table id=\"filterByTableFileInput\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_11\"><div id=\"1floor14_1\" class=\"select_file_text\">Floor Tag</div></td></tr></table><table id=\"filterByInfoTable\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_1\"><div id=\"1floor14_2\" class=\"select_tag_text\">filename1.ext</div></td></tr></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"1floor15\" ><table id=\"filterByTableFileInput\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_11\"><div id=\"1floor15_1\" class=\"select_file_text\">Floor Tag</div></td></tr></table><table id=\"filterByInfoTable\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_1\"><div id=\"1floor15_2\" class=\"select_tag_text\">filename1.ext</div></td></tr></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"1floor16\" ><table id=\"filterByTableFileInput\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_11\"><div id=\"1floor16_1\" class=\"select_file_text\">Floor Tag</div></td></tr></table><table id=\"filterByInfoTable\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_1\"><div id=\"1floor16_2\" class=\"select_tag_text\">filename1.ext</div></td></tr></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"1floor17\" ><table id=\"filterByTableFileInput\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_11\"><div id=\"1floor17_1\" class=\"select_file_text\">Floor Tag</div></td></tr></table><table id=\"filterByInfoTable\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_1\"><div id=\"1floor17_2\" class=\"select_tag_text\">filename1.ext</div></td></tr></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"1floor18\" ><table id=\"filterByTableFileInput\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_11\"><div id=\"1floor18_1\" class=\"select_file_text\">Floor Tag</div></td></tr></table><table id=\"filterByInfoTable\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_1\"><div id=\"1floor18_2\" class=\"select_tag_text\">filename1.ext</div></td></tr></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"1floor19\" ><table id=\"filterByTableFileInput\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_11\"><div id=\"1floor19_1\" class=\"select_file_text\">Floor Tag</div></td></tr></table><table id=\"filterByInfoTable\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_1\"><div id=\"1floor19_2\" class=\"select_tag_text\">filename1.ext</div></td></tr></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"1floor20\" ><table id=\"filterByTableFileInput\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_11\"><div id=\"1floor20_1\" class=\"select_file_text\">Floor Tag</div></td></tr></table><table id=\"filterByInfoTable\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_1\"><div id=\"1floor20_2\" class=\"select_tag_text\">filename1.ext</div></td></tr></table><div class=\"horizontal_dotted_line\"></div></div>";


	serverfileModalString += "<div id=\"1floor21\" ><table id=\"filterByTableFileInput\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_11\"><div id=\"1floor21_1\" class=\"select_file_text\">Floor Tag</div></td></tr></table><table id=\"filterByInfoTable\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_1\"><div id=\"1floor21_2\" class=\"select_tag_text\">filename1.ext</div></td></tr></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"1floor22\" ><table id=\"filterByTableFileInput\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_11\"><div id=\"1floor22_1\" class=\"select_file_text\">Floor Tag</div></td></tr></table><table id=\"filterByInfoTable\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_1\"><div id=\"1floor22_2\" class=\"select_tag_text\">filename1.ext</div></td></tr></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"1floor23\" ><table id=\"filterByTableFileInput\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_11\"><div id=\"1floor23_1\" class=\"select_file_text\">Floor Tag</div></td></tr></table><table id=\"filterByInfoTable\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_1\"><div id=\"1floor23_2\" class=\"select_tag_text\">filename1.ext</div></td></tr></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"1floor24\" ><table id=\"filterByTableFileInput\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_11\"><div id=\"1floor24_1\" class=\"select_file_text\">Floor Tag</div></td></tr></table><table id=\"filterByInfoTable\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_1\"><div id=\"1floor24_2\" class=\"select_tag_text\">filename1.ext</div></td></tr></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"1floor25\" ><table id=\"filterByTableFileInput\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_11\"><div id=\"1floor25_1\" class=\"select_file_text\">Floor Tag</div></td></tr></table><table id=\"filterByInfoTable\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_1\"><div id=\"1floor25_2\" class=\"select_tag_text\">filename1.ext</div></td></tr></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"1floor26\" ><table id=\"filterByTableFileInput\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_11\"><div id=\"1floor26_1\" class=\"select_file_text\">Floor Tag</div></td></tr></table><table id=\"filterByInfoTable\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_1\"><div id=\"1floor26_2\" class=\"select_tag_text\">filename1.ext</div></td></tr></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"1floor27\" ><table id=\"filterByTableFileInput\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_11\"><div id=\"1floor27_1\" class=\"select_file_text\">Floor Tag</div></td></tr></table><table id=\"filterByInfoTable\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_1\"><div id=\"1floor27_2\" class=\"select_tag_text\">filename1.ext</div></td></tr></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"1floor28\" ><table id=\"filterByTableFileInput\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_11\"><div id=\"1floor28_1\" class=\"select_file_text\">Floor Tag</div></td></tr></table><table id=\"filterByInfoTable\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_1\"><div id=\"1floor28_2\" class=\"select_tag_text\">filename1.ext</div></td></tr></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"1floor29\" ><table id=\"filterByTableFileInput\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_11\"><div id=\"1floor29_1\" class=\"select_file_text\">Floor Tag</div></td></tr></table><table id=\"filterByInfoTable\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_1\"><div id=\"1floor29_2\" class=\"select_tag_text\">filename1.ext</div></td></tr></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"1floor30\" ><table id=\"filterByTableFileInput\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_11\"><div id=\"1floor30_1\" class=\"select_file_text\">Floor Tag</div></td></tr></table><table id=\"filterByInfoTable\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_1\"><div id=\"1floor30_2\" class=\"select_tag_text\">filename1.ext</div></td></tr></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"1floor31\" ><table id=\"filterByTableFileInput\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_11\"><div id=\"1floor31_1\" class=\"select_file_text\">Floor Tag</div></td></tr></table><table id=\"filterByInfoTable\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_1\"><div id=\"1floor31_2\" class=\"select_tag_text\">filename1.ext</div></td></tr></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"1floor32\" ><table id=\"filterByTableFileInput\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_11\"><div id=\"1floor32_1\" class=\"select_file_text\">Floor Tag</div></td></tr></table><table id=\"filterByInfoTable\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_1\"><div id=\"1floor32_2\" class=\"select_tag_text\">filename1.ext</div></td></tr></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"1floor33\" ><table id=\"filterByTableFileInput\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_11\"><div id=\"1floor33_1\" class=\"select_file_text\">Floor Tag</div></td></tr></table><table id=\"filterByInfoTable\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_1\"><div id=\"1floor33_2\" class=\"select_tag_text\">filename1.ext</div></td></tr></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"1floor34\" ><table id=\"filterByTableFileInput\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_11\"><div id=\"1floor34_1\" class=\"select_file_text\">Floor Tag</div></td></tr></table><table id=\"filterByInfoTable\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_1\"><div id=\"1floor34_2\" class=\"select_tag_text\">filename1.ext</div></td></tr></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"1floor35\" ><table id=\"filterByTableFileInput\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_11\"><div id=\"1floor35_1\" class=\"select_file_text\">Floor Tag</div></td></tr></table><table id=\"filterByInfoTable\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_1\"><div id=\"1floor35_2\" class=\"select_tag_text\">filename1.ext</div></td></tr></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"1floor36\" ><table id=\"filterByTableFileInput\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_11\"><div id=\"1floor36_1\" class=\"select_file_text\">Floor Tag</div></td></tr></table><table id=\"filterByInfoTable\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_1\"><div id=\"1floor36_2\" class=\"select_tag_text\">filename1.ext</div></td></tr></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"1floor37\" ><table id=\"filterByTableFileInput\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_11\"><div id=\"1floor37_1\" class=\"select_file_text\">Floor Tag</div></td></tr></table><table id=\"filterByInfoTable\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_1\"><div id=\"1floor37_2\" class=\"select_tag_text\">filename1.ext</div></td></tr></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"1floor38\" ><table id=\"filterByTableFileInput\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_11\"><div id=\"1floor38_1\" class=\"select_file_text\">Floor Tag</div></td></tr></table><table id=\"filterByInfoTable\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_1\"><div id=\"1floor38_2\" class=\"select_tag_text\">filename1.ext</div></td></tr></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"1floor39\" ><table id=\"filterByTableFileInput\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_11\"><div id=\"1floor39_1\" class=\"select_file_text\">Floor Tag</div></td></tr></table><table id=\"filterByInfoTable\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_1\"><div id=\"1floor39_2\" class=\"select_tag_text\">filename1.ext</div></td></tr></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"1floor40\" ><table id=\"filterByTableFileInput\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_11\"><div id=\"1floor40_1\" class=\"select_file_text\">Floor Tag</div></td></tr></table><table id=\"filterByInfoTable\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_1\"><div id=\"1floor30_2\" class=\"select_tag_text\">filename1.ext</div></td></tr></table><div class=\"horizontal_dotted_line\"></div></div>";

	
// 4.1.02j

	serverfileModalString += "<div id=\"1floor41\" ><table id=\"filterByTableFileInput\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_11\"><div id=\"1floor41_1\" class=\"select_file_text\">Floor Tag</div></td></tr></table><table id=\"filterByInfoTable\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_1\"><div id=\"1floor41_2\" class=\"select_tag_text\">filename1.ext</div></td></tr></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"1floor42\" ><table id=\"filterByTableFileInput\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_11\"><div id=\"1floor42_1\" class=\"select_file_text\">Floor Tag</div></td></tr></table><table id=\"filterByInfoTable\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_1\"><div id=\"1floor42_2\" class=\"select_tag_text\">filename1.ext</div></td></tr></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"1floor43\" ><table id=\"filterByTableFileInput\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_11\"><div id=\"1floor43_1\" class=\"select_file_text\">Floor Tag</div></td></tr></table><table id=\"filterByInfoTable\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_1\"><div id=\"1floor43_2\" class=\"select_tag_text\">filename1.ext</div></td></tr></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"1floor44\" ><table id=\"filterByTableFileInput\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_11\"><div id=\"1floor44_1\" class=\"select_file_text\">Floor Tag</div></td></tr></table><table id=\"filterByInfoTable\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_1\"><div id=\"1floor44_2\" class=\"select_tag_text\">filename1.ext</div></td></tr></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"1floor45\" ><table id=\"filterByTableFileInput\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_11\"><div id=\"1floor45_1\" class=\"select_file_text\">Floor Tag</div></td></tr></table><table id=\"filterByInfoTable\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_1\"><div id=\"1floor45_2\" class=\"select_tag_text\">filename1.ext</div></td></tr></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"1floor46\" ><table id=\"filterByTableFileInput\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_11\"><div id=\"1floor46_1\" class=\"select_file_text\">Floor Tag</div></td></tr></table><table id=\"filterByInfoTable\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_1\"><div id=\"1floor46_2\" class=\"select_tag_text\">filename1.ext</div></td></tr></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"1floor47\" ><table id=\"filterByTableFileInput\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_11\"><div id=\"1floor47_1\" class=\"select_file_text\">Floor Tag</div></td></tr></table><table id=\"filterByInfoTable\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_1\"><div id=\"1floor47_2\" class=\"select_tag_text\">filename1.ext</div></td></tr></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"1floor48\" ><table id=\"filterByTableFileInput\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_11\"><div id=\"1floor48_1\" class=\"select_file_text\">Floor Tag</div></td></tr></table><table id=\"filterByInfoTable\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_1\"><div id=\"1floor48_2\" class=\"select_tag_text\">filename1.ext</div></td></tr></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"1floor49\" ><table id=\"filterByTableFileInput\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_11\"><div id=\"1floor49_1\" class=\"select_file_text\">Floor Tag</div></td></tr></table><table id=\"filterByInfoTable\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_1\"><div id=\"1floor49_2\" class=\"select_tag_text\">filename1.ext</div></td></tr></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"1floor50\" ><table id=\"filterByTableFileInput\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_11\"><div id=\"1floor50_1\" class=\"select_file_text\">Floor Tag</div></td></tr></table><table id=\"filterByInfoTable\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_1\"><div id=\"1floor50_2\" class=\"select_tag_text\">filename1.ext</div></td></tr></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"1floor51\" ><table id=\"filterByTableFileInput\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_11\"><div id=\"1floor51_1\" class=\"select_file_text\">Floor Tag</div></td></tr></table><table id=\"filterByInfoTable\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_1\"><div id=\"1floor51_2\" class=\"select_tag_text\">filename1.ext</div></td></tr></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"1floor52\" ><table id=\"filterByTableFileInput\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_11\"><div id=\"1floor52_1\" class=\"select_file_text\">Floor Tag</div></td></tr></table><table id=\"filterByInfoTable\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_1\"><div id=\"1floor52_2\" class=\"select_tag_text\">filename1.ext</div></td></tr></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"1floor53\" ><table id=\"filterByTableFileInput\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_11\"><div id=\"1floor53_1\" class=\"select_file_text\">Floor Tag</div></td></tr></table><table id=\"filterByInfoTable\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_1\"><div id=\"1floor53_2\" class=\"select_tag_text\">filename1.ext</div></td></tr></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"1floor54\" ><table id=\"filterByTableFileInput\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_11\"><div id=\"1floor54_1\" class=\"select_file_text\">Floor Tag</div></td></tr></table><table id=\"filterByInfoTable\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_1\"><div id=\"1floor54_2\" class=\"select_tag_text\">filename1.ext</div></td></tr></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"1floor55\" ><table id=\"filterByTableFileInput\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_11\"><div id=\"1floor55_1\" class=\"select_file_text\">Floor Tag</div></td></tr></table><table id=\"filterByInfoTable\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_1\"><div id=\"1floor55_2\" class=\"select_tag_text\">filename1.ext</div></td></tr></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"1floor56\" ><table id=\"filterByTableFileInput\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_11\"><div id=\"1floor56_1\" class=\"select_file_text\">Floor Tag</div></td></tr></table><table id=\"filterByInfoTable\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_1\"><div id=\"1floor56_2\" class=\"select_tag_text\">filename1.ext</div></td></tr></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"1floor57\" ><table id=\"filterByTableFileInput\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_11\"><div id=\"1floor57_1\" class=\"select_file_text\">Floor Tag</div></td></tr></table><table id=\"filterByInfoTable\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_1\"><div id=\"1floor57_2\" class=\"select_tag_text\">filename1.ext</div></td></tr></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"1floor58\" ><table id=\"filterByTableFileInput\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_11\"><div id=\"1floor58_1\" class=\"select_file_text\">Floor Tag</div></td></tr></table><table id=\"filterByInfoTable\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_1\"><div id=\"1floor58_2\" class=\"select_tag_text\">filename1.ext</div></td></tr></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"1floor59\" ><table id=\"filterByTableFileInput\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_11\"><div id=\"1floor59_1\" class=\"select_file_text\">Floor Tag</div></td></tr></table><table id=\"filterByInfoTable\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_1\"><div id=\"1floor59_2\" class=\"select_tag_text\">filename1.ext</div></td></tr></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"1floor60\" ><table id=\"filterByTableFileInput\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_11\"><div id=\"1floor60_1\" class=\"select_file_text\">Floor Tag</div></td></tr></table><table id=\"filterByInfoTable\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td class=\"fb_1\"><div id=\"1floor60_2\" class=\"select_tag_text\">filename1.ext</div></td></tr></table><div class=\"horizontal_dotted_line\"></div></div>";
	
	
	serverfileModalString += "<br><br></div></div>";



//	serverfileModalString += "<div id=\"SelectFloorPlanPanelEdit\"><table id=\"filterByInfoTable\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td><img src=\""+cvjs_imagesLocation+"5x5.png\" border=\"1\" width=\"1\" height=\"3\" /></td><td class=\"fb_112\"><div id=\"editFloorPlanInfoText\" class=\"select_tag_text_top_big\">Edit Floor Plan Info</div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"0\" width=\"7\" height=\"7\" /></td></tr><tr><td><img src=\""+cvjs_imagesLocation+"5x5.png\" border=\"1\" width=\"5\" height=\"10\" /></td></tr></table>";
	serverfileModalString += "<div id=\"modalHeaderAdjustment\">x<div><div id=\"SelectFloorPlanPanelEdit\"><table id=\"filterByInfoTable\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td><img src=\""+cvjs_imagesLocation+"5x5.png\" border=\"1\" width=\"1\" height=\"3\" /></td><td class=\"fb_112\"><div id=\"editFloorPlanInfoText\" class=\"select_tag_text_top_big\">Edit Floor Plan Info</div></td></tr></table>";
	serverfileModalString += "<div id=\"modalHeaderAdjustment\">x<div><table id=\"filterByInfoTable\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td><img src=\""+cvjs_imagesLocation+"5x5.png\" border=\"1\" width=\"3\" height=\"3\" /></td><td class=\"fb_112\"><div id=\"infoFloorPlanInfoText\" class=\"select_tag_text_top\">DRAWING / FILENAME</div></td><td class=\"fb_3\"><div id=\"done_editing\" class=\"select_tag_text_blue\">Done Editing</div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"0\" width=\"7\" height=\"7\" /></td></tr></table><div class=\"horizontal_line\"></div>";

	// NOTE:  we rename id=sortable to id=xsortable, and sort out sorting later!!!   2017-01-12

	serverfileModalString += "<div id=\"xsortable\"><div id=\"SelectFloorPlanEdit\">";
//	serverfileModalString += "<div id=\"2floor1\"><table id=\"filterByTable2\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td style=\"padding-left:6px;cursor:ns-resize;\"><img src=\""+cvjs_imagesLocation+"tools/FlrPlanReorderGrip2.png\" border=\"1\" width=\"27\" height=\"44\" /></td><td class=\"fb_112\"><div id=\"2floor1_1\" class=\"select_file_text_2a\">Floor Tag</div><div id=\"2floor1_4\" class=\"display_tag_text2\">filename1.ext</div></td><td class=\"fb_22\"><div id=\"2floor1_2\" class=\"rename_tag_text_blue1\">Rename</div></td><td><img src=\""+cvjs_imagesLocation+"blueDot.png\" border=\"0\" width=\"12\" height=\"17\" /></td><td class=\"fb_22_2\"><div id=\"2floor1_2_2\" class=\"unlink_tag_text_blue1\">Unlink</div></td><td><img src=\""+cvjs_imagesLocation+"blueDot.png\" border=\"0\" width=\"12\" height=\"17\" /></td><td class=\"fb_22_3\"><div id=\"2floor1_2_3\" class=\"clear_tag_text_blue1\">Clear</div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td><td><img src=\""+cvjs_imagesLocation+"5x5.png\" border=\"1\" width=\"3\" height=\"3\" /></td><td><div id=\"2floor1_3\" class=\"delete_tag_image\"><img id=\"2floor1_3_image\" src=\""+cvjs_imagesLocation+"tools/Trash_2.png\" border=\"0\" width=\"14\" height=\"17\"></div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"2floor1\"><table id=\"filterByTable2\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td style=\"padding-left:6px;cursor:ns-resize;\"><img src=\""+cvjs_imagesLocation+"tools/FlrPlanReorderGrip2.png\" border=\"1\" width=\"27\" height=\"44\" /></td><td class=\"fb_112\"><div id=\"2floor1_1\" class=\"select_file_text_2a\">Floor Tag</div><div id=\"2floor1_4\" class=\"display_tag_text2\">filename1.ext</div></td><td class=\"fb_22\"><div id=\"2floor1_2\" class=\"rename_tag_text_blue1\">Rename</div></td><td><img src=\""+cvjs_imagesLocation+"blueDot.png\" border=\"0\" width=\"12\" height=\"17\" /></td><td class=\"fb_22_2\"><div id=\"2floor1_2_2\" class=\"unlink_tag_text_blue1\">Unlink</div></td><td><img src=\""+cvjs_imagesLocation+"blueDot.png\" border=\"0\" width=\"12\" height=\"17\" /></td><td class=\"fb_22_3\"><div id=\"2floor1_2_3\" class=\"clear_tag_text_blue1\">Clear</div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td><td><img src=\""+cvjs_imagesLocation+"5x5.png\" border=\"1\" width=\"3\" height=\"3\" /></td><td><div id=\"2floor1_3\" class=\"delete_tag_image\"><img id=\"2floor2_3_image\" src=\""+cvjs_imagesLocation+"tools/Trash_2.png\" border=\"0\" width=\"14\" height=\"17\"></div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"2floor2\"><table id=\"filterByTable2\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td style=\"padding-left:6px;cursor:ns-resize;\"><img src=\""+cvjs_imagesLocation+"tools/FlrPlanReorderGrip2.png\" border=\"1\" width=\"27\" height=\"44\" /></td><td class=\"fb_112\"><div id=\"2floor2_1\" class=\"select_file_text_2a\">Floor Tag</div><div id=\"2floor2_4\" class=\"display_tag_text2\">filename1.ext</div></td><td class=\"fb_22\"><div id=\"2floor2_2\" class=\"rename_tag_text_blue1\">Rename</div></td><td><img src=\""+cvjs_imagesLocation+"blueDot.png\" border=\"0\" width=\"12\" height=\"17\" /></td><td class=\"fb_22_2\"><div id=\"2floor2_2_2\" class=\"unlink_tag_text_blue1\">Unlink</div></td><td><img src=\""+cvjs_imagesLocation+"blueDot.png\" border=\"0\" width=\"12\" height=\"17\" /></td><td class=\"fb_22_3\"><div id=\"2floor2_2_3\" class=\"clear_tag_text_blue1\">Clear</div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td><td><img src=\""+cvjs_imagesLocation+"5x5.png\" border=\"1\" width=\"3\" height=\"3\" /></td><td><div id=\"2floor2_3\" class=\"delete_tag_image\"><img id=\"2floor2_3_image\" src=\""+cvjs_imagesLocation+"tools/Trash_2.png\" border=\"0\" width=\"14\" height=\"17\"></div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"2floor3\"><table id=\"filterByTable2\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td style=\"padding-left:6px;cursor:ns-resize;\"><img src=\""+cvjs_imagesLocation+"tools/FlrPlanReorderGrip2.png\" border=\"1\" width=\"27\" height=\"44\" /></td><td class=\"fb_112\"><div id=\"2floor3_1\" class=\"select_file_text_2a\">Floor Tag</div><div id=\"2floor3_4\" class=\"display_tag_text2\">filename1.ext</div></td><td class=\"fb_22\"><div id=\"2floor3_2\" class=\"rename_tag_text_blue1\">Rename</div></td><td><img src=\""+cvjs_imagesLocation+"blueDot.png\" border=\"0\" width=\"12\" height=\"17\" /></td><td class=\"fb_22_2\"><div id=\"2floor3_2_2\" class=\"unlink_tag_text_blue1\">Unlink</div></td><td><img src=\""+cvjs_imagesLocation+"blueDot.png\" border=\"0\" width=\"12\" height=\"17\" /></td><td class=\"fb_22_3\"><div id=\"2floor3_2_3\" class=\"clear_tag_text_blue1\">Clear</div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td><td><img src=\""+cvjs_imagesLocation+"5x5.png\" border=\"1\" width=\"3\" height=\"3\" /></td><td><div id=\"2floor3_3\" class=\"delete_tag_image\"><img id=\"2floor3_3_image\" src=\""+cvjs_imagesLocation+"tools/Trash_2.png\" border=\"0\" width=\"14\" height=\"17\"></div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"2floor4\"><table id=\"filterByTable2\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td style=\"padding-left:6px;cursor:ns-resize;\"><img src=\""+cvjs_imagesLocation+"tools/FlrPlanReorderGrip2.png\" border=\"1\" width=\"27\" height=\"44\" /></td><td class=\"fb_112\"><div id=\"2floor4_1\" class=\"select_file_text_2a\">Floor Tag</div><div id=\"2floor4_4\" class=\"display_tag_text2\">filename1.ext</div></td><td class=\"fb_22\"><div id=\"2floor4_2\" class=\"rename_tag_text_blue1\">Rename</div></td><td><img src=\""+cvjs_imagesLocation+"blueDot.png\" border=\"0\" width=\"12\" height=\"17\" /></td><td class=\"fb_22_2\"><div id=\"2floor4_2_2\" class=\"unlink_tag_text_blue1\">Unlink</div></td><td><img src=\""+cvjs_imagesLocation+"blueDot.png\" border=\"0\" width=\"12\" height=\"17\" /></td><td class=\"fb_22_3\"><div id=\"2floor4_2_3\" class=\"clear_tag_text_blue1\">Clear</div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td><td><img src=\""+cvjs_imagesLocation+"5x5.png\" border=\"1\" width=\"3\" height=\"3\" /></td><td><div id=\"2floor4_3\" class=\"delete_tag_image\"><img id=\"2floor4_3_image\" src=\""+cvjs_imagesLocation+"tools/Trash_2.png\" border=\"0\" width=\"14\" height=\"17\"></div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"2floor5\"><table id=\"filterByTable2\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td style=\"padding-left:6px;cursor:ns-resize;\"><img src=\""+cvjs_imagesLocation+"tools/FlrPlanReorderGrip2.png\" border=\"1\" width=\"27\" height=\"44\" /></td><td class=\"fb_112\"><div id=\"2floor5_1\" class=\"select_file_text_2a\">Floor Tag</div><div id=\"2floor5_4\" class=\"display_tag_text2\">filename1.ext</div></td><td class=\"fb_22\"><div id=\"2floor5_2\" class=\"rename_tag_text_blue1\">Rename</div></td><td><img src=\""+cvjs_imagesLocation+"blueDot.png\" border=\"0\" width=\"12\" height=\"17\" /></td><td class=\"fb_22_2\"><div id=\"2floor5_2_2\" class=\"unlink_tag_text_blue1\">Unlink</div></td><td><img src=\""+cvjs_imagesLocation+"blueDot.png\" border=\"0\" width=\"12\" height=\"17\" /></td><td class=\"fb_22_3\"><div id=\"2floor5_2_3\" class=\"clear_tag_text_blue1\">Clear</div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td><td><img src=\""+cvjs_imagesLocation+"5x5.png\" border=\"1\" width=\"3\" height=\"3\" /></td><td><div id=\"2floor5_3\" class=\"delete_tag_image\"><img id=\"2floor5_3_image\" src=\""+cvjs_imagesLocation+"tools/Trash_2.png\" border=\"0\" width=\"14\" height=\"17\"></div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"2floor6\"><table id=\"filterByTable2\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td style=\"padding-left:6px;cursor:ns-resize;\"><img src=\""+cvjs_imagesLocation+"tools/FlrPlanReorderGrip2.png\" border=\"1\" width=\"27\" height=\"44\" /></td><td class=\"fb_112\"><div id=\"2floor6_1\" class=\"select_file_text_2a\">Floor Tag</div><div id=\"2floor6_4\" class=\"display_tag_text2\">filename1.ext</div></td><td class=\"fb_22\"><div id=\"2floor6_2\" class=\"rename_tag_text_blue1\">Rename</div></td><td><img src=\""+cvjs_imagesLocation+"blueDot.png\" border=\"0\" width=\"12\" height=\"17\" /></td><td class=\"fb_22_2\"><div id=\"2floor6_2_2\" class=\"unlink_tag_text_blue1\">Unlink</div></td><td><img src=\""+cvjs_imagesLocation+"blueDot.png\" border=\"0\" width=\"12\" height=\"17\" /></td><td class=\"fb_22_3\"><div id=\"2floor6_2_3\" class=\"clear_tag_text_blue1\">Clear</div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td><td><img src=\""+cvjs_imagesLocation+"5x5.png\" border=\"1\" width=\"3\" height=\"3\" /></td><td><div id=\"2floor6_3\" class=\"delete_tag_image\"><img id=\"2floor6_3_image\" src=\""+cvjs_imagesLocation+"tools/Trash_2.png\" border=\"0\" width=\"14\" height=\"17\"></div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"2floor7\"><table id=\"filterByTable2\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td style=\"padding-left:6px;cursor:ns-resize;\"><img src=\""+cvjs_imagesLocation+"tools/FlrPlanReorderGrip2.png\" border=\"1\" width=\"27\" height=\"44\" /></td><td class=\"fb_112\"><div id=\"2floor7_1\" class=\"select_file_text_2a\">Floor Tag</div><div id=\"2floor7_4\" class=\"display_tag_text2\">filename1.ext</div></td><td class=\"fb_22\"><div id=\"2floor7_2\" class=\"rename_tag_text_blue1\">Rename</div></td><td><img src=\""+cvjs_imagesLocation+"blueDot.png\" border=\"0\" width=\"12\" height=\"17\" /></td><td class=\"fb_22_2\"><div id=\"2floor7_2_2\" class=\"unlink_tag_text_blue1\">Unlink</div></td><td><img src=\""+cvjs_imagesLocation+"blueDot.png\" border=\"0\" width=\"12\" height=\"17\" /></td><td class=\"fb_22_3\"><div id=\"2floor7_2_3\" class=\"clear_tag_text_blue1\">Clear</div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td><td><img src=\""+cvjs_imagesLocation+"5x5.png\" border=\"1\" width=\"3\" height=\"3\" /></td><td><div id=\"2floor7_3\" class=\"delete_tag_image\"><img id=\"2floor7_3_image\" src=\""+cvjs_imagesLocation+"tools/Trash_2.png\" border=\"0\" width=\"14\" height=\"17\"></div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"2floor8\"><table id=\"filterByTable2\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td style=\"padding-left:6px;cursor:ns-resize;\"><img src=\""+cvjs_imagesLocation+"tools/FlrPlanReorderGrip2.png\" border=\"1\" width=\"27\" height=\"44\" /></td><td class=\"fb_112\"><div id=\"2floor8_1\" class=\"select_file_text_2a\">Floor Tag</div><div id=\"2floor8_4\" class=\"display_tag_text2\">filename1.ext</div></td><td class=\"fb_22\"><div id=\"2floor8_2\" class=\"rename_tag_text_blue1\">Rename</div></td><td><img src=\""+cvjs_imagesLocation+"blueDot.png\" border=\"0\" width=\"12\" height=\"17\" /></td><td class=\"fb_22_2\"><div id=\"2floor8_2_2\" class=\"unlink_tag_text_blue1\">Unlink</div></td><td><img src=\""+cvjs_imagesLocation+"blueDot.png\" border=\"0\" width=\"12\" height=\"17\" /></td><td class=\"fb_22_3\"><div id=\"2floor8_2_3\" class=\"clear_tag_text_blue1\">Clear</div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td><td><img src=\""+cvjs_imagesLocation+"5x5.png\" border=\"1\" width=\"3\" height=\"3\" /></td><td><div id=\"2floor8_3\" class=\"delete_tag_image\"><img id=\"2floor8_3_image\" src=\""+cvjs_imagesLocation+"tools/Trash_2.png\" border=\"0\" width=\"14\" height=\"17\"></div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"2floor9\"><table id=\"filterByTable2\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td style=\"padding-left:6px;cursor:ns-resize;\"><img src=\""+cvjs_imagesLocation+"tools/FlrPlanReorderGrip2.png\" border=\"1\" width=\"27\" height=\"44\" /></td><td class=\"fb_112\"><div id=\"2floor9_1\" class=\"select_file_text_2a\">Floor Tag</div><div id=\"2floor9_4\" class=\"display_tag_text2\">filename1.ext</div></td><td class=\"fb_22\"><div id=\"2floor9_2\" class=\"rename_tag_text_blue1\">Rename</div></td><td><img src=\""+cvjs_imagesLocation+"blueDot.png\" border=\"0\" width=\"12\" height=\"17\" /></td><td class=\"fb_22_2\"><div id=\"2floor9_2_2\" class=\"unlink_tag_text_blue1\">Unlink</div></td><td><img src=\""+cvjs_imagesLocation+"blueDot.png\" border=\"0\" width=\"12\" height=\"17\" /></td><td class=\"fb_22_3\"><div id=\"2floor9_2_3\" class=\"clear_tag_text_blue1\">Clear</div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td><td><img src=\""+cvjs_imagesLocation+"5x5.png\" border=\"1\" width=\"3\" height=\"3\" /></td><td><div id=\"2floor9_3\" class=\"delete_tag_image\"><img id=\"2floor9_3_image\" src=\""+cvjs_imagesLocation+"tools/Trash_2.png\" border=\"0\" width=\"14\" height=\"17\"></div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"2floor10\"><table id=\"filterByTable2\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td style=\"padding-left:6px;cursor:ns-resize;\"><img src=\""+cvjs_imagesLocation+"tools/FlrPlanReorderGrip2.png\" border=\"1\" width=\"27\" height=\"44\" /></td><td class=\"fb_112\"><div id=\"2floor10_1\" class=\"select_file_text_2a\">Floor Tag</div><div id=\"2floor10_4\" class=\"display_tag_text2\">filename1.ext</div></td><td class=\"fb_22\"><div id=\"2floor10_2\" class=\"rename_tag_text_blue1\">Rename</div></td><td><img src=\""+cvjs_imagesLocation+"blueDot.png\" border=\"0\" width=\"12\" height=\"17\" /></td><td class=\"fb_22_2\"><div id=\"2floor10_2_2\" class=\"unlink_tag_text_blue1\">Unlink</div></td><td><img src=\""+cvjs_imagesLocation+"blueDot.png\" border=\"0\" width=\"12\" height=\"17\" /></td><td class=\"fb_22_3\"><div id=\"2floor10_2_3\" class=\"clear_tag_text_blue1\">Clear</div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td><td><img src=\""+cvjs_imagesLocation+"5x5.png\" border=\"1\" width=\"3\" height=\"3\" /></td><td><div id=\"2floor10_3\" class=\"delete_tag_image\"><img id=\"2floor10_3_image\" src=\""+cvjs_imagesLocation+"tools/Trash_2.png\" border=\"0\" width=\"14\" height=\"17\"></div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"2floor11\"><table id=\"filterByTable2\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td style=\"padding-left:6px;cursor:ns-resize;\"><img src=\""+cvjs_imagesLocation+"tools/FlrPlanReorderGrip2.png\" border=\"1\" width=\"27\" height=\"44\" /></td><td class=\"fb_112\"><div id=\"2floor11_1\" class=\"select_file_text_2a\">Floor Tag</div><div id=\"2floor11_4\" class=\"display_tag_text2\">filename1.ext</div></td><td class=\"fb_22\"><div id=\"2floor11_2\" class=\"rename_tag_text_blue1\">Rename</div></td><td><img src=\""+cvjs_imagesLocation+"blueDot.png\" border=\"0\" width=\"12\" height=\"17\" /></td><td class=\"fb_22_2\"><div id=\"2floor11_2_2\" class=\"unlink_tag_text_blue1\">Unlink</div></td><td><img src=\""+cvjs_imagesLocation+"blueDot.png\" border=\"0\" width=\"12\" height=\"17\" /></td><td class=\"fb_22_3\"><div id=\"2floor11_2_3\" class=\"clear_tag_text_blue1\">Clear</div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td><td><img src=\""+cvjs_imagesLocation+"5x5.png\" border=\"1\" width=\"3\" height=\"3\" /></td><td><div id=\"2floor11_3\" class=\"delete_tag_image\"><img id=\"2floor11_3_image\" src=\""+cvjs_imagesLocation+"tools/Trash_2.png\" border=\"0\" width=\"14\" height=\"17\"></div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"2floor12\"><table id=\"filterByTable2\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td style=\"padding-left:6px;cursor:ns-resize;\"><img src=\""+cvjs_imagesLocation+"tools/FlrPlanReorderGrip2.png\" border=\"1\" width=\"27\" height=\"44\" /></td><td class=\"fb_112\"><div id=\"2floor12_1\" class=\"select_file_text_2a\">Floor Tag</div><div id=\"2floor12_4\" class=\"display_tag_text2\">filename1.ext</div></td><td class=\"fb_22\"><div id=\"2floor12_2\" class=\"rename_tag_text_blue1\">Rename</div></td><td><img src=\""+cvjs_imagesLocation+"blueDot.png\" border=\"0\" width=\"12\" height=\"17\" /></td><td class=\"fb_22_2\"><div id=\"2floor12_2_2\" class=\"unlink_tag_text_blue1\">Unlink</div></td><td><img src=\""+cvjs_imagesLocation+"blueDot.png\" border=\"0\" width=\"12\" height=\"17\" /></td><td class=\"fb_22_3\"><div id=\"2floor12_2_3\" class=\"clear_tag_text_blue1\">Clear</div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td><td><img src=\""+cvjs_imagesLocation+"5x5.png\" border=\"1\" width=\"3\" height=\"3\" /></td><td><div id=\"2floor12_3\" class=\"delete_tag_image\"><img id=\"2floor12_3_image\" src=\""+cvjs_imagesLocation+"tools/Trash_2.png\" border=\"0\" width=\"14\" height=\"17\"></div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"2floor13\"><table id=\"filterByTable2\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td style=\"padding-left:6px;cursor:ns-resize;\"><img src=\""+cvjs_imagesLocation+"tools/FlrPlanReorderGrip2.png\" border=\"1\" width=\"27\" height=\"44\" /></td><td class=\"fb_112\"><div id=\"2floor13_1\" class=\"select_file_text_2a\">Floor Tag</div><div id=\"2floor13_4\" class=\"display_tag_text2\">filename1.ext</div></td><td class=\"fb_22\"><div id=\"2floor13_2\" class=\"rename_tag_text_blue1\">Rename</div></td><td><img src=\""+cvjs_imagesLocation+"blueDot.png\" border=\"0\" width=\"12\" height=\"17\" /></td><td class=\"fb_22_2\"><div id=\"2floor13_2_2\" class=\"unlink_tag_text_blue1\">Unlink</div></td><td><img src=\""+cvjs_imagesLocation+"blueDot.png\" border=\"0\" width=\"12\" height=\"17\" /></td><td class=\"fb_22_3\"><div id=\"2floor13_2_3\" class=\"clear_tag_text_blue1\">Clear</div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td><td><img src=\""+cvjs_imagesLocation+"5x5.png\" border=\"1\" width=\"3\" height=\"3\" /></td><td><div id=\"2floor13_3\" class=\"delete_tag_image\"><img id=\"2floor13_3_image\" src=\""+cvjs_imagesLocation+"tools/Trash_2.png\" border=\"0\" width=\"14\" height=\"17\"></div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"2floor14\"><table id=\"filterByTable2\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td style=\"padding-left:6px;cursor:ns-resize;\"><img src=\""+cvjs_imagesLocation+"tools/FlrPlanReorderGrip2.png\" border=\"1\" width=\"27\" height=\"44\" /></td><td class=\"fb_112\"><div id=\"2floor14_1\" class=\"select_file_text_2a\">Floor Tag</div><div id=\"2floor14_4\" class=\"display_tag_text2\">filename1.ext</div></td><td class=\"fb_22\"><div id=\"2floor14_2\" class=\"rename_tag_text_blue1\">Rename</div></td><td><img src=\""+cvjs_imagesLocation+"blueDot.png\" border=\"0\" width=\"12\" height=\"17\" /></td><td class=\"fb_22_2\"><div id=\"2floor14_2_2\" class=\"unlink_tag_text_blue1\">Unlink</div></td><td><img src=\""+cvjs_imagesLocation+"blueDot.png\" border=\"0\" width=\"12\" height=\"17\" /></td><td class=\"fb_22_3\"><div id=\"2floor14_2_3\" class=\"clear_tag_text_blue1\">Clear</div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td><td><img src=\""+cvjs_imagesLocation+"5x5.png\" border=\"1\" width=\"3\" height=\"3\" /></td><td><div id=\"2floor14_3\" class=\"delete_tag_image\"><img id=\"2floor14_3_image\" src=\""+cvjs_imagesLocation+"tools/Trash_2.png\" border=\"0\" width=\"14\" height=\"17\"></div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"2floor15\"><table id=\"filterByTable2\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td style=\"padding-left:6px;cursor:ns-resize;\"><img src=\""+cvjs_imagesLocation+"tools/FlrPlanReorderGrip2.png\" border=\"1\" width=\"27\" height=\"44\" /></td><td class=\"fb_112\"><div id=\"2floor15_1\" class=\"select_file_text_2a\">Floor Tag</div><div id=\"2floor15_4\" class=\"display_tag_text2\">filename1.ext</div></td><td class=\"fb_22\"><div id=\"2floor15_2\" class=\"rename_tag_text_blue1\">Rename</div></td><td><img src=\""+cvjs_imagesLocation+"blueDot.png\" border=\"0\" width=\"12\" height=\"17\" /></td><td class=\"fb_22_2\"><div id=\"2floor15_2_2\" class=\"unlink_tag_text_blue1\">Unlink</div></td><td><img src=\""+cvjs_imagesLocation+"blueDot.png\" border=\"0\" width=\"12\" height=\"17\" /></td><td class=\"fb_22_3\"><div id=\"2floor15_2_3\" class=\"clear_tag_text_blue1\">Clear</div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td><td><img src=\""+cvjs_imagesLocation+"5x5.png\" border=\"1\" width=\"3\" height=\"3\" /></td><td><div id=\"2floor15_3\" class=\"delete_tag_image\"><img id=\"2floor15_3_image\" src=\""+cvjs_imagesLocation+"tools/Trash_2.png\" border=\"0\" width=\"14\" height=\"17\"></div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"2floor16\"><table id=\"filterByTable2\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td style=\"padding-left:6px;cursor:ns-resize;\"><img src=\""+cvjs_imagesLocation+"tools/FlrPlanReorderGrip2.png\" border=\"1\" width=\"27\" height=\"44\" /></td><td class=\"fb_112\"><div id=\"2floor16_1\" class=\"select_file_text_2a\">Floor Tag</div><div id=\"2floor16_4\" class=\"display_tag_text2\">filename1.ext</div></td><td class=\"fb_22\"><div id=\"2floor16_2\" class=\"rename_tag_text_blue1\">Rename</div></td><td><img src=\""+cvjs_imagesLocation+"blueDot.png\" border=\"0\" width=\"12\" height=\"17\" /></td><td class=\"fb_22_2\"><div id=\"2floor16_2_2\" class=\"unlink_tag_text_blue1\">Unlink</div></td><td><img src=\""+cvjs_imagesLocation+"blueDot.png\" border=\"0\" width=\"12\" height=\"17\" /></td><td class=\"fb_22_3\"><div id=\"2floor16_2_3\" class=\"clear_tag_text_blue1\">Clear</div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td><td><img src=\""+cvjs_imagesLocation+"5x5.png\" border=\"1\" width=\"3\" height=\"3\" /></td><td><div id=\"2floor16_3\" class=\"delete_tag_image\"><img id=\"2floor16_3_image\" src=\""+cvjs_imagesLocation+"tools/Trash_2.png\" border=\"0\" width=\"14\" height=\"17\"></div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"2floor17\"><table id=\"filterByTable2\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td style=\"padding-left:6px;cursor:ns-resize;\"><img src=\""+cvjs_imagesLocation+"tools/FlrPlanReorderGrip2.png\" border=\"1\" width=\"27\" height=\"44\" /></td><td class=\"fb_112\"><div id=\"2floor17_1\" class=\"select_file_text_2a\">Floor Tag</div><div id=\"2floor17_4\" class=\"display_tag_text2\">filename1.ext</div></td><td class=\"fb_22\"><div id=\"2floor17_2\" class=\"rename_tag_text_blue1\">Rename</div></td><td><img src=\""+cvjs_imagesLocation+"blueDot.png\" border=\"0\" width=\"12\" height=\"17\" /></td><td class=\"fb_22_2\"><div id=\"2floor17_2_2\" class=\"unlink_tag_text_blue1\">Unlink</div></td><td><img src=\""+cvjs_imagesLocation+"blueDot.png\" border=\"0\" width=\"12\" height=\"17\" /></td><td class=\"fb_22_3\"><div id=\"2floor17_2_3\" class=\"clear_tag_text_blue1\">Clear</div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td><td><img src=\""+cvjs_imagesLocation+"5x5.png\" border=\"1\" width=\"3\" height=\"3\" /></td><td><div id=\"2floor17_3\" class=\"delete_tag_image\"><img id=\"2floor17_3_image\" src=\""+cvjs_imagesLocation+"tools/Trash_2.png\" border=\"0\" width=\"14\" height=\"17\"></div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"2floor18\"><table id=\"filterByTable2\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td style=\"padding-left:6px;cursor:ns-resize;\"><img src=\""+cvjs_imagesLocation+"tools/FlrPlanReorderGrip2.png\" border=\"1\" width=\"27\" height=\"44\" /></td><td class=\"fb_112\"><div id=\"2floor18_1\" class=\"select_file_text_2a\">Floor Tag</div><div id=\"2floor18_4\" class=\"display_tag_text2\">filename1.ext</div></td><td class=\"fb_22\"><div id=\"2floor18_2\" class=\"rename_tag_text_blue1\">Rename</div></td><td><img src=\""+cvjs_imagesLocation+"blueDot.png\" border=\"0\" width=\"12\" height=\"17\" /></td><td class=\"fb_22_2\"><div id=\"2floor18_2_2\" class=\"unlink_tag_text_blue1\">Unlink</div></td><td><img src=\""+cvjs_imagesLocation+"blueDot.png\" border=\"0\" width=\"12\" height=\"17\" /></td><td class=\"fb_22_3\"><div id=\"2floor18_2_3\" class=\"clear_tag_text_blue1\">Clear</div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td><td><img src=\""+cvjs_imagesLocation+"5x5.png\" border=\"1\" width=\"3\" height=\"3\" /></td><td><div id=\"2floor18_3\" class=\"delete_tag_image\"><img id=\"2floor18_3_image\" src=\""+cvjs_imagesLocation+"tools/Trash_2.png\" border=\"0\" width=\"14\" height=\"17\"></div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"2floor19\"><table id=\"filterByTable2\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td style=\"padding-left:6px;cursor:ns-resize;\"><img src=\""+cvjs_imagesLocation+"tools/FlrPlanReorderGrip2.png\" border=\"1\" width=\"27\" height=\"44\" /></td><td class=\"fb_112\"><div id=\"2floor19_1\" class=\"select_file_text_2a\">Floor Tag</div><div id=\"2floor19_4\" class=\"display_tag_text2\">filename1.ext</div></td><td class=\"fb_22\"><div id=\"2floor19_2\" class=\"rename_tag_text_blue1\">Rename</div></td><td><img src=\""+cvjs_imagesLocation+"blueDot.png\" border=\"0\" width=\"12\" height=\"17\" /></td><td class=\"fb_22_2\"><div id=\"2floor19_2_2\" class=\"unlink_tag_text_blue1\">Unlink</div></td><td><img src=\""+cvjs_imagesLocation+"blueDot.png\" border=\"0\" width=\"12\" height=\"17\" /></td><td class=\"fb_22_3\"><div id=\"2floor19_2_3\" class=\"clear_tag_text_blue1\">Clear</div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td><td><img src=\""+cvjs_imagesLocation+"5x5.png\" border=\"1\" width=\"3\" height=\"3\" /></td><td><div id=\"2floor19_3\" class=\"delete_tag_image\"><img id=\"2floor19_3_image\" src=\""+cvjs_imagesLocation+"tools/Trash_2.png\" border=\"0\" width=\"14\" height=\"17\"></div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"2floor20\"><table id=\"filterByTable2\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td style=\"padding-left:6px;cursor:ns-resize;\"><img src=\""+cvjs_imagesLocation+"tools/FlrPlanReorderGrip2.png\" border=\"1\" width=\"27\" height=\"44\" /></td><td class=\"fb_112\"><div id=\"2floor20_1\" class=\"select_file_text_2a\">Floor Tag</div><div id=\"2floor20_4\" class=\"display_tag_text2\">filename1.ext</div></td><td class=\"fb_22\"><div id=\"2floor20_2\" class=\"rename_tag_text_blue1\">Rename</div></td><td><img src=\""+cvjs_imagesLocation+"blueDot.png\" border=\"0\" width=\"12\" height=\"17\" /></td><td class=\"fb_22_2\"><div id=\"2floor20_2_2\" class=\"unlink_tag_text_blue1\">Unlink</div></td><td><img src=\""+cvjs_imagesLocation+"blueDot.png\" border=\"0\" width=\"12\" height=\"17\" /></td><td class=\"fb_22_3\"><div id=\"2floor20_2_3\" class=\"clear_tag_text_blue1\">Clear</div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td><td><img src=\""+cvjs_imagesLocation+"5x5.png\" border=\"1\" width=\"3\" height=\"3\" /></td><td><div id=\"2floor20_3\" class=\"delete_tag_image\"><img id=\"2floor20_3_image\" src=\""+cvjs_imagesLocation+"tools/Trash_2.png\" border=\"0\" width=\"14\" height=\"17\"></div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td></table><div class=\"horizontal_dotted_line\"></div></div>";

	serverfileModalString += "<div id=\"2floor21\"><table id=\"filterByTable2\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td style=\"padding-left:6px;cursor:ns-resize;\"><img src=\""+cvjs_imagesLocation+"tools/FlrPlanReorderGrip2.png\" border=\"1\" width=\"27\" height=\"44\" /></td><td class=\"fb_112\"><div id=\"2floor21_1\" class=\"select_file_text_2a\">Floor Tag</div><div id=\"2floor21_4\" class=\"display_tag_text2\">filename1.ext</div></td><td class=\"fb_22\"><div id=\"2floor21_2\" class=\"rename_tag_text_blue1\">Rename</div></td><td><img src=\""+cvjs_imagesLocation+"blueDot.png\" border=\"0\" width=\"12\" height=\"17\" /></td><td class=\"fb_22_2\"><div id=\"2floor21_2_2\" class=\"unlink_tag_text_blue1\">Unlink</div></td><td><img src=\""+cvjs_imagesLocation+"blueDot.png\" border=\"0\" width=\"12\" height=\"17\" /></td><td class=\"fb_22_3\"><div id=\"2floor21_2_3\" class=\"clear_tag_text_blue1\">Clear</div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td><td><img src=\""+cvjs_imagesLocation+"5x5.png\" border=\"1\" width=\"3\" height=\"3\" /></td><td><div id=\"2floor21_3\" class=\"delete_tag_image\"><img id=\"2floor21_3_image\" src=\""+cvjs_imagesLocation+"tools/Trash_2.png\" border=\"0\" width=\"14\" height=\"17\"></div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"2floor22\"><table id=\"filterByTable2\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td style=\"padding-left:6px;cursor:ns-resize;\"><img src=\""+cvjs_imagesLocation+"tools/FlrPlanReorderGrip2.png\" border=\"1\" width=\"27\" height=\"44\" /></td><td class=\"fb_112\"><div id=\"2floor22_1\" class=\"select_file_text_2a\">Floor Tag</div><div id=\"2floor22_4\" class=\"display_tag_text2\">filename1.ext</div></td><td class=\"fb_22\"><div id=\"2floor22_2\" class=\"rename_tag_text_blue1\">Rename</div></td><td><img src=\""+cvjs_imagesLocation+"blueDot.png\" border=\"0\" width=\"12\" height=\"17\" /></td><td class=\"fb_22_2\"><div id=\"2floor22_2_2\" class=\"unlink_tag_text_blue1\">Unlink</div></td><td><img src=\""+cvjs_imagesLocation+"blueDot.png\" border=\"0\" width=\"12\" height=\"17\" /></td><td class=\"fb_22_3\"><div id=\"2floor22_2_3\" class=\"clear_tag_text_blue1\">Clear</div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td><td><img src=\""+cvjs_imagesLocation+"5x5.png\" border=\"1\" width=\"3\" height=\"3\" /></td><td><div id=\"2floor22_3\" class=\"delete_tag_image\"><img id=\"2floor22_3_image\" src=\""+cvjs_imagesLocation+"tools/Trash_2.png\" border=\"0\" width=\"14\" height=\"17\"></div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"2floor23\"><table id=\"filterByTable2\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td style=\"padding-left:6px;cursor:ns-resize;\"><img src=\""+cvjs_imagesLocation+"tools/FlrPlanReorderGrip2.png\" border=\"1\" width=\"27\" height=\"44\" /></td><td class=\"fb_112\"><div id=\"2floor23_1\" class=\"select_file_text_2a\">Floor Tag</div><div id=\"2floor23_4\" class=\"display_tag_text2\">filename1.ext</div></td><td class=\"fb_22\"><div id=\"2floor23_2\" class=\"rename_tag_text_blue1\">Rename</div></td><td><img src=\""+cvjs_imagesLocation+"blueDot.png\" border=\"0\" width=\"12\" height=\"17\" /></td><td class=\"fb_22_2\"><div id=\"2floor23_2_2\" class=\"unlink_tag_text_blue1\">Unlink</div></td><td><img src=\""+cvjs_imagesLocation+"blueDot.png\" border=\"0\" width=\"12\" height=\"17\" /></td><td class=\"fb_22_3\"><div id=\"2floor23_2_3\" class=\"clear_tag_text_blue1\">Clear</div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td><td><img src=\""+cvjs_imagesLocation+"5x5.png\" border=\"1\" width=\"3\" height=\"3\" /></td><td><div id=\"2floor23_3\" class=\"delete_tag_image\"><img id=\"2floor23_3_image\" src=\""+cvjs_imagesLocation+"tools/Trash_2.png\" border=\"0\" width=\"14\" height=\"17\"></div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"2floor24\"><table id=\"filterByTable2\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td style=\"padding-left:6px;cursor:ns-resize;\"><img src=\""+cvjs_imagesLocation+"tools/FlrPlanReorderGrip2.png\" border=\"1\" width=\"27\" height=\"44\" /></td><td class=\"fb_112\"><div id=\"2floor24_1\" class=\"select_file_text_2a\">Floor Tag</div><div id=\"2floor24_4\" class=\"display_tag_text2\">filename1.ext</div></td><td class=\"fb_22\"><div id=\"2floor24_2\" class=\"rename_tag_text_blue1\">Rename</div></td><td><img src=\""+cvjs_imagesLocation+"blueDot.png\" border=\"0\" width=\"12\" height=\"17\" /></td><td class=\"fb_22_2\"><div id=\"2floor24_2_2\" class=\"unlink_tag_text_blue1\">Unlink</div></td><td><img src=\""+cvjs_imagesLocation+"blueDot.png\" border=\"0\" width=\"12\" height=\"17\" /></td><td class=\"fb_22_3\"><div id=\"2floor24_2_3\" class=\"clear_tag_text_blue1\">Clear</div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td><td><img src=\""+cvjs_imagesLocation+"5x5.png\" border=\"1\" width=\"3\" height=\"3\" /></td><td><div id=\"2floor24_3\" class=\"delete_tag_image\"><img id=\"2floor24_3_image\" src=\""+cvjs_imagesLocation+"tools/Trash_2.png\" border=\"0\" width=\"14\" height=\"17\"></div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"2floor25\"><table id=\"filterByTable2\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td style=\"padding-left:6px;cursor:ns-resize;\"><img src=\""+cvjs_imagesLocation+"tools/FlrPlanReorderGrip2.png\" border=\"1\" width=\"27\" height=\"44\" /></td><td class=\"fb_112\"><div id=\"2floor25_1\" class=\"select_file_text_2a\">Floor Tag</div><div id=\"2floor25_4\" class=\"display_tag_text2\">filename1.ext</div></td><td class=\"fb_22\"><div id=\"2floor25_2\" class=\"rename_tag_text_blue1\">Rename</div></td><td><img src=\""+cvjs_imagesLocation+"blueDot.png\" border=\"0\" width=\"12\" height=\"17\" /></td><td class=\"fb_22_2\"><div id=\"2floor25_2_2\" class=\"unlink_tag_text_blue1\">Unlink</div></td><td><img src=\""+cvjs_imagesLocation+"blueDot.png\" border=\"0\" width=\"12\" height=\"17\" /></td><td class=\"fb_22_3\"><div id=\"2floor25_2_3\" class=\"clear_tag_text_blue1\">Clear</div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td><td><img src=\""+cvjs_imagesLocation+"5x5.png\" border=\"1\" width=\"3\" height=\"3\" /></td><td><div id=\"2floor25_3\" class=\"delete_tag_image\"><img id=\"2floor25_3_image\" src=\""+cvjs_imagesLocation+"tools/Trash_2.png\" border=\"0\" width=\"14\" height=\"17\"></div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"2floor26\"><table id=\"filterByTable2\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td style=\"padding-left:6px;cursor:ns-resize;\"><img src=\""+cvjs_imagesLocation+"tools/FlrPlanReorderGrip2.png\" border=\"1\" width=\"27\" height=\"44\" /></td><td class=\"fb_112\"><div id=\"2floor26_1\" class=\"select_file_text_2a\">Floor Tag</div><div id=\"2floor26_4\" class=\"display_tag_text2\">filename1.ext</div></td><td class=\"fb_22\"><div id=\"2floor26_2\" class=\"rename_tag_text_blue1\">Rename</div></td><td><img src=\""+cvjs_imagesLocation+"blueDot.png\" border=\"0\" width=\"12\" height=\"17\" /></td><td class=\"fb_22_2\"><div id=\"2floor26_2_2\" class=\"unlink_tag_text_blue1\">Unlink</div></td><td><img src=\""+cvjs_imagesLocation+"blueDot.png\" border=\"0\" width=\"12\" height=\"17\" /></td><td class=\"fb_22_3\"><div id=\"2floor26_2_3\" class=\"clear_tag_text_blue1\">Clear</div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td><td><img src=\""+cvjs_imagesLocation+"5x5.png\" border=\"1\" width=\"3\" height=\"3\" /></td><td><div id=\"2floor26_3\" class=\"delete_tag_image\"><img id=\"2floor26_3_image\" src=\""+cvjs_imagesLocation+"tools/Trash_2.png\" border=\"0\" width=\"14\" height=\"17\"></div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"2floor27\"><table id=\"filterByTable2\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td style=\"padding-left:6px;cursor:ns-resize;\"><img src=\""+cvjs_imagesLocation+"tools/FlrPlanReorderGrip2.png\" border=\"1\" width=\"27\" height=\"44\" /></td><td class=\"fb_112\"><div id=\"2floor27_1\" class=\"select_file_text_2a\">Floor Tag</div><div id=\"2floor27_4\" class=\"display_tag_text2\">filename1.ext</div></td><td class=\"fb_22\"><div id=\"2floor27_2\" class=\"rename_tag_text_blue1\">Rename</div></td><td><img src=\""+cvjs_imagesLocation+"blueDot.png\" border=\"0\" width=\"12\" height=\"17\" /></td><td class=\"fb_22_2\"><div id=\"2floor27_2_2\" class=\"unlink_tag_text_blue1\">Unlink</div></td><td><img src=\""+cvjs_imagesLocation+"blueDot.png\" border=\"0\" width=\"12\" height=\"17\" /></td><td class=\"fb_22_3\"><div id=\"2floor27_2_3\" class=\"clear_tag_text_blue1\">Clear</div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td><td><img src=\""+cvjs_imagesLocation+"5x5.png\" border=\"1\" width=\"3\" height=\"3\" /></td><td><div id=\"2floor27_3\" class=\"delete_tag_image\"><img id=\"2floor27_3_image\" src=\""+cvjs_imagesLocation+"tools/Trash_2.png\" border=\"0\" width=\"14\" height=\"17\"></div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"2floor28\"><table id=\"filterByTable2\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td style=\"padding-left:6px;cursor:ns-resize;\"><img src=\""+cvjs_imagesLocation+"tools/FlrPlanReorderGrip2.png\" border=\"1\" width=\"27\" height=\"44\" /></td><td class=\"fb_112\"><div id=\"2floor28_1\" class=\"select_file_text_2a\">Floor Tag</div><div id=\"2floor28_4\" class=\"display_tag_text2\">filename1.ext</div></td><td class=\"fb_22\"><div id=\"2floor28_2\" class=\"rename_tag_text_blue1\">Rename</div></td><td><img src=\""+cvjs_imagesLocation+"blueDot.png\" border=\"0\" width=\"12\" height=\"17\" /></td><td class=\"fb_22_2\"><div id=\"2floor28_2_2\" class=\"unlink_tag_text_blue1\">Unlink</div></td><td><img src=\""+cvjs_imagesLocation+"blueDot.png\" border=\"0\" width=\"12\" height=\"17\" /></td><td class=\"fb_22_3\"><div id=\"2floor28_2_3\" class=\"clear_tag_text_blue1\">Clear</div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td><td><img src=\""+cvjs_imagesLocation+"5x5.png\" border=\"1\" width=\"3\" height=\"3\" /></td><td><div id=\"2floor28_3\" class=\"delete_tag_image\"><img id=\"2floor28_3_image\" src=\""+cvjs_imagesLocation+"tools/Trash_2.png\" border=\"0\" width=\"14\" height=\"17\"></div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"2floor29\"><table id=\"filterByTable2\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td style=\"padding-left:6px;cursor:ns-resize;\"><img src=\""+cvjs_imagesLocation+"tools/FlrPlanReorderGrip2.png\" border=\"1\" width=\"27\" height=\"44\" /></td><td class=\"fb_112\"><div id=\"2floor29_1\" class=\"select_file_text_2a\">Floor Tag</div><div id=\"2floor29_4\" class=\"display_tag_text2\">filename1.ext</div></td><td class=\"fb_22\"><div id=\"2floor29_2\" class=\"rename_tag_text_blue1\">Rename</div></td><td><img src=\""+cvjs_imagesLocation+"blueDot.png\" border=\"0\" width=\"12\" height=\"17\" /></td><td class=\"fb_22_2\"><div id=\"2floor29_2_2\" class=\"unlink_tag_text_blue1\">Unlink</div></td><td><img src=\""+cvjs_imagesLocation+"blueDot.png\" border=\"0\" width=\"12\" height=\"17\" /></td><td class=\"fb_22_3\"><div id=\"2floor29_2_3\" class=\"clear_tag_text_blue1\">Clear</div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td><td><img src=\""+cvjs_imagesLocation+"5x5.png\" border=\"1\" width=\"3\" height=\"3\" /></td><td><div id=\"2floor29_3\" class=\"delete_tag_image\"><img id=\"2floor29_3_image\" src=\""+cvjs_imagesLocation+"tools/Trash_2.png\" border=\"0\" width=\"14\" height=\"17\"></div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"2floor30\"><table id=\"filterByTable2\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td style=\"padding-left:6px;cursor:ns-resize;\"><img src=\""+cvjs_imagesLocation+"tools/FlrPlanReorderGrip2.png\" border=\"1\" width=\"27\" height=\"44\" /></td><td class=\"fb_112\"><div id=\"2floor30_1\" class=\"select_file_text_2a\">Floor Tag</div><div id=\"2floor30_4\" class=\"display_tag_text2\">filename1.ext</div></td><td class=\"fb_22\"><div id=\"2floor30_2\" class=\"rename_tag_text_blue1\">Rename</div></td><td><img src=\""+cvjs_imagesLocation+"blueDot.png\" border=\"0\" width=\"12\" height=\"17\" /></td><td class=\"fb_22_2\"><div id=\"2floor30_2_2\" class=\"unlink_tag_text_blue1\">Unlink</div></td><td><img src=\""+cvjs_imagesLocation+"blueDot.png\" border=\"0\" width=\"12\" height=\"17\" /></td><td class=\"fb_22_3\"><div id=\"2floor30_2_3\" class=\"clear_tag_text_blue1\">Clear</div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td><td><img src=\""+cvjs_imagesLocation+"5x5.png\" border=\"1\" width=\"3\" height=\"3\" /></td><td><div id=\"2floor30_3\" class=\"delete_tag_image\"><img id=\"2floor30_3_image\" src=\""+cvjs_imagesLocation+"tools/Trash_2.png\" border=\"0\" width=\"14\" height=\"17\"></div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"2floor31\"><table id=\"filterByTable2\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td style=\"padding-left:6px;cursor:ns-resize;\"><img src=\""+cvjs_imagesLocation+"tools/FlrPlanReorderGrip2.png\" border=\"1\" width=\"27\" height=\"44\" /></td><td class=\"fb_112\"><div id=\"2floor31_1\" class=\"select_file_text_2a\">Floor Tag</div><div id=\"2floor31_4\" class=\"display_tag_text2\">filename1.ext</div></td><td class=\"fb_22\"><div id=\"2floor31_2\" class=\"rename_tag_text_blue1\">Rename</div></td><td><img src=\""+cvjs_imagesLocation+"blueDot.png\" border=\"0\" width=\"12\" height=\"17\" /></td><td class=\"fb_22_2\"><div id=\"2floor31_2_2\" class=\"unlink_tag_text_blue1\">Unlink</div></td><td><img src=\""+cvjs_imagesLocation+"blueDot.png\" border=\"0\" width=\"12\" height=\"17\" /></td><td class=\"fb_22_3\"><div id=\"2floor31_2_3\" class=\"clear_tag_text_blue1\">Clear</div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td><td><img src=\""+cvjs_imagesLocation+"5x5.png\" border=\"1\" width=\"3\" height=\"3\" /></td><td><div id=\"2floor31_3\" class=\"delete_tag_image\"><img id=\"2floor31_3_image\" src=\""+cvjs_imagesLocation+"tools/Trash_2.png\" border=\"0\" width=\"14\" height=\"17\"></div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"2floor32\"><table id=\"filterByTable2\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td style=\"padding-left:6px;cursor:ns-resize;\"><img src=\""+cvjs_imagesLocation+"tools/FlrPlanReorderGrip2.png\" border=\"1\" width=\"27\" height=\"44\" /></td><td class=\"fb_112\"><div id=\"2floor32_1\" class=\"select_file_text_2a\">Floor Tag</div><div id=\"2floor32_4\" class=\"display_tag_text2\">filename1.ext</div></td><td class=\"fb_22\"><div id=\"2floor32_2\" class=\"rename_tag_text_blue1\">Rename</div></td><td><img src=\""+cvjs_imagesLocation+"blueDot.png\" border=\"0\" width=\"12\" height=\"17\" /></td><td class=\"fb_22_2\"><div id=\"2floor32_2_2\" class=\"unlink_tag_text_blue1\">Unlink</div></td><td><img src=\""+cvjs_imagesLocation+"blueDot.png\" border=\"0\" width=\"12\" height=\"17\" /></td><td class=\"fb_22_3\"><div id=\"2floor32_2_3\" class=\"clear_tag_text_blue1\">Clear</div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td><td><img src=\""+cvjs_imagesLocation+"5x5.png\" border=\"1\" width=\"3\" height=\"3\" /></td><td><div id=\"2floor32_3\" class=\"delete_tag_image\"><img id=\"2floor32_3_image\" src=\""+cvjs_imagesLocation+"tools/Trash_2.png\" border=\"0\" width=\"14\" height=\"17\"></div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"2floor33\"><table id=\"filterByTable2\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td style=\"padding-left:6px;cursor:ns-resize;\"><img src=\""+cvjs_imagesLocation+"tools/FlrPlanReorderGrip2.png\" border=\"1\" width=\"27\" height=\"44\" /></td><td class=\"fb_112\"><div id=\"2floor33_1\" class=\"select_file_text_2a\">Floor Tag</div><div id=\"2floor33_4\" class=\"display_tag_text2\">filename1.ext</div></td><td class=\"fb_22\"><div id=\"2floor33_2\" class=\"rename_tag_text_blue1\">Rename</div></td><td><img src=\""+cvjs_imagesLocation+"blueDot.png\" border=\"0\" width=\"12\" height=\"17\" /></td><td class=\"fb_22_2\"><div id=\"2floor33_2_2\" class=\"unlink_tag_text_blue1\">Unlink</div></td><td><img src=\""+cvjs_imagesLocation+"blueDot.png\" border=\"0\" width=\"12\" height=\"17\" /></td><td class=\"fb_22_3\"><div id=\"2floor33_2_3\" class=\"clear_tag_text_blue1\">Clear</div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td><td><img src=\""+cvjs_imagesLocation+"5x5.png\" border=\"1\" width=\"3\" height=\"3\" /></td><td><div id=\"2floor33_3\" class=\"delete_tag_image\"><img id=\"2floor33_3_image\" src=\""+cvjs_imagesLocation+"tools/Trash_2.png\" border=\"0\" width=\"14\" height=\"17\"></div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"2floor34\"><table id=\"filterByTable2\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td style=\"padding-left:6px;cursor:ns-resize;\"><img src=\""+cvjs_imagesLocation+"tools/FlrPlanReorderGrip2.png\" border=\"1\" width=\"27\" height=\"44\" /></td><td class=\"fb_112\"><div id=\"2floor34_1\" class=\"select_file_text_2a\">Floor Tag</div><div id=\"2floor34_4\" class=\"display_tag_text2\">filename1.ext</div></td><td class=\"fb_22\"><div id=\"2floor34_2\" class=\"rename_tag_text_blue1\">Rename</div></td><td><img src=\""+cvjs_imagesLocation+"blueDot.png\" border=\"0\" width=\"12\" height=\"17\" /></td><td class=\"fb_22_2\"><div id=\"2floor34_2_2\" class=\"unlink_tag_text_blue1\">Unlink</div></td><td><img src=\""+cvjs_imagesLocation+"blueDot.png\" border=\"0\" width=\"12\" height=\"17\" /></td><td class=\"fb_22_3\"><div id=\"2floor34_2_3\" class=\"clear_tag_text_blue1\">Clear</div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td><td><img src=\""+cvjs_imagesLocation+"5x5.png\" border=\"1\" width=\"3\" height=\"3\" /></td><td><div id=\"2floor34_3\" class=\"delete_tag_image\"><img id=\"2floor34_3_image\" src=\""+cvjs_imagesLocation+"tools/Trash_2.png\" border=\"0\" width=\"14\" height=\"17\"></div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"2floor35\"><table id=\"filterByTable2\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td style=\"padding-left:6px;cursor:ns-resize;\"><img src=\""+cvjs_imagesLocation+"tools/FlrPlanReorderGrip2.png\" border=\"1\" width=\"27\" height=\"44\" /></td><td class=\"fb_112\"><div id=\"2floor35_1\" class=\"select_file_text_2a\">Floor Tag</div><div id=\"2floor35_4\" class=\"display_tag_text2\">filename1.ext</div></td><td class=\"fb_22\"><div id=\"2floor35_2\" class=\"rename_tag_text_blue1\">Rename</div></td><td><img src=\""+cvjs_imagesLocation+"blueDot.png\" border=\"0\" width=\"12\" height=\"17\" /></td><td class=\"fb_22_2\"><div id=\"2floor35_2_2\" class=\"unlink_tag_text_blue1\">Unlink</div></td><td><img src=\""+cvjs_imagesLocation+"blueDot.png\" border=\"0\" width=\"12\" height=\"17\" /></td><td class=\"fb_22_3\"><div id=\"2floor35_2_3\" class=\"clear_tag_text_blue1\">Clear</div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td><td><img src=\""+cvjs_imagesLocation+"5x5.png\" border=\"1\" width=\"3\" height=\"3\" /></td><td><div id=\"2floor35_3\" class=\"delete_tag_image\"><img id=\"2floor35_3_image\" src=\""+cvjs_imagesLocation+"tools/Trash_2.png\" border=\"0\" width=\"14\" height=\"17\"></div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"2floor36\"><table id=\"filterByTable2\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td style=\"padding-left:6px;cursor:ns-resize;\"><img src=\""+cvjs_imagesLocation+"tools/FlrPlanReorderGrip2.png\" border=\"1\" width=\"27\" height=\"44\" /></td><td class=\"fb_112\"><div id=\"2floor36_1\" class=\"select_file_text_2a\">Floor Tag</div><div id=\"2floor36_4\" class=\"display_tag_text2\">filename1.ext</div></td><td class=\"fb_22\"><div id=\"2floor36_2\" class=\"rename_tag_text_blue1\">Rename</div></td><td><img src=\""+cvjs_imagesLocation+"blueDot.png\" border=\"0\" width=\"12\" height=\"17\" /></td><td class=\"fb_22_2\"><div id=\"2floor36_2_2\" class=\"unlink_tag_text_blue1\">Unlink</div></td><td><img src=\""+cvjs_imagesLocation+"blueDot.png\" border=\"0\" width=\"12\" height=\"17\" /></td><td class=\"fb_22_3\"><div id=\"2floor36_2_3\" class=\"clear_tag_text_blue1\">Clear</div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td><td><img src=\""+cvjs_imagesLocation+"5x5.png\" border=\"1\" width=\"3\" height=\"3\" /></td><td><div id=\"2floor36_3\" class=\"delete_tag_image\"><img id=\"2floor36_3_image\" src=\""+cvjs_imagesLocation+"tools/Trash_2.png\" border=\"0\" width=\"14\" height=\"17\"></div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"2floor37\"><table id=\"filterByTable2\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td style=\"padding-left:6px;cursor:ns-resize;\"><img src=\""+cvjs_imagesLocation+"tools/FlrPlanReorderGrip2.png\" border=\"1\" width=\"27\" height=\"44\" /></td><td class=\"fb_112\"><div id=\"2floor37_1\" class=\"select_file_text_2a\">Floor Tag</div><div id=\"2floor37_4\" class=\"display_tag_text2\">filename1.ext</div></td><td class=\"fb_22\"><div id=\"2floor37_2\" class=\"rename_tag_text_blue1\">Rename</div></td><td><img src=\""+cvjs_imagesLocation+"blueDot.png\" border=\"0\" width=\"12\" height=\"17\" /></td><td class=\"fb_22_2\"><div id=\"2floor37_2_2\" class=\"unlink_tag_text_blue1\">Unlink</div></td><td><img src=\""+cvjs_imagesLocation+"blueDot.png\" border=\"0\" width=\"12\" height=\"17\" /></td><td class=\"fb_22_3\"><div id=\"2floor37_2_3\" class=\"clear_tag_text_blue1\">Clear</div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td><td><img src=\""+cvjs_imagesLocation+"5x5.png\" border=\"1\" width=\"3\" height=\"3\" /></td><td><div id=\"2floor37_3\" class=\"delete_tag_image\"><img id=\"2floor37_3_image\" src=\""+cvjs_imagesLocation+"tools/Trash_2.png\" border=\"0\" width=\"14\" height=\"17\"></div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"2floor38\"><table id=\"filterByTable2\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td style=\"padding-left:6px;cursor:ns-resize;\"><img src=\""+cvjs_imagesLocation+"tools/FlrPlanReorderGrip2.png\" border=\"1\" width=\"27\" height=\"44\" /></td><td class=\"fb_112\"><div id=\"2floor38_1\" class=\"select_file_text_2a\">Floor Tag</div><div id=\"2floor38_4\" class=\"display_tag_text2\">filename1.ext</div></td><td class=\"fb_22\"><div id=\"2floor38_2\" class=\"rename_tag_text_blue1\">Rename</div></td><td><img src=\""+cvjs_imagesLocation+"blueDot.png\" border=\"0\" width=\"12\" height=\"17\" /></td><td class=\"fb_22_2\"><div id=\"2floor38_2_2\" class=\"unlink_tag_text_blue1\">Unlink</div></td><td><img src=\""+cvjs_imagesLocation+"blueDot.png\" border=\"0\" width=\"12\" height=\"17\" /></td><td class=\"fb_22_3\"><div id=\"2floor38_2_3\" class=\"clear_tag_text_blue1\">Clear</div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td><td><img src=\""+cvjs_imagesLocation+"5x5.png\" border=\"1\" width=\"3\" height=\"3\" /></td><td><div id=\"2floor38_3\" class=\"delete_tag_image\"><img id=\"2floor38_3_image\" src=\""+cvjs_imagesLocation+"tools/Trash_2.png\" border=\"0\" width=\"14\" height=\"17\"></div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"2floor39\"><table id=\"filterByTable2\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td style=\"padding-left:6px;cursor:ns-resize;\"><img src=\""+cvjs_imagesLocation+"tools/FlrPlanReorderGrip2.png\" border=\"1\" width=\"27\" height=\"44\" /></td><td class=\"fb_112\"><div id=\"2floor39_1\" class=\"select_file_text_2a\">Floor Tag</div><div id=\"2floor39_4\" class=\"display_tag_text2\">filename1.ext</div></td><td class=\"fb_22\"><div id=\"2floor39_2\" class=\"rename_tag_text_blue1\">Rename</div></td><td><img src=\""+cvjs_imagesLocation+"blueDot.png\" border=\"0\" width=\"12\" height=\"17\" /></td><td class=\"fb_22_2\"><div id=\"2floor39_2_2\" class=\"unlink_tag_text_blue1\">Unlink</div></td><td><img src=\""+cvjs_imagesLocation+"blueDot.png\" border=\"0\" width=\"12\" height=\"17\" /></td><td class=\"fb_22_3\"><div id=\"2floor39_2_3\" class=\"clear_tag_text_blue1\">Clear</div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td><td><img src=\""+cvjs_imagesLocation+"5x5.png\" border=\"1\" width=\"3\" height=\"3\" /></td><td><div id=\"2floor39_3\" class=\"delete_tag_image\"><img id=\"2floor39_3_image\" src=\""+cvjs_imagesLocation+"tools/Trash_2.png\" border=\"0\" width=\"14\" height=\"17\"></div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td></table><div class=\"horizontal_dotted_line\"></div></div>";
	serverfileModalString += "<div id=\"2floor40\"><table id=\"filterByTable2\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td style=\"padding-left:6px;cursor:ns-resize;\"><img src=\""+cvjs_imagesLocation+"tools/FlrPlanReorderGrip2.png\" border=\"1\" width=\"27\" height=\"44\" /></td><td class=\"fb_112\"><div id=\"2floor40_1\" class=\"select_file_text_2a\">Floor Tag</div><div id=\"2floor40_4\" class=\"display_tag_text2\">filename1.ext</div></td><td class=\"fb_22\"><div id=\"2floor40_2\" class=\"rename_tag_text_blue1\">Rename</div></td><td><img src=\""+cvjs_imagesLocation+"blueDot.png\" border=\"0\" width=\"12\" height=\"17\" /></td><td class=\"fb_22_2\"><div id=\"2floor40_2_2\" class=\"unlink_tag_text_blue1\">Unlink</div></td><td><img src=\""+cvjs_imagesLocation+"blueDot.png\" border=\"0\" width=\"12\" height=\"17\" /></td><td class=\"fb_22_3\"><div id=\"2floor40_2_3\" class=\"clear_tag_text_blue1\">Clear</div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td><td><img src=\""+cvjs_imagesLocation+"5x5.png\" border=\"1\" width=\"3\" height=\"3\" /></td><td><div id=\"2floor30_3\" class=\"delete_tag_image\"><img id=\"2floor40_3_image\" src=\""+cvjs_imagesLocation+"tools/Trash_2.png\" border=\"0\" width=\"14\" height=\"17\"></div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td></table><div class=\"horizontal_dotted_line\"></div></div>";

	serverfileModalString += "</div></div></div></td></tr></table>";
	
	if (cvjs_modalsInitialized_FileLoadModal){
		jQuery("#cvjs_serverFileLoadModal_table").remove();   // remove the previous instance
		cvjs_modalsInitialized_FileLoadModal = false;
	}
		
	
	if (!cvjs_modalsInitialized_FileLoadModal){   // we only make the file load modal once

		jQuery("#cvjs_modals"+"_"+floorplan_div).append(serverfileModalString);
		jQuery("#cvjs_modals"+"_"+floorplan_div).append("<form id=\"delete_form\" style=\"display:none\"><table width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" ><tr></tr><tr><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td><td><div id=\"delete_Modal_header\" class=\"select_file_text_modal\">Delete</div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td><td><div class=\'select_file_text_close\'><div id=\"modal_close_cross\">&times;</div></div></td></tr></table><div class=\"horizontal_modal_line\"></div><table id=\"text_modal_table\" class=\"text_modal_table_class\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" ><tr><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td><td><div class=\"select_tag_text_modal\"><div id=\"delete_modal_file_name1\">Delete</div></div></td></tr></table><table id=\"select_save_changes\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" ><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"5\" height=\"5\" /></td><td><img src=\""+cvjs_imagesLocation+"white28x10.png\" border=\"1\" width=\"28\" height=\"10\" /></td><td><img src=\""+cvjs_imagesLocation+"white28x10.png\" border=\"1\" width=\"28\" height=\"10\" /></td><td><div style=\"width: 60px\" ><div id=\"button2-nodelete\"><img id=\"delete_modal_cancel_image\" class=\"icon_img\" src=\""+cvjs_imagesLocation+"tools/Cancel_Inactive_4.png\" border=\"0\"></div></div></td><td><td div style=\"height: 10px\" ><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td><div style=\"width: 111px\" ><div id=\"button1-delete\"><img id=\"delete_modal_proceed_image\" class=\"icon_img\" src=\""+cvjs_imagesLocation+"tools/Proceed_111x28_Up.png\" border=\"0\"></div></div></td></tr></table></form>");
		jQuery("#cvjs_modals"+"_"+floorplan_div).append("<form id=\"clear_form\" style=\"display:none\"><table width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" ><tr></tr><tr><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td><td><div id=\"clear_Modal_header\" class=\"select_file_text_modal\">Clear</div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td><td><div class=\'select_file_text_close\'><div id=\"clear_modal_close_cross\">&times;</div></div></td></tr></table><div class=\"horizontal_modal_line\"></div><table id=\"text_modal_table\" class=\"text_modal_table_class\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" ><tr><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td><td><div class=\"select_tag_text_modal\"><div id=\"clear_modal_file\">Do you want to clear all locations in,</div></div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td></tr></table><table id=\"select_save_changes\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"5\" height=\"5\" /></td><td><img src=\""+cvjs_imagesLocation+"white28x10.png\" border=\"1\" width=\"28\" height=\"10\" /></td><td><img src=\""+cvjs_imagesLocation+"white28x10.png\" border=\"1\" width=\"28\" height=\"10\" /></td><td><div style=\"width: 60px\" ><div id=\"button2-noclear\"><img id=\"clear_modal_cancel_image\" class=\"icon_img\" src=\""+cvjs_imagesLocation+"tools/Cancel_Inactive_4.png\" border=\"0\"></div></div></td><td><td div style=\"height: 10px\" ><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td><div style=\"width: 111px\" ><div id=\"button1-clear\"><img id=\"clear_modal_proceed_image\" class=\"icon_img\" src=\""+cvjs_imagesLocation+"tools/Proceed_111x28_Up.png\" border=\"0\"></div></div></td></tr><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"7\" height=\"7\" /></td></tr></table></form>");
		jQuery("#cvjs_modals"+"_"+floorplan_div).append("<form id=\"unlink_form\" style=\"display:none\"><table width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" ><tr></tr><tr><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td><td><div id=\"unlink_Modal_header\" class=\"select_file_text_modal\">Unlink</div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td><td><div class=\'select_file_text_close\'><div id=\"unlink_modal_close_cross\">&times;</div></div></td></tr></table><div class=\"horizontal_modal_line\"></div><table id=\"text_modal_table\" class=\"text_modal_table_class\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" ><tr><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td><td><div class=\"select_tag_text_modal\"><div id=\"unlink_modal_file\">Do you want to unlink all locations in,</div></div></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td></tr></table><table id=\"select_save_changes\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"5\" height=\"5\" /></td><td><img src=\""+cvjs_imagesLocation+"white28x10.png\" border=\"1\" width=\"28\" height=\"10\" /></td><td><img src=\""+cvjs_imagesLocation+"white28x10.png\" border=\"1\" width=\"28\" height=\"10\" /></td><td><div style=\"width: 60px\" ><div id=\"button2-nounlink\"><img id=\"unlink_modal_cancel_image\" class=\"icon_img\" src=\""+cvjs_imagesLocation+"tools/Cancel_Inactive_4.png\" border=\"0\"></div></div></td><td><td div style=\"height: 10px\" ><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td><div style=\"width: 111px\" ><div id=\"button1-unlink\"><img id=\"unlink_modal_proceed_image\" class=\"icon_img\" src=\""+cvjs_imagesLocation+"tools/Proceed_111x28_Up.png\" border=\"0\"></div></div></td></tr><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"7\" height=\"7\" /></td></tr></table></form>");
	
	}
	
	// for clone SVG handling  (Mitchell)
	jQuery("#cvjs_modals"+"_"+floorplan_div).append("<div id=\"cloneObject_01\"></div>");

	// for make bitmaps inline when passing over to print object
	jQuery("#cvjs_modals"+"_"+floorplan_div).append("<canvas id=\"tempBitmapObjectHolder\" width=\"10\" height=\"10\"></canvas>");


	
	
	
//		window.alert("last   "+jQuery("#"+floorPlan_Modal).html());




//TEST XXXX

//	jQuery("#cvjs_modals").append("<form id=\"datamaps_form\" style=\"display:none\"><table width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" ><tr></tr><tr><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td><td><div id=\"unlink_Modal_header\" class=\"datamaps_text_modal\">Data Maps</div></td><td><div class=\"onoffswitch\"><input type=\"checkbox\" name=\"onoffswitch\" class=\"onoffswitch-checkbox\" id=\"cvjs_displayData_switch\" ><label class=\"onoffswitch-label\" for=\"cvjs_displayData_switch\"><span class=\"onoffswitch-inner\"></span><span class=\"onoffswitch-switch\"></span></label></div></td>    <td><div class=\'select_file_text_close\'><div id=\"unlink_modal_close_cross\">&times;</div></div></td></tr></table><div id =\"datamaps_modal_line\" class=\"horizontal_modal_line\"></div><table id=\"datamaps_modal_table\" class=\"text_modal_table_class\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" ><tr><td><img id=\"dummy1\" src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td><td><div class=\"select_tag_text_modal\"><div id=\"unlink_modal_file\">Do you want to unlink all locations in,</div></div></td><td><img id=\"dummy1\" src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td></tr></table><table id=\"datamaps_select_save_changes\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td><img id=\"dummy1\" src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td><img id=\"dummy1\" src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"5\" height=\"5\" /></td><td><img id=\"dummy1\" src=\""+cvjs_imagesLocation+"white28x10.png\" border=\"1\" width=\"28\" height=\"10\" /></td><td><img id=\"dummy1\" src=\""+cvjs_imagesLocation+"white28x10.png\" border=\"1\" width=\"28\" height=\"10\" /></td><td><div style=\"width: 60px\" ><div id=\"button2-nounlink\"><img id=\"unlink_modal_cancel_image\" class=\"icon_img\" src=\""+cvjs_imagesLocation+"tools/Cancel_Inactive_4.png\" border=\"0\"></div></div></td><td><td div style=\"height: 10px\" ><img id=\"dummy1\" src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td><div style=\"width: 111px\" ><div id=\"button1-unlink\"><img id=\"unlink_modal_proceed_image\" class=\"icon_img\" src=\""+cvjs_imagesLocation+"tools/Proceed_111x28_Up.png\" border=\"0\"></div></div></td></tr><tr><td><img id=\"dummy1\" src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"7\" height=\"7\" /></td></tr></table></form>");
//	jQuery("#datamaps_form").show();
//	jQuery("#datamaps_modal_table").hide();
//	jQuery("#datamaps_select_save_changes").hide();
//	jQuery("#datamaps_modal_line").hide();

//  old version with tr
//	jQuery("#cvjs_modals").append("<form id=\"datamaps_form\" style=\"display:none\"><table width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" ><tr></tr><tr><td><img id=\"dummy1\" src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td><td><div id=\"unlink_Modal_header\" class=\"datamaps_text_modal\">Data Maps</div></td><td><div class=\"onoffswitch\"><input type=\"checkbox\" name=\"onoffswitch\" class=\"onoffswitch-checkbox\" id=\"cvjs_displayData_switch\" ><label class=\"onoffswitch-label\" for=\"cvjs_displayData_switch\"><span class=\"onoffswitch-inner\"></span><span class=\"onoffswitch-switch\"></span></label></div></td>  <td><div class=\'select_file_text_close\'><div id=\"unlink_modal_close_cross\">&times;</div></div></td></tr></table><div id =\"datamaps_modal_line\" class=\"horizontal_modal_line\"></div><table id=\"datamaps_modal_table\" class=\"text_modal_table_class\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" > 	<tr><td><div id=\"cv_link11_fixtures\" class=\"dropdown\"><span class=\"dropdown-toggle\" role=\"button\" data-toggle=\"dropdown\" href=\"#\" data-target=\"#\" id=\"drop_select_datamaps\">None Selected<b class=\"caret\"></b></span><ul id=\"select_datamaps\" class=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"drop_select_datamaps\"></ul></div></td></tr> <tr><td><div id=\"cvjs_display_selection_text_1\"><p>Occupancy - User Setting 1</p></div><div id=\"cvjs_display_selection_1\" class=\"occupancy-colors\"><span class=\"hint--top void color-chip\" data-hint=\"No Data\"></span><span class=\"hint--top low2 color-chip\" data-hint=\"&gt; 10 min\"></span><span class=\"hint--top low1 color-chip\" data-hint=\"7.5 to 10 min\"></span><span class=\"hint--top mid0 color-chip\" data-hint=\"5 to 7.5 min\"></span><span class=\"hint--top high1 color-chip\" data-hint=\"2.5 to 5 min\"></span><span class=\"hint--top high2 color-chip\" data-hint=\"&lt; 2.5 min\"></span></div></td>    </td></tr>  <tr><td><div id=\"cvjs_display_selection_text_2\"><p>Power - User Setting 2</p></div> <div id=\"cvjs_display_selection_2\" class=\"power-colors\"><span class=\"hint--top void color-chip\" data-hint=\"No Data\"></span><span class=\"hint--top low2 color-chip\" data-hint=\"&lt; 0.1 W/sq ft | 1.08 W/sq m\"></span><span class=\"hint--top low1 color-chip\" data-hint=\"0.1 to 0.2 W/sq ft | 1.1 to 2.2 W/sq m\"></span><span class=\"hint--top mid0 color-chip\" data-hint=\"0.2 to 0.4 W/sq ft | 2.2 to 4.3 W/sq m\"></span><span class=\"hint--top high1 color-chip\" data-hint=\"0.4 to 0.5 W/sq ft | 4.3 to 5.4 W/sq m\"></span><span class=\"hint--top high2 color-chip\" data-hint=\"&gt; 0.5 W/sq ft | 5.4 W/sq m\"></span></div></td></tr>  <tr><td><div id=\"cvjs_display_selection_text_3\"><p>Temperature - User Setting 3</p></div><div id=\"cvjs_display_selection_3\" class=\"temperature-colors\"><span class=\"hint--top void color-chip\" data-hint=\"No Data\"></span><span class=\"hint--bottom low1 color-chip\" data-hint=\"70 to 72 &deg;F | 21 to 22 &deg;C\"></span><span class=\"hint--bottom mid0 color-chip\" data-hint=\"72 to 77 &deg;F | 22 to 25 &deg;C\"></span><span class=\"hint--bottom high1 color-chip\" data-hint=\"77 to 81 &deg;F | 25 to 27 &deg;C\"></span><span class=\"hint--bottom high2 color-chip\" data-hint=\"&gt; 81 &deg;F | 27 &deg;C\"></span></div></td></tr>  <tr>  <td><div id=\"cvjs_display_selection_text_4\"><p>Light Level - User Setting 4</p></div><div id=\"cvjs_display_selection_4\" class=\"lightlevel-colors\"> <span class=\"hint--top void color-chip\" data-hint=\"No Data\"></span><span class=\"hint--bottom low2 color-chip\" data-hint=\"&lt; 70 &deg;F | 21 &deg;C\"></span><span class=\"hint--bottom low1 color-chip\" data-hint=\"70 to 72 &deg;F | 21 to 22 &deg;C\"></span><span class=\"hint--bottom mid0 color-chip\" data-hint=\"72 to 77 &deg;F | 22 to 25 &deg;C\"></span><span class=\"hint--bottom high1 color-chip\" data-hint=\"77 to 81 &deg;F | 25 to 27 &deg;C\"></span><span class=\"hint--bottom high2 color-chip\" data-hint=\"&gt; 81 &deg;F | 27 &deg;C\"></span></div></td></tr></tr>     </table><table id=\"datamaps_select_save_changes\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td><img id=\"dummy1\" src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td><img id=\"dummy1\" src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"5\" height=\"5\" /></td><td><img id=\"dummy1\" src=\""+cvjs_imagesLocation+"white28x10.png\" border=\"1\" width=\"28\" height=\"10\" /></td><td><img id=\"dummy1\" src=\""+cvjs_imagesLocation+"white28x10.png\" border=\"1\" width=\"28\" height=\"10\" /></td><td><div style=\"width: 60px\" ><div id=\"button2-nounlink\"><img id=\"unlink_modal_cancel_image\" class=\"icon_img\" src=\""+cvjs_imagesLocation+"tools/Cancel_Inactive_4.png\" border=\"0\"></div></div></td><td><td div style=\"height: 10px\" ><img id=\"dummy1\" src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td><div style=\"width: 111px\" ><div id=\"button1-unlink\"><img id=\"unlink_modal_proceed_image\" class=\"icon_img\" src=\""+cvjs_imagesLocation+"tools/Proceed_111x28_Up.png\" border=\"0\"></div></div></td></tr><tr><td><img id=\"dummy1\" src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"7\" height=\"7\" /></td></tr></table></form>");

//  remove tr
//	jQuery("#cvjs_modals").append("<form id=\"datamaps_form\" style=\"display:none\"><table width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" ><tr></tr><tr><td><img id=\"dummy1\" src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td><td><div id=\"unlink_Modal_header\" class=\"datamaps_text_modal\">Data Maps</div></td><td><div class=\"onoffswitch\"><input type=\"checkbox\" name=\"onoffswitch\" class=\"onoffswitch-checkbox\" id=\"cvjs_displayData_switch\" ><label class=\"onoffswitch-label\" for=\"cvjs_displayData_switch\"><span class=\"onoffswitch-inner\"></span><span class=\"onoffswitch-switch\"></span></label></div></td>  <td><div class=\'select_file_text_close\'><div id=\"unlink_modal_close_cross\">&times;</div></div></td></tr></table><div id =\"datamaps_modal_line\" class=\"horizontal_modal_line\"></div><table id=\"datamaps_modal_table\" class=\"text_modal_table_class\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" > 	<tr><td><div id=\"cv_link11_fixtures\" class=\"dropdown\"><span class=\"dropdown-toggle\" role=\"button\" data-toggle=\"dropdown\" href=\"#\" data-target=\"#\" id=\"drop_select_datamaps\">None Selected<b class=\"caret\"></b></span><ul id=\"select_datamaps\" class=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"drop_select_datamaps\"></ul></div></td></tr> <tr><td>    <div id=\"cvjs_display_selection_text_1\"><p>Occupancy - User Setting 1</p></div><div id=\"cvjs_display_selection_1\" class=\"occupancy-colors\"><span class=\"hint--top void color-chip\" data-hint=\"No Data\"></span><span class=\"hint--top low2 color-chip\" data-hint=\"&gt; 10 min\"></span><span class=\"hint--top low1 color-chip\" data-hint=\"7.5 to 10 min\"></span><span class=\"hint--top mid0 color-chip\" data-hint=\"5 to 7.5 min\"></span><span class=\"hint--top high1 color-chip\" data-hint=\"2.5 to 5 min\"></span><span class=\"hint--top high2 color-chip\" data-hint=\"&lt; 2.5 min\"></span></div>        <div id=\"cvjs_display_selection_text_2\"><p>Power - User Setting 2</p></div> <div id=\"cvjs_display_selection_2\" class=\"power-colors\"><span class=\"hint--top void color-chip\" data-hint=\"No Data\"></span><span class=\"hint--top low2 color-chip\" data-hint=\"&lt; 0.1 W/sq ft | 1.08 W/sq m\"></span><span class=\"hint--top low1 color-chip\" data-hint=\"0.1 to 0.2 W/sq ft | 1.1 to 2.2 W/sq m\"></span><span class=\"hint--top mid0 color-chip\" data-hint=\"0.2 to 0.4 W/sq ft | 2.2 to 4.3 W/sq m\"></span><span class=\"hint--top high1 color-chip\" data-hint=\"0.4 to 0.5 W/sq ft | 4.3 to 5.4 W/sq m\"></span><span class=\"hint--top high2 color-chip\" data-hint=\"&gt; 0.5 W/sq ft | 5.4 W/sq m\"></span></div><div id=\"cvjs_display_selection_text_3\"><p>Temperature - User Setting 3</p></div><div id=\"cvjs_display_selection_3\" class=\"temperature-colors\"><span class=\"hint--top void color-chip\" data-hint=\"No Data\"></span><span class=\"hint--bottom low2 color-chip\" data-hint=\"&lt; 70 &deg;F | 21 &deg;C\"></span></span><span class=\"hint--bottom low1 color-chip\" data-hint=\"70 to 72 &deg;F | 21 to 22 &deg;C\"></span><span class=\"hint--bottom mid0 color-chip\" data-hint=\"72 to 77 &deg;F | 22 to 25 &deg;C\"></span><span class=\"hint--bottom high1 color-chip\" data-hint=\"77 to 81 &deg;F | 25 to 27 &deg;C\"></span><span class=\"hint--bottom high2 color-chip\" data-hint=\"&gt; 81 &deg;F | 27 &deg;C\"></span></div> <div id=\"cvjs_display_selection_text_4\"><p>Light Level - User Setting 4</p></div><div id=\"cvjs_display_selection_4\" class=\"lightlevel-colors\"> <span class=\"hint--top void color-chip\" data-hint=\"No Data\"></span><span class=\"hint--bottom low2 color-chip\" data-hint=\"&lt; 70 &deg;F | 21 &deg;C\"></span><span class=\"hint--bottom low1 color-chip\" data-hint=\"70 to 72 &deg;F | 21 to 22 &deg;C\"></span><span class=\"hint--bottom mid0 color-chip\" data-hint=\"72 to 77 &deg;F | 22 to 25 &deg;C\"></span><span class=\"hint--bottom high1 color-chip\" data-hint=\"77 to 81 &deg;F | 25 to 27 &deg;C\"></span><span class=\"hint--bottom high2 color-chip\" data-hint=\"&gt; 81 &deg;F | 27 &deg;C\"></span></div></td></tr></tr>     </table><table id=\"datamaps_select_save_changes\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td><img id=\"dummy1\" src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td><img id=\"dummy1\" src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"5\" height=\"5\" /></td><td><img id=\"dummy1\" src=\""+cvjs_imagesLocation+"white28x10.png\" border=\"1\" width=\"28\" height=\"10\" /></td><td><img id=\"dummy1\" src=\""+cvjs_imagesLocation+"white28x10.png\" border=\"1\" width=\"28\" height=\"10\" /></td><td><div style=\"width: 60px\" ><div id=\"button2-nounlink\"><img id=\"unlink_modal_cancel_image\" class=\"icon_img\" src=\""+cvjs_imagesLocation+"tools/Cancel_Inactive_4.png\" border=\"0\"></div></div></td><td><td div style=\"height: 10px\" ><img id=\"dummy1\" src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td><div style=\"width: 111px\" ><div id=\"button1-unlink\"><img id=\"unlink_modal_proceed_image\" class=\"icon_img\" src=\""+cvjs_imagesLocation+"tools/Proceed_111x28_Up.png\" border=\"0\"></div></div></td></tr><tr><td><img id=\"dummy1\" src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"7\" height=\"7\" /></td></tr></table></form>");

//  remove selection_text
	//jQuery("#cvjs_modals").append("<form id=\"datamaps_form\" style=\"display:none\"><table width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" ><tr></tr><tr><td><img id=\"dummy1\" src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td><td><div id=\"unlink_Modal_header\" class=\"datamaps_text_modal\">Data Maps</div></td><td><div class=\"onoffswitch\"><input type=\"checkbox\" name=\"onoffswitch\" class=\"onoffswitch-checkbox\" id=\"cvjs_displayData_switch\" ><label class=\"onoffswitch-label\" for=\"cvjs_displayData_switch\"><span class=\"onoffswitch-inner\"></span><span class=\"onoffswitch-switch\"></span></label></div></td>  <td><div class=\'select_file_text_close\'><div id=\"unlink_modal_close_cross\">&times;</div></div></td></tr></table><div id =\"datamaps_modal_line\" class=\"horizontal_modal_line\"></div><table id=\"datamaps_modal_table\" class=\"text_modal_table_class\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" > 	<tr><td><div id=\"cv_link11_fixtures\" class=\"dropdown\"><span class=\"dropdown-toggle\" role=\"button\" data-toggle=\"dropdown\" href=\"#\" data-target=\"#\" id=\"drop_select_datamaps\">None Selected<b class=\"caret\"></b></span><ul id=\"select_datamaps\" class=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"drop_select_datamaps\"></ul></div></td></tr> <tr><td>    <div id=\"cvjs_display_selection_1\" class=\"occupancy-colors\"><span class=\"hint--top void color-chip\" data-hint=\"No Data\"></span><span class=\"hint--top low2 color-chip\" data-hint=\"&gt; 10 min\"></span><span class=\"hint--top low1 color-chip\" data-hint=\"7.5 to 10 min\"></span><span class=\"hint--top mid0 color-chip\" data-hint=\"5 to 7.5 min\"></span><span class=\"hint--top high1 color-chip\" data-hint=\"2.5 to 5 min\"></span><span class=\"hint--top high2 color-chip\" data-hint=\"&lt; 2.5 min\"></span></div>        <div id=\"cvjs_display_selection_2\" class=\"power-colors\"><span class=\"hint--top void color-chip\" data-hint=\"No Data\"></span><span class=\"hint--top low2 color-chip\" data-hint=\"&lt; 0.1 W/sq ft | 1.08 W/sq m\"></span><span class=\"hint--top low1 color-chip\" data-hint=\"0.1 to 0.2 W/sq ft | 1.1 to 2.2 W/sq m\"></span><span class=\"hint--top mid0 color-chip\" data-hint=\"0.2 to 0.4 W/sq ft | 2.2 to 4.3 W/sq m\"></span><span class=\"hint--top high1 color-chip\" data-hint=\"0.4 to 0.5 W/sq ft | 4.3 to 5.4 W/sq m\"></span><span class=\"hint--top high2 color-chip\" data-hint=\"&gt; 0.5 W/sq ft | 5.4 W/sq m\"></span></div><div id=\"cvjs_display_selection_3\" class=\"temperature-colors\"><span class=\"hint--top void color-chip\" data-hint=\"No Data\"></span><span class=\"hint--bottom low2 color-chip\" data-hint=\"&lt; 70 &deg;F | 21 &deg;C\"></span></span><span class=\"hint--bottom low1 color-chip\" data-hint=\"70 to 72 &deg;F | 21 to 22 &deg;C\"></span><span class=\"hint--bottom mid0 color-chip\" data-hint=\"72 to 77 &deg;F | 22 to 25 &deg;C\"></span><span class=\"hint--bottom high1 color-chip\" data-hint=\"77 to 81 &deg;F | 25 to 27 &deg;C\"></span><span class=\"hint--bottom high2 color-chip\" data-hint=\"&gt; 81 &deg;F | 27 &deg;C\"></span></div> <div id=\"cvjs_display_selection_4\" class=\"lightlevel-colors\"> <span class=\"hint--top void color-chip\" data-hint=\"No Data\"></span><span class=\"hint--bottom low2 color-chip\" data-hint=\"&lt; 70 &deg;F | 21 &deg;C\"></span><span class=\"hint--bottom low1 color-chip\" data-hint=\"70 to 72 &deg;F | 21 to 22 &deg;C\"></span><span class=\"hint--bottom mid0 color-chip\" data-hint=\"72 to 77 &deg;F | 22 to 25 &deg;C\"></span><span class=\"hint--bottom high1 color-chip\" data-hint=\"77 to 81 &deg;F | 25 to 27 &deg;C\"></span><span class=\"hint--bottom high2 color-chip\" data-hint=\"&gt; 81 &deg;F | 27 &deg;C\"></span></div></td></tr></tr>     </table><table id=\"datamaps_select_save_changes\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td><img id=\"dummy1\" src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td><img id=\"dummy1\" src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"5\" height=\"5\" /></td><td><img id=\"dummy1\" src=\""+cvjs_imagesLocation+"white28x10.png\" border=\"1\" width=\"28\" height=\"10\" /></td><td><img id=\"dummy1\" src=\""+cvjs_imagesLocation+"white28x10.png\" border=\"1\" width=\"28\" height=\"10\" /></td><td><div style=\"width: 60px\" ><div id=\"button2-nounlink\"><img id=\"unlink_modal_cancel_image\" class=\"icon_img\" src=\""+cvjs_imagesLocation+"tools/Cancel_Inactive_4.png\" border=\"0\"></div></div></td><td><td div style=\"height: 10px\" ><img id=\"dummy1\" src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td><div style=\"width: 111px\" ><div id=\"button1-unlink\"><img id=\"unlink_modal_proceed_image\" class=\"icon_img\" src=\""+cvjs_imagesLocation+"tools/Proceed_111x28_Up.png\" border=\"0\"></div></div></td></tr><tr><td><img id=\"dummy1\" src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"7\" height=\"7\" /></td></tr></table></form>");

//	jQuery("#cvjs_modals").append("<form id=\"datamaps_form\" style=\"display:none\"><table width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" ><tr></tr><tr><td><img id=\"dummy1\" src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td><td><div id=\"unlink_Modal_header\" class=\"datamaps_text_modal\">Data Maps</div></td><td><div class=\"onoffswitch\"><input type=\"checkbox\" name=\"onoffswitch\" class=\"onoffswitch-checkbox\" id=\"cvjs_displayData_switch\" ><label class=\"onoffswitch-label\" for=\"cvjs_displayData_switch\"><span class=\"onoffswitch-inner\"></span><span class=\"onoffswitch-switch\"></span></label></div></td>  <td><div class=\'select_file_text_close\'><div id=\"unlink_modal_close_cross\">&times;</div></div></td></tr></table><div id =\"datamaps_modal_line\" class=\"horizontal_modal_line\"></div><table id=\"datamaps_modal_table\" class=\"text_modal_table_class\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" > 	<tr><td><div id=\"cv_link11_fixtures\" class=\"dropdown\"><span class=\"dropdown-toggle\" role=\"button\" data-toggle=\"dropdown\" href=\"#\" data-target=\"#\" id=\"drop_select_datamaps\">None Selected<b class=\"caret\"></b></span><ul id=\"select_datamaps\" class=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"drop_select_datamaps\"></ul></div></td></tr> <tr><td>    <div id=\"cvjs_display_selection_1\" class=\"occupancy-colors\"><span class=\"hint--top void color-chip\" data-hint=\"No Data\"></span><span class=\"hint--top low2 color-chip\" data-hint=\"&gt; 10 min\"></span><span class=\"hint--top low1 color-chip\" data-hint=\"7.5 to 10 min\"></span><span class=\"hint--top mid0 color-chip\" data-hint=\"5 to 7.5 min\"></span><span class=\"hint--top high1 color-chip\" data-hint=\"2.5 to 5 min\"></span><span class=\"hint--top high2 color-chip\" data-hint=\"&lt; 2.5 min\"></span></div>        <div id=\"cvjs_display_selection_2\" class=\"power-colors\"><span class=\"hint--top void color-chip\" data-hint=\"No Data\"></span><span class=\"hint--top low2 color-chip\" data-hint=\"&lt; 0.1 W/sq ft | 1.08 W/sq m\"></span><span class=\"hint--top low1 color-chip\" data-hint=\"0.1 to 0.2 W/sq ft | 1.1 to 2.2 W/sq m\"></span><span class=\"hint--top mid0 color-chip\" data-hint=\"0.2 to 0.4 W/sq ft | 2.2 to 4.3 W/sq m\"></span><span class=\"hint--top high1 color-chip\" data-hint=\"0.4 to 0.5 W/sq ft | 4.3 to 5.4 W/sq m\"></span><span class=\"hint--top high2 color-chip\" data-hint=\"&gt; 0.5 W/sq ft | 5.4 W/sq m\"></span></div><div id=\"cvjs_display_selection_3\" class=\"temperature-colors\"><span class=\"hint--top void color-chip\" data-hint=\"No Data\"></span><span class=\"hint--bottom low2 color-chip\" data-hint=\"&lt; 70 &deg;F | 21 &deg;C\"></span></span><span class=\"hint--bottom low1 color-chip\" data-hint=\"70 to 72 &deg;F | 21 to 22 &deg;C\"></span><span class=\"hint--bottom mid0 color-chip\" data-hint=\"72 to 77 &deg;F | 22 to 25 &deg;C\"></span><span class=\"hint--bottom high1 color-chip\" data-hint=\"77 to 81 &deg;F | 25 to 27 &deg;C\"></span><span class=\"hint--bottom high2 color-chip\" data-hint=\"&gt; 81 &deg;F | 27 &deg;C\"></span></div> <div id=\"cvjs_display_selection_4\" class=\"lightlevel-colors\"> <span class=\"hint--top void color-chip\" data-hint=\"No Data\"></span><span class=\"hint--bottom low2 color-chip\" data-hint=\"&lt; 70 &deg;F | 21 &deg;C\"></span><span class=\"hint--bottom low1 color-chip\" data-hint=\"70 to 72 &deg;F | 21 to 22 &deg;C\"></span><span class=\"hint--bottom mid0 color-chip\" data-hint=\"72 to 77 &deg;F | 22 to 25 &deg;C\"></span><span class=\"hint--bottom high1 color-chip\" data-hint=\"77 to 81 &deg;F | 25 to 27 &deg;C\"></span><span class=\"hint--bottom high2 color-chip\" data-hint=\"&gt; 81 &deg;F | 27 &deg;C\"></span></div></td></tr></tr>     </table><table id=\"datamaps_select_save_changes\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td><img id=\"dummy1\" src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td><img id=\"dummy1\" src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"5\" height=\"5\" /></td><td><img id=\"dummy1\" src=\""+cvjs_imagesLocation+"white28x10.png\" border=\"1\" width=\"28\" height=\"10\" /></td><td><img id=\"dummy1\" src=\""+cvjs_imagesLocation+"white28x10.png\" border=\"1\" width=\"28\" height=\"10\" /></td><td><div style=\"width: 60px\" ><div id=\"button2-nounlink\"><img id=\"unlink_modal_cancel_image\" class=\"icon_img\" src=\""+cvjs_imagesLocation+"tools/Cancel_Inactive_4.png\" border=\"0\"></div></div></td><td><td div style=\"height: 10px\" ><img id=\"dummy1\" src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td><div style=\"width: 111px\" ><div id=\"button1-unlink\"><img id=\"unlink_modal_proceed_image\" class=\"icon_img\" src=\""+cvjs_imagesLocation+"tools/Proceed_111x28_Up.png\" border=\"0\"></div></div></td></tr><tr><td><img id=\"dummy1\" src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"7\" height=\"7\" /></td></tr></table></form>");
	
	
	//3.0.14e
	jQuery("#cvjs_modals"+"_"+floorplan_div).append("<form id=\"datamaps_form\" style=\"display:none\"><table width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" ><tr></tr><tr><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"7\" height=\"7\" /></td><td><div id=\"unlink_Modal_header\" class=\"datamaps_text_modal\">Data Maps</div></td><td><div class=\"onoffswitch\"><input type=\"checkbox\" name=\"onoffswitch\" class=\"onoffswitch-checkbox\" id=\"cvjs_displayData_switch\" ><label class=\"onoffswitch-label\" for=\"cvjs_displayData_switch\"><span class=\"onoffswitch-inner\"></span><span class=\"onoffswitch-switch\"></span></label></div></td>  </tr></table><div id =\"datamaps_modal_line\" class=\"horizontal_modal_line\"></div><table id=\"datamaps_modal_table\" class=\"text_modal_table_class\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" > 	<tr><td><div id=\"cv_link11_fixtures\" class=\"dropdown\"><span class=\"dropdown-toggle\" role=\"button\" data-toggle=\"dropdown\" href=\"#\" data-target=\"#\" id=\"drop_select_datamaps\">None Selected<b class=\"caret\"></b></span><ul id=\"select_datamaps\" class=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"drop_select_datamaps\"></ul></div></td></tr> <tr><td>    <div id=\"cvjs_display_selection_1\" class=\"occupancy-colors\"><span class=\"hint--top void color-chip\" data-hint=\"No Data\"></span><span class=\"hint--top low2 color-chip\" data-hint=\"&gt; 10 min\"></span><span class=\"hint--top low1 color-chip\" data-hint=\"7.5 to 10 min\"></span><span class=\"hint--top mid0 color-chip\" data-hint=\"5 to 7.5 min\"></span><span class=\"hint--top high1 color-chip\" data-hint=\"2.5 to 5 min\"></span><span class=\"hint--top high2 color-chip\" data-hint=\"&lt; 2.5 min\"></span></div>        <div id=\"cvjs_display_selection_2\" class=\"power-colors\"><span class=\"hint--top void color-chip\" data-hint=\"No Data\"></span><span class=\"hint--top low2 color-chip\" data-hint=\"&lt; 0.1 W/sq ft | 1.08 W/sq m\"></span><span class=\"hint--top low1 color-chip\" data-hint=\"0.1 to 0.2 W/sq ft | 1.1 to 2.2 W/sq m\"></span><span class=\"hint--top mid0 color-chip\" data-hint=\"0.2 to 0.4 W/sq ft | 2.2 to 4.3 W/sq m\"></span><span class=\"hint--top high1 color-chip\" data-hint=\"0.4 to 0.5 W/sq ft | 4.3 to 5.4 W/sq m\"></span><span class=\"hint--top high2 color-chip\" data-hint=\"&gt; 0.5 W/sq ft | 5.4 W/sq m\"></span></div><div id=\"cvjs_display_selection_3\" class=\"temperature-colors\"><span class=\"hint--top void color-chip\" data-hint=\"No Data\"></span><span class=\"hint--bottom low2 color-chip\" data-hint=\"&lt; 70 &deg;F | 21 &deg;C\"></span></span><span class=\"hint--bottom low1 color-chip\" data-hint=\"70 to 72 &deg;F | 21 to 22 &deg;C\"></span><span class=\"hint--bottom mid0 color-chip\" data-hint=\"72 to 77 &deg;F | 22 to 25 &deg;C\"></span><span class=\"hint--bottom high1 color-chip\" data-hint=\"77 to 81 &deg;F | 25 to 27 &deg;C\"></span><span class=\"hint--bottom high2 color-chip\" data-hint=\"&gt; 81 &deg;F | 27 &deg;C\"></span></div> <div id=\"cvjs_display_selection_4\" class=\"lightlevel-colors\"> <span class=\"hint--top void color-chip\" data-hint=\"No Data\"></span><span class=\"hint--bottom low2 color-chip\" data-hint=\"&lt; 70 &deg;F | 21 &deg;C\"></span><span class=\"hint--bottom low1 color-chip\" data-hint=\"70 to 72 &deg;F | 21 to 22 &deg;C\"></span><span class=\"hint--bottom mid0 color-chip\" data-hint=\"72 to 77 &deg;F | 22 to 25 &deg;C\"></span><span class=\"hint--bottom high1 color-chip\" data-hint=\"77 to 81 &deg;F | 25 to 27 &deg;C\"></span><span class=\"hint--bottom high2 color-chip\" data-hint=\"&gt; 81 &deg;F | 27 &deg;C\"></span></div></td></tr></tr>     </table><table id=\"datamaps_select_save_changes\" width=\"100%\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" id=\"location_tags\"><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td><img src=\""+cvjs_imagesLocation+"7x7.png\" border=\"1\" width=\"5\" height=\"5\" /></td><td><img src=\""+cvjs_imagesLocation+"white28x10.png\" border=\"1\" width=\"28\" height=\"10\" /></td><td><img src=\""+cvjs_imagesLocation+"white28x10.png\" border=\"1\" width=\"28\" height=\"10\" /></td><td><div style=\"width: 60px\" ><div id=\"button2-nounlink\"><img id=\"unlink_modal_cancel_image\" class=\"icon_img\" src=\""+cvjs_imagesLocation+"tools/Cancel_Inactive_4.png\" border=\"0\"></div></div></td><td><td div style=\"height: 10px\" ><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"10\" height=\"10\" /></td><td><div style=\"width: 111px\" ><div id=\"button1-unlink\"><img id=\"unlink_modal_proceed_image\" class=\"icon_img\" src=\""+cvjs_imagesLocation+"tools/Proceed_111x28_Up.png\" border=\"0\"></div></div></td></tr><tr><td><img src=\""+cvjs_imagesLocation+"10x10.png\" border=\"1\" width=\"7\" height=\"7\" /></td></tr></table></form>");



	jQuery("#datamaps_form").hide();
	jQuery("#datamaps_modal_line").hide();
	jQuery("#datamaps_modal_table").hide();
	jQuery("#datamaps_select_save_changes").hide();

	jQuery("#cvjs_display_selection_1").hide();
	jQuery("#cvjs_display_selection_2").hide();
	jQuery("#cvjs_display_selection_3").hide();
	jQuery("#cvjs_display_selection_4").hide();


// id="cv_link_select_datamaps id="drop_select_datamaps">   <ul id="select_datamaps"    aria-labelledby="drop_select_datamaps
	//<tr><td><div id=\"cv_link11_fixtures\" class=\"dropdown\"><span class=\"dropdown-toggle\" role=\"button\" data-toggle=\"dropdown\" href=\"#\" data-target=\"#\" id=\"drop_select_datamaps\">None Selected<b class=\"caret\"></b></span><ul id=\"select_datamaps\" class=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"drop_select_datamaps\"></ul></div></td></tr>

	var new_datamap_forms = "<div class=\"dropdown-content\">";

	for (var i=0; i<4; i++){
		new_datamap_forms = new_datamap_forms  + "<li><a href=\"javascript:cvjs_change_datamaps('"+i+"')\">"+lTable.languages[cvjs_currentLanguage].DataMaps.Map[i]+"</a></li>";
//		if (i==1) new_datamap_forms = new_datamap_forms  + "<li><a href=\"javascript:cvjs_change_datamaps('"+i+"')\">"+lTable.languages[cvjs_currentLanguage].DataMaps.Map2+"</a></li>";
//		if (i==2) new_datamap_forms = new_datamap_forms  + "<li><a href=\"javascript:cvjs_change_datamaps('"+i+"')\">"+lTable.languages[cvjs_currentLanguage].DataMaps.Map3+"</a></li>";
//		if (i==3) new_datamap_forms = new_datamap_forms  + "<li><a href=\"javascript:cvjs_change_datamaps('"+i+"')\">"+lTable.languages[cvjs_currentLanguage].DataMaps.Map4+"</a></li>";

	}
	new_datamap_forms = new_datamap_forms  + "</div>"
	 jQuery("#select_datamaps").html(new_datamap_forms);


	jQuery("#cvjs_displayData_switch")
		.change(function(){
			if( jQuery(this).is(":checked") ){

				// clear data layer
				spaceLayer = cvjs_clearLayer(spaceLayer, floorplan_div_Array[cvjs_active_floorplan_div_nr]);
				
				cvjs_ParseDisplayDataMaps(cvjs_currentMapNumber);

				jQuery("#datamaps_modal_table").show();
				jQuery("#datamaps_select_save_changes").hide();
				jQuery("#datamaps_modal_line").show();

				jQuery("#datamaps_form").css({ 'height': 120 + "px" });

				jQuery("#datamaps_form").css("left", 40).css("top", jQuery('#'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).position().top + jQuery("#"+floorplan_div_Array[cvjs_active_floorplan_div_nr]).height()-197);


				if (cvjs_initDataMapsDisplay){ cvjs_initDataMapsDisplay = false; cvjs_change_datamaps(0);}

				//cvjs_convertSpaceObject = true;
			}else{
				// clear data layer
				spaceLayer = cvjs_clearLayer(spaceLayer);

				jQuery("#datamaps_modal_table").hide();
				jQuery("#datamaps_select_save_changes").hide();
				jQuery("#datamaps_modal_line").hide();

				jQuery("#datamaps_form").css({ 'height': 43 + "px" });

				jQuery("#datamaps_form").css("left", 40).css("top", jQuery('#'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).position().top + jQuery("#"+floorplan_div_Array[cvjs_active_floorplan_div_nr]).height()-120);

				//cvjs_convertSpaceObject = false;
			}
		});

	jQuery( function() {
		jQuery( "#datamaps_form" ).draggable();
	} );


//TEST XXXX    DATA MAPS TEST


	var cvjs_currentStickyNote_id = "x1";
	var stickynote = 1;
	
	
	var htitle = "<table width=\"100%\"><tr><td><a href=\"http://cadviewerjs.com\"><img src=\""+cvjs_imagesLocation+"logoJS.png\" border=\"2\" width=\"20\" height=\"20\" /></a></td><td cols=\"3\">"+"<td id=\"cvjs_imageObject\">imageObject</td>"+
		// 3.0.13g
		"<td class=\"cvjs_modal_header_insert_image_info_1\" id=\"imageNoteIcon3\" onclick=\"cvjs_add_image("+stickynote+");\"   onmouseover=\"javascript:cvjs_showIconnoteTip(\'"+lTable.languages[cvjs_currentLanguage].ImageObjectModal.LoadImage+"\',3,"+stickynote+");\" onmouseout=\"javascript:tip[cvjs_active_floorplan_div_nr].hide();\" ><i class=\"glyphicon glyphicon-picture\"></i></td>"+
		"<td class=\"cvjs_modal_header_insert_image_info_1\" id=\"imageNoteIcon2\" onclick=\"cvjs_delete_image("+stickynote+");\"  onmouseover=\"javascript:cvjs_showIconnoteTip(\'"+lTable.languages[cvjs_currentLanguage].ImageObjectModal.RemoveImageNote+"\',2,"+stickynote+");\" onmouseout=\"javascript:tip[cvjs_active_floorplan_div_nr].hide();\"><i class=\"glyphicon glyphicon-trash\"></i></td>"+
//		"<td class=\"cvjs_modal_header_insert_image_info_2\" id=\"imageNoteIcon1\" onclick=\"cvjs_hide_image_note("+stickynote+");\" ><i class=\"glyphicon glyphicon-remove\"></i></td></tr>"+
		"<td class=\"cvjs_modal_header_insert_image_info_2\" id=\"imageNoteIcon1\" onclick=\"cvjs_hide_image_note("+stickynote+");\" onmouseover=\"javascript:cvjs_showIconnoteTip(\'"+lTable.languages[cvjs_currentLanguage].ImageObjectModal.MinimizeImageNote+"\',1,"+stickynote+");\" onmouseout=\"javascript:tip[cvjs_active_floorplan_div_nr].hide();\"><i class=\"glyphicon glyphicon-remove\"></i></td></tr>"+
		
		"</table>";

		
		
	// onmouseout=\"javascript:tip[cvjs_active_floorplan_div_nr].hide();\" onmouseover=\"javascript:cvjs_showStickynoteTip(\'"+lTable.languages[cvjs_currentLanguage].StickyNote.MoveNote+"\',1,"+n_index+");	
		
		

	jQuery("#cvjs_modals"+"_"+floorplan_div).append("<div id=\"cvjs_floorPlanInsertImageEncapsulate_"+floorplan_div+"\"><table><tr><td><div id=\"cvjs_floorPlanInsertImageTop\">"+htitle+"</div></tr></td><tr><td><div id=\"cvjs_floorPlanInsertImage\"></div></td></tr></table></div>");


	cvjs_layerlistspaceModal_content = "<table class=\"layerListTable\" ><tr><td><div class=\"layerListHeader\"><b class=\"top_bar_gray_underbar\">_</b><a href=\"http://cadviewerjs.com\"><img src=\""+cvjs_imagesLocation+"logoJS.png\" border=\"2\" width=\"20\" height=\"20\" /></a><b class=\"top_bar_gray_underbar\">__</b><b id=\"cvjs_layerListTextHeader\">"+lTable.languages[cvjs_currentLanguage].LayerListSpaceModal.Header+"</b><button type=\"button\" class=\"close\" data-dismiss=\"modal\" onClick=\"cvjs_exit_layerlist_spaceobjects(\'"+floorplan_div+"\');\">&times;<b class=\"top_bar_gray_underbar\">_</b></button></div></td></tr><tr><td><canvas id=\"dummy\" width=\"30\" height=\"8\"></canvas></td></tr><tr><td><canvas id=\"dummy\" width=\"30\" height=\"4\"></canvas><input id=\"cvjs_layer_search_space_field\" class=\"search\" placeholder=\""+lTable.languages[cvjs_currentLanguage].LayerListSpaceModal.Search+"\" /><canvas id=\"dummy\" width=\"30\" height=\"4\"></canvas><button id=\"cvjs_layer_sort_button\" class=\"sort\" data-sort=\"layer\">"+lTable.languages[cvjs_currentLanguage].LayerListSpaceModal.Sort+"</button></td></tr><tr><td><canvas id=\"dummy\" width=\"30\" height=\"4\"></canvas></td></tr><tr><td><ul class=\"list\" id=\"layerlist_id_space\"></ul><canvas id=\"dummy\" width=\"30\" height=\"20\"></canvas><input type=\"button_layer\" name=\"Button3\" value=\""+lTable.languages[cvjs_currentLanguage].LayerListSpaceModal.AllLayerOn+"\" onClick=\"modal_all_layer_on_space();\" ><canvas id=\"dummy\" width=\"30\" height=\"20\"></canvas><input type=\"button_layer\" name=\"Button3\" value=\""+lTable.languages[cvjs_currentLanguage].LayerListSpaceModal.AllLayerOff+"\" onClick=\"modal_all_layer_off_space();\" ><canvas id=\"dummy\" width=\"30\" height=\"20\"></canvas><input type=\"button_layer\" name=\"Button3\" value=\""+lTable.languages[cvjs_currentLanguage].LayerListSpaceModal.SwapLayers+"\" onClick=\"modal_swap_layers_on_off_space();\" ></td></tr><tr><td><canvas id=\"dummy\" width=\"5\" height=\"4\"><></td></tr></table>";
	jQuery("#cvjs_modals"+"_"+floorplan_div).append("<div id=\"layerListSpaceObject_"+floorplan_div+"\" class=\"listwrapper\"></div>");
	jQuery("#layerListSpaceObject_"+floorplan_div).html(cvjs_layerlistspaceModal_content);

	
	
	

	cvjs_layerlistModal_content = "<table class=\"layerListTable\" ><tr><td><div class=\"layerListHeader\" id=\"layerListHeader\"><b class=\"top_bar_gray_underbar\">_</b><a href=\"http://cadviewerjs.com\"><img src=\""+cvjs_imagesLocation+"logoJS.png\" border=\"2\" width=\"20\" height=\"20\" /></a><b class=\"top_bar_gray_underbar\">__</b><b id=\"cvjs_layerListTextHeader\">"+lTable.languages[cvjs_currentLanguage].LayerListModal.Header+"</b><button type=\"button\" class=\"close\" data-dismiss=\"modal\" onClick=\"cvjs_exit_layerlist(\'"+floorplan_div+"\');\">&times;<b class=\"top_bar_gray_underbar\">_</b></button></div></td></tr><tr><td><canvas id=\"dummy\" width=\"30\" height=\"8\"></canvas></td></tr><tr><td><canvas id=\"dummy\" width=\"30\" height=\"4\"></canvas><input id=\"cvjs_layer_search_field\" class=\"search\" placeholder=\""+lTable.languages[cvjs_currentLanguage].LayerListModal.Search+"\" /><canvas id=\"dummy\" width=\"30\" height=\"4\"></canvas><button id=\"cvjs_layer_sort_button\" class=\"sort\" data-sort=\"layer\">"+lTable.languages[cvjs_currentLanguage].LayerListModal.Sort+"</button></td></tr><tr><td><canvas id=\"dummy\" width=\"30\" height=\"4\"></canvas></td></tr><tr><td><ul class=\"list\" id=\"layerlist_id\"></ul><canvas id=\"dummy\" width=\"30\" height=\"20\"></canvas><input type=\"button_layer\" name=\"Button3\" value=\""+lTable.languages[cvjs_currentLanguage].LayerListModal.AllLayerOn+"\" onClick=\"modal_all_layer_on();\" ><canvas id=\"dummy\" width=\"30\" height=\"20\"></canvas><input type=\"button_layer\" name=\"Button3\" value=\""+lTable.languages[cvjs_currentLanguage].LayerListModal.AllLayerOff+"\" onClick=\"modal_all_layer_off();\" ><canvas id=\"dummy\" width=\"30\" height=\"20\"></canvas><input type=\"button_layer\" name=\"Button3\" value=\""+lTable.languages[cvjs_currentLanguage].LayerListModal.SwapLayers+"\" onClick=\"modal_swap_layers_on_off();\" ></td></tr><tr><td><canvas id=\"dummy\" width=\"5\" height=\"4\"><></td></tr></table>";
	jQuery("#cvjs_modals"+"_"+floorplan_div).append("<div id=\"layerList_"+floorplan_div+"\" class=\"listwrapper\"></div>");
	jQuery("#layerList_"+floorplan_div).html(cvjs_layerlistModal_content);


	
	// 3.1.20f
//	cvjs_pagechangeListModal_content = "<table class=\"pagechangeListTable\" ><tr><td><div class=\"pagechangeListHeader\" id=\"pagechangeListHeader\"><b class=\"top_bar_gray_underbar\">_</b><a href=\"http://cadviewerjs.com\"><img src=\""+cvjs_imagesLocation+"logoJS.png\" border=\"2\" width=\"20\" height=\"20\" /></a><b class=\"top_bar_gray_underbar\">__</b><b id=\"cvjs_layerListTextHeader\">"+lTable.languages[cvjs_currentLanguage].LayerListModal.Header+"</b><button type=\"button\" class=\"close\" data-dismiss=\"modal\" onClick=\"cvjs_exit_layerlist(\'"+floorplan_div+"\');\">&times;<b class=\"top_bar_gray_underbar\">_</b></button></div></td></tr><tr><td><canvas id=\"dummy\" width=\"30\" height=\"8\"></canvas></td></tr><tr><td><canvas id=\"dummy\" width=\"30\" height=\"4\"></canvas><input id=\"cvjs_layer_search_field\" class=\"search\" placeholder=\""+lTable.languages[cvjs_currentLanguage].LayerListModal.Search+"\" /><canvas id=\"dummy\" width=\"30\" height=\"4\"></canvas><button id=\"cvjs_layer_sort_button\" class=\"sort\" data-sort=\"layer\">"+lTable.languages[cvjs_currentLanguage].LayerListModal.Sort+"</button></td></tr><tr><td><canvas id=\"dummy\" width=\"30\" height=\"4\"></canvas></td></tr><tr><td><ul class=\"list\" id=\"layerlist_id\"></ul><canvas id=\"dummy\" width=\"30\" height=\"20\"></canvas><input type=\"button_layer\" name=\"Button3\" value=\""+lTable.languages[cvjs_currentLanguage].LayerListModal.AllLayerOn+"\" onClick=\"modal_all_layer_on();\" ><canvas id=\"dummy\" width=\"30\" height=\"20\"></canvas><input type=\"button_layer\" name=\"Button3\" value=\""+lTable.languages[cvjs_currentLanguage].LayerListModal.AllLayerOff+"\" onClick=\"modal_all_layer_off();\" ><canvas id=\"dummy\" width=\"30\" height=\"20\"></canvas><input type=\"button_layer\" name=\"Button3\" value=\""+lTable.languages[cvjs_currentLanguage].LayerListModal.SwapLayers+"\" onClick=\"modal_swap_layers_on_off();\" ></td></tr><tr><td><canvas id=\"dummy\" width=\"5\" height=\"4\"><></td></tr></table>";
	cvjs_pagechangeListModal_content = "<table class=\"pagechangeListTable\" ><tr><td><div class=\"pagechangeListHeader\" id=\"pagechangeListHeader\"><b class=\"top_bar_gray_underbar\">_</b><a href=\"http://cadviewerjs.com\"><img src=\""+cvjs_imagesLocation+"logoJS.png\" border=\"2\" width=\"20\" height=\"20\" /></a><b class=\"top_bar_gray_underbar\">__</b><b id=\"cvjs_pagechangeListTextHeader\">"+lTable.languages[cvjs_currentLanguage].PageChangeListModal.Header+"</b><button type=\"button\" class=\"close\" data-dismiss=\"modal\" onClick=\"cvjs_exit_pagechangelist(\'"+floorplan_div+"\');\">&times;<b class=\"top_bar_gray_underbar\">_</b></button></div></td></tr><tr><td><canvas id=\"dummy\" width=\"30\" height=\"8\"></canvas></td></tr><tr><td><canvas id=\"dummy\" width=\"30\" height=\"4\"></canvas><input id=\"cvjs_pagechange_search_field\" class=\"search\" placeholder=\""+lTable.languages[cvjs_currentLanguage].PageChangeListModal.Search+"\" /><canvas id=\"dummy\" width=\"30\" height=\"4\"></canvas><button id=\"cvjs_layer_sort_button\" class=\"sort\" data-sort=\"layer\">"+lTable.languages[cvjs_currentLanguage].PageChangeListModal.Sort+"</button></td></tr><tr><td><canvas id=\"dummy\" width=\"30\" height=\"4\"></canvas></td></tr><tr><td><ul class=\"list\" id=\"pagechangelist_id\"></ul></td></tr><tr><td><canvas id=\"dummy\" width=\"5\" height=\"4\"><></td></tr></table>";
	jQuery("#cvjs_modals"+"_"+floorplan_div).append("<div id=\"pagechangeList_"+floorplan_div+"\" class=\"pagechangeListModal listwrapper\"></div>");
	//jQuery("#pagechangeList_"+floorplan_div).html(cvjs_pagechangeListModal_content);
	jQuery("#pagechangeList_"+floorplan_div).html(cvjs_pagechangeListModal_content);



	// 3.1.20f
		
	
	
	
	
	

	cvjs_birdseyeModal_content = "<table class=\"cvjs_floorPlanMagnifyingGlassTable\" ><tr><td><div class=\"cvjs_floorPlanMagnifyingGlassTop\"><b class=\"top_bar_gray_underbar\">_</b><a href=\"http://cadviewerjs.com\"><img src=\""+cvjs_imagesLocation+"logoJS.png\" border=\"2\" width=\"20\" height=\"20\" /></a><b class=\"top_bar_gray_underbar\">__</b><b id=\"cvjs_magnifyHeader\">"+lTable.languages[cvjs_currentLanguage].BirdsEyeModal.Header+"</b><button type=\"button\" class=\"close\" data-dismiss=\"modal\" onClick=\"cvjs_exitBirdsEye(\'"+floorplan_div+"\');\">&times;<b class=\"top_bar_gray_underbar\">_</b></button></div></tr></td><tr><td><canvas id=\"cvjs_floorPlanMagnifyingGlass_"+floorplan_div+"\" width=\"300\" height=\"200\"></canvas></td></tr></table>";
	jQuery("#cvjs_modals"+"_"+floorplan_div).append("<div class=\"cvjs_floorPlanMagnifyingGlassEncapsulate\" id=\"cvjs_floorPlanMagnifyingGlassEncapsulate_"+floorplan_div+"\"></div>");
	jQuery("#cvjs_floorPlanMagnifyingGlassEncapsulate_"+floorplan_div).html(cvjs_birdseyeModal_content);


	cvjs_calibrateModal_content = "<table class=\"calibrateModalTable\"><tr><td><div class=\"calibrateModalHeader\"><b class=\"top_bar_gray_underbar\">_</b><a href=\"http://cadviewerjs.com\"><img src=\""+cvjs_imagesLocation+"logoJS.png\" border=\"2\" width=\"20\" height=\"20\" /></a><b class=\"top_bar_gray_underbar\">__</b><b id=\"cvjs_calibrateModalHeader\">"+lTable.languages[cvjs_currentLanguage].CalibrateModal.Header+"</b><button type=\"button\" class=\"close\" data-dismiss=\"modal\" onClick=\"cvjs_exitCalibrateModal(\'"+floorplan_div+"\',1);\">&times;<b class=\"top_bar_gray_underbar\">_</b></button></div></td></tr><tr><td><canvas id=\"dummy\" width=\"10\" height=\"23\"></canvas>"+lTable.languages[cvjs_currentLanguage].CalibrateModal.Unit+"<canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas><select id=\"cvjs_unitForScale\"><option value=\"1\">m</option><option value=\"2\">cm</option><option value=\"3\">mm</option><option value=\"4\">km</option><option value=\"5\">feet</option><option value=\"6\">inches</option><option value=\"7\">miles</option></select></td></tr><tr><td><canvas id=\"dummy\" width=\"10\" height=\"23\"></canvas>"+lTable.languages[cvjs_currentLanguage].CalibrateModal.Distance+"<canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas><input value=\"1\" id=\"cvjs_calibrateReferenceDistance\" class=\"cvjs_inputCalibrateModal\"><canvas id=\"dummy\" width=\"116\" height=\"10\"></canvas><input id=\"cvjs_calibrate_button\" type=\"button\" name=\"bPrint\" value=\""+lTable.languages[cvjs_currentLanguage].CalibrateModal.OK+"\" onClick=\"cvjs_exitCalibrateModal(\'"+floorplan_div+"\',2);\"></td></tr><tr><td><div id=\"cvjs_calibrationModalText\"><canvas id=\"dummy\" width=\"0\" height=\"17\"></canvas>"+lTable.languages[cvjs_currentLanguage].CalibrateModal.Text+"</div></td></tr></table>";
	jQuery("#cvjs_modals"+"_"+floorplan_div).append("<div class=\"calibrateModal\" id=\"calibrateModal_"+floorplan_div+"\"></div>");
	jQuery("#calibrateModal_"+floorplan_div).html(cvjs_calibrateModal_content);


	cvjs_measurementModal_content = "<table class=\"measurementModalTable\" ><tr><td><div class=\"measurementModalHeader\"><b class=\"top_bar_gray_underbar\">_</b><a href=\"http://cadviewerjs.com\"><img src=\""+cvjs_imagesLocation+"logoJS.png\" border=\"2\" width=\"20\" height=\"20\" /></a><b class=\"top_bar_gray_underbar\">__</b><b id=\"cvjs_measurementHeader\">"+lTable.languages[cvjs_currentLanguage].MeasurementModal.Header+"</b><button type=\"button\" class=\"close\" data-dismiss=\"modal\" onClick=\"cvjs_exitMeasurementModal(\'"+floorplan_div+"\');\">&times;<b class=\"top_bar_gray_underbar\">_</b></button></div></td></tr><tr><td><canvas id=\"dummy\" width=\"10\" height=\"25\"></canvas><div class=\"cvjs_measurementLength\" id=\"cvjs_measurementLength_"+floorplan_div+"\">"+lTable.languages[cvjs_currentLanguage].MeasurementModal.Distance+"</div><canvas id=\"dummy\" width=\"5\" height=\"5\"></canvas><input id=\"cvjs_measurement_button\" type=\"button\" name=\"bPrint\" value=\""+lTable.languages[cvjs_currentLanguage].MeasurementModal.MeasureAgain+"\" onClick=\"cvjs_repeatMeasurementModal();\"><canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas></td></tr><tr><td><div id=\"cvjs_measurementModalText\"><canvas id=\"dummy\" width=\"0\" height=\"20\"></canvas>"+lTable.languages[cvjs_currentLanguage].MeasurementModal.Text+"</div></td></tr><tr><td><input type=\"checkbox\" id=\"cvjs_measurearea_checkbox\" value=\"measurearea_status\"><canvas id=\"dummy\" width=\"30\" height=\"30\"></canvas></td><div id=\"measureareaLocation\">"+lTable.languages[cvjs_currentLanguage].MeasurementModal.Area+"</div></td><td><input id=\"cvjs_closearea_button\" type=\"button\" name=\"bPrint\" value=\""+lTable.languages[cvjs_currentLanguage].MeasurementModal.ClosePolygon+"\" onClick=\"cvjs_closeAreaMeasurement();\"></td></tr></table>";
	jQuery("#cvjs_modals"+"_"+floorplan_div).append("<div class=\"measurementModal\" id=\"measurementModal_"+floorplan_div+"\"></div>");
	jQuery("#measurementModal_"+floorplan_div).html(cvjs_measurementModal_content);

	// 3.1.21h
	jQuery("#cvjs_closearea_button").hide();
	

	
//	cvjs_printModal_content ="<table class=\"printModalTable\"><tr><td><div class=\"printModalHeader\"><b class=\"top_bar_gray_underbar\">_</b><a href=\"http://cadviewerjs.com\"><img src=\""+cvjs_imagesLocation+"logoJS.png\" border=\"2\" width=\"20\" height=\"20\" /></a><b class=\"top_bar_gray_underbar\">__</b><b id=\"cvjs_printHeader\">"+lTable.languages[cvjs_currentLanguage].PrintModal.Header+"</b><button type=\"button\" class=\"close\" data-dismiss=\"modal\" onClick=\"cvjs_exitPrintModal(\'"+floorplan_div+"\' ,1);\">&times;<b class=\"top_bar_gray_underbar\">_</b></button></div></td></tr><tr><td><canvas id=\"dummy\" width=\"10\" height=\"25\"></canvas>"+lTable.languages[cvjs_currentLanguage].PrintModal.Paper+"<canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas><select id=\"cvjs_paperSize\"><option value=\"1\">A4</option><option value=\"2\">A3</option><option value=\"3\">A2</option><option value=\"4\">Letter</option><option value=\"5\">Ledger</option><option value=\"6\">Legal</option><option value=\"7\">ANSI C</option><option value=\"8\">A1</option><option value=\"9\">A0</option><option value=\"10\">US Arch D</option><option value=\"11\">US Arch E1</option></select><canvas id=\"dummy\" width=\"45\" height=\"10\"></canvas>"+lTable.languages[cvjs_currentLanguage].PrintModal.Orientation+"<canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas><select id=\"cvjs_paperOrientation\"><option value=\"1\">Landscape</option><option value=\"2\">Portrait</option></select></td></tr><tr><td><canvas id=\"dummy\" width=\"10\" height=\"25\"></canvas>"+lTable.languages[cvjs_currentLanguage].PrintModal.Resolution+"<canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas><input value=\"300\" id=\"cvjs_printResolution\" class=\"cvjs_inputCalibrateModal\"><canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas><i class=\"cvjs_textModalSmall\">"+lTable.languages[cvjs_currentLanguage].PrintModal.ResolutionText+"</i><canvas id=\"dummy\" width=\"32\" height=\"10\"></canvas><input id=\"cvjs_print_button\" type=\"button\" name=\"bPrint\" value=\""+lTable.languages[cvjs_currentLanguage].PrintModal.Print+"\" onmousedown=\"cvjs_exitPrintModal(\'"+floorplan_div+"\', 2);\"><canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas></td></tr><tr><td></td></tr></table><table class=\"printModalTable2\"><tr><td><input type=\"checkbox\" id=\"cvjs_grayscale_checkbox\" value=\"grayscale_status\"></td><td><canvas id=\"dummy\" width=\"30\" height=\"30\"></canvas></td><td>"+lTable.languages[cvjs_currentLanguage].PrintModal.Grayscale+"</td><td><canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas></td><td><input type=\"checkbox\" id=\"cvjs_printpdf_checkbox\" value=\"grayscale_status\"></td><td><canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas></td><td id=\"printToPdfLocation\">"+lTable.languages[cvjs_currentLanguage].PrintModal.PrintPDF+"</td></tr></table>";


// 3.3.02f    3.3.02g 3.3.02g
	if (cvjs_PrintModal_PrintPDF){   // standard case
		if (cvjs_PrintModal_PrintToScale)
			cvjs_printModal_content ="<table class=\"printModalTable\"><tr><td><div class=\"printModalHeader\"><b class=\"top_bar_gray_underbar\">_</b><a href=\"http://cadviewerjs.com\"><img src=\""+cvjs_imagesLocation+"logoJS.png\" border=\"2\" width=\"20\" height=\"20\" /></a><b class=\"top_bar_gray_underbar\">__</b><b id=\"cvjs_printHeader\">"+lTable.languages[cvjs_currentLanguage].PrintModal.Header+"</b><button type=\"button\" class=\"close\" data-dismiss=\"modal\" onClick=\"cvjs_exitPrintModal(\'"+floorplan_div+"\' ,1);\">&times;<b class=\"top_bar_gray_underbar\">_</b></button></div></td></tr><tr><td><canvas id=\"dummy\" width=\"10\" height=\"25\"></canvas>"+lTable.languages[cvjs_currentLanguage].PrintModal.Paper+"<canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas><select id=\"cvjs_paperSize\"><option value=\"1\">A4</option><option value=\"2\">A3</option><option value=\"3\">A2</option><option value=\"4\">Letter</option><option value=\"5\">Ledger</option><option value=\"6\">Legal</option><option value=\"7\">ANSI C</option><option value=\"8\">A1</option><option value=\"9\">A0</option><option value=\"10\">US Arch D</option><option value=\"11\">US Arch E1</option></select><canvas id=\"dummy\" width=\"45\" height=\"10\"></canvas>"+lTable.languages[cvjs_currentLanguage].PrintModal.Orientation+"<canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas><select id=\"cvjs_paperOrientation\"><option value=\"1\">Landscape</option><option value=\"2\">Portrait</option></select></td></tr><tr><td><canvas id=\"dummy\" width=\"10\" height=\"25\"></canvas>"+lTable.languages[cvjs_currentLanguage].PrintModal.Resolution+"<canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas><input value=\"300\" id=\"cvjs_printResolution\" class=\"cvjs_inputCalibrateModal\"><canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas><i class=\"cvjs_textModalSmall\">"+lTable.languages[cvjs_currentLanguage].PrintModal.ResolutionText+"</i><canvas id=\"dummy\" width=\"32\" height=\"10\"></canvas><input id=\"cvjs_print_button\" type=\"button\" name=\"bPrint\" value=\""+lTable.languages[cvjs_currentLanguage].PrintModal.Print+"\" onmousedown=\"cvjs_exitPrintModal(\'"+floorplan_div+"\', 2);\"><canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas></td></tr><tr><td></td></tr></table><input type=\"checkbox\" id=\"cvjs_grayscale_checkbox\" value=\"grayscale_status\"><canvas id=\"dummy\" width=\"30\" height=\"30\"></canvas></td><div id=\"greyscaleLocation\">"+lTable.languages[cvjs_currentLanguage].PrintModal.Grayscale+"</div><input type=\"checkbox\" id=\"cvjs_printpdf_checkbox\" value=\"grayscale_status\"><div id=\"printToPdfLocation\">"+lTable.languages[cvjs_currentLanguage].PrintModal.PrintPDF+"</div><input type=\"checkbox\" id=\"cvjs_printtoscale_checkbox\" value=\"printtoscale_status\"><div id=\"printToScaleLocation\">"+lTable.languages[cvjs_currentLanguage].PrintModal.PrintToScale+"</div><div id=\"enterPrintToScaleValueLocation\">"+lTable.languages[cvjs_currentLanguage].PrintModal.EnterScale+"</div><input value=\"1:1\" id=\"cvjs_printToScaleValue\" class=\"cvjs_inputCalibrateModal\">";
		else  // no print to scale
			cvjs_printModal_content ="<table class=\"printModalTable\"><tr><td><div class=\"printModalHeader\"><b class=\"top_bar_gray_underbar\">_</b><a href=\"http://cadviewerjs.com\"><img src=\""+cvjs_imagesLocation+"logoJS.png\" border=\"2\" width=\"20\" height=\"20\" /></a><b class=\"top_bar_gray_underbar\">__</b><b id=\"cvjs_printHeader\">"+lTable.languages[cvjs_currentLanguage].PrintModal.Header+"</b><button type=\"button\" class=\"close\" data-dismiss=\"modal\" onClick=\"cvjs_exitPrintModal(\'"+floorplan_div+"\' ,1);\">&times;<b class=\"top_bar_gray_underbar\">_</b></button></div></td></tr><tr><td><canvas id=\"dummy\" width=\"10\" height=\"25\"></canvas>"+lTable.languages[cvjs_currentLanguage].PrintModal.Paper+"<canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas><select id=\"cvjs_paperSize\"><option value=\"1\">A4</option><option value=\"2\">A3</option><option value=\"3\">A2</option><option value=\"4\">Letter</option><option value=\"5\">Ledger</option><option value=\"6\">Legal</option><option value=\"7\">ANSI C</option><option value=\"8\">A1</option><option value=\"9\">A0</option><option value=\"10\">US Arch D</option><option value=\"11\">US Arch E1</option></select><canvas id=\"dummy\" width=\"45\" height=\"10\"></canvas>"+lTable.languages[cvjs_currentLanguage].PrintModal.Orientation+"<canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas><select id=\"cvjs_paperOrientation\"><option value=\"1\">Landscape</option><option value=\"2\">Portrait</option></select></td></tr><tr><td><canvas id=\"dummy\" width=\"10\" height=\"25\"></canvas>"+lTable.languages[cvjs_currentLanguage].PrintModal.Resolution+"<canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas><input value=\"300\" id=\"cvjs_printResolution\" class=\"cvjs_inputCalibrateModal\"><canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas><i class=\"cvjs_textModalSmall\">"+lTable.languages[cvjs_currentLanguage].PrintModal.ResolutionText+"</i><canvas id=\"dummy\" width=\"32\" height=\"10\"></canvas><input id=\"cvjs_print_button\" type=\"button\" name=\"bPrint\" value=\""+lTable.languages[cvjs_currentLanguage].PrintModal.Print+"\" onmousedown=\"cvjs_exitPrintModal(\'"+floorplan_div+"\', 2);\"><canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas></td></tr><tr><td></td></tr></table><input type=\"checkbox\" id=\"cvjs_grayscale_checkbox\" value=\"grayscale_status\"><canvas id=\"dummy\" width=\"30\" height=\"30\"></canvas></td><div id=\"greyscaleLocation\">"+lTable.languages[cvjs_currentLanguage].PrintModal.Grayscale+"</div><input type=\"checkbox\" id=\"cvjs_printpdf_checkbox\" value=\"grayscale_status\"><div id=\"printToPdfLocation\">"+lTable.languages[cvjs_currentLanguage].PrintModal.PrintPDF+"</div>";
	}
	else{   // print to PDF removed
		if (cvjs_PrintModal_PrintToScale)
			cvjs_printModal_content ="<table class=\"printModalTable\"><tr><td><div class=\"printModalHeader\"><b class=\"top_bar_gray_underbar\">_</b><a href=\"http://cadviewerjs.com\"><img src=\""+cvjs_imagesLocation+"logoJS.png\" border=\"2\" width=\"20\" height=\"20\" /></a><b class=\"top_bar_gray_underbar\">__</b><b id=\"cvjs_printHeader\">"+lTable.languages[cvjs_currentLanguage].PrintModal.Header+"</b><button type=\"button\" class=\"close\" data-dismiss=\"modal\" onClick=\"cvjs_exitPrintModal(\'"+floorplan_div+"\' ,1);\">&times;<b class=\"top_bar_gray_underbar\">_</b></button></div></td></tr><tr><td><canvas id=\"dummy\" width=\"10\" height=\"25\"></canvas>"+lTable.languages[cvjs_currentLanguage].PrintModal.Paper+"<canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas><select id=\"cvjs_paperSize\"><option value=\"1\">A4</option><option value=\"2\">A3</option><option value=\"3\">A2</option><option value=\"4\">Letter</option><option value=\"5\">Ledger</option><option value=\"6\">Legal</option><option value=\"7\">ANSI C</option><option value=\"8\">A1</option><option value=\"9\">A0</option><option value=\"10\">US Arch D</option><option value=\"11\">US Arch E1</option></select><canvas id=\"dummy\" width=\"45\" height=\"10\"></canvas>"+lTable.languages[cvjs_currentLanguage].PrintModal.Orientation+"<canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas><select id=\"cvjs_paperOrientation\"><option value=\"1\">Landscape</option><option value=\"2\">Portrait</option></select></td></tr><tr><td><canvas id=\"dummy\" width=\"10\" height=\"25\"></canvas>"+lTable.languages[cvjs_currentLanguage].PrintModal.Resolution+"<canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas><input value=\"300\" id=\"cvjs_printResolution\" class=\"cvjs_inputCalibrateModal\"><canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas><i class=\"cvjs_textModalSmall\">"+lTable.languages[cvjs_currentLanguage].PrintModal.ResolutionText+"</i><canvas id=\"dummy\" width=\"32\" height=\"10\"></canvas><input id=\"cvjs_print_button\" type=\"button\" name=\"bPrint\" value=\""+lTable.languages[cvjs_currentLanguage].PrintModal.Print+"\" onmousedown=\"cvjs_exitPrintModal(\'"+floorplan_div+"\', 2);\"><canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas></td></tr><tr><td></td></tr></table><input type=\"checkbox\" id=\"cvjs_grayscale_checkbox\" value=\"grayscale_status\"><canvas id=\"dummy\" width=\"30\" height=\"30\"></canvas></td><div id=\"greyscaleLocation\">"+lTable.languages[cvjs_currentLanguage].PrintModal.Grayscale+"</div><input type=\"checkbox\" id=\"cvjs_printtoscale_checkbox\" value=\"printtoscale_status\"><div id=\"printToScaleLocation\">"+lTable.languages[cvjs_currentLanguage].PrintModal.PrintToScale+"</div><div id=\"enterPrintToScaleValueLocation\">"+lTable.languages[cvjs_currentLanguage].PrintModal.EnterScale+"</div><input value=\"1:1\" id=\"cvjs_printToScaleValue\" class=\"cvjs_inputCalibrateModal\">";		
		else  // no print to scale
			cvjs_printModal_content ="<table class=\"printModalTable\"><tr><td><div class=\"printModalHeader\"><b class=\"top_bar_gray_underbar\">_</b><a href=\"http://cadviewerjs.com\"><img src=\""+cvjs_imagesLocation+"logoJS.png\" border=\"2\" width=\"20\" height=\"20\" /></a><b class=\"top_bar_gray_underbar\">__</b><b id=\"cvjs_printHeader\">"+lTable.languages[cvjs_currentLanguage].PrintModal.Header+"</b><button type=\"button\" class=\"close\" data-dismiss=\"modal\" onClick=\"cvjs_exitPrintModal(\'"+floorplan_div+"\' ,1);\">&times;<b class=\"top_bar_gray_underbar\">_</b></button></div></td></tr><tr><td><canvas id=\"dummy\" width=\"10\" height=\"25\"></canvas>"+lTable.languages[cvjs_currentLanguage].PrintModal.Paper+"<canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas><select id=\"cvjs_paperSize\"><option value=\"1\">A4</option><option value=\"2\">A3</option><option value=\"3\">A2</option><option value=\"4\">Letter</option><option value=\"5\">Ledger</option><option value=\"6\">Legal</option><option value=\"7\">ANSI C</option><option value=\"8\">A1</option><option value=\"9\">A0</option><option value=\"10\">US Arch D</option><option value=\"11\">US Arch E1</option></select><canvas id=\"dummy\" width=\"45\" height=\"10\"></canvas>"+lTable.languages[cvjs_currentLanguage].PrintModal.Orientation+"<canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas><select id=\"cvjs_paperOrientation\"><option value=\"1\">Landscape</option><option value=\"2\">Portrait</option></select></td></tr><tr><td><canvas id=\"dummy\" width=\"10\" height=\"25\"></canvas>"+lTable.languages[cvjs_currentLanguage].PrintModal.Resolution+"<canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas><input value=\"300\" id=\"cvjs_printResolution\" class=\"cvjs_inputCalibrateModal\"><canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas><i class=\"cvjs_textModalSmall\">"+lTable.languages[cvjs_currentLanguage].PrintModal.ResolutionText+"</i><canvas id=\"dummy\" width=\"32\" height=\"10\"></canvas><input id=\"cvjs_print_button\" type=\"button\" name=\"bPrint\" value=\""+lTable.languages[cvjs_currentLanguage].PrintModal.Print+"\" onmousedown=\"cvjs_exitPrintModal(\'"+floorplan_div+"\', 2);\"><canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas></td></tr><tr><td></td></tr></table><input type=\"checkbox\" id=\"cvjs_grayscale_checkbox\" value=\"grayscale_status\"><canvas id=\"dummy\" width=\"30\" height=\"30\"></canvas></td><div id=\"greyscaleLocation\">"+lTable.languages[cvjs_currentLanguage].PrintModal.Grayscale+"</div>";		
	}




	jQuery("#cvjs_modals"+"_"+floorplan_div).append("<div class=\"printModal\" id=\"printModal_"+floorplan_div+"\"></div>");
	jQuery("#printModal_"+floorplan_div).html(cvjs_printModal_content);

	cvjs_textSearchModal_content = "<table class=\"textsearchModalTable\" ><tr><td><div class=\"textSearchHeader\"><b class=\"top_bar_gray_underbar\">_</b><a href=\"http://cadviewerjs.com\"><img src=\""+cvjs_imagesLocation+"logoJS.png\" border=\"2\" width=\"20\" height=\"20\" /></a><b class=\"top_bar_gray_underbar\">__</b><b id=\"cvjs_searchTextHeader\">"+lTable.languages[cvjs_currentLanguage].SearchTextModal.Header+"</b><button type=\"button\" class=\"close\" data-dismiss=\"modal\" onClick=\"cvjs_exit_textsearchmodal(\'"+floorplan_div+"\');\">&times;<b class=\"top_bar_gray_underbar\">_</b></button></div></td></tr><tr><td><canvas id=\"dummy\" width=\"10\" height=\"23\"></canvas>"+lTable.languages[cvjs_currentLanguage].SearchTextModal.SearchText+"<canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas><input value=\"\" id=\"cvjs_searchTextFromModal\" class=\"cvjs_inputTextSearchModalwide\"></td></tr><tr><td><canvas id=\"dummy\" width=\"10\" height=\"22\"></canvas>"+lTable.languages[cvjs_currentLanguage].SearchTextModal.Zoom+"<canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas><input value=\"1000\" id=\"cvjs_percentageLevelFromModal\" class=\"cvjs_inputTextSearchModal\"><canvas id=\"dummy\" width=\"5\" height=\"10\"></canvas></canvas><b class=\"cvjs_textModalSmall\">(%)</b><canvas id=\"dummy\" width=\"30\" height=\"10\"></canvas><input id=\"cvjs_textsearch_button\" type=\"button\" name=\"bPrint\" value=\""+lTable.languages[cvjs_currentLanguage].SearchTextModal.Search+"\" onClick=\"cvjs_startSearchText();\"><canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas></td></tr></table>"
	jQuery("#cvjs_modals"+"_"+floorplan_div).append("<div class=\"textsearchModal\" id=\"textsearchModal_"+floorplan_div+"\"></div>");
	jQuery("#textsearchModal_"+floorplan_div).html(cvjs_textSearchModal_content);

	
	// 3.3.02e
	cvjs_customSearchModal_content = "<table class=\"textsearchModalTable\" ><tr><td><div class=\"textSearchHeader\"><b class=\"top_bar_gray_underbar\">_</b><a href=\"http://cadviewerjs.com\"><img src=\""+cvjs_imagesLocation+"logoJS.png\" border=\"2\" width=\"20\" height=\"20\" /></a><b class=\"top_bar_gray_underbar\">__</b><b id=\"cvjs_searchTextHeader\">"+lTable.languages[cvjs_currentLanguage].SearchCustomModal.Header+"</b><button type=\"button\" class=\"close\" data-dismiss=\"modal\" onClick=\"cvjs_exit_customsearchmodal(\'"+floorplan_div+"\');\">&times;<b class=\"top_bar_gray_underbar\">_</b></button></div></td></tr><tr><td><canvas id=\"dummy\" width=\"10\" height=\"23\"></canvas>"+lTable.languages[cvjs_currentLanguage].SearchCustomModal.SearchText+"<canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas><input value=\"\" id=\"cvjs_customSearchTestFromModal\" class=\"cvjs_inputTextSearchModalwide\"></td></tr><tr><td><canvas id=\"dummy\" width=\"10\" height=\"22\"></canvas><canvas id=\"dummy\" width=\"230\" height=\"10\"></canvas><canvas id=\"dummy\" width=\"5\" height=\"10\"></canvas></canvas><canvas id=\"dummy\" width=\"30\" height=\"10\"></canvas><input id=\"cvjs_textsearch_button\" type=\"button\" name=\"bPrint\" value=\""+lTable.languages[cvjs_currentLanguage].SearchTextModal.Search+"\" onClick=\"cvjs_startCustomSearchText();\"><canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas></td></tr></table>"
	jQuery("#cvjs_modals"+"_"+floorplan_div).append("<div class=\"textsearchModal\" id=\"customsearchModal_"+floorplan_div+"\"></div>");
	jQuery("#customsearchModal_"+floorplan_div).html(cvjs_customSearchModal_content);
	jQuery("#customsearchModal_"+floorplan_div).hide();


	cvjs_customUpdateModal_content = "<table class=\"textsearchModalTable\" ><tr><td><div class=\"textSearchHeader\"><b class=\"top_bar_gray_underbar\">_</b><a href=\"http://cadviewerjs.com\"><img src=\""+cvjs_imagesLocation+"logoJS.png\" border=\"2\" width=\"20\" height=\"20\" /></a><b class=\"top_bar_gray_underbar\">__</b><b id=\"cvjs_searchTextHeader\">"+lTable.languages[cvjs_currentLanguage].SearchCustomModal.Header+"</b><button type=\"button\" class=\"close\" data-dismiss=\"modal\" onClick=\"cvjs_exit_customsearchmodal(\'"+floorplan_div+"\');\">&times;<b class=\"top_bar_gray_underbar\">_</b></button></div></td></tr><tr><td><canvas id=\"dummy\" width=\"10\" height=\"23\"></canvas>"+lTable.languages[cvjs_currentLanguage].SearchCustomModal.SearchText+"<canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas><input value=\"\" id=\"cvjs_customSearchTestFromModal\" class=\"cvjs_inputTextSearchModalwide\"></td></tr><tr><td><canvas id=\"dummy\" width=\"10\" height=\"22\"></canvas><canvas id=\"dummy\" width=\"230\" height=\"10\"></canvas><canvas id=\"dummy\" width=\"5\" height=\"10\"></canvas></canvas><canvas id=\"dummy\" width=\"30\" height=\"10\"></canvas><input id=\"cvjs_textsearch_button\" type=\"button\" name=\"bPrint\" value=\""+lTable.languages[cvjs_currentLanguage].SearchTextModal.Search+"\" onClick=\"cvjs_startCustomSearchText();\"><canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas></td></tr></table>"
	jQuery("#cvjs_modals"+"_"+floorplan_div).append("<div class=\"textsearchModal\" id=\"customupdateModal_"+floorplan_div+"\"></div>");
	jQuery("#customupdateModal_"+floorplan_div).html(cvjs_customUpdateModal_content);
	jQuery("#customupdateModal_"+floorplan_div).hide();


	// 3.3.02e


	
	
// CCCC
	cvjs_infoMessageModal_content = "<div class=\"modal-dialog modal-dialog-md\"><div class=\"info_messageModalWrapper\"><table><tr><td><div id=\"infoModalHeader\"><b class=\"top_bar_gray_underbar\">_</b><a href=\"http://cadviewerjs.com\"><img src=\""+cvjs_imagesLocation+"logoJS.png\" border=\"2\" width=\"20\" height=\"20\" /></a><b class=\"top_bar_gray_underbar\">__</b><b id=\"cvjs_infoMessageHeader\">"+lTable.languages[cvjs_currentLanguage].InfoMessageModal.Header+"</b><button type=\"button\" class=\"close\" data-dismiss=\"modal\" onClick=\"cvjs_exit_informationmodal(\'"+floorplan_div+"\');\">&times;<b class=\"top_bar_gray_underbar\">_</b></button></div></td></tr><tr><td><canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas><div id=\"cvjs_informationModalText\">Text here</div></td></tr></table></div></div>"
	jQuery("#cvjs_modals"+"_"+floorplan_div).append("<div class=\"info_messageModal\" id=\"info_messageModal_"+floorplan_div+"\" class=\"modal fade\"></div>");
	jQuery("#info_messageModal_"+floorplan_div).html(cvjs_infoMessageModal_content);


//	cvjs_infoMessageModal_content = "<table class=\"info_messageModal_2Table\"><tr><td><div class=\"infoModalHeader\"><b class=\"top_bar_gray_underbar\">_</b><a href=\"http://cadviewerjs.com\"><img src=\""+cvjs_imagesLocation+"logoJS.png\" border=\"2\" width=\"20\" height=\"20\" /></a><b class=\"top_bar_gray_underbar\">__</b><b id=\"cvjs_infoMessageHeader\">"+lTable.languages[cvjs_currentLanguage].InfoMessageModal.Header+"</b><button type=\"button\" class=\"close\" data-dismiss=\"modal\" onClick=\"cvjs_exit_informationmodal_2(\'"+floorplan_div+"\');\">&times;<b class=\"top_bar_gray_underbar\">_</b></button></div></td></tr><tr><td><canvas id=\"dummy\" width=\"10\" height=\"10\" fillStyle=\"#FF9900\"></td><td></canvas><div id=\"cvjs_informationModalText_2_"+floorplan_div+"\"> Text here</div></td></tr></table>"
	cvjs_infoMessageModal_content = "<table class=\"info_messageModal_2Table\"><tr><td><div class=\"infoModalHeader\"><b class=\"top_bar_gray_underbar\">_</b><a href=\"http://cadviewerjs.com\"><img src=\""+cvjs_imagesLocation+"logoJS.png\" border=\"2\" width=\"20\" height=\"20\" /></a><b class=\"top_bar_gray_underbar\">__</b><b id=\"cvjs_infoMessageHeader\">"+lTable.languages[cvjs_currentLanguage].InfoMessageModal.Header+"</b><button type=\"button\" class=\"close\" data-dismiss=\"modal\" onClick=\"cvjs_exit_informationmodal_2(\'"+floorplan_div+"\');\">&times;<b class=\"top_bar_gray_underbar\">_</b></button></div></td></tr><tr><td><div class=\"cvjs_informationModalText_2_div\"   id=\"cvjs_informationModalText_2_"+floorplan_div+"\"> Text here</div></td></tr></table>"
	jQuery("#cvjs_modals"+"_"+floorplan_div).append("<div class=\"info_messageModal_2\" id=\"info_messageModal_2_"+floorplan_div+"\"></div>");
	jQuery("#info_messageModal_2_"+floorplan_div).html(cvjs_infoMessageModal_content);


	cvjs_redlineThicknessModal_content = "<table class=\"thicknessModalTable\"><tr><td><div class=\"thicknessHeader\"><b class=\"top_bar_gray_underbar\">_</b><a href=\"http://cadviewerjs.com\"><img src=\""+cvjs_imagesLocation+"logoJS.png\" border=\"2\" width=\"20\" height=\"20\" /></a><b class=\"top_bar_gray_underbar\">__</b><b id=\"cvjs_redlineThicknessHeader\">"+lTable.languages[cvjs_currentLanguage].RedlineThicknessModal.Header+"</b><button type=\"button\" class=\"close\" data-dismiss=\"modal\" onClick=\"cvjs_exit_redlinethicknessmodal(\'"+floorplan_div+"\');\">&times;<b class=\"top_bar_gray_underbar\">_</b></button></div></td></tr><tr><td><canvas id=\"dummy\" width=\"10\" height=\"24\"></canvas>"+lTable.languages[cvjs_currentLanguage].RedlineThicknessModal.Thickness+"<canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas><input value=\"3\" id=\"cvjs_redlineThicknessInput_"+floorplan_div+"\" class=\"cvjs_inputThicknessModal\"><canvas id=\"dummy\" width=\"70\" height=\"5\"></canvas><input id=\"cvjs_thickness_button\" type=\"button\" name=\"bPrint\" value=\""+lTable.languages[cvjs_currentLanguage].RedlineThicknessModal.OK+"\" onClick=\"cvjs_setRedlineThicknessViaButton(\'"+floorplan_div+"\');\"><canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas></td></tr></table>";
	jQuery("#cvjs_modals"+"_"+floorplan_div).append("<div class=\"thicknessModal\" id=\"thicknessModal_"+floorplan_div+"\"></div>");
	jQuery("#thicknessModal_"+floorplan_div).html(cvjs_redlineThicknessModal_content);

	
	cvjs_documentPageChangeModal_content = "<table class=\"documentPageChangeModalTable\"><tr><td><div class=\"thicknessHeader\"><b class=\"top_bar_gray_underbar\">_</b><a href=\"http://cadviewerjs.com\"><img src=\""+cvjs_imagesLocation+"logoJS.png\" border=\"2\" width=\"20\" height=\"20\" /></a><b class=\"top_bar_gray_underbar\">__</b><b id=\"cvjs_redlineThicknessHeader\">"+lTable.languages[cvjs_currentLanguage].DocumentPageChangeModal.Header+"</b><button type=\"button\" class=\"close\" data-dismiss=\"modal\" onClick=\"cvjs_exit_documentpagechangemodal(\'"+floorplan_div+"\');\">&times;<b class=\"top_bar_gray_underbar\">_</b></button></div></td></tr><tr><td><canvas id=\"dummy\" width=\"10\" height=\"24\"></canvas>"+lTable.languages[cvjs_currentLanguage].DocumentPageChangeModal.Page+"<canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas><input value=\"1\" id=\"cvjs_inputDocumentPageChange_"+floorplan_div+"\" class=\"cvjs_inputDocumentPageChangeModal\"><canvas id=\"dummy\" width=\"70\" height=\"5\"></canvas><input id=\"cvjs_documentPageChangeModal_button\" type=\"button\" name=\"bPrint\" value=\""+lTable.languages[cvjs_currentLanguage].DocumentPageChangeModal.OK+"\" onClick=\"cvjs_changePageByNumberViaButton(\'"+floorplan_div+"\');\"><canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas></td></tr></table>";
	jQuery("#cvjs_modals"+"_"+floorplan_div).append("<div class=\"documentPageChangeModal\" id=\"documentPageChangeModal_"+floorplan_div+"\"></div>");
	jQuery("#documentPageChangeModal_"+floorplan_div).html(cvjs_documentPageChangeModal_content);

	
	cvjs_collabStartModal_content = "<table class=\"collabStartModalTable\"><tr><td><div class=\"collabStartHeader\"><b class=\"top_bar_gray_underbar\">_</b><a href=\"http://cadviewerjs.com\"><img src=\""+cvjs_imagesLocation+"logoJS.png\" border=\"2\" width=\"20\" height=\"20\" /></a><b class=\"top_bar_gray_underbar\">__</b><b id=\"cvjs_redlineThicknessHeader\">"+lTable.languages[cvjs_currentLanguage].CollaborationStartModal.Header+"</b><button type=\"button\" class=\"close\" data-dismiss=\"modal\" onClick=\"cvjs_exit_startcollabmodal(\'"+floorplan_div+"\');\">&times;<b class=\"top_bar_gray_underbar\">_</b></button></div></td></tr><tr><td><canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas>"+lTable.languages[cvjs_currentLanguage].CollaborationStartModal.Session+"<canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas><input value=\"mySession\" id=\"cvjs_collabSessionInput\" class=\"cvjs_input_collabStartModal\"><canvas id=\"dummy\" width=\"70\" height=\"5\"></canvas><input id=\"cvjs_collabStart_button\" type=\"button\" name=\"bPrint\" value=\""+lTable.languages[cvjs_currentLanguage].CollaborationStartModal.OK+"\" onClick=\"cvjs_start_collab_button();\"><canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas></td></tr></table>";
	jQuery("#cvjs_modals"+"_"+floorplan_div).append("<div class=\"collabStartModal\" id=\"collabStartModal_"+floorplan_div+"\"></div>");
	jQuery("#collabStartModal_"+floorplan_div).html(cvjs_collabStartModal_content);


	cvjs_redlineColorModal_content = "<table class=\"colorModalTable\"><tr><td><div class=\"colorModalHeader\" id=\"colorModalHeader\"><b class=\"top_bar_gray_underbar\">_</b><a href=\"http://cadviewerjs.com\"><img src=\""+cvjs_imagesLocation+"logoJS.png\" border=\"2\" width=\"20\" height=\"20\" /></a><b class=\"top_bar_gray_underbar\">__</b><b id=\"cvjs_redlineColorHeader\">"+lTable.languages[cvjs_currentLanguage].RedlineColorModal.Header+"</b><button type=\"button\" class=\"close\" data-dismiss=\"modal\" onClick=\"cvjs_color_modal_hide(\'"+floorplan_div+"\');\">&times;<b class=\"top_bar_gray_underbar\">_</b></button></div></td></tr><tr><td><canvas id=\"dummy\" width=\"10\" height=\"23\"></canvas>"+lTable.languages[cvjs_currentLanguage].RedlineColorModal.PickColor+"<canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas><input id=\"cvjs_colorPickerValue\" value=\"FF0000\" class=\"cvjs_inputRedlineColorModal jscolor {width:101, padding:10, shadow:false, borderWidth:0, backgroundColor:\'transparent\', insetColor:\'#000\',closable:true, closeText:'Close Color Picker!', onFineChange:\'cvjs_setRedlineColorFromPicker(this)\'}\"><canvas id=\"dummy\" width=\"40\" height=\"10\"></canvas>"+lTable.languages[cvjs_currentLanguage].RedlineColorModal.SelectColor+"<canvas id=\"dummy\" width=\"20\" height=\"10\"></canvas><input class=\"radioColor1\" id=\"radioColor1_"+floorplan_div+"\" type=\"radio\" name=\"radioColor\" value=\"1\" checked=\"checked\"><img id=\"cvjs_radioColor1_img\" src=\""+cvjs_imagesLocation+"blue_color.png\" border=\"1\"/><label id=\"cvjs_radio1\" for=\"radio1\">"+lTable.languages[cvjs_currentLanguage].RedlineColorModal.Blue+"</label><canvas id=\"dummy\" width=\"26\" height=\"10\"></canvas><input class=\"radioColor2\" id=\"radioColor2_"+floorplan_div+"\" type=\"radio\" name=\"radioColor\" value=\"2\"><img id=\"cvjs_radioColor2_img\" src=\""+cvjs_imagesLocation+"red_color.png\" border=\"1\"/><label id=\"cvjs_radio2\" for=\"radio2\">"+lTable.languages[cvjs_currentLanguage].RedlineColorModal.Red+"</label></td></tr><tr><td><canvas id=\"dummy\" width=\"303\" height=\"10\"></canvas><input class=\"radioColor3\" id=\"radioColor3_"+floorplan_div+"\" type=\"radio\" name=\"radioColor\" value=\"3\"><img id=\"cvjs_radioColor3_img\" src=\""+cvjs_imagesLocation+"orange_color.png\" border=\"1\"/><label id=\"cvjs_radio3\" for=\"radio3\">"+lTable.languages[cvjs_currentLanguage].RedlineColorModal.Orange+"</label><canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas><input class=\"radioColor4\" id=\"radioColor4_"+floorplan_div+"\" type=\"radio\" name=\"radioColor\" value=\"4\"><img id=\"cvjs_radioColor4_img\" src=\""+cvjs_imagesLocation+"yellow_color.png\" border=\"1\"/><label id=\"cvjs_radio4\" for=\"radio4\">"+lTable.languages[cvjs_currentLanguage].RedlineColorModal.Yellow+"</label></td></tr><tr><td><canvas id=\"dummy\" width=\"303\" height=\"10\"></canvas><input class=\"radioColor5\" id=\"radioColor5_"+floorplan_div+"\" type=\"radio\" name=\"radioColor\" value=\"5\"><img id=\"cvjs_radioColor5_img\" src=\""+cvjs_imagesLocation+"green_color.png\" border=\"1\"/><label id=\"cvjs_radio5\" for=\"radio5\">"+lTable.languages[cvjs_currentLanguage].RedlineColorModal.Green+"</label><canvas id=\"dummy\" width=\"17\" height=\"10\"></canvas><input class=\"radioColor6\" id=\"radioColor6_"+floorplan_div+"\" type=\"radio\" name=\"radioColor\" value=\"6\"><img id=\"cvjs_radioColor6_img\" src=\""+cvjs_imagesLocation+"purple_color.png\" border=\"1\"/><label id=\"cvjs_radio6\" for=\"radio6\">"+lTable.languages[cvjs_currentLanguage].RedlineColorModal.Purple+"</label></td></tr><tr><td><canvas id=\"dummy\" width=\"303\" height=\"10\"></canvas><input class=\"radioColor7\" id=\"radioColor7_"+floorplan_div+"\" type=\"radio\" name=\"radioColor\" value=\"7\"><img id=\"cvjs_radioColor7_img\" src=\""+cvjs_imagesLocation+"gray_color.png\" border=\"1\"/><label id=\"cvjs_radio7\" for=\"radio7\">"+lTable.languages[cvjs_currentLanguage].RedlineColorModal.Gray+"</label><canvas id=\"dummy\" width=\"24\" height=\"10\"></canvas><input class=\"radioColor8\" id=\"radioColor8_"+floorplan_div+"\" type=\"radio\" name=\"radioColor\" value=\"8\"><img id=\"cvjs_radioColor8_img\" src=\""+cvjs_imagesLocation+"brown_color.png\" border=\"1\"/><label id=\"cvjs_radio8\" for=\"radio8\">"+lTable.languages[cvjs_currentLanguage].RedlineColorModal.Brown+"</label> </td></tr><tr><td><canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas></td></tr><tr><td><canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas><input id=\"cvjs_redlinecolor_button\" type=\"button\" name=\"bPrint\" value=\""+lTable.languages[cvjs_currentLanguage].RedlineColorModal.OK+"\" onClick=\"cvjs_setRedlineColorViaButton(\'"+floorplan_div+"\');\"><canvas id=\"dummy\" width=\"10\" height=\"10\"></td></tr></table>";
	jQuery("#cvjs_modals"+"_"+floorplan_div).append("<div  class=\"colorModal\"  id=\"colorModal_"+floorplan_div+"\"></div>");
	jQuery("#colorModal_"+floorplan_div).html(cvjs_redlineColorModal_content);

	
	
	
	cvjs_redlineEllipseModal_content = "<table class=\"ellipseModalTable\"><tr><td><div class=\"ellipseModalHeader\" id=\"ellipseModalHeader\"><b class=\"top_bar_gray_underbar\">_</b><a href=\"http://cadviewerjs.com\"><img src=\""+cvjs_imagesLocation+"logoJS.png\" border=\"2\" width=\"20\" height=\"20\" /></a><b class=\"top_bar_gray_underbar\">__</b><b id=\"cvjs_redlineEllipseHeader\">"+lTable.languages[cvjs_currentLanguage].RedlineEllipseModal.Header+"</b><button type=\"button\" class=\"close\" data-dismiss=\"modal\" onClick=\"cvjs_ellipse_modal_hide(\'"+floorplan_div+"\');\">&times;<b class=\"top_bar_gray_underbar\">_</b></button></div></td></tr><tr><td><canvas id=\"dummy\" width=\"10\" height=\"23\"></canvas>"+lTable.languages[cvjs_currentLanguage].RedlineEllipseModal.SelectType+"<canvas id=\"dummy\" width=\"20\" height=\"10\"></canvas><input class=\"radioEllipse1\" id=\"radioEllipse1_"+floorplan_div+"\" type=\"radio\" name=\"radioEllipse\" value=\"1\" checked=\"checked\"><label id=\"cvjs_ellipse1\" for=\"ellipse1\">"+lTable.languages[cvjs_currentLanguage].RedlineEllipseModal.Ellipse+"</label></tr><tr><td><canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas><input class=\"radioEllipse2\" id=\"radioEllipse2_"+floorplan_div+"\" type=\"radio\" name=\"radioEllipse\" value=\"2\"><label id=\"cvjs_ellipse2\" for=\"radio2\">"+lTable.languages[cvjs_currentLanguage].RedlineEllipseModal.Cloud+"</label><canvas id=\"dummy\" width=\"10\" height=\"10\"></tr><tr><td><canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas><input id=\"cvjs_ellipse_button\" type=\"button\" name=\"bPrint\" value=\""+lTable.languages[cvjs_currentLanguage].RedlineColorModal.OK+"\" onClick=\"cvjs_drawEllipseViaButton(\'"+floorplan_div+"\');\"><canvas id=\"dummy\" width=\"10\" height=\"10\"></td></tr></table>";
	jQuery("#cvjs_modals"+"_"+floorplan_div).append("<div  class=\"ellipseModal\"  id=\"ellipseModal_"+floorplan_div+"\"></div>");
	jQuery("#ellipseModal_"+floorplan_div).html(cvjs_redlineEllipseModal_content);
	
	
	
	cvjs_creationModeModal_content = "<table class=\"creationModalTable\"><tr><td><div class=\"creationModalHeader\" id=\"creationModalHeader\"><b class=\"top_bar_gray_underbar\">_</b><a href=\"http://cadviewerjs.com\"><img src=\""+cvjs_imagesLocation+"logoJS.png\" border=\"2\" width=\"20\" height=\"20\" /></a><b class=\"top_bar_gray_underbar\">__</b><b id=\"cvjs_redlineEllipseHeader\">"+lTable.languages[cvjs_currentLanguage].CreationModeModal.Header+"</b><button type=\"button\" class=\"close\" data-dismiss=\"modal\" onClick=\"cvjs_creation_modal_hide(\'"+floorplan_div+"\');\">&times;<b class=\"top_bar_gray_underbar\">_</b></button></div></td></tr><tr><td><canvas id=\"dummy\" width=\"10\" height=\"23\"></canvas>"+lTable.languages[cvjs_currentLanguage].CreationModeModal.SelectType+"<canvas id=\"dummy\" width=\"20\" height=\"10\"></canvas><input class=\"radioCreation1\" id=\"radioCreation1_"+floorplan_div+"\" type=\"radio\" name=\"radioCreation\" value=\"1\" checked=\"checked\"><label id=\"cvjs_ellipse1\" for=\"ellipse1\">"+lTable.languages[cvjs_currentLanguage].CreationModeModal.DataSource+"</label></tr><tr><td><canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas><input class=\"radioCreation2\" id=\"radioCreation2_"+floorplan_div+"\" type=\"radio\" name=\"radioCreation\" value=\"2\"><label id=\"cvjs_ellipse2\" for=\"radio2\">"+lTable.languages[cvjs_currentLanguage].CreationModeModal.Manually+"</label><canvas id=\"dummy\" width=\"10\" height=\"10\"></tr><tr><td><canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas><input id=\"cvjs_ellipse_button\" type=\"button\" name=\"bPrint\" value=\""+lTable.languages[cvjs_currentLanguage].CreationModeModal.OK+"\" onClick=\"cvjs_creation_modal_show(\'"+floorplan_div+"\');\"><canvas id=\"dummy\" width=\"10\" height=\"10\"></td></tr></table>";
	jQuery("#cvjs_modals"+"_"+floorplan_div).append("<div  class=\"creationModal\"  id=\"creationModeModal_"+floorplan_div+"\"></div>");
	jQuery("#creationModeModal_"+floorplan_div).html(cvjs_creationModeModal_content);
	
	
	//cvjs_backgroundColorModal_content = "<table><tr><td><div class=\"backgroundModalHeader\" id=\"backgroundModalHeader\"><b class=\"top_bar_gray_underbar\">_</b><a href=\"http://cadviewerjs.com\"><img src=\""+cvjs_imagesLocation+"logoJS.png\" border=\"2\" width=\"20\" height=\"20\" /></a><b class=\"top_bar_gray_underbar\">__</b><b id=\"cvjs_backgroundColorHeader\">"+lTable.languages[cvjs_currentLanguage].BackgroundColorModal.Header+"</b><button type=\"button\" class=\"close\" data-dismiss=\"modal\" onClick=\"cvjs_exit_backgroundColor(\'"+floorplan_div+"\');\">&times;<b class=\"top_bar_gray_underbar\">_</b></button></div></td></tr><tr><td><canvas id=\"dummy\" width=\"10\" height=\"23\"></canvas>"+lTable.languages[cvjs_currentLanguage].BackgroundColorModal.PickColor+"<canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas><input id=\"cvjs_backgroundPickerValue\" value=\"FFFFFF\" class=\"cvjs_inputBackgroundColorModal jscolor {width:101, padding:10, shadow:false, borderWidth:0, backgroundColor:\'transparent\', insetColor:\'#000\',closable:true, closeText:'Close Color Picker!', onFineChange:\'cvjs_setBackgroundColorHex(this)\'}\"><canvas id=\"dummy\" width=\"40\" height=\"10\"></canvas>"+lTable.languages[cvjs_currentLanguage].BackgroundColorModal.SelectColor+"<canvas id=\"dummy\" width=\"20\" height=\"10\"></canvas><input class=\"radioColor1_background\" id=\"radioColor1_background_"+floorplan_div+"\" type=\"radio\" name=\"radioColor\" value=\"1\" checked=\"checked\"><img id=\"cvjs_radioColor1_img_background\" src=\""+cvjs_imagesLocation+"white_color.png\" border=\"1\"/><label id=\"cvjs_radio1\" for=\"radio1\">"+lTable.languages[cvjs_currentLanguage].BackgroundColorModal.White+"</label><canvas id=\"dummy\" width=\"26\" height=\"10\"></canvas><input class=\"radioColor2_background\"  id=\"radioColor2_background_"+floorplan_div+"\" type=\"radio\" name=\"radioColor\" value=\"2\"><img id=\"cvjs_radioColor2_img_background\" src=\""+cvjs_imagesLocation+"black_color.png\" border=\"1\"/><label id=\"cvjs_radio2\" for=\"radio2\">"+lTable.languages[cvjs_currentLanguage].BackgroundColorModal.Black+"</label></td></tr><tr><td><canvas id=\"dummy\" width=\"303\" height=\"10\"></canvas><input class=\"radioColor3_background\"  id=\"radioColor3_background_"+floorplan_div+"\" type=\"radio\" name=\"radioColor\" value=\"3\"><img id=\"cvjs_radioColor3_img_background\" src=\""+cvjs_imagesLocation+"azure_color.png\" border=\"1\"/><label id=\"cvjs_radio3\" for=\"radio3\">"+lTable.languages[cvjs_currentLanguage].BackgroundColorModal.Azure+"</label><canvas id=\"dummy\" width=\"24\" height=\"10\"></canvas><input class=\"radioColor4_background\"  id=\"radioColor4_background_"+floorplan_div+"\" type=\"radio\" name=\"radioColor\" value=\"4\"><img id=\"cvjs_radioColor4_img_background\" src=\""+cvjs_imagesLocation+"pink_color.png\" border=\"1\"/><label id=\"cvjs_radio4\" for=\"radio4\">"+lTable.languages[cvjs_currentLanguage].BackgroundColorModal.Pink+"</label></td></tr><tr><td><canvas id=\"dummy\" width=\"303\" height=\"10\"></canvas><input class=\"radioColor5_background\"  id=\"radioColor5_background_"+floorplan_div+"\" type=\"radio\" name=\"radioColor\" value=\"5\"><img id=\"cvjs_radioColor5_img_background\" src=\""+cvjs_imagesLocation+"snow_color.png\" border=\"1\"/><label id=\"cvjs_radio5\" for=\"radio5\">"+lTable.languages[cvjs_currentLanguage].BackgroundColorModal.Snow+"</label><canvas id=\"dummy\" width=\"26\" height=\"10\"></canvas><input class=\"radioColor6_background\"  id=\"radioColor6_background_"+floorplan_div+"\" type=\"radio\" name=\"radioColor\" value=\"6\"><img id=\"cvjs_radioColor6_img_background\" src=\""+cvjs_imagesLocation+"silver_color.png\" border=\"1\"/><label id=\"cvjs_radio6\" for=\"radio6\">"+lTable.languages[cvjs_currentLanguage].BackgroundColorModal.Silver+"</label></td></tr><tr><td><canvas id=\"dummy\" width=\"303\" height=\"10\"></canvas><input class=\"radioColor7_background\"  id=\"radioColor7_background_"+floorplan_div+"\" type=\"radio\" name=\"radioColor\" value=\"7\"><img id=\"cvjs_radioColor7_img_background\" src=\""+cvjs_imagesLocation+"gray_color.png\" border=\"1\"/><label id=\"cvjs_radio7\" for=\"radio7\">"+lTable.languages[cvjs_currentLanguage].BackgroundColorModal.Gray+"</label><canvas id=\"dummy\" width=\"29\" height=\"10\"></canvas><input class=\"radioColor8_background\"  id=\"radioColor8_background_"+floorplan_div+"\" type=\"radio\" name=\"radioColor\" value=\"8\"><img id=\"cvjs_radioColor8_img_background\" src=\""+cvjs_imagesLocation+"brown_color.png\" border=\"1\"/><label id=\"cvjs_radio8\" for=\"radio8\">"+lTable.languages[cvjs_currentLanguage].BackgroundColorModal.Brown+"</label> </td></tr><tr><td><canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas></td></tr><tr><td><canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas><input id=\"cvjs_redlinecolor_button\" type=\"button\" name=\"bPrint\" value=\""+lTable.languages[cvjs_currentLanguage].BackgroundColorModal.OK+"\" onClick=\"cvjs_setBackgroundColorViaButton(\'"+floorplan_div+"\');\"><canvas id=\"dummy\" width=\"10\" height=\"10\"></td></tr></table>";


	
//	cvjs_redlinetextModal_content = "<table class=\"redlinetextModalTable\"><tr><td><div class=\"redlinetextModalHeader\"><b class=\"top_bar_gray_underbar\">_</b><a href=\"http://cadviewerjs.com\"><img src=\""+cvjs_imagesLocation+"logoJS.png\" border=\"2\" width=\"20\" height=\"20\" /></a><b class=\"top_bar_gray_underbar\">__</b><b id=\"cvjs_redlineTextHeader\">"+lTable.languages[cvjs_currentLanguage].RedlineTextModal.Header+"</b><button type=\"button\" class=\"close\" data-dismiss=\"modal\" onClick=\"cvjs_hide_redline_text_modal(\'"+floorplan_div+"\');\">&times;<b class=\"top_bar_gray_underbar\">_</b></button></div></td></tr><tr><td><canvas id=\"dummy\" width=\"10\" height=\"24\"></canvas>"+lTable.languages[cvjs_currentLanguage].RedlineTextModal.FontSize+"<canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas><input value=\"11\" id=\"cvjs_redlineFontSizeInput_"+floorplan_div+"\" class=\"cvjs_inputRedlineTextModal\"><canvas id=\"dummy\" width=\"70\" height=\"5\"></canvas><canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas></td></tr><tr><td><canvas id=\"dummy\" width=\"10\" height=\"76\"></canvas><textarea class=\"cvjs_redlines_edit_text_1\" id=\"redline_text\" cols=\"33\" rows=\"3\"></textarea><canvas id=\"dummy\" width=\"10\" height=\"5\"></canvas><input id=\"cvjs_redlinetext_button\" type=\"button\" name=\"bPrint\" value=\""+lTable.languages[cvjs_currentLanguage].RedlineTextModal.OK+"\" onClick=\"cvjs_initiateInsertRedlineText(\'"+floorplan_div+"\');\"></td></tr><tr><td><div id=\"cvjs_calibrationModalText\"><canvas id=\"dummy\" width=\"0\" height=\"13\"></canvas>"+lTable.languages[cvjs_currentLanguage].RedlineTextModal.Text+"</div></td></tr></table>";
	
	// 3.0.13e
//	cvjs_publishPDFModal_content = "<table class=\"publishPDFModalTable\"><tr><td><div class=\"publishPDFModalHeader\" id=\"publishPDFModalHeader\"><b class=\"top_bar_gray_underbar\">_</b><a href=\"http://cadviewerjs.com\"><img src=\""+cvjs_imagesLocation+"logoJS.png\" border=\"2\" width=\"20\" height=\"20\" /></a><b class=\"top_bar_gray_underbar\">__</b><b id=\"cvjs_publishPDFHeader\">"+lTable.languages[cvjs_currentLanguage].PublishPDFModal.Header+"</b><button type=\"button\" class=\"close\" data-dismiss=\"modal\" onClick=\"cvjs_publishPDF_modal_hide(\'"+floorplan_div+"\');\">&times;<b class=\"top_bar_gray_underbar\">_</b></button></div></td></tr><tr><td><canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas>"+lTable.languages[cvjs_currentLanguage].PublishPDFModal.SelectMode+"<canvas id=\"dummy\" width=\"20\" height=\"10\"></canvas><input class=\"radioPublishPDF1\" id=\"radioPublishAsPDF1_"+floorplan_div+"\" type=\"radio\" name=\"radioColor\" value=\"1\" checked=\"checked\"><label id=\"cvjs_publishpdfmode1\" for=\"radio1\">"+lTable.languages[cvjs_currentLanguage].PublishPDFModal.Mode1+"</label><canvas id=\"dummy\" width=\"26\" height=\"10\"></canvas><input class=\"radioPublishPDF2\" id=\"radioPublishAsPDF2_"+floorplan_div+"\" type=\"radio\" name=\"radioColor\" value=\"2\"><label id=\"cvjs_publishpdfmode2\" for=\"radio2\">"+lTable.languages[cvjs_currentLanguage].PublishPDFModal.Mode2+"</label><canvas id=\"dummy\" width=\"303\" height=\"10\"></canvas><input class=\"radioPublishPDF3\" id=\"radioPublishAsPDF3_"+floorplan_div+"\" type=\"radio\" name=\"radioColor\" value=\"3\"><label id=\"cvjs_publishpdfmode3\" for=\"radio3\">"+lTable.languages[cvjs_currentLanguage].PublishPDFModal.Mode3+"</label></td></tr><tr id=\"publishPDFModal_row2_"+floorplan_div+"\" ><td><canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas>"+lTable.languages[cvjs_currentLanguage].PublishPDFModal.EntireDoc+"<input type=\"checkbox\" id=\"cvjs_entiredoc_checkbox\" value=\"grayscale_status\"></td></tr> <tr id=\"publishPDFModal_row3_"+floorplan_div+"\" ><td></td></tr> <tr id=\"publishPDFModal_row4_"+floorplan_div+"\" ><td><table id=\"enter_email_content_table\">        <tr><td><canvas id=\"dummy\" width=\"10\" height=\"24\"></canvas>"+lTable.languages[cvjs_currentLanguage].PublishPDFModal.Recipient+"<canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas><input value=\"11\" id=\"cvjs_publishPDFemailrecipient_"+floorplan_div+"\" class=\"cvjs_publishPDFemailrecipient\"><canvas id=\"dummy\" width=\"70\" height=\"5\"></canvas><canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas></td></tr><tr><td><canvas id=\"dummy\" width=\"10\" height=\"24\"></canvas>"+lTable.languages[cvjs_currentLanguage].PublishPDFModal.Title+"<canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas><input value=\"11\" id=\"cvjs_publishPDFemailtitle_"+floorplan_div+"\" class=\"cvjs_publishPDFemailtitle\"><canvas id=\"dummy\" width=\"70\" height=\"5\"></canvas><canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas></td></tr><tr><td><canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas></td><td>"+lTable.languages[cvjs_currentLanguage].PublishPDFModal.Message+"</td><td><canvas id=\"dummy\" width=\"10\" height=\"76\"></canvas></td><td><textarea class=\"cvjs_pdfmail_edit_text_1\" id=\"pdfmail_text\" cols=\"63\" rows=\"3\"></textarea></td></tr>                         </table></td></tr> <tr><td><canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas><input id=\"cvjs_publish_redline_to_pdf_button\" type=\"button\" name=\"bPrint\" value=\""+lTable.languages[cvjs_currentLanguage].PublishPDFModal.OK+"\" onClick=\"cvjs_publishPDFViaButton(\'"+floorplan_div+"\');\"><canvas id=\"dummy\" width=\"10\" height=\"10\"></td></tr><tr></tr></table>";
//	cvjs_publishPDFModal_content = "<table class=\"publishPDFModalTable\"><tr><td><div class=\"publishPDFModalHeader\" id=\"publishPDFModalHeader\"><b class=\"top_bar_gray_underbar\">_</b><a href=\"http://cadviewerjs.com\"><img src=\""+cvjs_imagesLocation+"logoJS.png\" border=\"2\" width=\"20\" height=\"20\" /></a><b class=\"top_bar_gray_underbar\">__</b><b id=\"cvjs_publishPDFHeader\">"+lTable.languages[cvjs_currentLanguage].PublishPDFModal.Header+"</b><button type=\"button\" class=\"close\" data-dismiss=\"modal\" onClick=\"cvjs_publishPDF_modal_hide(\'"+floorplan_div+"\');\">&times;<b class=\"top_bar_gray_underbar\">_</b></button></div></td></tr><tr><td><canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas>"+lTable.languages[cvjs_currentLanguage].PublishPDFModal.SelectMode+"<canvas id=\"dummy\" width=\"20\" height=\"10\"></canvas><input class=\"radioPublishPDF1\" id=\"radioPublishAsPDF1_"+floorplan_div+"\" type=\"radio\" name=\"radioColor\" value=\"1\" checked=\"checked\"><label id=\"cvjs_publishpdfmode1\" for=\"radio1\">"+lTable.languages[cvjs_currentLanguage].PublishPDFModal.Mode1+"</label><canvas id=\"dummy\" width=\"26\" height=\"10\"></canvas><input class=\"radioPublishPDF2\" id=\"radioPublishAsPDF2_"+floorplan_div+"\" type=\"radio\" name=\"radioColor\" value=\"2\"><label id=\"cvjs_publishpdfmode2\" for=\"radio2\">"+lTable.languages[cvjs_currentLanguage].PublishPDFModal.Mode2+"</label><canvas id=\"dummy\" width=\"303\" height=\"10\"></canvas><input class=\"radioPublishPDF3\" id=\"radioPublishAsPDF3_"+floorplan_div+"\" type=\"radio\" name=\"radioColor\" value=\"3\"><label id=\"cvjs_publishpdfmode3\" for=\"radio3\">"+lTable.languages[cvjs_currentLanguage].PublishPDFModal.Mode3+"</label></td></tr><tr id=\"publishPDFModal_row2_"+floorplan_div+"\" ><td><canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas>"+lTable.languages[cvjs_currentLanguage].PublishPDFModal.EntireDoc+"<input type=\"checkbox\" id=\"cvjs_entiredoc_checkbox\" value=\"grayscale_status\"></td></tr> <tr id=\"publishPDFModal_row3_"+floorplan_div+"\" ><td></td></tr> <tr id=\"publishPDFModal_row4_"+floorplan_div+"\" ><td><table id=\"enter_email_content_table\">        <tr><td><canvas id=\"dummy\" width=\"10\" height=\"24\"></canvas>"+lTable.languages[cvjs_currentLanguage].PublishPDFModal.Recipient+"<canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas><input value=\"11\" id=\"cvjs_publishPDFemailrecipient_"+floorplan_div+"\" class=\"cvjs_publishPDFemailrecipient\"><canvas id=\"dummy\" width=\"70\" height=\"5\"></canvas><canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas></td></tr><tr><canvas id=\"dummy\" width=\"10\" height=\"24\"></canvas>"+lTable.languages[cvjs_currentLanguage].PublishPDFModal.Title+"<canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas><input value=\"11\" id=\"cvjs_publishPDFemailtitle_"+floorplan_div+"\" class=\"cvjs_publishPDFemailtitle\"><canvas id=\"dummy\" width=\"70\" height=\"5\"></canvas><canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas></td></tr><tr><td><canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas>"+lTable.languages[cvjs_currentLanguage].PublishPDFModal.Message+"<canvas id=\"dummy\" width=\"10\" height=\"76\"></canvas><textarea class=\"cvjs_pdfmail_edit_text_1\" id=\"pdfmail_text\" cols=\"43\" rows=\"3\"></textarea></td></tr>                         </table></td></tr> <tr><td><canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas><input id=\"cvjs_publish_redline_to_pdf_button\" type=\"button\" name=\"bPrint\" value=\""+lTable.languages[cvjs_currentLanguage].PublishPDFModal.OK+"\" onClick=\"cvjs_publishPDFViaButton(\'"+floorplan_div+"\');\"><canvas id=\"dummy\" width=\"10\" height=\"10\"></td></tr><tr></tr></table>";
//	cvjs_publishPDFModal_content = "<table class=\"publishPDFModalTable\"><tr><td><div class=\"publishPDFModalHeader\" id=\"publishPDFModalHeader\"><b class=\"top_bar_gray_underbar\">_</b><a href=\"http://cadviewerjs.com\"><img src=\""+cvjs_imagesLocation+"logoJS.png\" border=\"2\" width=\"20\" height=\"20\" /></a><b class=\"top_bar_gray_underbar\">__</b><b id=\"cvjs_publishPDFHeader\">"+lTable.languages[cvjs_currentLanguage].PublishPDFModal.Header+"</b><button type=\"button\" class=\"close\" data-dismiss=\"modal\" onClick=\"cvjs_publishPDF_modal_hide(\'"+floorplan_div+"\');\">&times;<b class=\"top_bar_gray_underbar\">_</b></button></div></td></tr><tr><td><canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas>"+lTable.languages[cvjs_currentLanguage].PublishPDFModal.SelectMode+"<canvas id=\"dummy\" width=\"20\" height=\"10\"></canvas><input class=\"radioPublishPDF1\" id=\"radioPublishAsPDF1_"+floorplan_div+"\" type=\"radio\" name=\"radioColor\" value=\"1\" checked=\"checked\"><label id=\"cvjs_publishpdfmode1\" for=\"radio1\">"+lTable.languages[cvjs_currentLanguage].PublishPDFModal.Mode1+"</label><canvas id=\"dummy\" width=\"26\" height=\"10\"></canvas><input class=\"radioPublishPDF2\" id=\"radioPublishAsPDF2_"+floorplan_div+"\" type=\"radio\" name=\"radioColor\" value=\"2\"><label id=\"cvjs_publishpdfmode2\" for=\"radio2\">"+lTable.languages[cvjs_currentLanguage].PublishPDFModal.Mode2+"</label><canvas id=\"dummy\" width=\"303\" height=\"10\"></canvas><input class=\"radioPublishPDF3\" id=\"radioPublishAsPDF3_"+floorplan_div+"\" type=\"radio\" name=\"radioColor\" value=\"3\"><label id=\"cvjs_publishpdfmode3\" for=\"radio3\">"+lTable.languages[cvjs_currentLanguage].PublishPDFModal.Mode3+"</label></td></tr><tr id=\"publishPDFModal_row2_"+floorplan_div+"\" ><td><canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas>"+lTable.languages[cvjs_currentLanguage].PublishPDFModal.EntireDoc+"<input type=\"checkbox\" id=\"cvjs_entiredoc_checkbox\" value=\"grayscale_status\"></td></tr> <tr id=\"publishPDFModal_row3_"+floorplan_div+"\" ><td></td></tr> <tr id=\"publishPDFModal_row4_"+floorplan_div+"\" ><td><table id=\"enter_email_content_table\">         <tr><td><canvas id=\"dummy\" width=\"10\" height=\"24\"></canvas>"+lTable.languages[cvjs_currentLanguage].PublishPDFModal.Recipient+"<canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas><input value=\"email\" id=\"cvjs_publishPDFemailrecipient_"+floorplan_div+"\" class=\"cvjs_publishPDFemailrecipient\"></td></tr>        <tr><td><canvas id=\"dummy\" width=\"10\" height=\"24\"></canvas>"+lTable.languages[cvjs_currentLanguage].PublishPDFModal.Title+"<canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas><input value=\"title\" id=\"cvjs_publishPDFemailtitle_"+floorplan_div+"\" class=\"cvjs_publishPDFemailtitle\"></td></tr>                <tr><td><canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas>"+lTable.languages[cvjs_currentLanguage].PublishPDFModal.Message+"<canvas id=\"dummy\" width=\"10\" height=\"76\"></canvas><textarea class=\"cvjs_pdfmail_edit_text_1\" id=\"pdfmail_text\" cols=\"43\" rows=\"3\"></textarea></td></tr>                         </table></td></tr> <tr><td><canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas><input id=\"cvjs_publish_redline_to_pdf_button\" type=\"button\" name=\"bPrint\" value=\""+lTable.languages[cvjs_currentLanguage].PublishPDFModal.OK+"\" onClick=\"cvjs_publishPDFViaButton(\'"+floorplan_div+"\');\"><canvas id=\"dummy\" width=\"10\" height=\"10\"></td></tr><tr></tr></table>";

	cvjs_publishPDFModal_content = "<table class=\"publishPDFModalTable\"><tr><td><div class=\"publishPDFModalHeader\" id=\"publishPDFModalHeader\"><b class=\"top_bar_gray_underbar\">_</b><a href=\"http://cadviewerjs.com\"><img src=\""+cvjs_imagesLocation+"logoJS.png\" border=\"2\" width=\"20\" height=\"20\" /></a><b class=\"top_bar_gray_underbar\">__</b><b id=\"cvjs_publishPDFHeader\">"+lTable.languages[cvjs_currentLanguage].PublishPDFModal.Header+"</b><button type=\"button\" class=\"close\" data-dismiss=\"modal\" onClick=\"cvjs_publishPDF_modal_hide(\'"+floorplan_div+"\');\">&times;<b class=\"top_bar_gray_underbar\">_</b></button></div></td></tr><tr><td><canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas>"+lTable.languages[cvjs_currentLanguage].PublishPDFModal.SelectMode+"<canvas id=\"dummy\" width=\"20\" height=\"10\"></canvas><input class=\"radioPublishPDF1\" id=\"radioPublishAsPDF1_"+floorplan_div+"\" type=\"radio\" name=\"radioColor\" value=\"1\" checked=\"checked\"><label id=\"cvjs_publishpdfmode1\" for=\"radio1\">"+lTable.languages[cvjs_currentLanguage].PublishPDFModal.Mode1+"</label><canvas id=\"dummy\" width=\"26\" height=\"10\"></canvas><input class=\"radioPublishPDF2\" id=\"radioPublishAsPDF2_"+floorplan_div+"\" type=\"radio\" name=\"radioColor\" value=\"2\"><label id=\"cvjs_publishpdfmode2\" for=\"radio2\">"+lTable.languages[cvjs_currentLanguage].PublishPDFModal.Mode2+"</label><canvas id=\"dummy\" width=\"303\" height=\"10\"></canvas><input class=\"radioPublishPDF3\" id=\"radioPublishAsPDF3_"+floorplan_div+"\" type=\"radio\" name=\"radioColor\" value=\"3\"><label id=\"cvjs_publishpdfmode3\" for=\"radio3\">"+lTable.languages[cvjs_currentLanguage].PublishPDFModal.Mode3+"</label></td></tr><tr id=\"publishPDFModal_row2_"+floorplan_div+"\" ><td><canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas>"+lTable.languages[cvjs_currentLanguage].PublishPDFModal.EntireDoc+"<input type=\"checkbox\" id=\"cvjs_entiredoc_checkbox\" value=\"grayscale_status\"></td></tr> <tr id=\"publishPDFModal_row3_"+floorplan_div+"\" ><td></td></tr> <tr id=\"publishPDFModal_row4_"+floorplan_div+"\" ><td><table id=\"enter_email_content_table\">         <tr><td><canvas id=\"dummy\" width=\"10\" height=\"24\"></canvas>"+lTable.languages[cvjs_currentLanguage].PublishPDFModal.Recipient+"<canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas><input value=\"email\" id=\"cvjs_publishPDFemailrecipient_"+floorplan_div+"\" class=\"cvjs_publishPDFemailrecipient\"></td></tr>        <tr><td><canvas id=\"dummy\" width=\"10\" height=\"24\"></canvas>"+lTable.languages[cvjs_currentLanguage].PublishPDFModal.Title+"<canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas><input value=\"title\" id=\"cvjs_publishPDFemailtitle_"+floorplan_div+"\" class=\"cvjs_publishPDFemailtitle\"></td></tr>                <tr><td><canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas><table><tr><td>"+lTable.languages[cvjs_currentLanguage].PublishPDFModal.Message+"</td></tr><tr><td>xxx</td></tr></table><canvas id=\"dummy\" width=\"10\" height=\"76\"></canvas><textarea class=\"cvjs_pdfmail_edit_text_1\" id=\"pdfmail_text\" cols=\"43\" rows=\"3\"></textarea></td></tr>                         </table></td></tr> <tr><td><canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas><input id=\"cvjs_publish_redline_to_pdf_button\" type=\"button\" name=\"bPrint\" value=\""+lTable.languages[cvjs_currentLanguage].PublishPDFModal.OK+"\" onClick=\"cvjs_publishPDFViaButton(\'"+floorplan_div+"\');\"><canvas id=\"dummy\" width=\"10\" height=\"10\"></td></tr><tr></tr></table>";
	cvjs_publishPDFModal_content = "<table class=\"publishPDFModalTable\"><tr><td><div class=\"publishPDFModalHeader\" id=\"publishPDFModalHeader\"><b class=\"top_bar_gray_underbar\">_</b><a href=\"http://cadviewerjs.com\"><img src=\""+cvjs_imagesLocation+"logoJS.png\" border=\"2\" width=\"20\" height=\"20\" /></a><b class=\"top_bar_gray_underbar\">__</b><b id=\"cvjs_publishPDFHeader\">"+lTable.languages[cvjs_currentLanguage].PublishPDFModal.Header+"</b><button type=\"button\" class=\"close\" data-dismiss=\"modal\" onClick=\"cvjs_publishPDF_modal_hide(\'"+floorplan_div+"\');\">&times;<b class=\"top_bar_gray_underbar\">_</b></button></div></td></tr><tr><td><canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas>"+lTable.languages[cvjs_currentLanguage].PublishPDFModal.SelectMode+"<canvas id=\"dummy\" width=\"20\" height=\"10\"></canvas><input class=\"radioPublishPDF1\" id=\"radioPublishAsPDF1_"+floorplan_div+"\" type=\"radio\" name=\"radioColor\" value=\"1\" checked=\"checked\"><label id=\"cvjs_publishpdfmode1\" for=\"radio1\">"+lTable.languages[cvjs_currentLanguage].PublishPDFModal.Mode1+"</label><canvas id=\"dummy\" width=\"26\" height=\"10\"></canvas><input class=\"radioPublishPDF2\" id=\"radioPublishAsPDF2_"+floorplan_div+"\" type=\"radio\" name=\"radioColor\" value=\"2\"><label id=\"cvjs_publishpdfmode2\" for=\"radio2\">"+lTable.languages[cvjs_currentLanguage].PublishPDFModal.Mode2+"</label><canvas id=\"dummy\" width=\"303\" height=\"10\"></canvas><input class=\"radioPublishPDF3\" id=\"radioPublishAsPDF3_"+floorplan_div+"\" type=\"radio\" name=\"radioColor\" value=\"3\"><label id=\"cvjs_publishpdfmode3\" for=\"radio3\">"+lTable.languages[cvjs_currentLanguage].PublishPDFModal.Mode3+"</label></td></tr><tr id=\"publishPDFModal_row2_"+floorplan_div+"\" ><td><canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas>"+lTable.languages[cvjs_currentLanguage].PublishPDFModal.EntireDoc+"<input type=\"checkbox\" id=\"cvjs_entiredoc_checkbox\" value=\"grayscale_status\"></td></tr> <tr id=\"publishPDFModal_row3_"+floorplan_div+"\" ><td></td></tr> <tr class=\"publishPDFModal_row4\" id=\"publishPDFModal_row4_"+floorplan_div+"\" ><td><table id=\"enter_email_content_table\">         <tr><td><canvas id=\"dummy\" width=\"10\" height=\"20\"></canvas>"+lTable.languages[cvjs_currentLanguage].PublishPDFModal.Recipient+"<canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas><input value=\"email\" id=\"cvjs_publishPDFemailrecipient_"+floorplan_div+"\" class=\"cvjs_publishPDFemailrecipient\"></td></tr>        <tr><td><canvas id=\"dummy\" width=\"10\" height=\"20\"></canvas>"+lTable.languages[cvjs_currentLanguage].PublishPDFModal.Title+"<canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas><input value=\"title\" id=\"cvjs_publishPDFemailtitle_"+floorplan_div+"\" class=\"cvjs_publishPDFemailtitle\"></td></tr>                <tr><td><canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas>    <table><tr><td><canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas>"+lTable.languages[cvjs_currentLanguage].PublishPDFModal.Message+"</td></tr><tr><td></td></tr></table>    <textarea class=\"cvjs_pdfmail_edit_text_1\" id=\"pdfmail_text\" cols=\"43\" rows=\"3\"></textarea></td></tr>                         </table></td></tr> <tr><td><canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas><input id=\"cvjs_publish_redline_to_pdf_button\" type=\"button\" name=\"bPrint\" value=\""+lTable.languages[cvjs_currentLanguage].PublishPDFModal.OK+"\" onClick=\"cvjs_publishPDFViaButton(\'"+floorplan_div+"\');\"><canvas id=\"dummy\" width=\"10\" height=\"10\"></td></tr><tr></tr></table>";

	
	
	cvjs_publishPDFModal_content = "<table class=\"publishPDFModalTable\"><tr><td><div class=\"publishPDFModalHeader\" id=\"publishPDFModalHeader\"><b class=\"top_bar_gray_underbar\">_</b><a href=\"http://cadviewerjs.com\"><img src=\""+cvjs_imagesLocation+"logoJS.png\" border=\"2\" width=\"20\" height=\"20\" /></a><b class=\"top_bar_gray_underbar\">__</b><b id=\"cvjs_publishPDFHeader\">"+lTable.languages[cvjs_currentLanguage].PublishPDFModal.Header+"</b><button type=\"button\" class=\"close\" data-dismiss=\"modal\" onClick=\"cvjs_publishPDF_modal_hide(\'"+floorplan_div+"\');\">&times;<b class=\"top_bar_gray_underbar\">_</b></button></div></td></tr><tr><td><canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas>"+lTable.languages[cvjs_currentLanguage].PublishPDFModal.SelectMode+"<canvas id=\"dummy\" width=\"20\" height=\"10\"></canvas><input class=\"radioPublishPDF1\" id=\"radioPublishAsPDF1_"+floorplan_div+"\" type=\"radio\" name=\"radioColor\" value=\"1\" checked=\"checked\"><label id=\"cvjs_publishpdfmode1\" for=\"radio1\">"+lTable.languages[cvjs_currentLanguage].PublishPDFModal.Mode1+"</label><canvas id=\"dummy\" width=\"26\" height=\"10\"></canvas><input class=\"radioPublishPDF2\" id=\"radioPublishAsPDF2_"+floorplan_div+"\" type=\"radio\" name=\"radioColor\" value=\"2\"><label id=\"cvjs_publishpdfmode2\" for=\"radio2\">"+lTable.languages[cvjs_currentLanguage].PublishPDFModal.Mode2+"</label><canvas id=\"dummy\" width=\"303\" height=\"10\"></canvas><input class=\"radioPublishPDF3\" id=\"radioPublishAsPDF3_"+floorplan_div+"\" type=\"radio\" name=\"radioColor\" value=\"3\"><label id=\"cvjs_publishpdfmode3\" for=\"radio3\">"+lTable.languages[cvjs_currentLanguage].PublishPDFModal.Mode3+"</label></td></tr><tr id=\"publishPDFModal_row2_"+floorplan_div+"\" ><td><canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas>"+lTable.languages[cvjs_currentLanguage].PublishPDFModal.EntireDoc+"<input type=\"checkbox\" id=\"cvjs_entiredoc_checkbox\" value=\"grayscale_status\"></td></tr> <tr id=\"publishPDFModal_row3_"+floorplan_div+"\" ><td></td></tr> <tr class=\"publishPDFModal_row4\" id=\"publishPDFModal_row4_"+floorplan_div+"\" ><td><table id=\"enter_email_content_table\">         <tr><td><canvas id=\"dummy\" width=\"10\" height=\"20\"></canvas>"+lTable.languages[cvjs_currentLanguage].PublishPDFModal.Recipient+"<canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas><input value=\"email\" id=\"cvjs_publishPDFemailrecipient_"+floorplan_div+"\" class=\"cvjs_publishPDFemailrecipient\"></td></tr>        <tr><td><canvas id=\"dummy\" width=\"10\" height=\"20\"></canvas>"+lTable.languages[cvjs_currentLanguage].PublishPDFModal.Title+"<canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas><input value=\"title\" id=\"cvjs_publishPDFemailtitle_"+floorplan_div+"\" class=\"cvjs_publishPDFemailtitle\"></td></tr>                <tr><td><canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas>    <table><tr><td><canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas>"+lTable.languages[cvjs_currentLanguage].PublishPDFModal.Message+"</td></tr><tr><td></td></tr></table>    <textarea class=\"cvjs_pdfmail_edit_text_1\" id=\"pdfmail_text\" cols=\"43\" rows=\"3\"></textarea></td></tr>                         </table></td></tr> <tr><td><canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas><input id=\"cvjs_publish_redline_to_pdf_button\" type=\"button\" name=\"bPrint\" value=\""+lTable.languages[cvjs_currentLanguage].PublishPDFModal.OK+"\" onClick=\"cvjs_publishPDFViaButton(\'"+floorplan_div+"\');\"><canvas id=\"dummy\" width=\"10\" height=\"10\"></td></tr><tr></tr></table>";

	
//	cvjs_publishPDFModal_content = "<table class=\"publishPDFModalTable\"><tr><td><div class=\"publishPDFModalHeader\" id=\"publishPDFModalHeader\"><b class=\"top_bar_gray_underbar\">_</b><a href=\"http://cadviewerjs.com\"><img src=\""+cvjs_imagesLocation+"logoJS.png\" border=\"2\" width=\"20\" height=\"20\" /></a><b class=\"top_bar_gray_underbar\">__</b><b id=\"cvjs_publishPDFHeader\">"+lTable.languages[cvjs_currentLanguage].PublishPDFModal.Header+"</b><button type=\"button\" class=\"close\" data-dismiss=\"modal\" onClick=\"cvjs_publishPDF_modal_hide(\'"+floorplan_div+"\');\">&times;<b class=\"top_bar_gray_underbar\">_</b></button></div></td></tr><tr><td><canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas>"+lTable.languages[cvjs_currentLanguage].PublishPDFModal.SelectMode+"<canvas id=\"dummy\" width=\"20\" height=\"10\"></canvas><input class=\"radioPublishPDF1\" id=\"radioPublishAsPDF1_"+floorplan_div+"\" type=\"radio\" name=\"radioColor\" value=\"1\" checked=\"checked\"><label id=\"cvjs_publishpdfmode1\" for=\"radio1\">"+lTable.languages[cvjs_currentLanguage].PublishPDFModal.Mode1+"</label><canvas id=\"dummy\" width=\"26\" height=\"10\"></canvas><input class=\"radioPublishPDF2\" id=\"radioPublishAsPDF2_"+floorplan_div+"\" type=\"radio\" name=\"radioColor\" value=\"2\"><label id=\"cvjs_publishpdfmode2\" for=\"radio2\">"+lTable.languages[cvjs_currentLanguage].PublishPDFModal.Mode2+"</label><canvas id=\"dummy\" width=\"303\" height=\"10\"></canvas><input class=\"radioPublishPDF3\" id=\"radioPublishAsPDF3_"+floorplan_div+"\" type=\"radio\" name=\"radioColor\" value=\"3\"><label id=\"cvjs_publishpdfmode3\" for=\"radio3\">"+lTable.languages[cvjs_currentLanguage].PublishPDFModal.Mode3+"</label></td></tr><tr id=\"publishPDFModal_row2_"+floorplan_div+"\" ><td><canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas>"+lTable.languages[cvjs_currentLanguage].PublishPDFModal.EntireDoc+"<input type=\"checkbox\" id=\"cvjs_entiredoc_checkbox\" value=\"grayscale_status\"></td></tr> <tr id=\"publishPDFModal_row3_"+floorplan_div+"\" ><td></td></tr> <tr id=\"publishPDFModal_row4_"+floorplan_div+"\" ><td>My row with email stuuff</td></tr> <tr><td><canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas><input id=\"cvjs_redlinecolor_button\" type=\"button\" name=\"bPrint\" value=\""+lTable.languages[cvjs_currentLanguage].PublishPDFModal.OK+"\" onClick=\"cvjs_publishPDFViaButton(\'"+floorplan_div+"\');\"><canvas id=\"dummy\" width=\"10\" height=\"10\"></td></tr><tr></tr></table>";
	jQuery("#cvjs_modals"+"_"+floorplan_div).append("<div  class=\"publishPDFModal\"  id=\"publishPDFModal_"+floorplan_div+"\"></div>");
	jQuery("#publishPDFModal_"+floorplan_div).html(cvjs_publishPDFModal_content);



	cvjs_mergeDXFModal_content = "<table class=\"mergeDXFModalTable\"><tr><td><div class=\"mergeDXFModalHeader\" id=\"mergeDXFModalHeader\"><b class=\"top_bar_gray_underbar\">_</b><a href=\"http://cadviewerjs.com\"><img src=\""+cvjs_imagesLocation+"logoJS.png\" border=\"2\" width=\"20\" height=\"20\" /></a><b class=\"top_bar_gray_underbar\">__</b><b id=\"cvjs_mergeDXFHeader\">"+lTable.languages[cvjs_currentLanguage].MergeDXFModal.Header+"</b><button type=\"button\" class=\"close\" data-dismiss=\"modal\" onClick=\"cvjs_mergeDXF_modal_hide(\'"+floorplan_div+"\');\">&times;<b class=\"top_bar_gray_underbar\">_</b></button></div></td></tr><tr><td><canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas>"+lTable.languages[cvjs_currentLanguage].MergeDXFModal.SelectMode+"<canvas id=\"dummy\" width=\"20\" height=\"10\"></canvas><input class=\"radioMergeDXF1\" id=\"radioMergeAsDXF1_"+floorplan_div+"\" type=\"radio\" name=\"radioColor\" value=\"1\" checked=\"checked\"><label id=\"cvjs_mergedxfmode1\" for=\"radio1\">"+lTable.languages[cvjs_currentLanguage].MergeDXFModal.Mode1+"</label><canvas id=\"dummy\" width=\"26\" height=\"10\"></canvas><input class=\"radioMergeDXF2\" id=\"radioMergeAsDXF2_"+floorplan_div+"\" type=\"radio\" name=\"radioColor\" value=\"2\"><label id=\"cvjs_mergedxfmode2\" for=\"radio2\">"+lTable.languages[cvjs_currentLanguage].MergeDXFModal.Mode2+"</label><canvas id=\"dummy\" width=\"303\" height=\"10\"></canvas><input class=\"radioMergeDXF3\" id=\"radioMergeAsDXF3_"+floorplan_div+"\" type=\"radio\" name=\"radioColor\" value=\"3\"><label id=\"cvjs_mergedxfmode3\" for=\"radio3\">"+lTable.languages[cvjs_currentLanguage].MergeDXFModal.Mode3+"</label></td></tr><tr id=\"mergeDXFModal_row2_"+floorplan_div+"\" ><td><canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas>"+lTable.languages[cvjs_currentLanguage].MergeDXFModal.EntireDoc+"<input type=\"checkbox\" id=\"cvjs_entiredoc_checkbox\" value=\"grayscale_status\"></td></tr> <tr id=\"mergeDXFModal_row3_"+floorplan_div+"\" ><td></td></tr> <tr class=\"mergeDXFModal_row4\" id=\"mergeDXFModal_row4_"+floorplan_div+"\" ><td><table id=\"enter_email_content_table\">         <tr><td><canvas id=\"dummy\" width=\"10\" height=\"20\"></canvas>"+lTable.languages[cvjs_currentLanguage].MergeDXFModal.Recipient+"<canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas><input value=\"email\" id=\"cvjs_mergeDXFemailrecipient_"+floorplan_div+"\" class=\"cvjs_mergeDXFemailrecipient\"></td></tr>        <tr><td><canvas id=\"dummy\" width=\"10\" height=\"20\"></canvas>"+lTable.languages[cvjs_currentLanguage].MergeDXFModal.Title+"<canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas><input value=\"title\" id=\"cvjs_mergeDXFemailtitle_"+floorplan_div+"\" class=\"cvjs_mergeDXFemailtitle\"></td></tr>                <tr><td><canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas>    <table><tr><td><canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas>"+lTable.languages[cvjs_currentLanguage].MergeDXFModal.Message+"</td></tr><tr><td></td></tr></table>    <textarea class=\"cvjs_mergedxfmail_edit_text_1\" id=\"mergedxfmail_text\" cols=\"43\" rows=\"3\"></textarea></td></tr>                         </table></td></tr> <tr><td><canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas><input id=\"cvjs_publish_redline_to_dxf_button\" type=\"button\" name=\"bPrint\" value=\""+lTable.languages[cvjs_currentLanguage].MergeDXFModal.OK+"\" onClick=\"cvjs_mergeDXFViaButton(\'"+floorplan_div+"\');\"><canvas id=\"dummy\" width=\"10\" height=\"10\"></td></tr><tr></tr></table>";


	jQuery("#cvjs_modals"+"_"+floorplan_div).append("<div  class=\"mergeDXFModal\"  id=\"mergeDXFModal_"+floorplan_div+"\"></div>");
	jQuery("#mergeDXFModal_"+floorplan_div).html(cvjs_mergeDXFModal_content);
	
	
	
	cvjs_backgroundColorModal_content = "<table class=\"backgroundModalTable\"><tr><td><div class=\"backgroundModalHeader\"><b class=\"top_bar_gray_underbar\">_</b><a href=\"http://cadviewerjs.com\"><img src=\""+cvjs_imagesLocation+"logoJS.png\" border=\"2\" width=\"20\" height=\"20\" /></a><b class=\"top_bar_gray_underbar\">__</b><b id=\"cvjs_backgroundColorHeader\">"+lTable.languages[cvjs_currentLanguage].BackgroundColorModal.Header+"</b><button type=\"button\" class=\"close\" data-dismiss=\"modal\" onClick=\"cvjs_exit_backgroundColor(\'"+floorplan_div+"\');\">&times;<b class=\"top_bar_gray_underbar\">_</b></button></div></td></tr><tr><td><canvas id=\"dummy\" width=\"10\" height=\"23\"></canvas>"+lTable.languages[cvjs_currentLanguage].BackgroundColorModal.PickColor+"<canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas><input id=\"cvjs_backgroundPickerValue\" value=\"FFFFFF\" class=\"cvjs_inputBackgroundColorModal jscolor {width:101, padding:10, shadow:false, borderWidth:0, backgroundColor:\'transparent\', insetColor:\'#000\',closable:true, closeText:'Close Color Picker!', onFineChange:\'cvjs_setBackgroundColorHex(this)\'}\"><canvas id=\"dummy\" width=\"40\" height=\"10\"></canvas>"+lTable.languages[cvjs_currentLanguage].BackgroundColorModal.SelectColor+"<canvas id=\"dummy\" width=\"20\" height=\"10\"></canvas><input class=\"radioColor1_background\" id=\"radioColor1_background_"+floorplan_div+"\" type=\"radio\" name=\"radioColor\" value=\"1\" checked=\"checked\"><img id=\"cvjs_radioColor1_img_background\" src=\""+cvjs_imagesLocation+"white_color.png\" border=\"1\"/><label id=\"cvjs_radio1\" for=\"radio1\">"+lTable.languages[cvjs_currentLanguage].BackgroundColorModal.White+"</label><canvas id=\"dummy\" width=\"26\" height=\"10\"></canvas><input class=\"radioColor2_background\"  id=\"radioColor2_background_"+floorplan_div+"\" type=\"radio\" name=\"radioColor\" value=\"2\"><img id=\"cvjs_radioColor2_img_background\" src=\""+cvjs_imagesLocation+"black_color.png\" border=\"1\"/><label id=\"cvjs_radio2\" for=\"radio2\">"+lTable.languages[cvjs_currentLanguage].BackgroundColorModal.Black+"</label></td></tr><tr><td><canvas id=\"dummy\" width=\"303\" height=\"10\"></canvas><input class=\"radioColor3_background\"  id=\"radioColor3_background_"+floorplan_div+"\" type=\"radio\" name=\"radioColor\" value=\"3\"><img id=\"cvjs_radioColor3_img_background\" src=\""+cvjs_imagesLocation+"azure_color.png\" border=\"1\"/><label id=\"cvjs_radio3\" for=\"radio3\">"+lTable.languages[cvjs_currentLanguage].BackgroundColorModal.Azure+"</label><canvas id=\"dummy\" width=\"24\" height=\"10\"></canvas><input class=\"radioColor4_background\"  id=\"radioColor4_background_"+floorplan_div+"\" type=\"radio\" name=\"radioColor\" value=\"4\"><img id=\"cvjs_radioColor4_img_background\" src=\""+cvjs_imagesLocation+"pink_color.png\" border=\"1\"/><label id=\"cvjs_radio4\" for=\"radio4\">"+lTable.languages[cvjs_currentLanguage].BackgroundColorModal.Pink+"</label></td></tr><tr><td><canvas id=\"dummy\" width=\"303\" height=\"10\"></canvas><input class=\"radioColor5_background\"  id=\"radioColor5_background_"+floorplan_div+"\" type=\"radio\" name=\"radioColor\" value=\"5\"><img id=\"cvjs_radioColor5_img_background\" src=\""+cvjs_imagesLocation+"snow_color.png\" border=\"1\"/><label id=\"cvjs_radio5\" for=\"radio5\">"+lTable.languages[cvjs_currentLanguage].BackgroundColorModal.Snow+"</label><canvas id=\"dummy\" width=\"26\" height=\"10\"></canvas><input class=\"radioColor6_background\"  id=\"radioColor6_background_"+floorplan_div+"\" type=\"radio\" name=\"radioColor\" value=\"6\"><img id=\"cvjs_radioColor6_img_background\" src=\""+cvjs_imagesLocation+"silver_color.png\" border=\"1\"/><label id=\"cvjs_radio6\" for=\"radio6\">"+lTable.languages[cvjs_currentLanguage].BackgroundColorModal.Silver+"</label></td></tr><tr><td><canvas id=\"dummy\" width=\"303\" height=\"10\"></canvas><input class=\"radioColor7_background\"  id=\"radioColor7_background_"+floorplan_div+"\" type=\"radio\" name=\"radioColor\" value=\"7\"><img id=\"cvjs_radioColor7_img_background\" src=\""+cvjs_imagesLocation+"gray_color.png\" border=\"1\"/><label id=\"cvjs_radio7\" for=\"radio7\">"+lTable.languages[cvjs_currentLanguage].BackgroundColorModal.Gray+"</label><canvas id=\"dummy\" width=\"29\" height=\"10\"></canvas><input class=\"radioColor8_background\"  id=\"radioColor8_background_"+floorplan_div+"\" type=\"radio\" name=\"radioColor\" value=\"8\"><img id=\"cvjs_radioColor8_img_background\" src=\""+cvjs_imagesLocation+"brown_color.png\" border=\"1\"/><label id=\"cvjs_radio8\" for=\"radio8\">"+lTable.languages[cvjs_currentLanguage].BackgroundColorModal.Brown+"</label> </td></tr><tr><td><canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas></td></tr><tr><td><canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas><input id=\"cvjs_redlinecolor_button\" type=\"button\" name=\"bPrint\" value=\""+lTable.languages[cvjs_currentLanguage].BackgroundColorModal.OK+"\" onClick=\"cvjs_setBackgroundColorViaButton(\'"+floorplan_div+"\');\"><canvas id=\"dummy\" width=\"10\" height=\"10\"></td></tr></table>";
	jQuery("#cvjs_modals"+"_"+floorplan_div).append("<div class=\"backgroundModal\" id=\"backgroundModal_"+floorplan_div+"\"></div>");
	jQuery("#backgroundModal_"+floorplan_div).html(cvjs_backgroundColorModal_content);
	
	
	// changed to a selection of 8 colors controlled externally
	jQuery("#cvjs_modals"+"_"+floorplan_div).append("<div id=\"genericColorModal_"+floorplan_div+"\"><table><tr><td><div id=\"genericColorModalHeader\"><b class=\"top_bar_gray_underbar\">_</b><a href=\"http://cadviewerjs.com\"><img src=\""+cvjs_imagesLocation+"logoJS.png\" border=\"2\" width=\"20\" height=\"20\" /></a><b class=\"top_bar_gray_underbar\">__</b><b id=\"cvjs_textSearchHeader\">Select Color</b><button type=\"button\" class=\"close\" data-dismiss=\"modal\" onClick=\"jQuery('#genericColorModal').hide();\">&times;<b class=\"top_bar_gray_underbar\">_</b></button></div></td></tr><tr><td><canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas></td></tr><tr><td><canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas>Select Color:<canvas id=\"dummy\" width=\"30\" height=\"10\"></canvas><input id=\"radioColor1_generic\" type=\"radio\" name=\"radioColor\" value=\"1\" checked=\"checked\"><img id=\"cvjs_radioColor1_img_generic\" src=\""+cvjs_imagesLocation+"blue_color.png\" border=\"1\"/><label id=\"cvjs_radio1_generic\" for=\"radio1\">Blue</label><canvas id=\"dummy\" width=\"26\" height=\"10\"></canvas><input id=\"radioColor2_generic\" type=\"radio\" name=\"radioColor\" value=\"2\"><img id=\"cvjs_radioColor2_img_generic\" src=\""+cvjs_imagesLocation+"red_color.png\" border=\"1\"/><label id=\"cvjs_radio2_generic\" for=\"radio2\">Red</label><canvas id=\"dummy\" width=\"60\" height=\"10\"></canvas><input id=\"cvjs_genericcolor_button\" type=\"button\" name=\"bPrint\" value=\"OK\" onClick=\"cvjs_setGenericColorViaButton();\"><canvas id=\"dummy\" width=\"10\" height=\"10\"></td></tr><tr><td><canvas id=\"dummy\" width=\"121\" height=\"10\"></canvas><input id=\"radioColor3_generic\" type=\"radio\" name=\"radioColor\" value=\"3\"><img id=\"cvjs_radioColor3_img_generic\" src=\""+cvjs_imagesLocation+"orange_color.png\" border=\"1\"/><label id=\"cvjs_radio3_generic\" for=\"radio3\">Orange</label><canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas><input id=\"radioColor4_generic\" type=\"radio\" name=\"radioColor\" value=\"4\"><img id=\"cvjs_radioColor4_img_generic\" src=\""+cvjs_imagesLocation+"yellow_color.png\" border=\"1\"/><label id=\"cvjs_radio4_generic\" for=\"radio4\">Yellow</label></td></tr><tr><td><canvas id=\"dummy\" width=\"121\" height=\"10\"></canvas><input id=\"radioColor5_generic\" type=\"radio\" name=\"radioColor\" value=\"5\"><img id=\"cvjs_radioColor5_img_generic\" src=\""+cvjs_imagesLocation+"green_color.png\" border=\"1\"/><label id=\"cvjs_radio5_generic\" for=\"radio5\">Green</label><canvas id=\"dummy\" width=\"17\" height=\"10\"></canvas><input id=\"radioColor6_generic\" type=\"radio\" name=\"radioColor\" value=\"6\"><img id=\"cvjs_radioColor6_img_generic\" src=\""+cvjs_imagesLocation+"purple_color.png\" border=\"1\"/><label id=\"cvjs_radio6_generic\" for=\"radio6\">Purple</label></td></tr><tr><td><canvas id=\"dummy\" width=\"121\" height=\"10\"></canvas><input id=\"radioColor7_generic\" type=\"radio\" name=\"radioColor\" value=\"7\"><img id=\"cvjs_radioColor7_img_generic\" src=\""+cvjs_imagesLocation+"gray_color.png\" border=\"1\"/><label id=\"cvjs_radio7_generic\" for=\"radio7\">Gray</label><canvas id=\"dummy\" width=\"24\" height=\"10\"></canvas><input id=\"radioColor8_generic\" type=\"radio\" name=\"radioColor\" value=\"8\"><img id=\"cvjs_radioColor8_img_generic\" src=\""+cvjs_imagesLocation+"brown_color.png\" border=\"1\"/><label id=\"cvjs_radio8_generic\" for=\"radio8\">Brown</label> </td></tr><tr><td><canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas></td></tr></table></div>");
	// Generic color modal is customer specific, therefore we do not make multi-language at this time.

	
//	cvjs_redlinetextModal_content = "<table class=\"redlinetextModalTable\"><tr><td><div class=\"redlinetextModalHeader\"><b class=\"top_bar_gray_underbar\">_</b><a href=\"http://cadviewerjs.com\"><img src=\""+cvjs_imagesLocation+"logoJS.png\" border=\"2\" width=\"20\" height=\"20\" /></a><b class=\"top_bar_gray_underbar\">__</b><b id=\"cvjs_redlineTextHeader\">"+lTable.languages[cvjs_currentLanguage].RedlineTextModal.Header+"</b><button type=\"button\" class=\"close\" data-dismiss=\"modal\" onClick=\"cvjs_hide_redline_text_modal(\'"+floorplan_div+"\');\">&times;<b class=\"top_bar_gray_underbar\">_</b></button></div></td></tr><tr><td><canvas id=\"dummy\" width=\"10\" height=\"76\"></canvas><textarea class=\"cvjs_redlines_edit_text_1\" id=\"redline_text\" cols=\"33\" rows=\"3\"></textarea><canvas id=\"dummy\" width=\"10\" height=\"5\"></canvas><input id=\"cvjs_redlinetext_button\" type=\"button\" name=\"bPrint\" value=\""+lTable.languages[cvjs_currentLanguage].RedlineTextModal.OK+"\" onClick=\"cvjs_initiateInsertRedlineText(\'"+floorplan_div+"\');\"></td></tr><tr><td><div id=\"cvjs_calibrationModalText\"><canvas id=\"dummy\" width=\"0\" height=\"13\"></canvas>"+lTable.languages[cvjs_currentLanguage].RedlineTextModal.Text+"</div></td></tr></table>";

	cvjs_redlinetextModal_content = "<table class=\"redlinetextModalTable\"><tr><td><div class=\"redlinetextModalHeader\"><b class=\"top_bar_gray_underbar\">_</b><a href=\"http://cadviewerjs.com\"><img src=\""+cvjs_imagesLocation+"logoJS.png\" border=\"2\" width=\"20\" height=\"20\" /></a><b class=\"top_bar_gray_underbar\">__</b><b id=\"cvjs_redlineTextHeader\">"+lTable.languages[cvjs_currentLanguage].RedlineTextModal.Header+"</b><button type=\"button\" class=\"close\" data-dismiss=\"modal\" onClick=\"cvjs_hide_redline_text_modal(\'"+floorplan_div+"\');\">&times;<b class=\"top_bar_gray_underbar\">_</b></button></div></td></tr><tr><td><canvas id=\"dummy\" width=\"10\" height=\"24\"></canvas>"+lTable.languages[cvjs_currentLanguage].RedlineTextModal.FontSize+"<canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas><input value=\"11\" id=\"cvjs_redlineFontSizeInput_"+floorplan_div+"\" class=\"cvjs_inputRedlineTextModal\"><canvas id=\"dummy\" width=\"70\" height=\"5\"></canvas><canvas id=\"dummy\" width=\"10\" height=\"10\"></canvas></td></tr><tr><td><canvas id=\"dummy\" width=\"10\" height=\"76\"></canvas><textarea class=\"cvjs_redlines_edit_text_1\" id=\"redline_text\" cols=\"33\" rows=\"3\"></textarea><canvas id=\"dummy\" width=\"10\" height=\"5\"></canvas><input id=\"cvjs_redlinetext_button\" type=\"button\" name=\"bPrint\" value=\""+lTable.languages[cvjs_currentLanguage].RedlineTextModal.OK+"\" onClick=\"cvjs_initiateInsertRedlineText(\'"+floorplan_div+"\');\"></td></tr><tr><td><div id=\"cvjs_calibrationModalText\"><canvas id=\"dummy\" width=\"0\" height=\"13\"></canvas>"+lTable.languages[cvjs_currentLanguage].RedlineTextModal.Text+"</div></td></tr></table>";

	jQuery("#cvjs_modals"+"_"+floorplan_div).append("<div class=\"redlinetextModal\" id=\"redlinetextModal_"+floorplan_div+"\"></div>");
	jQuery("#redlinetextModal_"+floorplan_div).html(cvjs_redlinetextModal_content);


	
	cvjs_lineThicknessModal_content = "<table class=\"linethicknessModalTable\"><tr><td><div class=\"linethicknessModalHeader\"><b class=\"top_bar_gray_underbar\">_</b><a href=\"http://cadviewerjs.com\"><img src=\""+cvjs_imagesLocation+"logoJS.png\" border=\"2\" width=\"20\" height=\"20\" /></a><b class=\"top_bar_gray_underbar\">__</b><b id=\"cvjs_lineThicknessHeader\">"+lTable.languages[cvjs_currentLanguage].LineThicknessModal.Header+"</b><button type=\"button\" class=\"close\" data-dismiss=\"modal\" onClick=\"cvjs_line_thickness_modal_hide(\'"+floorplan_div+"\');\">&times;<b class=\"top_bar_gray_underbar\">_</b></button></div></td></tr><tr><td><canvas id=\"dummy\" width=\"20\" height=\"5\"></canvas><div id=\"lineThicknessText\">"+lTable.languages[cvjs_currentLanguage].LineThicknessModal.LineThickness+"</div></td><td><div class=\"lineThickness\" id=\"lineThickness_"+floorplan_div+"\"></td></tr><tr><td><canvas id=\"dummy\" width=\"50\" height=\"5\"></canvas><div class=\"cvjs_slider2\" id=\"cvjs_slider2_"+floorplan_div+"\"><canvas id=\"dummy\" width=\"50\" height=\"5\"></canvas></td></tr></table>";
	jQuery("#cvjs_modals"+"_"+floorplan_div).append("<div class=\"linethicknessModal\" id=\"linethicknessModal_"+floorplan_div+"\"></div>");
	jQuery("#linethicknessModal_"+floorplan_div).html(cvjs_lineThicknessModal_content);



	jQuery("#cvjs_modals"+"_"+floorplan_div).append("<div id=\"imageObjectUpload_"+floorplan_div+"\"><input id=\"upfile_image\" type=\"file\" value=\"upload\" onchange=\"add_file_object_image(this)\"/></div>");
	jQuery("#imageObjectUpload_"+floorplan_div).hide();


	jQuery("#genericColorModal_"+floorplan_div).hide();

	jQuery( function() {
		jQuery("#genericColorModal_"+floorplan_div).draggable({
                containment: [ jQuery('#'+floorplan_div).position().left - cvjs_containmentModalLeft , jQuery('#'+floorplan_div).position().top - cvjs_containmentModalTop, jQuery('#'+floorplan_div).position().left+ jQuery('#'+floorplan_div).width()- jQuery("#backgroundModal_"+floorplan_div).width() + cvjs_containmentModalRight, jQuery('#'+floorplan_div).position().top + jQuery('#'+floorplan_div).height() - jQuery("#backgroundModal_"+floorplan_div).height() + cvjs_containmentModalBottom  ]
            });
	} );

	jQuery("#backgroundModal_"+floorplan_div).hide();

	jQuery( function() {
			
		jQuery("#backgroundModal_"+floorplan_div).draggable({
                containment: [ jQuery('#'+floorplan_div).position().left - cvjs_containmentModalLeft , jQuery('#'+floorplan_div).position().top - cvjs_containmentModalTop, jQuery('#'+floorplan_div).position().left+ jQuery('#'+floorplan_div).width()- jQuery("#backgroundModal_"+floorplan_div).width() + cvjs_containmentModalRight, jQuery('#'+floorplan_div).position().top + jQuery('#'+floorplan_div).height() - jQuery("#backgroundModal_"+floorplan_div).height() + cvjs_containmentModalBottom  ]
            })
		
	} );

	jQuery("#colorModal_"+floorplan_div).hide();

	jQuery( function() {
		jQuery("#colorModal_"+floorplan_div).draggable({
                containment: [ jQuery('#'+floorplan_div).position().left - cvjs_containmentModalLeft , jQuery('#'+floorplan_div).position().top - cvjs_containmentModalTop, jQuery('#'+floorplan_div).position().left+ jQuery('#'+floorplan_div).width()- jQuery("#colorModal_"+floorplan_div).width() + cvjs_containmentModalRight, jQuery('#'+floorplan_div).position().top + jQuery('#'+floorplan_div).height() - jQuery("#colorModal_"+floorplan_div).height() + cvjs_containmentModalBottom  ]
            })
	} );



	jQuery("#ellipseModal_"+floorplan_div).hide();

	jQuery( function() {
		jQuery("#ellipseModal_"+floorplan_div).draggable({
                containment: [ jQuery('#'+floorplan_div).position().left - cvjs_containmentModalLeft , jQuery('#'+floorplan_div).position().top - cvjs_containmentModalTop, jQuery('#'+floorplan_div).position().left+ jQuery('#'+floorplan_div).width()- jQuery("#ellipseModal_"+floorplan_div).width() + cvjs_containmentModalRight, jQuery('#'+floorplan_div).position().top + jQuery('#'+floorplan_div).height() - jQuery("#ellipseModal_"+floorplan_div).height() + cvjs_containmentModalBottom  ]
            })
	} );

	

	jQuery("#creationModeModal_"+floorplan_div).hide();

	jQuery( function() {
		jQuery("#creationModeModal_"+floorplan_div).draggable({
                containment: [ jQuery('#'+floorplan_div).position().left - cvjs_containmentModalLeft , jQuery('#'+floorplan_div).position().top - cvjs_containmentModalTop, jQuery('#'+floorplan_div).position().left+ jQuery('#'+floorplan_div).width()- jQuery("#ellipseModal_"+floorplan_div).width() + cvjs_containmentModalRight, jQuery('#'+floorplan_div).position().top + jQuery('#'+floorplan_div).height() - jQuery("#ellipseModal_"+floorplan_div).height() + cvjs_containmentModalBottom  ]
            })
	} );


	
	
	jQuery("#publishPDFModal_"+floorplan_div).hide();

	jQuery( function() {
		jQuery("#publishPDFModal_"+floorplan_div).draggable({
                containment: [ jQuery('#'+floorplan_div).position().left - cvjs_containmentModalLeft , jQuery('#'+floorplan_div).position().top - cvjs_containmentModalTop, jQuery('#'+floorplan_div).position().left+ jQuery('#'+floorplan_div).width()- jQuery("#colorModal_"+floorplan_div).width() + cvjs_containmentModalRight, jQuery('#'+floorplan_div).position().top + jQuery('#'+floorplan_div).height() - jQuery("#colorModal_"+floorplan_div).height() + cvjs_containmentModalBottom  ]
            })
	} );



	jQuery("#mergeDXFModal_"+floorplan_div).hide();

	jQuery( function() {
		jQuery("#mergeDXFModal_"+floorplan_div).draggable({
                containment: [ jQuery('#'+floorplan_div).position().left - cvjs_containmentModalLeft , jQuery('#'+floorplan_div).position().top - cvjs_containmentModalTop, jQuery('#'+floorplan_div).position().left+ jQuery('#'+floorplan_div).width()- jQuery("#colorModal_"+floorplan_div).width() + cvjs_containmentModalRight, jQuery('#'+floorplan_div).position().top + jQuery('#'+floorplan_div).height() - jQuery("#colorModal_"+floorplan_div).height() + cvjs_containmentModalBottom  ]
            })
	} );



	
	
	
	jQuery("#thicknessModal_"+floorplan_div).hide();

	jQuery( function() {
		jQuery("#thicknessModal_"+floorplan_div).draggable({
                containment: [ jQuery('#'+floorplan_div).position().left - cvjs_containmentModalLeft , jQuery('#'+floorplan_div).position().top - cvjs_containmentModalTop, jQuery('#'+floorplan_div).position().left+ jQuery('#'+floorplan_div).width()- jQuery("#thicknessModal_"+floorplan_div).width() + cvjs_containmentModalRight, jQuery('#'+floorplan_div).position().top + jQuery('#'+floorplan_div).height() - jQuery("#thicknessModal_"+floorplan_div).height() + cvjs_containmentModalBottom  ]
            })
	} );

		
	jQuery("#documentPageChangeModal_"+floorplan_div).hide();

	jQuery( function() {
		jQuery("#documentPageChangeModal_"+floorplan_div).draggable({
                containment: [ jQuery('#'+floorplan_div).position().left - cvjs_containmentModalLeft , jQuery('#'+floorplan_div).position().top - cvjs_containmentModalTop, jQuery('#'+floorplan_div).position().left+ jQuery('#'+floorplan_div).width()- jQuery("#documentPageChangeModal_"+floorplan_div).width() + cvjs_containmentModalRight, jQuery('#'+floorplan_div).position().top + jQuery('#'+floorplan_div).height() - jQuery("#documentPageChangeModal_"+floorplan_div).height() + cvjs_containmentModalBottom  ]
            })
	} );
	
	
	
	jQuery("#collabStartModal_"+floorplan_div).hide();

	jQuery( function() {
		jQuery("#collabStartModal_"+floorplan_div).draggable({
                containment: [ jQuery('#'+floorplan_div).position().left - cvjs_containmentModalLeft , jQuery('#'+floorplan_div).position().top - cvjs_containmentModalTop, jQuery('#'+floorplan_div).position().left+ jQuery('#'+floorplan_div).width()- jQuery("#collabStartModal_"+floorplan_div).width() + cvjs_containmentModalRight, jQuery('#'+floorplan_div).position().top + jQuery('#'+floorplan_div).height() - jQuery("#collabStartModal_"+floorplan_div).height() + cvjs_containmentModalBottom  ]
            })
	} );



	jQuery("#printModal_"+floorplan_div).hide();

	jQuery( function() {
		jQuery("#printModal_"+floorplan_div).draggable({
                containment: [ jQuery('#'+floorplan_div).position().left - cvjs_containmentModalLeft , jQuery('#'+floorplan_div).position().top - cvjs_containmentModalTop, jQuery('#'+floorplan_div).position().left+ jQuery('#'+floorplan_div).width()- jQuery("#printModal_"+floorplan_div).width() + cvjs_containmentModalRight, jQuery('#'+floorplan_div).position().top + jQuery('#'+floorplan_div).height() - jQuery("#printModal_"+floorplan_div).height() + cvjs_containmentModalBottom  ]
            })
	} );

	jQuery( function() {
		jQuery("#cvjs_floorPlanInsertImageEncapsulate_"+floorplan_div).draggable({
                containment: [ jQuery('#'+floorplan_div).position().left - cvjs_containmentModalLeft , jQuery('#'+floorplan_div).position().top - cvjs_containmentModalTop, jQuery('#'+floorplan_div).position().left+ jQuery('#'+floorplan_div).width()- jQuery("#cvjs_floorPlanInsertImageEncapsulate_"+floorplan_div).width() + cvjs_containmentModalRight, jQuery('#'+floorplan_div).position().top + jQuery('#'+floorplan_div).height() - jQuery("#cvjs_floorPlanInsertImageEncapsulate_"+floorplan_div).height() + cvjs_containmentModalBottom  ]
            })
	} );

	
	// 3.3.01e
	jQuery("#cvjs_floorPlanInsertImageEncapsulate_"+floorplan_div).css("left", jQuery('#'+floorplan_div).position().left+50).css("top", jQuery('#'+floorplan_div).position().top+50);
	
	
	jQuery( "#cvjs_floorPlanInsertImageEncapsulate_"+floorplan_div ).hide();


	jQuery('#imageNoteIcon3_'+floorplan_div).mouseover(function()
		{
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].ImageObject.InsertReplace);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#cvjs_floorPlanInsertImageEncapsulate_'+floorplan_div).position().left+490).css("top", jQuery('#cvjs_floorPlanInsertImageEncapsulate_'+floorplan_div).position().top-25);
		});


	jQuery('#imageNoteIcon2_'+floorplan_div).mouseover(function()
		{
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].ImageObject.Delete);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#cvjs_floorPlanInsertImageEncapsulate_'+floorplan_div).position().left+500).css("top", jQuery('#cvjs_floorPlanInsertImageEncapsulate_'+floorplan_div).position().top-25);
		});


	jQuery('#imageNoteIcon1_'+floorplan_div).mouseover(function()
		{
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].ImageObject.Minimize);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#cvjs_floorPlanInsertImageEncapsulate_'+floorplan_div).position().left+535).css("top", jQuery('#cvjs_floorPlanInsertImageEncapsulate_'+floorplan_div).position().top-25);
		});





// no restriction on magnifying glass
	jQuery( function() {
		jQuery("#cvjs_floorPlanMagnifyingGlassEncapsulate_"+floorplan_div).draggable();
	} );

	jQuery( "#cvjs_floorPlanMagnifyingGlassEncapsulate_"+floorplan_div).hide();


	
	
	// 3.1.20f
	jQuery( function() {
		jQuery( "#pagechangeList_"+floorplan_div ).draggable({
                containment: [ jQuery('#'+floorplan_div).position().left - cvjs_containmentModalLeft*2 , jQuery('#'+floorplan_div).position().top - cvjs_containmentModalTop*2, jQuery('#'+floorplan_div).position().left+ jQuery('#'+floorplan_div).width()- jQuery("#pagechangeList_"+floorplan_div).width() + cvjs_containmentModalRight*2, jQuery('#'+floorplan_div).position().top + jQuery('#'+floorplan_div).height() - jQuery("#pagechangeList_"+floorplan_div).height() + cvjs_containmentModalBottom*2  ]
            })
	  } );

	jQuery("#pagechangeList"+floorplan_div ).css("position","absolute");


	jQuery('#pagechangelist_id_'+floorplan_div).mouseover(function()
			{
				jQuery("#pagechangelist_"+floorplan_div).draggable({ disabled: true });
			});

	jQuery('#pagechangelist_id_'+floorplan_div).mouseout(function()
			{
				jQuery("#pagechangelist_"+floorplan_div).draggable({ disabled: false });
			});

	jQuery("#pagechangeList_"+floorplan_div).hide();

	jQuery('#exit_pagechangelist').mouseover(function()
		{
			jQuery('#exit_pagechangelist').css("filter", "alpha(opacity=70)");
			jQuery('#exit_pagechangelist').css("opacity", "0.7");
		});
	jQuery('#exit_pagechangelist').mouseout(function()
		{
			jQuery('#exit_pagechangelist').css("filter", "alpha(opacity=100)");
			jQuery('#exit_pagechangelist').css("opacity", "1.0");
		});

	// 3.1.20f

	
	
	
	

	jQuery( function() {
		jQuery( "#layerList_"+floorplan_div ).draggable({
                containment: [ jQuery('#'+floorplan_div).position().left - cvjs_containmentModalLeft*2 , jQuery('#'+floorplan_div).position().top - cvjs_containmentModalTop*2, jQuery('#'+floorplan_div).position().left+ jQuery('#'+floorplan_div).width()- jQuery("#layerList_"+floorplan_div).width() + cvjs_containmentModalRight*2, jQuery('#'+floorplan_div).position().top + jQuery('#'+floorplan_div).height() - jQuery("#layerList_"+floorplan_div).height() + cvjs_containmentModalBottom*2  ]
            })
	  } );

	jQuery("#layerList_"+floorplan_div ).css("position","absolute");


	jQuery('#layerlist_id_'+floorplan_div).mouseover(function()
			{
				jQuery("#layerList_"+floorplan_div).draggable({ disabled: true });
			});

	jQuery('#layerlist_id_'+floorplan_div).mouseout(function()
			{
				jQuery("#layerList_"+floorplan_div).draggable({ disabled: false });
			});


	jQuery("#layerList_"+floorplan_div).hide();

	jQuery('#exit_layerlist').mouseover(function()
		{
			jQuery('#exit_layerlist').css("filter", "alpha(opacity=70)");
			jQuery('#exit_layerlist').css("opacity", "0.7");
		});
	jQuery('#exit_layerlist').mouseout(function()
		{
			jQuery('#exit_layerlist').css("filter", "alpha(opacity=100)");
			jQuery('#exit_layerlist').css("opacity", "1.0");
		});




	  jQuery( function() {
		jQuery( "#layerListSpaceObject_"+floorplan_div ).draggable({
                containment: [ jQuery('#'+floorplan_div).position().left - cvjs_containmentModalLeft*2 , jQuery('#'+floorplan_div).position().top - cvjs_containmentModalTop*2, jQuery('#'+floorplan_div).position().left+ jQuery('#'+floorplan_div).width()- jQuery("#layerListSpaceObject_"+floorplan_div).width() + cvjs_containmentModalRight*2, jQuery('#'+floorplan_div).position().top + jQuery('#'+floorplan_div).height() - jQuery("#layerListSpaceObject_"+floorplan_div).height() + cvjs_containmentModalBottom*2  ]
            })
	  } );

	  jQuery("#layerListSpaceObject_"+floorplan_div ).css("position","absolute");

	jQuery("#layerListSpaceObject_"+floorplan_div).hide();




	jQuery('#layerlist_id_space_'+floorplan_div).mouseover(function()
		{
			jQuery("#layerListSpaceObject_"+floorplan_div).draggable({ disabled: true });
		});

	jQuery('#layerlist_id_space_'+floorplan_div).mouseout(function()
		{
			jQuery("#layerListSpaceObject_"+floorplan_div).draggable({ disabled: false });
		});



	jQuery("#exit_layerlist_space").click(function(){

		cvjs_layerListSpace.clear();
		jQuery("#layerListSpaceObject").hide();

		cvjs_interactiveMethod_Active[cvjs_active_floorplan_div_nr] = false;

	});
	jQuery('#exit_layerlist_space').mouseover(function()
		{
			jQuery('#exit_layerlistSpaceObject').css("filter", "alpha(opacity=70)");
			jQuery('#exit_layerlistSpaceObject').css("opacity", "0.7");
		});
	jQuery('#exit_layerlist_space').mouseout(function()
		{
			jQuery('#exit_layerlistSpaceObject').css("filter", "alpha(opacity=100)");
			jQuery('#exit_layerlistSpaceObject').css("opacity", "1.0");
		});


	jQuery('#wait_looper_'+floorplan_div).hide();



	jQuery( function() {
		jQuery( "#gMenu"+"_"+floorplan_div ).draggable({
                containment: [ jQuery('#'+floorplan_div).position().left - cvjs_containmentModalLeft , jQuery('#'+floorplan_div).position().top - cvjs_containmentModalTop, jQuery('#'+floorplan_div).position().left+ jQuery('#'+floorplan_div).width()- jQuery("#gMenu_"+floorplan_div).width() + cvjs_containmentModalRight, jQuery('#'+floorplan_div).position().top + jQuery('#'+floorplan_div).height() - jQuery("#gMenu_"+floorplan_div).height() + cvjs_containmentModalBottom  ]
            })
	} );

	jQuery( function() {
		jQuery( "#calibrateModal_"+floorplan_div ).draggable({
                containment: [ jQuery('#'+floorplan_div).position().left - cvjs_containmentModalLeft , jQuery('#'+floorplan_div).position().top - cvjs_containmentModalTop, jQuery('#'+floorplan_div).position().left+ jQuery('#'+floorplan_div).width()- jQuery("#calibrateModal_"+floorplan_div).width() + cvjs_containmentModalRight, jQuery('#'+floorplan_div).position().top + jQuery('#'+floorplan_div).height() - jQuery("#calibrateModal_"+floorplan_div).height() + cvjs_containmentModalBottom  ]
            })
	} );

	jQuery( "#calibrateModal_"+floorplan_div ).hide();

	jQuery( function() {
		jQuery( "#measurementModal_"+floorplan_div ).draggable({
                containment: [ jQuery('#'+floorplan_div).position().left - cvjs_containmentModalLeft , jQuery('#'+floorplan_div).position().top - cvjs_containmentModalTop, jQuery('#'+floorplan_div).position().left+ jQuery('#'+floorplan_div).width()- jQuery("#measurementModal_"+floorplan_div).width() + cvjs_containmentModalRight, jQuery('#'+floorplan_div).position().top + jQuery('#'+floorplan_div).height() - jQuery("#measurementModal_"+floorplan_div).height() + cvjs_containmentModalBottom  ]
            })
	} );

	jQuery( "#measurementModal_"+floorplan_div ).hide();


	jQuery( function() {
		jQuery( "#redlinetextModal_"+floorplan_div ).draggable({
                containment: [ jQuery('#'+floorplan_div).position().left - cvjs_containmentModalLeft , jQuery('#'+floorplan_div).position().top - cvjs_containmentModalTop, jQuery('#'+floorplan_div).position().left+ jQuery('#'+floorplan_div).width()- jQuery("#redlinetextModal_"+floorplan_div).width() + cvjs_containmentModalRight, jQuery('#'+floorplan_div).position().top + jQuery('#'+floorplan_div).height() - jQuery("#redlinetextModal_"+floorplan_div).height() + cvjs_containmentModalBottom  ]
            })
	} );

	jQuery( "#redlinetextModal_"+floorplan_div ).hide();


	jQuery( function() {
		jQuery( "#textsearchModal_"+floorplan_div ).draggable({
                containment: [ jQuery('#'+floorplan_div).position().left - cvjs_containmentModalLeft , jQuery('#'+floorplan_div).position().top - cvjs_containmentModalTop, jQuery('#'+floorplan_div).position().left+ jQuery('#'+floorplan_div).width()- jQuery("#textsearchModal_"+floorplan_div).width() + cvjs_containmentModalRight, jQuery('#'+floorplan_div).position().top + jQuery('#'+floorplan_div).height() - jQuery("#textsearchModal_"+floorplan_div).height() + cvjs_containmentModalBottom  ]
            })
	} );

	jQuery( "#textsearchModal_"+floorplan_div ).hide();


	jQuery( function() {
		jQuery( "#linethicknessModal_"+floorplan_div ).draggable({
                containment: [ jQuery('#'+floorplan_div).position().left - cvjs_containmentModalLeft , jQuery('#'+floorplan_div).position().top - cvjs_containmentModalTop, jQuery('#'+floorplan_div).position().left+ jQuery('#'+floorplan_div).width()- jQuery("#linethicknessModal_"+floorplan_div).width() + cvjs_containmentModalRight, jQuery('#'+floorplan_div).position().top + jQuery('#'+floorplan_div).height() - jQuery("#linethicknessModal_"+floorplan_div).height() + cvjs_containmentModalBottom  ]
            })
	} );

	jQuery( "#linethicknessModal_"+floorplan_div ).hide();



	if (!cvjs_modalsInitialized_FileLoadModal){
	
		jQuery( function() {
			jQuery( "#cvjs_serverFileLoadModal").draggable();
		} );

		jQuery( "#cvjs_serverFileLoadModal").hide();
		jQuery( "#cvjs_serverFileLoadModal_table").hide();   // 2017-12-12
	
	}
	
	if (!cvjs_modalsInitialized_FileLoadModal) {cvjs_modalsInitialized_FileLoadModal = true;}   // we initialize the file-load modal only once  	
	


	jQuery( function() {
		jQuery( "#delete_form_"+floorplan_div ).draggable();
	} );

	jQuery( function() {
		jQuery( "#clear_form_"+floorplan_div ).draggable();
	} );

	jQuery( function() {
		jQuery( "#unlink_form_"+floorplan_div ).draggable();
	} );



	jQuery( function() {
		jQuery( "#info_messageModal_2_"+floorplan_div ).draggable({
                containment: [ jQuery('#'+floorplan_div).position().left - cvjs_containmentModalLeft , jQuery('#'+floorplan_div).position().top - cvjs_containmentModalTop, jQuery('#'+floorplan_div).position().left+ jQuery('#'+floorplan_div).width()- jQuery("#info_messageModal_2_"+floorplan_div).width() + cvjs_containmentModalRight, jQuery('#'+floorplan_div).position().top + jQuery('#'+floorplan_div).height() - jQuery("#info_messageModal_2_"+floorplan_div).height() + cvjs_containmentModalBottom  ]
            })
	} );

	jQuery( "#info_messageModal_2_"+floorplan_div ).hide();
	
	// we also have to hide the bootstrap fade-in modal
	jQuery( "#info_messageModal_"+floorplan_div ).hide();



	// here we build in the logic to control which icon menus are displayed, if any!


	if (cvjs_iconInterfaceDisabled[cvjs_interfaceCounterIndex(floorplan_div)]){

		// do nothing, the user has decided to build the interface themselves
		// classic skin!
		if (cvjs_iconInterfaceClassicSkin[cvjs_interfaceCounterIndex(floorplan_div)]){

			if (cvjs_iconInterfaceClassicSkin_MinimumDisk[cvjs_interfaceCounterIndex(floorplan_div)]){  // minimum 3x disk for space management
				jQuery('#gMenu'+"_"+floorplan_div).html("<div class=\"controls_min\"  style=\"list-style-type:none;\"  ><li style=\"list-style-type:none;\" id=\"zoom-extents"+"_"+floorplan_div+"\"><i class=\"fa fa-arrows-alt\"></i></li><li style=\"list-style-type:none\" id=\"zoom-in"+"_"+floorplan_div+"\"><i class=\"fa fa-plus\"></i></li><li style=\"list-style-type:none\" id=\"zoom-out"+"_"+floorplan_div+"\"><i class=\"fa fa-minus\"></i></li><li style=\"list-style-type:none\" id=\"zoom-window"+"_"+floorplan_div+"\"><i class=\"fa fa-search-plus\"></i></li></div>");

				jQuery('#zoom-in'+"_"+floorplan_div).on('click', function() {
				
					cvjs_zoomIn(floorplan_div);
				});
				
				jQuery('#zoom-out'+"_"+floorplan_div).on('click', function() {
					cvjs_zoomOut(floorplan_div);
				});

				jQuery('#zoom-extents'+"_"+floorplan_div).on('click', function() {
					cvjs_resetZoomPan(floorplan_div);
				});

				jQuery('#zoom-window'+"_"+floorplan_div).on('click', function() {
					cvjs_zoomWindow(floorplan_div);
				});

				// 3.3.01a
				jQuery('#zoom-in'+"_"+floorplan_div).on('mouseover', function() {
					try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
					cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(floorplan_div);
					tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});												
					tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p1_8.ZoomIn);
					tip[cvjs_active_floorplan_div_nr].show();
					tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left+42).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+66);				
				});
				
				jQuery('#zoom-in'+"_"+floorplan_div).on('mouseout', function() {
					tip[cvjs_active_floorplan_div_nr].hide();				
				});
				
				jQuery('#zoom-out'+"_"+floorplan_div).on('mouseover', function() {
					try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
					cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(floorplan_div);
					tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});												
					tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p1_8.ZoomOut);
					tip[cvjs_active_floorplan_div_nr].show();
					tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left+42).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+96);								
				});
				
				jQuery('#zoom-out'+"_"+floorplan_div).on('mouseout', function() {
					tip[cvjs_active_floorplan_div_nr].hide();								
				});

				jQuery('#zoom-extents'+"_"+floorplan_div).on('mouseover', function() {
					try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
					cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(floorplan_div);
					tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});												
					tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p1_8.ZoomExtents);
					tip[cvjs_active_floorplan_div_nr].show();
					tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left+42).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+35);												
				});
	
				jQuery('#zoom-extents'+"_"+floorplan_div).on('mouseout', function() {
					tip[cvjs_active_floorplan_div_nr].hide();								
				});
				
				jQuery('#zoom-window'+"_"+floorplan_div).on('mouseover', function() {
					try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
					cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(floorplan_div);
					tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});												
					tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].IconPage_p1_8.ZoomWindow);
					tip[cvjs_active_floorplan_div_nr].show();
					tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#gMenu'+"_"+floorplan_div).position().left+42).css("top", jQuery('#gMenu'+"_"+floorplan_div).position().top+127);												
				});
				
				jQuery('#zoom-window'+"_"+floorplan_div).on('mouseout', function() {
					tip[cvjs_active_floorplan_div_nr].hide();								
				});
				// 3.3.01a
				
								

			}
			else{
			 	if (cvjs_iconInterfaceClassicSkin_PanZoomDisk[cvjs_interfaceCounterIndex(floorplan_div)]){
					jQuery('#gMenu'+"_"+floorplan_div).html("<img src=\""+cvjs_imagesLocation+"PanZoomWindowFullPages7t.png\" usemap=\"#PanZoomMap\" border=\"0\" height=\"363\" width=\"78\" class=\"map\" hidefocus=\"true\">");
				}
				else{  // classic disk, but control for two platforms
					if (!isSmartPhoneOrTablet && !cvjs_iconInterfaceClassicSkinDeviceSize[cvjs_interfaceCounterIndex(floorplan_div)])
						jQuery('#gMenu'+"_"+floorplan_div).html("<img src=\""+cvjs_imagesLocation+"PanZoomFull.png\" usemap=\"#PanZoomMapClassic\" border=\"0\" height=\"267\" width=\"79\" class=\"map\" hidefocus=\"true\">");
					else
						jQuery('#gMenu'+"_"+floorplan_div).html("<img src=\""+cvjs_imagesLocation+"ZoomExtentsDevice.png\" usemap=\"#ZoomExtentsDeviceMapClassic\" border=\"0\" height=\"176\" width=\"79\" class=\"map\" hidefocus=\"true\">");
				}
			}
		}
	}
	else{
		// we have the interface completely active
		if (!isSmartPhoneOrTablet){
			if (pageChangeInterface[cvjs_interfaceCounterIndex(floorplan_div)]){
				if (cvjs_version_3_2_modal)  // modal with line thickness
					jQuery('#gMenu'+"_"+floorplan_div).html("<img src=\""+cvjs_imagesLocation+"cvjsToolbar_dra_p1_8.png\" style=\"margin-left: 10px; margin-top: 10px;\" usemap=\"#cvjsToolbarMap_p1_8"+"_"+floorplan_div+"\" border=\"0\" height=\"276\" width=\"62\" class=\"map\" hidefocus=\"true\">");
				else
					jQuery('#gMenu'+"_"+floorplan_div).html("<img src=\""+cvjs_imagesLocation+"cvjsToolbar_dra_p1_3.png\" style=\"margin-left: 10px; margin-top: 10px;\" usemap=\"#cvjsToolbarMap_p1_3\" border=\"0\" height=\"276\" width=\"62\" class=\"map\" hidefocus=\"true\">");

				}
			else{
					if (!pageChangeInterfaceFalse_noIconNavigation[cvjs_interfaceCounterIndex(floorplan_div)]){ // we want to use the icon menu with navigation buttons now pageChange is disables					}
						jQuery('#gMenu'+"_"+floorplan_div).html("<img src=\""+cvjs_imagesLocation+"cvjsToolbar_dra_p1_2.png\" style=\"margin-left: 10px; margin-top: 10px;\" usemap=\"#cvjsToolbarMap_p1\" border=\"0\" height=\"303\" width=\"62\" class=\"map\" hidefocus=\"true\">");
					}
					else{ // we have single page drawings, so we wont need the navigation buttons in the icon menu
						jQuery('#gMenu'+"_"+floorplan_div).html("<img src=\""+cvjs_imagesLocation+"cvjsToolbar_dra_p1_8.png\" style=\"margin-left: 10px; margin-top: 10px;\" usemap=\"#cvjsToolbarMap_p1_8"+"_"+floorplan_div+"\" border=\"0\" height=\"276\" width=\"62\" class=\"map\" hidefocus=\"true\">");
					}
				}
		}
		else
			jQuery('#gMenu'+"_"+floorplan_div).html("<img src=\""+cvjs_imagesLocation+"PanZoomWindowFullPages7t.png\" usemap=\"#PanZoomMap\" border=\"0\" height=\"363\" width=\"78\" class=\"map\" hidefocus=\"true\">");
	}


	// 3.1.21j
	
	cvjs_initializeAllFileSelectorDivs(floorplan_div);

	  jQuery( function() {
		jQuery( "#cvjs_slider2_"+floorplan_div ).slider({
		  value: lineSliderStartValue,
		  min: 1,
		  max: 500,
		  step: 15,
		  slide: function( event, ui ) {
			jQuery( "#lineThickness_"+floorplan_div).html(  (ui.value/100*lineSliderValue).toFixed(2));

			//console.log("We are adjusting!!! cvjs_MinWidthSVG "+cvjs_MinWidthSVG);

				if (!cvjs_svgLineThickness){

					 cvjs_MinWidth = ui.value/100*lineSliderValue;  //console.log(ui.value);
					//console.log(cvjs_MinWidth);
					cvjs_HatchLW = cvjs_MinWidth/10.0;
					layers_all.clear();
					drawDrawing(cvjs_rPaper[cvjs_active_floorplan_div_nr]);
					cvjs_masterBackground[cvjs_active_floorplan_div_nr].add(layers_all);
				}else{  // SVG line thickness 2017-08-03

					   cvjs_MinWidthSVG = ui.value/100*lineSliderValue;

//		console.log("SVG We are adjusting!!! cvjs_MinWidthSVG "+cvjs_MinWidthSVG);
					   var oArr = {};

						// 5.1.04a    - we are adding selector to find ZW class
					jQuery("*[id] .ZW").each(function() {
//					   jQuery("*[id]").each(function() {

						var id = jQuery(this).attr('id');
						
						try{  // If embedded into php (sharepoint), then error is possible
							var searchString = "[id^="+floorplan_div_Array[cvjs_active_floorplan_div_nr]+"]";
							var svgID = jQuery("#"+id).parents(searchString).attr('id');
							
							if (svgID == floorplan_div_Array[cvjs_active_floorplan_div_nr]){
							   if (!oArr[id]) oArr[id] = true;
							}
						}
						catch (err) { 
						//	console.log(err+" XX"+id+"XX");
						}

					   });

					   
					   
					   
					   for (var prop in oArr){

							try{

								var target = "#"+prop;

								//console.log(target+" parent id"+jQuery(target).parent().attr("id"));
								
								if (jQuery(target).parent().attr("id").indexOf("layer_")==0 || jQuery(target).parent().attr("id").indexOf("Layer_")==0){
									//console.log("target with Layer/layour parent "+target);
									var valWidth = jQuery(target).css("stroke-width");
									//console.log(valWidth);

									if (valWidth.indexOf("px")>-1) {
										valWidth = valWidth.substring(0,valWidth.indexOf("px"));
										valWidth = parseFloat(valWidth);
										valWidth = valWidth * cvjs_MinWidthSVG;
									}
									else
										valWidth = valWidth * cvjs_MinWidthSVG;

									jQuery(target).css("stroke-width", cvjs_SVGLineThicknessArray[prop] * cvjs_MinWidthSVG);
								}

							}catch(err){}

						}
				}

/*

			 cvjs_MinWidth = ui.value/100*lineSliderValue;  //console.log(ui.value);
			//console.log(cvjs_MinWidth);
			cvjs_HatchLW = cvjs_MinWidth/10.0;
			layers_all.clear();
			drawDrawing(cvjs_rPaper[cvjs_active_floorplan_div_nr]);
			cvjs_masterBackground[cvjs_active_floorplan_div_nr].add(layers_all);
*/

		  }
		});
		jQuery( "#lineThickness_"+floorplan_div ).html( (jQuery( "#cvjs_slider2_"+floorplan_div ).slider( "value" )/100*lineSliderValue).toFixed(2));
	  } );



		jQuery('#sortable').sortable({ disabled: false });    //   jQuery('#sortable').sortable({ disabled: false });



	jQuery( function() {
		jQuery( "#floatNavigationMenu_"+floorplan_div ).draggable({
			 // 3.1.21i
                containment: [ jQuery('#'+floorplan_div).position().left - cvjs_containmentModalLeft*2 , jQuery('#'+floorplan_div).position().top - cvjs_containmentModalTop, jQuery('#'+floorplan_div).position().left+ jQuery('#'+floorplan_div).width()- jQuery("#floatNavigationMenu_"+floorplan_div).width() + cvjs_containmentModalRight, jQuery('#'+floorplan_div).position().top + jQuery('#'+floorplan_div).height() - jQuery("#floatNavigationMenu_"+floorplan_div).height() + cvjs_containmentModalBottom  ]
            })
	} );
	// set the location of the navigation menu
	jQuery('#floatNavigationMenu_'+floorplan_div).hide();


	jQuery('#cvjs_zoomextents_'+floorplan_div).mouseover(function()
		{
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "cvjs_zoomextents";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});		
			
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].PageModal.ZoomExtents);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#floatNavigationMenu_'+floorplan_div).position().left-30).css("top", jQuery('#floatNavigationMenu_'+floorplan_div).position().top+33);

		});


	jQuery('#cvjs_zoomextents_'+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});


	jQuery('#cvjs_zoomwindow_'+floorplan_div).mouseover(function()
		{
					
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "cvjs_zoomwindow";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			
			tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});		
					
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].PageModal.ZoomWindow);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#floatNavigationMenu_'+floorplan_div).position().left).css("top", jQuery('#floatNavigationMenu_'+floorplan_div).position().top+33);

		});

	jQuery('#cvjs_zoomwindow_'+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});
	
	
	
	
	
	jQuery('#cvjs_rotateback_'+floorplan_div).mouseover(function()
		{
					
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "cvjs_rotateback";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			
			tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});		
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].PageModal.RotateBack);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#floatNavigationMenu_'+floorplan_div).position().left+30).css("top", jQuery('#floatNavigationMenu_'+floorplan_div).position().top+33);

		});


	jQuery('#cvjs_rotateback_'+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});


	jQuery('#cvjs_rotateforward_'+floorplan_div).mouseover(function()
		{
					
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "cvjs_rotateforward";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			
					
			tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});		
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].PageModal.RotateBack);
			tip[cvjs_active_floorplan_div_nr].show();
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#floatNavigationMenu_'+floorplan_div).position().left+60).css("top", jQuery('#floatNavigationMenu_'+floorplan_div).position().top+33);

		});

	jQuery('#cvjs_rotateforward_'+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});

	
	
	
	jQuery('#cvjs_fastback_'+floorplan_div).mouseover(function()
		{
					
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "cvjs_fastback";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);
			
					
			tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});		
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].PageModal.First);
			tip[cvjs_active_floorplan_div_nr].show();
//			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#floatNavigationMenu_'+floorplan_div).position().left-30).css("top", jQuery('#floatNavigationMenu_'+floorplan_div).position().top-25);
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#floatNavigationMenu_'+floorplan_div).position().left+90).css("top", jQuery('#floatNavigationMenu_'+floorplan_div).position().top+33);

		});

	jQuery('#cvjs_fastback_'+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});



	jQuery('#cvjs_back_'+floorplan_div).mouseover(function()
		{

			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "cvjs_back";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);


			tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});		
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].PageModal.Previous);
			tip[cvjs_active_floorplan_div_nr].show();
//			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#floatNavigationMenu_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).position().left).css("top", jQuery('#floatNavigationMenu_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).position().top-25);
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#floatNavigationMenu_'+floorplan_div).position().left+120).css("top", jQuery('#floatNavigationMenu_'+floorplan_div).position().top+33);

		});

	jQuery('#cvjs_back_'+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});


		

	jQuery('#cvjs_enterpagenumber_'+floorplan_div).mouseover(function()
		{

			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "cvjs_enterpagenumber";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);


			tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});		
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].PageModal.EnterPage);
			tip[cvjs_active_floorplan_div_nr].show();
//			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#floatNavigationMenu_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).position().left).css("top", jQuery('#floatNavigationMenu_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).position().top-25);
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#floatNavigationMenu_'+floorplan_div).position().left+160).css("top", jQuery('#floatNavigationMenu_'+floorplan_div).position().top+33);

		});

	jQuery('#cvjs_enterpagenumber_'+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});


		
	jQuery('#cvjs_selectpagefromlist_'+floorplan_div).mouseover(function()
		{

			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "cvjs_selectpagefromlist";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);


			tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});		
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].PageModal.SelectPageFromList);
			tip[cvjs_active_floorplan_div_nr].show();
//			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#floatNavigationMenu_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).position().left).css("top", jQuery('#floatNavigationMenu_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).position().top-25);
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#floatNavigationMenu_'+floorplan_div).position().left+240).css("top", jQuery('#floatNavigationMenu_'+floorplan_div).position().top+33);

		});

	jQuery('#cvjs_selectpagefromlist_'+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});

		
	jQuery('#cvjs_selectpagefromlist_'+floorplan_div).mousedown(function()
		{
			cvjs_PageChangeList(floorplan_div);

		});
		
		
		
	jQuery('#cvjs_forward_'+floorplan_div).mouseover(function()
		{

		if (cvjs_debug) console.log(cvjs_active_floorplan_div_nr+"  "+jQuery(this).attr('id'));
		
			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "cvjs_forward";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);


			tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});		
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].PageModal.Next);
			tip[cvjs_active_floorplan_div_nr].show();
//			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#floatNavigationMenu_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).position().left+190).css("top", jQuery('#floatNavigationMenu_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).position().top-25);
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#floatNavigationMenu_'+floorplan_div).position().left+290).css("top", jQuery('#floatNavigationMenu_'+floorplan_div).position().top+33);

		});

	jQuery('#cvjs_forward_'+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});



	jQuery('#cvjs_fastforward_'+floorplan_div).mouseover(function()
		{

			try{tip[cvjs_active_floorplan_div_nr].hide();} catch (err){};  // we have to hide if open from another div			
			var thisDiv = "cvjs_fastforward";
			var thisFloorplan = jQuery(this).attr('id').substring(thisDiv.length+1);
			//console.log(thisFloorplan);
			cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(thisFloorplan);


			tip[cvjs_active_floorplan_div_nr].css({ position:'absolute'});		
			tip[cvjs_active_floorplan_div_nr].html(lTable.languages[cvjs_currentLanguage].PageModal.Last);
			tip[cvjs_active_floorplan_div_nr].show();
//			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#floatNavigationMenu_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).position().left+210).css("top", jQuery('#floatNavigationMenu_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).position().top-25);
//			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#floatNavigationMenu_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).position().left+220).css("top", jQuery('#floatNavigationMenu_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).position().top+35);
			tip[cvjs_active_floorplan_div_nr].css("left", jQuery('#floatNavigationMenu_'+floorplan_div).position().left+305).css("top", jQuery('#floatNavigationMenu_'+floorplan_div).position().top+33);

		});

	jQuery('#cvjs_fastforward_'+floorplan_div).mouseout(function()
		{
			tip[cvjs_active_floorplan_div_nr].hide();
		});



	cvjs_initialize_allColorCheckboxes(floorplan_div);


	var url_loc = "url("+cvjs_imagesLocation+"pageChange_08.png)";
	jQuery('.changePagebox1').css("background-image", url_loc );

	
	// 4.1.01b
	url_loc = "url("+cvjs_imagesLocation+"compareDrawingName_11B.png)";
	jQuery('.compareDrawingbox1').css("background-image", url_loc );

	// 4.1.01b
	url_loc = "url("+cvjs_imagesLocation+"cvjsToolbar_dra_pageChange_11B.png)";
	jQuery('.changePagebox_topBar').css("background-image", url_loc );
	
//	window.alert("url_loc"+url_loc);
	
	 
	
	
	
	
	
	// 3.3.04c - QR Pane
	jQuery("#"+floorPlan_Modal).append("<div id=\"cvjs_qrcode_"+floorplan_div+"\" style=\"width:200px; height:200px; margin-top:15px;\"></div>");	
	
	jQuery("#cvjs_qrcode_"+floorplan_div).hide();
	
	cvjs_modalsInitialized = true;
	
	


}


/// DATA MAPS TEST


var cvjs_displayMapsStatus = false;

function display_maps(){

	cvjs_displayMapsStatus = !cvjs_displayMapsStatus;

	
console.log("cvjs_displayMapsStatus "+cvjs_displayMapsStatus);	
	
	if (cvjs_displayMapsStatus)
		jQuery("#datamaps_form").show();
	else
		jQuery("#datamaps_form").hide();

		if ( jQuery("#cvjs_displayData_switch").prop("checked")){
//				jQuery("#datamaps_form").css("left", 40).css("top", jQuery("#"+floorplan_div_Array[cvjs_active_floorplan_div_nr]).height()-80);
			jQuery("#datamaps_form").css("left", 40).css("top", jQuery('#'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).position().top + jQuery("#"+floorplan_div_Array[cvjs_active_floorplan_div_nr]).height()-197);

		}else{
			jQuery("#datamaps_form").css("left", 40).css("top", jQuery('#'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).position().top + jQuery("#"+floorplan_div_Array[cvjs_active_floorplan_div_nr]).height()-120);
		}

}

var cvjs_currentMapNumber = 0;

function cvjs_change_datamaps(mapNr){

//console.log("in change datamaps "+cvjs_dataMapsHeaderArray);
//console.log(mapNr+" "+cvjs_dataMapsHeaderArray[mapNr]);

	if (mapNr==0){
		jQuery("#cvjs_display_selection_1").show();
		jQuery("#cvjs_display_selection_2").hide();
		jQuery("#cvjs_display_selection_3").hide();
		jQuery("#cvjs_display_selection_4").hide();
	}

	if (mapNr==1){
		jQuery("#cvjs_display_selection_1").hide();
		jQuery("#cvjs_display_selection_2").show();
		jQuery("#cvjs_display_selection_3").hide();
		jQuery("#cvjs_display_selection_4").hide();
	}

	if (mapNr==2){
		jQuery("#cvjs_display_selection_1").hide();
		jQuery("#cvjs_display_selection_2").hide();
		jQuery("#cvjs_display_selection_3").show();
		jQuery("#cvjs_display_selection_4").hide();
	}


	if (mapNr==3){
		jQuery("#cvjs_display_selection_1").hide();
		jQuery("#cvjs_display_selection_2").hide();
		jQuery("#cvjs_display_selection_3").hide();
		jQuery("#cvjs_display_selection_4").show();
	}

	if (cvjs_dataMapsHeaderArray!=null)
		jQuery("#drop_select_datamaps").html(cvjs_dataMapsHeaderArray[mapNr]+'<b class="caret"></b>');
	else
		jQuery("#drop_select_datamaps").html(lTable.languages[cvjs_currentLanguage].DataMaps.Map[mapNr]+'<b class="caret"></b>');

	cvjs_ParseDisplayDataMaps(mapNr);

	cvjs_currentMapNumber = mapNr;

}

/// DATA MAPS TEST


var cvjs_makePDFEntireDoc = false;


var radioButton_publishAsPDF = 1;


var radioButton_mergeAsDXF = 1;



function cvjs_initialize_allColorCheckboxes(floorplan_div){




		jQuery("#radioMergeAsDXF1_"+floorplan_div)
			.change(function(){
				if( jQuery(this).is(":checked") ){
					var val = jQuery(this).val();
					radioButton_mergeAsDXF = 1;

					
					// collapse email  3.0.13e
					if (cvjs_preConversionFileExtension[cvjs_active_floorplan_div_nr].indexOf("pdf")==0  && cvjs_customPdfFolderFlag){
						// show entire document button
						console.log("show entire document button");
						jQuery("#mergeDXFModal_row2_"+floorplan_div).show();
						jQuery("#mergeDXFModal_row3_"+floorplan_div).hide();
						jQuery("#mergeDXFModal_row4_"+floorplan_div).hide();
					}
					else{
					// remove entire document button
						console.log("hide button");
						jQuery("#mergeDXFModal_row2_"+floorplan_div).hide();
						jQuery("#mergeDXFModal_row3_"+floorplan_div).show();
						jQuery("#mergeDXFModal_row4_"+floorplan_div).hide();

					}
					
					

					
				}
			});

		jQuery("#radioMergeAsDXF2_"+floorplan_div)
			.change(function(){
				if( jQuery(this).is(":checked") ){
					var val = jQuery(this).val();
					radioButton_mergeAsDXF = 2;
				
					if (cvjs_mailServerSetup){				
						// expand email 3.0.13e
						jQuery("#mergeDXFModal_row2_"+floorplan_div).hide();
						jQuery("#mergeDXFModal_row3_"+floorplan_div).hide();
						jQuery("#mergeDXFModal_row4_"+floorplan_div).show();
					}
					else{
						window.alert("Please set up e-mail server.");						
					}
				
				
				}
			});

		jQuery("#radioMergeAsDXF3_"+floorplan_div)
			.change(function(){
				if( jQuery(this).is(":checked") ){
					var val = jQuery(this).val();
					radioButton_mergeAsDXF = 3;
					// collapse email

					
					// collapse email  3.0.13e
					if (cvjs_preConversionFileExtension[cvjs_active_floorplan_div_nr].indexOf("pdf")==0  && cvjs_customPdfFolderFlag){
						// show entire document button
						console.log("show entire document button");
						jQuery("#mergeDXFModal_row2_"+floorplan_div).show();
						jQuery("#mergeDXFModal_row3_"+floorplan_div).hide();
						jQuery("#mergeDXFModal_row4_"+floorplan_div).hide();
					}
					else{
					// remove entire document button
						console.log("hide button");
						jQuery("#mergeDXFModal_row2_"+floorplan_div).hide();
						jQuery("#mergeDXFModal_row3_"+floorplan_div).show();
						jQuery("#mergeDXFModal_row4_"+floorplan_div).hide();

					}
					
					
				}
			});






		jQuery("#radioPublishAsPDF1_"+floorplan_div)
			.change(function(){
				if( jQuery(this).is(":checked") ){
					var val = jQuery(this).val();
					radioButton_publishAsPDF = 1;

					
					// collapse email  3.0.13e
					if (cvjs_preConversionFileExtension[cvjs_active_floorplan_div_nr].indexOf("pdf")==0  && cvjs_customPdfFolderFlag){
						// show entire document button
						console.log("show entire document button");
						jQuery("#publishPDFModal_row2_"+floorplan_div).show();
						jQuery("#publishPDFModal_row3_"+floorplan_div).hide();
						jQuery("#publishPDFModal_row4_"+floorplan_div).hide();
					}
					else{
					// remove entire document button
						console.log("hide button");
						jQuery("#publishPDFModal_row2_"+floorplan_div).hide();
						jQuery("#publishPDFModal_row3_"+floorplan_div).show();
						jQuery("#publishPDFModal_row4_"+floorplan_div).hide();

					}
					
					

					
				}
			});

		jQuery("#radioPublishAsPDF2_"+floorplan_div)
			.change(function(){
				if( jQuery(this).is(":checked") ){
					var val = jQuery(this).val();
					radioButton_publishAsPDF = 2;
				
					if (cvjs_mailServerSetup){				
						// expand email 3.0.13e
						jQuery("#publishPDFModal_row2_"+floorplan_div).hide();
						jQuery("#publishPDFModal_row3_"+floorplan_div).hide();
						jQuery("#publishPDFModal_row4_"+floorplan_div).show();
					}
					else{
						window.alert("Please set up e-mail server.");						
					}
				
				
				}
			});

		jQuery("#radioPublishAsPDF3_"+floorplan_div)
			.change(function(){
				if( jQuery(this).is(":checked") ){
					var val = jQuery(this).val();
					radioButton_publishAsPDF = 3;
					// collapse email

					
					// collapse email  3.0.13e
					if (cvjs_preConversionFileExtension[cvjs_active_floorplan_div_nr].indexOf("pdf")==0  && cvjs_customPdfFolderFlag){
						// show entire document button
						console.log("show entire document button");
						jQuery("#publishPDFModal_row2_"+floorplan_div).show();
						jQuery("#publishPDFModal_row3_"+floorplan_div).hide();
						jQuery("#publishPDFModal_row4_"+floorplan_div).hide();
					}
					else{
					// remove entire document button
						console.log("hide button");
						jQuery("#publishPDFModal_row2_"+floorplan_div).hide();
						jQuery("#publishPDFModal_row3_"+floorplan_div).show();
						jQuery("#publishPDFModal_row4_"+floorplan_div).hide();

					}
					
					
					
					
					
					
					
					
				}
			});



			
		jQuery("#radioEllipse1_"+floorplan_div)
			.change(function(){
				if( jQuery(this).is(":checked") ){
					var val = jQuery(this).val();
					//blue
					cvjs_ellipseRedlineType = 1;
				}
			});

		jQuery("#radioEllipse2_"+floorplan_div)
			.change(function(){
				if( jQuery(this).is(":checked") ){
					var val = jQuery(this).val();
					//red
					cvjs_ellipseRedlineType = 2;
				}
			});
			

		jQuery("#radioCreation1_"+floorplan_div)
			.change(function(){
				if( jQuery(this).is(":checked") ){
					var val = jQuery(this).val();
					//blue
					cvjs_creationInputType = 1;
				}
			});

		jQuery("#radioCreation2_"+floorplan_div)
			.change(function(){
				if( jQuery(this).is(":checked") ){
					var val = jQuery(this).val();
					//red
					cvjs_creationInputType = 2;
				}
			});
			
			
			


		jQuery("#radioColor1_"+floorplan_div)
			.change(function(){
				if( jQuery(this).is(":checked") ){
					var val = jQuery(this).val();
					//blue
					cvjs_genericPickedColor = "#0000FF";
					cvjs_currentRedline_color = "#0000FF";
					document.getElementById('cvjs_colorPickerValue').jscolor.fromString("#0000FF");
				}
			});

		jQuery("#radioColor2_"+floorplan_div)
			.change(function(){
				if( jQuery(this).is(":checked") ){
					var val = jQuery(this).val();
					//red
					cvjs_genericPickedColor = "#FF0000";
					cvjs_currentRedline_color = "#FF0000";
					document.getElementById('cvjs_colorPickerValue').jscolor.fromString("#FF0000");
				}
			});

		jQuery("#radioColor3_"+floorplan_div)
			.change(function(){
				if( jQuery(this).is(":checked") ){
					var val = jQuery(this).val();
					//orange
					cvjs_genericPickedColor = "#ffa500";
					cvjs_currentRedline_color = "#ffa500";
					document.getElementById('cvjs_colorPickerValue').jscolor.fromString("#ffa500");
				}
			});


		jQuery("#radioColor4_"+floorplan_div)
			.change(function(){
				if( jQuery(this).is(":checked") ){
					var val = jQuery(this).val();
					//yellow
					cvjs_genericPickedColor = "#fff200";
					cvjs_currentRedline_color = "#fff200";
					document.getElementById('cvjs_colorPickerValue').jscolor.fromString("#fff200");
				}
			});


		jQuery("#radioColor5_"+floorplan_div)
			.change(function(){
				if( jQuery(this).is(":checked") ){
					var val = jQuery(this).val();
					//green
					cvjs_genericPickedColor = "#22B14C";
					cvjs_currentRedline_color = "#22B14C";
					document.getElementById('cvjs_colorPickerValue').jscolor.fromString("#22B14C");
				}
			});


		jQuery("#radioColor6_"+floorplan_div)
			.change(function(){
				if( jQuery(this).is(":checked") ){
					var val = jQuery(this).val();
					//purple
					cvjs_genericPickedColor = "#800080";
					cvjs_currentRedline_color = "#800080";
					document.getElementById('cvjs_colorPickerValue').jscolor.fromString("#800080");
				}
			});


		jQuery("#radioColor7_"+floorplan_div)
			.change(function(){
				if( jQuery(this).is(":checked") ){
					var val = jQuery(this).val();
					//gray
					cvjs_genericPickedColor = "#808080";
					cvjs_currentRedline_color = "#808080";
					document.getElementById('cvjs_colorPickerValue').jscolor.fromString("#808080");
				}
			});


		jQuery("#radioColor8_"+floorplan_div)
			.change(function(){
				if( jQuery(this).is(":checked") ){
					var val = jQuery(this).val();
					//brown
					cvjs_genericPickedColor = "#B97A57";
					cvjs_currentRedline_color = "#B97A57";
					document.getElementById('cvjs_colorPickerValue').jscolor.fromString("#B97A57");
				}
			});




		jQuery("#radioColor1_background_"+floorplan_div)
			.change(function(){
				if( jQuery(this).is(":checked") ){
					var val = jQuery(this).val();
					//blue
					cvjs_genericPickedColor = "#FFFFFF";  //white
					// 3.1.03b
					try {document.getElementById('cvjs_backgroundPickerValue').jscolor.fromString("#FFFFFF");}catch (err){console.log(err);}
					cvjs_setBackgroundColorHex("#FFFFFF", floorplan_div_Array[cvjs_active_floorplan_div_nr]);
			}
			});

		jQuery("#radioColor2_background_"+floorplan_div)
			.change(function(){
				if( jQuery(this).is(":checked") ){
					var val = jQuery(this).val();
					//red
					cvjs_genericPickedColor = "#000000";  //black
					// 3.1.03b
					try {document.getElementById('cvjs_backgroundPickerValue').jscolor.fromString("#000000");}catch (err){console.log(err);}
					cvjs_setBackgroundColorHex("#000000", floorplan_div_Array[cvjs_active_floorplan_div_nr]);
				}
			});

		jQuery("#radioColor3_background_"+floorplan_div)
			.change(function(){
				if( jQuery(this).is(":checked") ){
					var val = jQuery(this).val();
					//orange
					cvjs_genericPickedColor = "#F0FFFF";  // Azure  	#F0FFFF
					// 3.1.03b
					try {document.getElementById('cvjs_backgroundPickerValue').jscolor.fromString("#F0FFFF");}catch (err){console.log(err);}
					cvjs_setBackgroundColorHex("#F0FFFF", floorplan_div_Array[cvjs_active_floorplan_div_nr]);
				}
			});


		jQuery("#radioColor4_background_"+floorplan_div)
			.change(function(){
				if( jQuery(this).is(":checked") ){
					var val = jQuery(this).val();
					//yellow
					cvjs_genericPickedColor = "#FFC0CB"; // Pink  	#FFC0CB
					// 3.1.03b
					try {document.getElementById('cvjs_backgroundPickerValue').jscolor.fromString("#FFC0CB");}catch (err){console.log(err);}
					cvjs_setBackgroundColorHex("#FFC0CB", floorplan_div_Array[cvjs_active_floorplan_div_nr]);
				}
			});


		jQuery("#radioColor5_background_"+floorplan_div)
			.change(function(){
				if( jQuery(this).is(":checked") ){
					var val = jQuery(this).val();
					//green
					cvjs_genericPickedColor = "#FFFAFA";  // Snow  	#FFFAFA
					// 3.1.03b
					try {document.getElementById('cvjs_backgroundPickerValue').jscolor.fromString("#FFFAFA");}catch (err){console.log(err);}
					cvjs_setBackgroundColorHex("#FFFAFA", floorplan_div_Array[cvjs_active_floorplan_div_nr]);
				}
			});


		jQuery("#radioColor6_background_"+floorplan_div)
			.change(function(){
				if( jQuery(this).is(":checked") ){
					var val = jQuery(this).val();
					//purple
					cvjs_genericPickedColor = "#C0C0C0";  //Silver  	#C0C0C0
					// 3.1.03b
					try {document.getElementById('cvjs_backgroundPickerValue').jscolor.fromString("#C0C0C0");}catch (err){console.log(err);}
					cvjs_setBackgroundColorHex("#C0C0C0", floorplan_div_Array[cvjs_active_floorplan_div_nr]);
				}
			});


		jQuery("#radioColor7_background_"+floorplan_div)
			.change(function(){
				if( jQuery(this).is(":checked") ){
					var val = jQuery(this).val();
					//gray
					cvjs_genericPickedColor = "#808080";  // Gray
					// 3.1.03b
					try {document.getElementById('cvjs_backgroundPickerValue').jscolor.fromString("#808080");}catch (err){console.log(err);}
					cvjs_setBackgroundColorHex("#808080", floorplan_div_Array[cvjs_active_floorplan_div_nr]);
				}
			});


		jQuery("#radioColor8_background_"+floorplan_div)
			.change(function(){
				if( jQuery(this).is(":checked") ){
					var val = jQuery(this).val();
					//brown
					cvjs_genericPickedColor = "#B97A57";
					// 3.1.03b
					try {document.getElementById('cvjs_backgroundPickerValue').jscolor.fromString("#B97A57");}catch (err){console.log(err);}
					cvjs_setBackgroundColorHex("#B97A57", floorplan_div_Array[cvjs_active_floorplan_div_nr]);
				}
			});



		jQuery("#radioColor1_generic")
			.change(function(){
				if( jQuery(this).is(":checked") ){
					var val = jQuery(this).val();
					//blue
					cvjs_genericPickedColor = "#0000FF";
				}
			});

		jQuery("#radioColor2_generic")
			.change(function(){
				if( jQuery(this).is(":checked") ){
					var val = jQuery(this).val();
					//red
					cvjs_genericPickedColor = "#FF0000";
				}
			});

		jQuery("#radioColor3_generic")
			.change(function(){
				if( jQuery(this).is(":checked") ){
					var val = jQuery(this).val();
					//orange
					cvjs_genericPickedColor = "#ffa500";
				}
			});


		jQuery("#radioColor4_generic")
			.change(function(){
				if( jQuery(this).is(":checked") ){
					var val = jQuery(this).val();
					//yellow
					cvjs_genericPickedColor = "#ffff00";
				}
			});


		jQuery("#radioColor5_generic")
			.change(function(){
				if( jQuery(this).is(":checked") ){
					var val = jQuery(this).val();
					//green
					cvjs_genericPickedColor = "#22B14C";
				}
			});


		jQuery("#radioColor6_generic")
			.change(function(){
				if( jQuery(this).is(":checked") ){
					var val = jQuery(this).val();
					//purple
					cvjs_genericPickedColor = "#800080";
				}
			});


		jQuery("#radioColor7_generic")
			.change(function(){
				if( jQuery(this).is(":checked") ){
					var val = jQuery(this).val();
					//gray
					cvjs_genericPickedColor = "#808080";
				}
			});


		jQuery("#radioColor8_generic")
			.change(function(){
				if( jQuery(this).is(":checked") ){
					var val = jQuery(this).val();
					//brown
					cvjs_genericPickedColor = "#B97A57";
				}
			});


		jQuery("#cvjs_grayscale_checkbox")
			.change(function(){
				if( jQuery(this).is(":checked") ){
					cvjs_printGrayscale = true;
				}else{
					cvjs_printGrayscale = false;
				}
			});

			
		// 3.3.02f    3.3.02g
		jQuery("#cvjs_printtoscale_checkbox")
			.change(function(){
				if( jQuery(this).is(":checked") ){
					cvjs_PrintToScale = true;
				}else{
					cvjs_PrintToScale = false;
				}
			});

								

		jQuery("#cvjs_measurearea_checkbox")
			.change(function(){
				if( jQuery(this).is(":checked") ){
					cvjs_measureArea = true;
					jQuery("#cvjs_measurementModalText").html("<canvas id=\"dummy\" width=\"0\" height=\"20\"></canvas>"+lTable.languages[cvjs_currentLanguage].MeasurementModal.TextArea);				
				
					// 3.1.21h
					jQuery("#cvjs_closearea_button").show();

					// 3.2.01f
					cvjs_removeHandleFunc_MeasurementPolyline();
			
				
					// clean up then do this...
					var Ttrans_hG = "T0,0S0.01";
					tPolygon_redline1.attr({
						 transform: Ttrans_hG
					});

					tRubberBand_poly_redline1.attr({'path': "M0,0"});
					var Ttrans = "S0";
					measurement_Triangle.attr({
							fill: cvjs_currentRedline_color,
							transform: Ttrans
						});

						measurement_Triangle2.attr({
							fill: cvjs_currentRedline_color,
							transform: Ttrans
					});

					// 3.1.21g
					tPolygon_redline1.remove();
					measurement_Triangle.remove();
					measurement_Triangle2.remove();
				
					
					cvjs_addHandleFunc_MeasurementFilledPolygon();
					
					//cvjs_interactiveMethod_Active[cvjs_active_floorplan_div_nr] = false;
					//cvjs_drawSpaceObject_RedlineFilledPolygon();
				
				}else{
					cvjs_measureArea = false;

					// 3.2.01f
					tRubberBand_poly_redline1.attr({'path': "M0,0"});
					cvjs_removeHandleFunc_MeasurementFilledPolygon()			

					
					jQuery("#cvjs_measurementModalText").html("<canvas id=\"dummy\" width=\"0\" height=\"20\"></canvas>"+lTable.languages[cvjs_currentLanguage].MeasurementModal.Text);

					// 3.1.21h
					jQuery("#cvjs_closearea_button").hide();

					
					// clean up then do this
					var Ttrans_hG = "T0,0S0.01";
					tPolygon_redline1.attr({
						 transform: Ttrans_hG
					});

					tRubberBand_poly_redline1.attr({'path': "M0,0"});
					var Ttrans = "S0";
					measurement_Triangle.attr({
							fill: cvjs_currentRedline_color,
							transform: Ttrans
						});

						measurement_Triangle2.attr({
							fill: cvjs_currentRedline_color,
							transform: Ttrans
					});
	
					// 3.1.21g
					tPolygon_redline1.remove();
					measurement_Triangle.remove();
					measurement_Triangle2.remove();
			
	
					cvjs_Measurement_RedlinePolyline();	
					
				}
			});



			
			
		jQuery("#cvjs_entiredoc_checkbox")
			.change(function(){
				if( jQuery(this).is(":checked") ){
					cvjs_makePDFEntireDoc = true;
				}else{
					cvjs_makePDFEntireDoc = false;
				}
			});
			
			
			

		jQuery("#cvjs_printpdf_checkbox")
			.change(function(){
				if( jQuery(this).is(":checked") ){
					cvjs_printPdf = true;
				}else{
					cvjs_printPdf = false;
				}
			});




}


function cvjs_line_thickness_modal_hide(floorplan_div){

	cvjs_interactiveMethod_Active[cvjs_active_floorplan_div_nr] = false;

	jQuery('#linethicknessModal_'+floorplan_div).hide();
}


function cvjs_exit_documentpagechangemodal(floorplan_div){

	cvjs_interactiveMethod_Active[cvjs_active_floorplan_div_nr] = false;

	jQuery('#documentPageChangeModal_'+floorplan_div).hide();
}



function cvjs_exit_redlinethicknessmodal(floorplan_div){

	cvjs_interactiveMethod_Active[cvjs_active_floorplan_div_nr] = false;

	jQuery('#thicknessModal_'+floorplan_div).hide();
}


function cvjs_exit_informationmodal(floorplan_div){

	cvjs_interactiveMethod_Active[cvjs_active_floorplan_div_nr] = false;

	jQuery('#info_messageModal_'+floorplan_div).modal('hide');
}


function cvjs_exit_informationmodal_2(floorplan_div){

	cvjs_interactiveMethod_Active[cvjs_active_floorplan_div_nr] = false;

	jQuery('#info_messageModal_2_'+floorplan_div).hide();
}





function cvjs_exit_textsearchmodal(floorplan_div){

	cvjs_interactiveMethod_Active[cvjs_active_floorplan_div_nr] = false;

	jQuery("#textsearchModal_"+floorplan_div).hide();

	jQuery( cvjs_textSearchPreElement ).css("fill" , cvjs_textSearchPreFill);

}


function cvjs_exit_layerlist_spaceobjects(floorplan_div){

// find the room and text layer


	for (i=0; i<layerTable[cvjs_active_floorplan_div_nr].numberOfLayers; i++){

			var item = cvjs_layerListSpace.get('id', i)[0];
			var text = item.values().text_room_layer;

			if (text.indexOf(lTable.languages[cvjs_currentLanguage].LayerListSpaceModal.NotAssigned)>-1){
			}
			else
			if (text.indexOf(lTable.languages[cvjs_currentLanguage].LayerListSpaceModal.TextLayer)>-1){
				cvjs_convertTextLayer = layerTable[cvjs_active_floorplan_div_nr].layers[i].layerName;
			}
			else
				cvjs_convertRoomLayer = layerTable[cvjs_active_floorplan_div_nr].layers[i].layerName;
	}

	// console.log(" "+cvjs_convertTextLayer+"   "+cvjs_convertRoomLayer+"   ");

	cvjs_layerListSpace.clear();
	jQuery("#layerListSpaceObject_"+floorplan_div).hide();
	cvjs_interactiveMethod_Active[cvjs_active_floorplan_div_nr] = false;
}


function cvjs_exit_layerlist(floorplan_div){

	cvjs_layerList.clear();
	jQuery("#layerList_"+floorplan_div).hide();
	cvjs_interactiveMethod_Active[cvjs_active_floorplan_div_nr] = false;

}



function cvjs_exit_pagechangelist(floorplan_div){

	cvjs_pagechangeList.clear();
	jQuery("#pagechangeList_"+floorplan_div).hide();
	cvjs_interactiveMethod_Active[cvjs_active_floorplan_div_nr] = false;

}











function cvjs_exitLineThicknessModal(floorplan_div){

	cvjs_interactiveMethod_Active[cvjs_active_floorplan_div_nr] = false;

	jQuery('#linethicknessModal_'+floorplan_div).hide();

}


function cvjs_hide_image_note(imageNote){
	
	var floorplan_div = floorplan_div_Array[cvjs_active_floorplan_div_nr];
	
	jQuery( "#cvjs_floorPlanInsertImageEncapsulate_"+floorplan_div ).hide();
	tip[cvjs_active_floorplan_div_nr].hide();
}


function cvjs_delete_image(imageNote, floorplan_div){

	var floorplan_div = floorplan_div_Array[cvjs_active_floorplan_div_nr];

	jQuery( "#cvjs_floorPlanInsertImageEncapsulate_"+floorplan_div).hide();
	tip[cvjs_active_floorplan_div_nr].hide();
	vqImageNotes[currentImageNoteId].data("deleted", true);
	var dTransform = "S0.001";
	vqImageNotes[currentImageNoteId].attr({'transform': dTransform, "opacity" : "0.01"});

}


/**
 * Adjust minimum line thickness
 * @param {int} precentage - In percentage, set the factor to adjust the minumum line thickness, a value over 100 makes lines thicker, a value below 100 makes lines thinner
 */

function cvjs_adjustMinimumLineThickness(percentage){

	var factor = percentage/100.0;

	if (factor>0){

		if (!cvjs_svgLineThickness){

			cvjs_MinWidth =  cvjs_MinWidth*factor;
			layers_all.clear();
			drawDrawing(cvjs_rPaper[cvjs_active_floorplan_div_nr]);
			cvjs_masterBackground[cvjs_active_floorplan_div_nr].add(layers_all);
		}else{  // SVG line thickness 2017-08-03

// console.log("We are adjusting!!!");




			   var oArr = {};
		// 5.1.04a    - we are adding selector to find ZW class
		   jQuery("*[id] .ZW").each(function() {
//			   jQuery("*[id]").each(function() {
				   var id = jQuery(this).attr('id');
				   if (!oArr[id]) oArr[id] = true;
			   });

			   for (var prop in oArr){

					try{

						var target = "#"+prop;

						//console.log(target+" parent id"+jQuery(target).parent().attr("id"));

						if (jQuery(target).parent().attr("id").indexOf("layer_")==0 || jQuery(target).parent().attr("id").indexOf("Layer_")==0){

							// console.log("target with Layer/layour parent "+target);

							var valWidth = jQuery(target).css("stroke-width");

							//console.log(valWidth);

							if (valWidth.indexOf("px")>-1) {
								valWidth = valWidth.substring(0,valWidth.indexOf("px"));
								valWidth = parseFloat(valWidth);
								valWidth = valWidth *factor;
							}
							else
								valWidth = valWidth *factor;

							jQuery(target).css("stroke-width", valWidth);
						}

					}catch(err){}

				}
		}

	}

}





var linethickness_offset_flag = [true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true];

var first_thickness = true;

var reference_thickness = 0.3;

var lineSliderValue = 0.3;
var lineSliderStartValue = 100;
var lineSliderMax = 0.5;
var lineSliderStep = lineSliderMax/5.0;
var cvjs_MinWidthSVG = 1;
var cvjs_svgLineThickness = false;
var cvjs_SVGLineThicknessArray = {};


function cvjs_activateLineThicknessModal(floorplan_div){

	if (cvjs_interactiveMethod_Active[cvjs_active_floorplan_div_nr]) return;
	cvjs_interactiveMethod_Active[cvjs_active_floorplan_div_nr] = true;

	
	// 3.0.15c   - add "_svg" to div, if called through external API
	if (floorplan_div.lastIndexOf("_svg") == floorplan_div.length-4){
			// do nothing
	}
	else{
		floorplan_div = floorplan_div + "_svg";
	}	
	
	
	if (linethickness_offset_flag[cvjs_active_floorplan_div_nr]){
		linethickness_offset_flag[cvjs_active_floorplan_div_nr] = false;
		// 3.1.21j .appendTo('body');		
		//window.alert("here");  // .appendTo('body')
		jQuery("#linethicknessModal_"+floorplan_div).css({position: "fixed"});
		jQuery("#linethicknessModal_"+floorplan_div).offset({left:150+jQuery('#'+floorplan_div).position().left, top: 50+jQuery('#'+floorplan_div).position().top});
	}

	
	
	if (first_thickness){
		first_thickness = false;
		var svgFlag = false
		try{
			reference_thickness = cvjs_MinWidth;
		}
		catch(err){  // this is an SVG file, we set the reference thickness to 1   2017-08-03
			svgFlag = true;
		}

		try{
			if (cvjs_MinWidth==-1) { reference_thickness=1; cvjs_MinWidth=1; svgFlag = true;}
		}
		catch(err){  // this is an SVG file, we set the reference thickness to 1   2017-08-03
			svgFlag = true;
		}


		if (svgFlag){
			cvjs_MinWidthSVG = 1;
			reference_thickness = cvjs_MinWidthSVG;
			cvjs_svgLineThickness = true;
			
			// 5.1.04a  -we only init if we do not yet have zeroWidth Handling
		   if (!cvjs_zeroWidthHandling) cvjs_SVGLineThicknessArray = {}
		   
		   
		   var oArr = {};
		// 5.1.04a    - we are adding selector to find ZW class
		   jQuery("*[id] .ZW").each(function() {
//		   jQuery("*[id]").each(function() {
			   var id = jQuery(this).attr('id');
				
			   if (!oArr[id]) oArr[id] = true;
		   });
		   
		   
		   for (var prop in oArr){
				try{
					var target = "#"+prop;
					//console.log(target+" parent id"+jQuery(target).parent().attr("id"));
				
					if (jQuery(target).parent().attr("id").indexOf("layer_")==0 || jQuery(target).parent().attr("id").indexOf("Layer_")==0){
						//console.log("FIRST THICKNESS target with Layer/layour parent "+target);
						var valWidth = jQuery(target).css("stroke-width");
						//console.log(valWidth);

						if (valWidth.indexOf("px")>-1) {
							valWidth = valWidth.substring(0,valWidth.indexOf("px"));
							valWidth = parseFloat(valWidth);
						}
						
						// 5.1.04a  -we only set this arrary if we do not yet have zeroWidth Handling
						if (!cvjs_zeroWidthHandling) cvjs_SVGLineThicknessArray[prop] = valWidth
					}
				}catch(err){}
			}



		}
	}


	try{
		lineSliderValue = cvjs_MinWidth;
	}
	catch(err){  // this is an SVG file, we set the value accordingly   2017-08-03

		lineSliderValue = cvjs_MinWidthSVG;
	}



	lineSliderStartValue  = 100.0;//*cvjs_MinWidth/reference_thickness;
	//console.log(cvjs_MinWidth+"  "+lineSliderValue);
	jQuery( "#cvjs_slider2_"+floorplan_div ).slider('value',lineSliderStartValue);
//	jQuery( "#lineThickness" ).val((cvjs_MinWidth).toFixed(2));



	try{
		jQuery( "#lineThickness_"+floorplan_div ).html((cvjs_MinWidth).toFixed(2));
	}
	catch(err){  // this is an SVG file, we set the value accordingly   2017-08-03
		jQuery( "#lineThickness_"+floorplan_div ).html((cvjs_MinWidthSVG).toFixed(2));
	}

	jQuery('#linethicknessModal_'+floorplan_div).show();

}


//var cvjs_iconInterfaceDisabled = false;
//var cvjs_iconInterfaceClassicSkin = false;
//var cvjs_iconInterfaceClassicSkinDeviceSize = false;
//var cvjs_iconInterfaceClassicSkin_MinimumDisk = false;
//var pageChangeInterface = true;
//var pageChangeInterfaceFalse_noIconNavigation = false;
//var cvjs_iconInterfaceClassicSkin_PanZoomDisk = false;


// 3.2.02f
var cvjs_iconInterfaceDisabled = [false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false];
var cvjs_iconInterfaceClassicSkin = [false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false];
var cvjs_iconInterfaceClassicSkinDeviceSize = [false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false];
var cvjs_iconInterfaceClassicSkin_MinimumDisk = [false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false];
var pageChangeInterfaceFalse_noIconNavigation = [false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false];
var cvjs_iconInterfaceClassicSkin_PanZoomDisk = [false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false];

var pageChangeInterface = [true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true];

// 3.2.02f
var interfaceCounterDiv = ["","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""];   // we start with the interface counter
var interfaceCounter = 0;   // we start with the interface counter, zero is default variables all others are allocation


function cvjs_interfaceCounterIndex(floorplan_div){

//window.alert("cvjs_interfaceCounterIndex"+floorplan_div);

	for (var i=0; i< interfaceCounterDiv.length; i++){
		if (interfaceCounterDiv[i].indexOf(floorplan_div)>-1 && interfaceCounterDiv[i].length == floorplan_div.length){
			return i;
		}
	}

	floorplan_div = floorplan_div+"_svg";
	
	for (var i=0; i< interfaceCounterDiv.length; i++){
		if (interfaceCounterDiv[i].indexOf(floorplan_div)>-1 && interfaceCounterDiv[i].length == floorplan_div.length){
			return i;
		}
	}
	// we simply return 0, assuming there is no allocation and therefore using the default values		
	return 0;  // as default
}


// var isSmartPhoneOrTablet  is not defined?????
//ÅÅÅÅÅ
//cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(floorplan_div);


/**
 * Show the page change modal
 * @param {String} floorplan_div - the div running CADViewer JS
 */

function cvjs_displayAllInterfaceControls(floorplan_div){

	var svgDiv = floorplan_div+"_svg";   //  floorPlan_div		
	jQuery('#gMenu'+"_"+svgDiv).show();

}


/**
 * Hide the page change modal
 * @param {String} floorplan_div - the div running CADViewer JS
 */

function cvjs_hideAllInterfaceControls(floorplan_div){

	var svgDiv = floorplan_div+"_svg";   //  floorPlan_div
	jQuery('#gMenu'+"_"+svgDiv).hide();
		
}



// 3.2.02f
/**
 * Disable/enable page change modal
 * @param {boolean} mode - Set the modal interface, default is true, false disables page change modal
 * @param {boolean} disableNavButtons - Disable page navigation icons in main menu disk. As a default when the page modal is disabled, extra navigation buttons are introduced in the icon interface. If always loading single page files, and no navigation is needed, set this to to true
 * @param {String} floorplan_div - the div running CADViewer JS
 */

function cvjs_setIconInterfaceControls_PageModal(mode, disableNavButtons, floorplan_div){

	interfaceCounter++;
	var selectedDiv = interfaceCounter;
	interfaceCounterDiv[selectedDiv] = floorplan_div+"_svg";  // adding _svg for internal processing
	
	pageChangeInterface[selectedDiv] = mode;
	pageChangeInterfaceFalse_noIconNavigation[selectedDiv] = disableNavButtons;

}


// 3.2.02f
/**
 * Removes the icon interface for viewing, redlining, etc. so that developers can control their own interface
 * @param {boolean} mode - Set the modal interface, default is true
 * @param {String} floorplan_div - the div running CADViewer JS
 */
function cvjs_setIconInterfaceControls_DisableIcons(mode, floorplan_div){
	
	interfaceCounter++;
	var selectedDiv = interfaceCounter;
	interfaceCounterDiv[selectedDiv] = floorplan_div+"_svg";  // adding _svg for internal processing
	
//window.alert("floorplan_div "+floorplan_div+"selectedDiv="+selectedDiv);
	
	cvjs_iconInterfaceDisabled[selectedDiv] = mode;
	pageChangeInterface[selectedDiv] = false;
	cvjs_iconInterfaceClassicSkin[selectedDiv] = false;
}



/**
 * Removes all icon interface components  for viewing, redlining, etc. so that developers can control their own interface
 * @param {boolean} mode - Set the modal interface, default is true
 * @param {String} floorplan_div - the div running CADViewer JS
 */
function cvjs_displayAllInterfaceControls(mode, floorplan_div){
	
	var selectedDiv = interfaceCounter;	
	var counter = cvjs_interfaceCounterIndex(floorplan_div);
	// zero is the default interface so we add one if 0
	if (counter>0){
		// we have a match
		selectedDiv = counter;
	}
	else{
		interfaceCounter++;
		selectedDiv = interfaceCounter;
		interfaceCounterDiv[selectedDiv] = floorplan_div+"_svg";  // adding _svg for internal processing
	//window.alert("floorplan_div "+floorplan_div+"selectedDiv="+selectedDiv);
	}

	cvjs_iconInterfaceDisabled[selectedDiv] = !mode;   // this must be false
	pageChangeInterface[selectedDiv] = false;
	cvjs_iconInterfaceClassicSkin[selectedDiv] = false;	
	
	
	// 3.3.01c
	cvjs_loadTopIconMenuVisible[selectedDiv] = mode;
	cvjs_loadTopIconNavigationVisible[selectedDiv] = mode;
	
}











// 3.2.02f
/**
 * Set the classic icon desk, larger on desktop, smaller on devices
 * @param {boolean} mode - Set the modal interface, default is true
 * @param {String} floorplan_div - the div running CADViewer JS
 */
function cvjs_setIconInterfaceControls_ClassicSkin(mode, floorplan_div){

	interfaceCounter++;
	var selectedDiv = interfaceCounter;
	interfaceCounterDiv[selectedDiv] = floorplan_div+"_svg";  // adding _svg for internal processing

	
	cvjs_iconInterfaceDisabled[selectedDiv] = mode;
	pageChangeInterface[selectedDiv] = false;
	cvjs_iconInterfaceClassicSkin[selectedDiv] = mode;
	cvjs_iconInterfaceClassicSkinDeviceSize[selectedDiv] = false;

}

// 3.2.02f
/**
 * Set the classic icon desk, device size on all platforms
 * @param {boolean} mode - Set the modal interface, default is true
 * @param {String} floorplan_div - the div running CADViewer JS
 */
function cvjs_setIconInterfaceControls_ClassicSkin_DevicesSizeOnly(mode, floorplan_div){

	interfaceCounter++;
	var selectedDiv = interfaceCounter;
	interfaceCounterDiv[selectedDiv] = floorplan_div+"_svg";  // adding _svg for internal processing

	
	cvjs_iconInterfaceDisabled[selectedDiv] = mode;
	pageChangeInterface[selectedDiv] = false;
	cvjs_iconInterfaceClassicSkin[selectedDiv] = mode;
	cvjs_iconInterfaceClassicSkinDeviceSize[selectedDiv] = mode;

}


// 3.2.02f
/**
 * Set minimum icon desk, same size on all platforms
 * @param {boolean} mode - Set the modal interface, default is true
 * @param {String} floorplan_div - the div running CADViewer JS
 */
function cvjs_setIconInterfaceControls_MimimumDisk(mode, floorplan_div){


	// 3.3.01c
	var selectedDiv = interfaceCounter;	
	var counter = cvjs_interfaceCounterIndex(floorplan_div);
	// zero is the default interface so we add one if 0


	if (counter>0){
		// we have a match
		selectedDiv = counter;
	}
	else{
		interfaceCounter++;
		selectedDiv = interfaceCounter;
		interfaceCounterDiv[selectedDiv] = floorplan_div+"_svg";  // adding _svg for internal processing
	//window.alert("floorplan_div "+floorplan_div+"selectedDiv="+selectedDiv);
	}


/**
	interfaceCounter++;
	var selectedDiv = interfaceCounter;
	interfaceCounterDiv[selectedDiv] = floorplan_div+"_svg";  // adding _svg for internal processing
**/
	
	// if interface is disabled we simply return
	if (cvjs_iconInterfaceDisabled[selectedDiv]) return;	
	
	
	cvjs_iconInterfaceDisabled[selectedDiv] = mode;
	pageChangeInterface[selectedDiv] = false;
	cvjs_iconInterfaceClassicSkin[selectedDiv] = mode;
	cvjs_iconInterfaceClassicSkinDeviceSize[selectedDiv] = false;
	cvjs_iconInterfaceClassicSkin_MinimumDisk[selectedDiv] = mode;


	jQuery("<link/>", {
	   rel: "stylesheet",
	   type: "text/css",
	   href: cvjs_applicationFolder + "/user_resources/css/font-awesome.css"
	}).appendTo("head");



}






function cvjs_setIconInterfaceControls_MimimumDisk_internal(mode, floorplan_div){


	// 3.3.01c
	var selectedDiv = cvjs_interfaceCounterIndex(floorplan_div);
	// zero is the default interface so we add one if 0
	
	// if interface is disabled we simply return
	if (cvjs_iconInterfaceDisabled[selectedDiv]) return;	
	
	
	cvjs_iconInterfaceDisabled[selectedDiv] = mode;
	pageChangeInterface[selectedDiv] = false;
	cvjs_iconInterfaceClassicSkin[selectedDiv] = mode;
	cvjs_iconInterfaceClassicSkinDeviceSize[selectedDiv] = false;
	cvjs_iconInterfaceClassicSkin_MinimumDisk[selectedDiv] = mode;


	jQuery("<link/>", {
	   rel: "stylesheet",
	   type: "text/css",
	   href: cvjs_applicationFolder + "/user_resources/css/font-awesome.css"
	}).appendTo("head");



}





















// 3.2.02f
/**
 * Set panzoom desk, same size on all platforms
 * @param {boolean} mode - Set the modal interface, default is true
 * @param {String} floorplan_div - the div running CADViewer JS
 */
function cvjs_setIconInterfaceControls_PanZoomDisk(mode, floorplan_div){

	interfaceCounter++;
	var selectedDiv = interfaceCounter;
	interfaceCounterDiv[selectedDiv] = floorplan_div+"_svg";  // adding _svg for internal processing

	
	cvjs_iconInterfaceDisabled[selectedDiv] = mode;
	pageChangeInterface[selectedDiv] = false;
	cvjs_iconInterfaceClassicSkin[selectedDiv] = mode;
	cvjs_iconInterfaceClassicSkinDeviceSize[selectedDiv] = false;
	cvjs_iconInterfaceClassicSkin_MinimumDisk[selectedDiv] = false;

	cvjs_iconInterfaceClassicSkin_PanZoomDisk[selectedDiv] = mode;

}




/**
 * Overwrite default icon menu settings on devices
 * @param {boolean} mode - true: sets the icon menu on devices similar to desktop environment, false: do not change default. False is default
 */

function cvjs_overwriteDefaultDeviceSettings(mode){

	if (mode) isSmartPhoneOrTablet = false;  // we set the mode to desktop as default

};




// methods to initalize floorPlan



var floorPlan_div = "";
var cvjs_location_flag = true;
var hbody = "";
var hbody_2 = "";
var dual_hbody_flag = false;


function cvjs_initFloorPlanDivArray(floorplan_div){

	var indx = floorplan_div_Array.length;
	cvjs_active_floorplan_div_nr = indx;  // we are setting the active floorplan_div to the drawing we are loading		
	floorplan_div_Array[indx] = floorplan_div;
	floorplan_div_Array_current_Drawing[indx] = "";
	vqRooms[indx] = new Array();	  // we intialize vqRooms for this space			
}




/**
 * Initializes CADViewer JS, any of the methods cvjs_InitCADViewerJS_ must always be called setting up CADViewer JS
 * @param {string} floorplan_div - the SVG canvas object to which CADViewer JS is allocated
 * @param {object} cvjsRoomPolygonBaseAttributes - javascript object containing fill, color and stroke properties for display of Space Object roompolygons
 * @param {object} cvjsRoomPolygonHighlightAttributes - javascript object containing fill, color and stroke properties for mouseover highlight of Space Object roompolygons
 * @param {object} cvjsRoomPolygonSelectAttributes - javascript object containing fill, color and stroke properties for select highlight of Space Object roompolygons
 * @param {object} cvjsPopUpBody - html/css styled object containing the content of the modal when selecting Space Objects
 * @param {object} cvjsPopUpBody2 - second html/css styled object containing the content of the modal when selecting Space Objects, internally controlled based on type of Space Object
 */

function cvjs_InitCADViewerJS_highLight_popUp_dual_Id(floorplan_div, cvjsRoomPolygonBaseAttributes, cvjsRoomPolygonHighlightAttributes, cvjsRoomPolygonSelectAttributes, cvjsPopUpBody, cvjsPopUpBody2){

	cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(floorplan_div);
	if (cvjs_active_floorplan_div_nr==-1){
		cvjs_initFloorPlanDivArray(floorplan_div+"_svg");
		cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(floorplan_div);	
	}
	

	cvjs_location_flag = true;
	lastObj[cvjs_active_floorplan_div_nr] = -1;


	cvjs_InitializeModals(floorplan_div);

//console.log("first in init, 5 variables");

	defaultColor = {
	            fill: '#FFF',
	            "fill-opacity": "0.1",
	            stroke: '#CCC',
	            'stroke-width': 1,
	            'stroke-linejoin': 'round',
	        };
	highlight = {
	            fill: '#a4d7f4',
	            "fill-opacity": "0.5",
	            stroke: '#a4d7f4',
	            'stroke-width': 3
	        };
	selectColor = {
	            fill: '#5BBEF6',
	            "fill-opacity": "0.5",
	            stroke: '#5BBEF6',
	            'stroke-width': 3
	        };



	hbody = "<div class=\"cvjs_modal_1\" onclick=\"my_own_clickmenu1();\">Custom<br>Menu 1<br><i class=\"glyphicon glyphicon-transfer\"></i></div>";
	hbody += "<div class=\"cvjs_modal_1\" onclick=\"my_own_clickmenu2();\">Custom<br>Menu 2<br><i class=\"glyphicon glyphicon-info-sign\"></i></div>";
	hbody += "<div class=\"cvjs_modal_1\" onclick=\"cvjs_zoomHere();\">Zoom<br>Here<br><i class=\"glyphicon glyphicon-zoom-in\"></i></div>";

	hbody_2 = "<div class=\"cvjs_modal_1\" onclick=\"my_own_clickmenu1();\">Custom<br>Menu 1<br><i class=\"glyphicon glyphicon-transfer\"></i></div>";
	hbody_2 += "<div class=\"cvjs_modal_1\" onclick=\"cvjs_zoomHere();\">Zoom<br>Here<br><i class=\"glyphicon glyphicon-zoom-in\"></i></div>";


//	console.log("inside tms_InitCADViewer tmsRoomPolygonBaseAttributes="+cvjsRoomPolygonBaseAttributes);


	if (cvjsRoomPolygonBaseAttributes != undefined)
		defaultColor = cvjsRoomPolygonBaseAttributes;

	if (cvjsRoomPolygonHighlightAttributes != undefined)
		highlight = cvjsRoomPolygonHighlightAttributes;

	if (cvjsRoomPolygonSelectAttributes != undefined)
		selectColor = cvjsRoomPolygonSelectAttributes;


	if (cvjsPopUpBody != undefined)
		hbody = cvjsPopUpBody;

	if (cvjsPopUpBody2 != undefined)
		hbody_2 = cvjsPopUpBody2;

	dual_hbody_flag = true;

//	console.log("hbody="+hbody+"  cvjsPopUpBody="+cvjsPopUpBody);

}






/**
 * Initializes CADViewer JS, any of the methods cvjs_InitCADViewerJS_ must always be called setting up CADViewer JS
 * @param {string} floorplan_div - the SVG canvas object to which CADViewer JS is allocated
 * @param {string} app folder - the path (relative or absolute) to the main application folder "app" , the default is the relative path "../app/"
 * @param {object} cvjsRoomPolygonBaseAttributes - javascript object containing fill, color and stroke properties for display of Space Object roompolygons
 * @param {object} cvjsRoomPolygonHighlightAttributes - javascript object containing fill, color and stroke properties for mouseover highlight of Space Object roompolygons
 * @param {object} cvjsRoomPolygonSelectAttributes - javascript object containing fill, color and stroke properties for select highlight of Space Object roompolygons
 * @param {object} cvjsPopUpBody - html/css styled object containing the content of the modal when selecting Space Objects
 */

function cvjs_InitCADViewerJS_highLight_popUp_app(floorplan_div, app_folder, cvjsRoomPolygonBaseAttributes, cvjsRoomPolygonHighlightAttributes, cvjsRoomPolygonSelectAttributes, cvjsPopUpBody){

	cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(floorplan_div);
	if (cvjs_active_floorplan_div_nr==-1){
		cvjs_initFloorPlanDivArray(floorplan_div+"_svg");
		cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(floorplan_div);	
	}

	cvjs_location_flag = true;
	lastObj[cvjs_active_floorplan_div_nr] = -1;


	// standard settings
	cvjs_imagesLocation = cvjs_applicationFolder + "/images/";
	cvjs_relativeScriptsPath = cvjs_applicationFolder + "/js/";
	cvjs_defaultJSPath = cvjs_applicationFolder + "/js/";


	if (app_folder != undefined){
		cvjs_applicationFolder = app_folder;
		cvjs_imagesLocation = cvjs_applicationFolder + "/images/";
		cvjs_relativeScriptsPath = cvjs_applicationFolder + "/js/";
		cvjs_defaultJSPath = cvjs_applicationFolder + "/js/";

	}


	cvjs_InitializeModals(floorplan_div);

//console.log("first in init, 5 variables");

	defaultColor = {
	            fill: '#FFF',
	            "fill-opacity": "0.1",
	            stroke: '#CCC',
	            'stroke-width': 1,
	            'stroke-linejoin': 'round',
	        };
	highlight = {
	            fill: '#a4d7f4',
	            "fill-opacity": "0.5",
	            stroke: '#a4d7f4',
	            'stroke-width': 3
	        };
	selectColor = {
	            fill: '#5BBEF6',
	            "fill-opacity": "0.5",
	            stroke: '#5BBEF6',
	            'stroke-width': 3
	        };


	hbody = "<div class=\"cvjs_modal_1\" onclick=\"my_own_clickmenu1();\">Custom<br>Menu 1<br><i class=\"glyphicon glyphicon-transfer\"></i></div>";
	hbody += "<div class=\"cvjs_modal_1\" onclick=\"my_own_clickmenu2();\">Custom<br>Menu 2<br><i class=\"glyphicon glyphicon-info-sign\"></i></div>";
	hbody += "<div class=\"cvjs_modal_1\" onclick=\"cvjs_zoomHere();\">Zoom<br>Here<br><i class=\"glyphicon glyphicon-zoom-in\"></i></div>";



//	console.log("inside tms_InitCADViewer tmsRoomPolygonBaseAttributes="+cvjsRoomPolygonBaseAttributes);


	if (cvjsRoomPolygonBaseAttributes != undefined)
		defaultColor = cvjsRoomPolygonBaseAttributes;

	if (cvjsRoomPolygonHighlightAttributes != undefined)
		highlight = cvjsRoomPolygonHighlightAttributes;

	if (cvjsRoomPolygonSelectAttributes != undefined)
		selectColor = cvjsRoomPolygonSelectAttributes;

	if (cvjsPopUpBody != undefined)
		hbody = cvjsPopUpBody;


	dual_hbody_flag = false;


//	console.log("hbody="+hbody+"  cvjsPopUpBody="+cvjsPopUpBody);


}








/**
 * Initializes CADViewer JS, any of the methods cvjs_InitCADViewerJS_ must always be called setting up CADViewer JS
 * @param {string} floorplan_div - the SVG canvas object to which CADViewer JS is allocated
 * @param {object} cvjsRoomPolygonBaseAttributes - javascript object containing fill, color and stroke properties for display of Space Object roompolygons
 * @param {object} cvjsRoomPolygonHighlightAttributes - javascript object containing fill, color and stroke properties for mouseover highlight of Space Object roompolygons
 * @param {object} cvjsRoomPolygonSelectAttributes - javascript object containing fill, color and stroke properties for select highlight of Space Object roompolygons
 * @param {object} cvjsPopUpBody - html/css styled object containing the content of the modal when selecting Space Objects
 */

function cvjs_InitCADViewerJS_highLight_popUp(floorplan_div, cvjsRoomPolygonBaseAttributes, cvjsRoomPolygonHighlightAttributes, cvjsRoomPolygonSelectAttributes, cvjsPopUpBody){


	cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(floorplan_div);
	if (cvjs_active_floorplan_div_nr==-1){
		cvjs_initFloorPlanDivArray(floorplan_div+"_svg");
		cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(floorplan_div);	
	}

	cvjs_location_flag = true;
	lastObj[cvjs_active_floorplan_div_nr] = -1;

	cvjs_InitializeModals(floorplan_div);

//console.log("first in init, 5 variables");

	defaultColor = {
	            fill: '#FFF',
	            "fill-opacity": "0.1",
	            stroke: '#CCC',
	            'stroke-width': 1,
	            'stroke-linejoin': 'round',
	        };
	highlight = {
	            fill: '#a4d7f4',
	            "fill-opacity": "0.5",
	            stroke: '#a4d7f4',
	            'stroke-width': 3
	        };
	selectColor = {
	            fill: '#5BBEF6',
	            "fill-opacity": "0.5",
	            stroke: '#5BBEF6',
	            'stroke-width': 3
	        };


	hbody = "<div class=\"cvjs_modal_1\" onclick=\"my_own_clickmenu1();\">Custom<br>Menu 1<br><i class=\"glyphicon glyphicon-transfer\"></i></div>";
	hbody += "<div class=\"cvjs_modal_1\" onclick=\"my_own_clickmenu2();\">Custom<br>Menu 2<br><i class=\"glyphicon glyphicon-info-sign\"></i></div>";
	hbody += "<div class=\"cvjs_modal_1\" onclick=\"cvjs_zoomHere();\">Zoom<br>Here<br><i class=\"glyphicon glyphicon-zoom-in\"></i></div>";



//	console.log("inside tms_InitCADViewer tmsRoomPolygonBaseAttributes="+cvjsRoomPolygonBaseAttributes);


	if (cvjsRoomPolygonBaseAttributes != undefined)
		defaultColor = cvjsRoomPolygonBaseAttributes;

	if (cvjsRoomPolygonHighlightAttributes != undefined)
		highlight = cvjsRoomPolygonHighlightAttributes;

	if (cvjsRoomPolygonSelectAttributes != undefined)
		selectColor = cvjsRoomPolygonSelectAttributes;


	if (cvjsPopUpBody != undefined)
		hbody = cvjsPopUpBody;


	dual_hbody_flag = false;


//	console.log("hbody="+hbody+"  cvjsPopUpBody="+cvjsPopUpBody);


}



/**
 * Initializes CADViewer JS, any of the methods cvjs_InitCADViewerJS_ must always be called setting up CADViewer JS
 * @param {string} floorplan_div - the SVG canvas object to which CADViewer JS is allocated
 * @param {object} cvjsRoomPolygonBaseAttributes - javascript object containing fill, color and stroke properties for display of Space Object roompolygons
 * @param {object} cvjsRoomPolygonHighlightAttributes - javascript object containing fill, color and stroke properties for mouseover highlight of Space Object roompolygons
 * @param {object} cvjsRoomPolygonSelectAttributes - javascript object containing fill, color and stroke properties for select highlight of Space Object roompolygons
 */

function cvjs_InitCADViewerJS_highLight(floorplan_div, cvjsRoomPolygonBaseAttributes, cvjsRoomPolygonHighlightAttributes, cvjsRoomPolygonSelectAttributes ){

	cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(floorplan_div);
	if (cvjs_active_floorplan_div_nr==-1){
		cvjs_initFloorPlanDivArray(floorplan_div+"_svg");
		cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(floorplan_div);	
	}

	cvjs_location_flag = true;
	lastObj[cvjs_active_floorplan_div_nr] = -1;

	cvjs_InitializeModals(floorplan_div);


	defaultColor = {
	            fill: '#FFF',
	            "fill-opacity": "0.1",
	            stroke: '#CCC',
	            'stroke-width': 1,
	            'stroke-linejoin': 'round',
	        };
	highlight = {
	            fill: '#a4d7f4',
	            "fill-opacity": "0.5",
	            stroke: '#a4d7f4',
	            'stroke-width': 3
	        };
	selectColor = {
	            fill: '#5BBEF6',
	            "fill-opacity": "0.5",
	            stroke: '#5BBEF6',
	            'stroke-width': 3
	        };


	hbody = "<div class=\"cvjs_modal_1\" onclick=\"my_own_clickmenu1();\">Custom<br>Menu 1<br><i class=\"glyphicon glyphicon-transfer\"></i></div>";
	hbody += "<div class=\"cvjs_modal_1\" onclick=\"my_own_clickmenu2();\">Custom<br>Menu 2<br><i class=\"glyphicon glyphicon-info-sign\"></i></div>";
	hbody += "<div class=\"cvjs_modal_1\" onclick=\"cvjs_zoomHere();\">Zoom<br>Here<br><i class=\"glyphicon glyphicon-zoom-in\"></i></div>";



//	console.log("inside tms_InitCADViewer tmsRoomPolygonBaseAttributes="+cvjsRoomPolygonBaseAttributes);


	if (cvjsRoomPolygonBaseAttributes != undefined)
		defaultColor = cvjsRoomPolygonBaseAttributes;

	if (cvjsRoomPolygonHighlightAttributes != undefined)
		highlight = cvjsRoomPolygonHighlightAttributes;

	if (cvjsRoomPolygonSelectAttributes != undefined)
		selectColor = cvjsRoomPolygonSelectAttributes;

	dual_hbody_flag = false;


}


	
	
	
	// 4.1.03a
var cvjs_applicationFolder = "../app/";
/**
 * Initializes CADViewer JS, any of the methods cvjs_InitCADViewerJS_ must always be called setting up CADViewer JS
 * @param {string} floorplan_div - the SVG canvas object to which CADViewer JS is allocated
 * @param {string} app folder - the path (relative or absolute) to the main application folder "app" , the default is the relative path "../app/"
 * @param {string} imagePath - direct paths to Images, typically "/assets/cadviewer/app/images/" */
 

function cvjs_InitCADViewerJS_app(floorplan_div, app_folder, imagePathDirect){
	
	
	cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(floorplan_div);
	if (cvjs_active_floorplan_div_nr==-1){
		
		cvjs_initFloorPlanDivArray(floorplan_div+"_svg");
		cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(floorplan_div);	
	}
		
	
	// floorPlan_div = floorplan_div;   //DevX
	
	cvjs_location_flag = true;
	lastObj[cvjs_active_floorplan_div_nr] = -1;

	// standard settings
	cvjs_imagesLocation = cvjs_applicationFolder + "/images/";
	cvjs_relativeScriptsPath = cvjs_applicationFolder + "/js/";
	cvjs_defaultJSPath = cvjs_applicationFolder + "/js/";


	if (app_folder != undefined){
		cvjs_applicationFolder = app_folder;
		cvjs_imagesLocation = cvjs_applicationFolder + "/images/";
		cvjs_relativeScriptsPath = cvjs_applicationFolder + "/js/";
		cvjs_defaultJSPath = cvjs_applicationFolder + "/js/";

	}

	
	
	// 4.1.03a
	if (imagePathDirect == undefined){
		// do nothing, PHP, Servlet, asp.net case
	}
	else{
		// Angular JS case
		cvjs_imagesLocation = imagePathDirect;	
	}
	
	
	
	cvjs_InitializeModals(floorplan_div);

	defaultColor = {
	            fill: '#FFF',  //   fill: '#000FFF'
	            "fill-opacity": "0.1",
	            stroke: '#CCC',
	            'stroke-width': 1,
	            'stroke-linejoin': 'round',
	        };
	highlight = {
	            fill: '#a4d7f4',
	            "fill-opacity": "0.5",
	            stroke: '#a4d7f4',
	            'stroke-width': 3
	        };
	selectColor = {
	            fill: '#5BBEF6',
	            "fill-opacity": "0.5",
	            stroke: '#5BBEF6',
	            'stroke-width': 3
	        };

	hbody = "<div class=\"cvjs_modal_1\" onclick=\"my_own_clickmenu1();\">Custom<br>Menu 1<br><i class=\"glyphicon glyphicon-transfer\"></i></div>";
	hbody += "<div class=\"cvjs_modal_1\" onclick=\"my_own_clickmenu2();\">Custom<br>Menu 2<br><i class=\"glyphicon glyphicon-info-sign\"></i></div>";
	hbody += "<div class=\"cvjs_modal_1\" onclick=\"cvjs_zoomHere();\">Zoom<br>Here<br><i class=\"glyphicon glyphicon-zoom-in\"></i></div>";

	dual_hbody_flag = false;

}


/**
 * Initializes CADViewer JS, any of the methods cvjs_InitCADViewerJS_ must always be called setting up CADViewer JS
 * @param {string} floorplan_div - the SVG canvas object to which CADViewer JS is allocated
 * @param {string} app folder - the path (relative or absolute) to the main application folder "app" , the default is the relative path "../app/"
 * @param {object} cvjsRoomPolygonBaseAttributes - javascript object containing fill, color and stroke properties for display of Space Object roompolygons
 * @param {object} cvjsRoomPolygonHighlightAttributes - javascript object containing fill, color and stroke properties for mouseover highlight of Space Object roompolygons
 * @param {object} cvjsRoomPolygonSelectAttributes - javascript object containing fill, color and stroke properties for select highlight of Space Object roompolygons
*/

function cvjs_InitCADViewerJS_app_highLight(floorplan_div, app_folder, cvjsRoomPolygonBaseAttributes, cvjsRoomPolygonHighlightAttributes, cvjsRoomPolygonSelectAttributes){

	cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(floorplan_div);
	if (cvjs_active_floorplan_div_nr==-1){
		cvjs_initFloorPlanDivArray(floorplan_div+"_svg");
		cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(floorplan_div);	
	}

	cvjs_location_flag = true;
	lastObj[cvjs_active_floorplan_div_nr] = -1;

	// standard settings
	cvjs_imagesLocation = cvjs_applicationFolder + "/images/";
	cvjs_relativeScriptsPath = cvjs_applicationFolder + "/js/";
	cvjs_defaultJSPath = cvjs_applicationFolder + "/js/";


	if (app_folder != undefined){
		cvjs_applicationFolder = app_folder;
		cvjs_imagesLocation = cvjs_applicationFolder + "/images/";
		cvjs_relativeScriptsPath = cvjs_applicationFolder + "/js/";
		cvjs_defaultJSPath = cvjs_applicationFolder + "/js/";

	}

	cvjs_InitializeModals(floorplan_div);

	defaultColor = {
	            fill: '#FFF',
	            "fill-opacity": "0.1",
	            stroke: '#CCC',
	            'stroke-width': 1,
	            'stroke-linejoin': 'round',
	        };
	highlight = {
	            fill: '#a4d7f4',
	            "fill-opacity": "0.5",
	            stroke: '#a4d7f4',
	            'stroke-width': 3
	        };
	selectColor = {
	            fill: '#5BBEF6',
	            "fill-opacity": "0.5",
	            stroke: '#5BBEF6',
	            'stroke-width': 3
	        };

	hbody = "<div class=\"cvjs_modal_1\" onclick=\"my_own_clickmenu1();\">Custom<br>Menu 1<br><i class=\"glyphicon glyphicon-transfer\"></i></div>";
	hbody += "<div class=\"cvjs_modal_1\" onclick=\"my_own_clickmenu2();\">Custom<br>Menu 2<br><i class=\"glyphicon glyphicon-info-sign\"></i></div>";
	hbody += "<div class=\"cvjs_modal_1\" onclick=\"cvjs_zoomHere();\">Zoom<br>Here<br><i class=\"glyphicon glyphicon-zoom-in\"></i></div>";


	dual_hbody_flag = false;
	
	if (cvjsRoomPolygonBaseAttributes != undefined)
		defaultColor = cvjsRoomPolygonBaseAttributes;

	if (cvjsRoomPolygonHighlightAttributes != undefined)
		highlight = cvjsRoomPolygonHighlightAttributes;

	if (cvjsRoomPolygonSelectAttributes != undefined)
		selectColor = cvjsRoomPolygonSelectAttributes;
	
	
}


/**
 * Initializes CADViewer JS, any of the methods cvjs_InitCADViewerJS_ must always be called setting up CADViewer JS
 * @param {string} floorplan_div - the SVG canvas object to which CADViewer JS is allocated
 * @param {string} app folder - the path (relative or absolute) to the main application folder "app" , the default is the relative path "../app/"
 * @param {object} cvjsRoomPolygonBaseAttributes - javascript object containing fill, color and stroke properties for display of Space Object roompolygons
 * @param {object} cvjsRoomPolygonHighlightAttributes - javascript object containing fill, color and stroke properties for mouseover highlight of Space Object roompolygons
 * @param {object} cvjsRoomPolygonSelectAttributes - javascript object containing fill, color and stroke properties for select highlight of Space Object roompolygons
 * @param {object} cvjsPopUpBody - html/css styled object containing the content of the modal when selecting Space Objects
 */

function cvjs_InitCADViewerJS_app_highLight_popUp(floorplan_div, app_folder, cvjsRoomPolygonBaseAttributes, cvjsRoomPolygonHighlightAttributes, cvjsRoomPolygonSelectAttributes, cvjsPopUpBody){
	

	cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(floorplan_div);
	if (cvjs_active_floorplan_div_nr==-1){
		cvjs_initFloorPlanDivArray(floorplan_div+"_svg");
		cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(floorplan_div);	
	}

	cvjs_location_flag = true;
	lastObj[cvjs_active_floorplan_div_nr] = -1;

	// standard settings
	cvjs_imagesLocation = cvjs_applicationFolder + "/images/";
	cvjs_relativeScriptsPath = cvjs_applicationFolder + "/js/";
	cvjs_defaultJSPath = cvjs_applicationFolder + "/js/";


	if (app_folder != undefined){
		cvjs_applicationFolder = app_folder;
		cvjs_imagesLocation = cvjs_applicationFolder + "/images/";
		cvjs_relativeScriptsPath = cvjs_applicationFolder + "/js/";
		cvjs_defaultJSPath = cvjs_applicationFolder + "/js/";

	}

	cvjs_InitializeModals(floorplan_div);

	defaultColor = {
	            fill: '#FFF',
	            "fill-opacity": "0.1",
	            stroke: '#CCC',
	            'stroke-width': 1,
	            'stroke-linejoin': 'round',
	        };
	highlight = {
	            fill: '#a4d7f4',
	            "fill-opacity": "0.5",
	            stroke: '#a4d7f4',
	            'stroke-width': 3
	        };
	selectColor = {
	            fill: '#5BBEF6',
	            "fill-opacity": "0.5",
	            stroke: '#5BBEF6',
	            'stroke-width': 3
	        };

	hbody = "<div class=\"cvjs_modal_1\" onclick=\"my_own_clickmenu1();\">Custom<br>Menu 1<br><i class=\"glyphicon glyphicon-transfer\"></i></div>";
	hbody += "<div class=\"cvjs_modal_1\" onclick=\"my_own_clickmenu2();\">Custom<br>Menu 2<br><i class=\"glyphicon glyphicon-info-sign\"></i></div>";
	hbody += "<div class=\"cvjs_modal_1\" onclick=\"cvjs_zoomHere();\">Zoom<br>Here<br><i class=\"glyphicon glyphicon-zoom-in\"></i></div>";


	dual_hbody_flag = false;
	
	if (cvjsRoomPolygonBaseAttributes != undefined)
		defaultColor = cvjsRoomPolygonBaseAttributes;

	if (cvjsRoomPolygonHighlightAttributes != undefined)
		highlight = cvjsRoomPolygonHighlightAttributes;

	if (cvjsRoomPolygonSelectAttributes != undefined)
		selectColor = cvjsRoomPolygonSelectAttributes;


	if (cvjsPopUpBody != undefined)
		hbody = cvjsPopUpBody;

	dual_hbody_flag = false;
	
}












/**
 * Initializes CADViewer JS, any of the methods cvjs_InitCADViewerJS_ must always be called setting up CADViewer JS
 * @param {string} floorplan_div - the SVG canvas object to which CADViewer JS is allocated
 * @param {string} image folder - the path to the image location folder with icon settings, default is "+cvjs_imagesLocation+"
 * @param {string} javascripts_folder - the path to javascripts folder with icon settings, default is ../javscripts/
*/

function cvjs_InitCADViewerJS(floorplan_div, image_location, javascripts_folder){


	cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(floorplan_div);
	if (cvjs_active_floorplan_div_nr==-1){
		cvjs_initFloorPlanDivArray(floorplan_div+"_svg");
		cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(floorplan_div);	
	}

	cvjs_location_flag = true;
	lastObj[cvjs_active_floorplan_div_nr] = -1;

	if (image_location != undefined)
		cvjs_imagesLocation = image_location;

	if (javascripts_folder != undefined){
		 cvjs_relativeScriptsPath = javascripts_folder;
		 cvjs_defaultJSPath = javascripts_folder;
	}


	cvjs_InitializeModals(floorplan_div);


	defaultColor = {
	            fill: '#FFF',
	            "fill-opacity": "0.1",
	            stroke: '#CCC',
	            'stroke-width': 1,
	            'stroke-linejoin': 'round',
	        };
	highlight = {
	            fill: '#a4d7f4',
	            "fill-opacity": "0.5",
	            stroke: '#a4d7f4',
	            'stroke-width': 3
	        };
	selectColor = {
	            fill: '#5BBEF6',
	            "fill-opacity": "0.5",
	            stroke: '#5BBEF6',
	            'stroke-width': 3
	        };

	hbody = "<div class=\"cvjs_modal_1\" onclick=\"my_own_clickmenu1();\">Custom<br>Menu 1<br><i class=\"glyphicon glyphicon-transfer\"></i></div>";
	hbody += "<div class=\"cvjs_modal_1\" onclick=\"my_own_clickmenu2();\">Custom<br>Menu 2<br><i class=\"glyphicon glyphicon-info-sign\"></i></div>";
	hbody += "<div class=\"cvjs_modal_1\" onclick=\"cvjs_zoomHere();\">Zoom<br>Here<br><i class=\"glyphicon glyphicon-zoom-in\"></i></div>";

	dual_hbody_flag = false;

}

var cvjs_imagesLocation = "../images/";


// 4.1.03a
/**
 * Set the Image Location Path  - used in Angular JS implementations to load from assets
 * @param {string} imagePath - direct paths to Images, typically "/assets/cadviewer/app/images/"
 */

function cvjs_setImagesLocationPathDirect(imagePath){

	cvjs_relativeScriptsPath = imagePath;
}




var floor_loaded = false;
var nodes_loaded = false;
var stickynotesRedlines_loaded = false;

var current_jsNodesFloorNames = "";
var current_jsThumbFloorNames = "";
var current_jsFullFloorNames =  "";
var current_jsFloorNames =  "";
var current_jsRedlinename =  "";
var current_js_initialized = 0;
var current_redline_js_initialized = 0;
var js_loaded_flag = 0;

var current_FileNamePath = "";

var cvjs_relativeScriptsPath= "../app/js";


/**
 * Set the scripts path to folder with CADViewer JS javascripts
 * @param {string} scriptsPath - paths to Scripts, typically "../javascripts"
 */

function cvjs_setRelativeScriptsPath(scriptsPath){

	cvjs_relativeScriptsPath = scriptsPath;
}


var cvjs_customPdfFolderFlag = false;
var cvjs_customPdfFolderName = "";
var cvjs_customPdfFolderForcedUpdate = false;

/**
 * Sets the path to folder with converted PDF pages. If the folder exists and contain the converted pdf, the converted content will be used for visualization
 * @param {string} customPdfFolderName - custom PDF path id, for permanent storage of converted PDF file
 * @param {boolean} forcedUpdate - if true, force the folder to be reconverted (if the originating pdf has been updated), false is default
 */
function cvjs_setCustomPdfFolder(customPdfFolderName, forcedUpdate){

	cvjs_customPdfFolderFlag = true;
	cvjs_customPdfFolderName = customPdfFolderName;
	cvjs_customPdfFolderForcedUpdate = forcedUpdate;
	
//window.alert("inside custom pdf "+cvjs_customPdfFolderForcedUpdate);	
		
}


/**
 * Returns the current page number in the document loaded
 * @return {int} pageNumber
 */

function cvjs_getCurrentPage(){
		
		if (cvjs_SVG_multiPagesFlag[cvjs_active_floorplan_div_nr]){
				return(cvjs_SVG_multiPages[cvjs_active_floorplan_div_nr].currentPage);
		}else{
				return(multiPages[cvjs_active_floorplan_div_nr].currentPage);			
		}
		
		return -1;
}



function cvjs_LoadDrawingPDF_base(FileNamePath){


			// load the configuration file to find the files conversion folder
			var directory_base = "";
			var directory_base_url = "";

			var pdf_FileNamePath = FileNamePath;

			var fUrl = cvjs_serverHandlersPath + cvjs_returnPDFparamsController;

			console.log("pdf configuration file "+fUrl);


			var f_data = {};
			f_data['file'] = "";  // void

			jQuery.ajax({
			  url: fUrl,
			  type: 'post',
			  data: f_data,
			  success: function(html){

					console.log("return from fUrl: "+html);

					var tempstr = html;

					var dir = tempstr.substring(0, tempstr.indexOf("|"));
//					console.log(dir);

					var tempstr = tempstr.substring(tempstr.indexOf("|")+1);

//					console.log(tempstr);

					var dir_url = tempstr.substring(0, tempstr.indexOf("|"));

//					console.log(dir_url);

					directory_base = dir;
					directory_base_url = dir_url;

					var directory = directory_base;
					var directory_url = directory_base_url;

//					window.alert(directory+"  "+directory_url);

					// convert PDF into folder

					//FileNamePath
					var finalUrl = cvjs_serverHandlersPath + cvjs_serverPDFConverterController;
					var filelist_data = {};

					filelist_data['pdf_file'] = pdf_FileNamePath;
					
					
					//make temp dir  6 digits
					filelist_data['temp_dir'] = "pdf/"+Math.floor((Math.random() * 100000) + 1);
					filelist_data['custom_folder'] = 0;


					if (cvjs_customPdfFolderFlag){
						filelist_data['temp_dir'] = "pdf/custom_"+cvjs_customPdfFolderName;
											
//window.alert(" forced update "+cvjs_customPdfFolderForcedUpdate);						
						
						if (cvjs_customPdfFolderForcedUpdate){
							filelist_data['custom_folder'] = 0;   // in case we have a forced update we use the same custom folder name but redo the conversion
						}
						else{
							filelist_data['custom_folder'] = 1;   // standard case, we read the converted drawing if it is there
						}
					}

					
if (cvjs_debug) 					console.log(filelist_data['pdf_file']+" Temp folder: "+filelist_data['temp_dir']);

					

					var temp_dir = filelist_data['temp_dir'];
					directory = directory_base +temp_dir;
					directory_url = directory_base_url +temp_dir;

					cvjs_multipagePDFtoSVG_tempDir = temp_dir ;
					
//console.log("pdf creation directory ="+directory+" url="+directory_url);

					var file_name = pdf_FileNamePath.substring(pdf_FileNamePath.lastIndexOf("/")+1,pdf_FileNamePath.lastIndexOf("."));
					filelist_data['file_name'] = file_name;

					//window.alert(finalUrl+"  "+directory + "  " +directory_url);

					// http folder with url content
					cvjs_multipageURL_FileNamePath = directory_url;
					cvjs_multipage_FileNamePath = directory;
					
					// first we create a file with the list of pages
					filelist_data['request_type'] = "pages";

					// start loading modal

					jQuery.ajax({
					  url:finalUrl,
					  type: 'post',
					  data: filelist_data,
					  success: function(html){

if (cvjs_debug) 	console.log("WE now have the number of pages + status: "+html);

							// let us now create the multipage structure
							// when that is done, we load in the first page

									var serverResult = html.split(" ");
							
									var n = parseInt(serverResult[0]);
									//var n = parseInt(html);
									
									if (n>= 1){

if (cvjs_debug) console.log("Creating multipage SVG page structure n.length="+n.length+" "+cvjs_SVG_multiPages[cvjs_active_floorplan_div_nr].pages[0].fileName);

										cvjs_SVG_multiPages[cvjs_active_floorplan_div_nr].multiPages = n;
										cvjs_SVG_multiPages[cvjs_active_floorplan_div_nr].currentPage = 1;
										var buildPages = [];

										for (var i=0;i<n; i++){
											
											var fname = file_name+"_"+(i+1)+".svg";
											var pname = "Page "+(i+1);
											
if (cvjs_debug) 							console.log(fname+" "+pname);
											
											cvjs_SVG_multiPages[cvjs_active_floorplan_div_nr].pages[i] = { fileName : fname, pageName : pname };

										}

										cvjs_SVG_multiPagesFlag[cvjs_active_floorplan_div_nr] = true;
										cvjs_PDFloadFlag = false;

										actualLLX[cvjs_active_floorplan_div_nr] = 0;
										actualLLY[cvjs_active_floorplan_div_nr] = 0;
										actualURX[cvjs_active_floorplan_div_nr] = 1;
										actualURY[cvjs_active_floorplan_div_nr] = 1;
										
										cvjs_checkSVGOnServerBeforeLoadFirst();										
										
/*
										if (!cvjs_multipagePDFtoSVG_PhpLoadFlag)  // standard load
											cvjs_LoadDrawing(floorplan_div_Array[cvjs_active_floorplan_div_nr], cvjs_multipageURL_FileNamePath + "/"+ cvjs_SVG_multiPages[cvjs_active_floorplan_div_nr].pages[0].fileName, undefined, true );
										else  // load via getFile
											cvjs_LoadDrawing( floorplan_div_Array[cvjs_active_floorplan_div_nr], cvjs_phpPath+"getFile_09.php?fileTag="+cvjs_multipagePDFtoSVG_tempDir+"/"+cvjs_SVG_multiPages[cvjs_active_floorplan_div_nr].pages[0].fileName.substring(0, cvjs_SVG_multiPages[cvjs_active_floorplan_div_nr].pages[0].fileName.indexOf(".svg"))+"&remainOnServer=1&Type=svg", undefined, true); 
										
	*/

									}

								
									// we now make the conversion to svg of all pages
									// only if the server sees that we have to
									//window.alert(serverResult[1]);
									
									if (serverResult[1] == "0"){
									
										//window.alert(serverResult[1]);
										
										filelist_data['request_type'] = "svg_conversion";
																	
										jQuery.ajax({
										  url:finalUrl,
										  type: 'post',
										  data: filelist_data,
										  success: function(html){
										  
												if (cvjs_debug) console.log("NOW THE ENTIRE PDF IS CONVERTED");
												
												// now we split the PDF into page
												//FileNamePath
												var finalUrl = cvjs_serverHandlersPath + cvjs_serverPDFSplitController;
												// we reuse the filelist_data array
																		
												jQuery.ajax({
												  url:finalUrl,
												  type: 'post',
												  data: filelist_data,
												  success: function(html){
		  

														if (cvjs_debug) console.log("We have now split the PDF");
												  
													}
												});
												
												
												
												//window.alert("NOW THE ENTIRE PDF IS CONVERTED");

												//var multiPages[cvjs_active_floorplan_div_nr] =  { multiPages[cvjs_active_floorplan_div_nr]: 1, currentPage:1, pages : [ { fileName:"default", pageName:"Single Page"}]};

											}
										});

									}

							}
					});


				}
			});

}

											

function cvjs_checkSVGOnServerBeforeLoadFirst(){		

	var fileUrl = "";
	if (!cvjs_multipagePDFtoSVG_PhpLoadFlag)  // standard load
		fileUrl = cvjs_multipageURL_FileNamePath + "/"+ cvjs_SVG_multiPages[cvjs_active_floorplan_div_nr].pages[0].fileName;
	else{
		//3.1.20e
		if (cvjs_getFileController.indexOf("getFile_09.php")==0)		
			fileUrl = cvjs_phpPath+"getFile_09.php?fileTag="+cvjs_multipagePDFtoSVG_tempDir+"/"+cvjs_SVG_multiPages[cvjs_active_floorplan_div_nr].pages[0].fileName.substring(0, cvjs_SVG_multiPages[cvjs_active_floorplan_div_nr].pages[0].fileName.indexOf(".svg"))+"&remainOnServer=1&Type=svg";
		else
			fileUrl = cvjs_serverHandlersPath+cvjs_getFileController+"?fileTag="+cvjs_multipagePDFtoSVG_tempDir+"/"+cvjs_SVG_multiPages[cvjs_active_floorplan_div_nr].pages[0].fileName.substring(0, cvjs_SVG_multiPages[cvjs_active_floorplan_div_nr].pages[0].fileName.indexOf(".svg"))+"&remainOnServer=1&Type=svg";
	}								
												
	jQuery.ajax({
		url: fileUrl,
		type: 'HEAD',
		error: function()
		{

		//file not exists
			console.log("does not exist");
			setTimeout(function(){cvjs_checkSVGOnServerBeforeLoadFirst()}, 2500);

		},
		success: function()
		{
			console.log("exist");
			//file exists													
if (cvjs_debug) console.log("loading "+cvjs_multipageURL_FileNamePath + "  /  "+ cvjs_SVG_multiPages[cvjs_active_floorplan_div_nr].pages[0].fileName);
															
				if (!cvjs_multipagePDFtoSVG_PhpLoadFlag)  // standard load
					cvjs_LoadDrawing(floorplan_div_Array[cvjs_active_floorplan_div_nr], cvjs_multipageURL_FileNamePath + "/"+ cvjs_SVG_multiPages[cvjs_active_floorplan_div_nr].pages[0].fileName, undefined, true );
				else{
					//3.1.20e
					if (cvjs_getFileController.indexOf("getFile_09.php")==0)		
					// load via getFile
					cvjs_LoadDrawing( floorplan_div_Array[cvjs_active_floorplan_div_nr], cvjs_phpPath+"getFile_09.php?fileTag="+cvjs_multipagePDFtoSVG_tempDir+"/"+cvjs_SVG_multiPages[cvjs_active_floorplan_div_nr].pages[0].fileName.substring(0, cvjs_SVG_multiPages[cvjs_active_floorplan_div_nr].pages[0].fileName.indexOf(".svg"))+"&remainOnServer=1&Type=svg", undefined, true); 
					else
//						fileUrl = cvjs_serverHandlersPath+cvjs_getFileController+"?fileTag="+cvjs_multipagePDFtoSVG_tempDir+"/"+cvjs_SVG_multiPages[cvjs_active_floorplan_div_nr].pages[0].fileName.substring(0, cvjs_SVG_multiPages[cvjs_active_floorplan_div_nr].pages[0].fileName.indexOf(".svg"))+"&remainOnServer=1&Type=svg";
					cvjs_LoadDrawing( floorplan_div_Array[cvjs_active_floorplan_div_nr], cvjs_serverHandlersPath+cvjs_getFileController+"?fileTag="+cvjs_multipagePDFtoSVG_tempDir+"/"+cvjs_SVG_multiPages[cvjs_active_floorplan_div_nr].pages[0].fileName.substring(0, cvjs_SVG_multiPages[cvjs_active_floorplan_div_nr].pages[0].fileName.indexOf(".svg"))+"&remainOnServer=1&Type=svg", undefined, true); 	
				}

			
		}
	});
	
}


function cvjs_checkSVGOnServerBeforeLoad(newfile){											
	
	var fileUrl = "";
	if (!cvjs_multipagePDFtoSVG_PhpLoadFlag)  // standard load
		fileUrl = cvjs_multipageURL_FileNamePath + "/"+ newfile;
	else{
			//3.1.20e
		if (cvjs_getFileController.indexOf("getFile_09.php")==0)		
			fileUrl = cvjs_phpPath+"getFile_09.php?fileTag="+cvjs_multipagePDFtoSVG_tempDir+"/"+newfile.substring(0, newfile.indexOf(".svg"))+"&remainOnServer=1&Type=svg";
		else
			fileUrl = cvjs_serverHandlersPath+cvjs_getFileController+"?fileTag="+cvjs_multipagePDFtoSVG_tempDir+"/"+newfile.substring(0, newfile.indexOf(".svg"))+"&remainOnServer=1&Type=svg";
	}								
	
	jQuery.ajax({
		url: fileUrl,
		type:'HEAD',
		error: function()
		{

		//file not exists
			console.log("does not exist "+newfile);
			setTimeout(function(){cvjs_checkSVGOnServerBeforeLoad(newfile)}, 2500);

		},
		success: function()
		{
			console.log("exist");
			//file exists													
if (cvjs_debug) console.log("loading "+cvjs_multipageURL_FileNamePath + "  /  "+ cvjs_SVG_multiPages[cvjs_active_floorplan_div_nr].pages[0].fileName);
															
 					if (!cvjs_multipagePDFtoSVG_PhpLoadFlag)  // standard load
						cvjs_LoadDrawing(floorplan_div_Array[cvjs_active_floorplan_div_nr], cvjs_multipageURL_FileNamePath + "/"+ newfile );
					else{  // load via getFile
							//3.1.20e
						if (cvjs_getFileController.indexOf("getFile_09.php")==0)		
							cvjs_LoadDrawing( floorplan_div_Array[cvjs_active_floorplan_div_nr], cvjs_phpPath+"getFile_09.php?fileTag="+cvjs_multipagePDFtoSVG_tempDir+"/"+newfile.substring(0, newfile.indexOf(".svg"))+"&remainOnServer=1&Type=svg"); 
						else
							cvjs_LoadDrawing( floorplan_div_Array[cvjs_active_floorplan_div_nr], cvjs_serverHandlersPath+cvjs_getFileController+"?fileTag="+cvjs_multipagePDFtoSVG_tempDir+"/"+newfile.substring(0, newfile.indexOf(".svg"))+"&remainOnServer=1&Type=svg"); 
					}							
						//				
		}
	});
	
}









var currentLoadedDrawingFullName = "";

/**
 * Clears the drawing space of CADViewer JS
 * @param {string} floorplan_div - the div canvas object to which CADViewer JS is allocated
 */

function cvjs_ClearDrawing(floorplan_div){
	if (cvjs_loadInProgress){
		console.log("CADViewer JS: another load in progress, cannot clear: "+floorplan_div);
		return;
	}
	else{
		cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(floorplan_div);
		cvjs_rPaper[cvjs_active_floorplan_div_nr] = null;
		var myNode = document.getElementById(floorplan_div_Array[cvjs_active_floorplan_div_nr]);
		while (myNode.firstChild) {
			myNode.removeChild(myNode.firstChild);
		}
		var svgDiv = "#"+floorplan_div+"_svg";   //  floorPlan_div
		cvjs_rPaper[cvjs_active_floorplan_div_nr] = Snap(svgDiv);					
	}
}








/**
 * Loads a drawing into CADViewer JS, this method can only be used after intialization of CADViewer JS through the cvjs_InitCADViewerJS_ methods
 * @param {string} floorplan_div - the SVG canvas object to which CADViewer JS is allocated
 * @param {string} FileName - the name and path to the location of the CADViewer JS drawing files to load in, the path is either absolute or relative to the document in which CADViewer JS is invoked
 */

function cvjs_LoadDrawing(floorplan_div, FileName){

	currentLoadedDrawingFullName = FileName;
	cvjs_LoadDrawing(floorplan_div, FileName, undefined, false);

}


var cvjs_firstLoad = false;

var default_full_loaded = false;
var flagSetUpVqPngDefault = false;

var floorplan_div_Array = new Array();
var floorplan_div_Array_current_Drawing =new Array();

var loading_active_floorplan_div = "";


/**
 * Loads a drawing into CADViewer JS, this method can only be used after intialization of CADViewer JS through the cvjs_InitCADViewerJS_ methods
 * @param {string} floorplan_div - the SVG canvas object to which CADViewer JS is allocated
 * @param {string} FileNamePath - the filepath to the location of the CADViewer JS drawing files to load in, the path is either absolute or relative to the document in which CADViewer JS is invoked
 * @param {string} FileNameNoExtension - file name of the drawing without extension (CADViewer JS will automatically genrate naming and load in files associated with the file name)
 * @param {boolean} serverCallBack - set to false or undefined.
 */

function cvjs_LoadDrawing(floorplan_div, FileNamePath, FileNameNoExtension, serverCallBack){


//	window.alert("cvjs_fileLoadingFromSharePointServer"+cvjs_fileLoadingFromSharePointServer);
	
	if (serverCallBack == undefined) serverCallBack = false;

//window.alert(serverCallBack)	;
	
	// we return if we are loading on top of another drawing
	if (cvjs_loadInProgress && !serverCallBack){
		console.log("CADViewer JS: another load in progress, aborting: "+floorplan_div+"  "+FileNamePath+" we have "+cvjs_active_floorplan_div_nr);
		
		// we need to set the active floorplan back to the drawing we are loading
		cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(loading_active_floorplan_div);  
		
		console.log("Setting back : "+cvjs_active_floorplan_div_nr+"  "+loading_active_floorplan_div);
		
		
				
		try{
			cvjs_LoadDrawingAborted(floorplan_div, FileNamePath);;
			
		}catch(err){if (cvjs_debug) console.log("cvjs_LoadDrawing: "+err); }
		
		
		// close the loading pane		
		return;
	}

	// load in progress is true if we are loading first time
	if (!cvjs_loadInProgress && !serverCallBack){
		cvjs_loadInProgress = true;
		
		cvjs_firstLoad = true;  // 3.0.13k
	}
	
	// load in progress is still true if we are loading from a server callback
	if (!cvjs_loadInProgress && serverCallBack){
		cvjs_loadInProgress = true;
		
		cvjs_firstLoad = false; // 3.0.13k
	}
		
	// we are setting the active load to the name of the div being loaded
	loading_active_floorplan_div = floorplan_div;
	
	
	cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(floorplan_div);
		
	
//	console.log("CADViewer JS version is: "+cvjs_versionNumber+" Div: "+floorplan_div+" (pre-init) div-index: "+cvjs_rPaperIndex(floorplan_div));
	console.log(cvjs_versionNumber+" Div: "+floorplan_div+" (pre/post-init) div-index: "+cvjs_rPaperIndex(floorplan_div));
	console.log(cvjs_versionNumber+" Loading: "+FileNamePath);
	
	
//	// we are telling the system that only one drawing can be loaded
	

	floorplan_div = floorplan_div.toString();
	
//console.log(floorplan_div);	
	
	//if (!floorplan_div.endsWith("_svg")) floorplan_div = floorplan_div + "_svg"; 	// 2017-11-07
	if (floorplan_div.indexOf("_svg")==-1 || (floorplan_div.indexOf("_svg")>-1 && floorplan_div.indexOf("_svg")< (floorplan_div.length-4)) ) floorplan_div = floorplan_div + "_svg"; 	// 2017-11-07


		// initialization


		if (FileNameNoExtension==undefined){
			currentLoadedDrawingFullName = FileNamePath;
		}
		else{
			currentLoadedDrawingFullName = FileNamePath+FileNameNoExtension+".js";
			cvjs_FileNameNoExtension = FileNameNoExtension;

		}


//console.log(floorplan_div+" "+FileNamePath+" "+FileNameNoExtension);

	if (FileNameNoExtension==undefined){

		//console.log("we have to parse the input file");

		var filePath = 	""; //FileNamePath.substring(0, FileNamePath.lastIndexOf('/')+1);
		var fileName =  ""; //FileNamePath.substring(FileNamePath.lastIndexOf('/')+1, FileNamePath.lastIndexOf('.')) ;
		//cvjs_FileNameNoExtension = fileName;

		var fileExtension =  FileNamePath.substring(FileNamePath.lastIndexOf('.')+1) ;

		// 2017-08-01 if we have a server side svg file to load in via script
		var fileServerExtension = "";
		var svgFileFromServer = false;
		
		
		// 3.1.20e  we extent this to fileName=
		if (FileNamePath.indexOf('fileName=')>-1){ // 3.1.20e  we extent this to fileName= , aspx, php, etc.
		
			fileServerExtension = FileNamePath.substring(FileNamePath.lastIndexOf('.')+1) ;
			fileExtension = fileServerExtension;

			filePath = FileNamePath.substring(0, FileNamePath.lastIndexOf('fileName=')+9);
			fileName =  FileNamePath.substring(FileNamePath.lastIndexOf('fileName=')+9) ;
			fileExtension =  FileNamePath.substring(FileNamePath.lastIndexOf('.')+1) ;

			if (fileServerExtension=="svg") svgFileFromServer = true;
		
if (cvjs_debug) console.log("fileName branch");

		
		}else{
	
			if (FileNamePath.indexOf('Type=')>-1){  // 2017-08-31  - handling of a stream from php

				fileServerExtension = FileNamePath.substring(FileNamePath.lastIndexOf('Type=')+5) ;
				fileExtension = fileServerExtension;

				filePath = FileNamePath.substring(0, FileNamePath.lastIndexOf('/')+1);
				fileName =  FileNamePath.substring(FileNamePath.lastIndexOf('/')) ;
				fileExtension =  FileNamePath.substring(FileNamePath.lastIndexOf('=')+1) ;


				if (fileServerExtension=="svg") svgFileFromServer = true;

			}
			else{  // standard chopping of file name and extension

				filePath = 	FileNamePath.substring(0, FileNamePath.lastIndexOf('/')+1);
				fileName =  FileNamePath.substring(FileNamePath.lastIndexOf('/')+1, FileNamePath.lastIndexOf('.')) ;
				cvjs_FileNameNoExtension = fileName;

				fileExtension =  FileNamePath.substring(FileNamePath.lastIndexOf('.')+1) ;
			}

		}
		
		// if it is .js we simply pass it on
		fileExtensionLower = fileExtension.toLowerCase();

if (cvjs_debug) 		console.log("fileExtension="+fileExtension+" lower "+fileExtensionLower);


// 2017-12-11  
// 2017-12-08
// here we build an array over number of floorplans in page

	//floorPlan_div = floorplan_div;   //2017-12-07	
	// build array with current floorplan_div, then we can add
		var fFlag = false;
		for (var i=0; i< floorplan_div_Array.length; i++){
						
			if (floorplan_div_Array[i] == floorplan_div){
				fFlag = true;
				floorplan_div_Array_current_Drawing[i] = FileNamePath;
				cvjs_active_floorplan_div_nr = i;  // we are setting the active floorplan_div to the drawing-div we are loading from	
				cvjs_scrollMouse_intialized[i] = false;		// we tell that the scroll mouse is not initalized for this floorplan_div
								
				vqRooms[i] = new Array();	  // we intialize vqRooms for this space	

			}
		}

		
		if (fileExtensionLower.indexOf("js")==0){
			FileNamePath = filePath;
			FileNameNoExtension = fileName;
			fileLoad_contentFormat = "JS";
		}

		// if it is .png .gif .jpg , we set it up to be direct bitmap load
		if (fileExtensionLower.indexOf("png")==0 || fileExtensionLower.indexOf("gif")==0 || fileExtensionLower.indexOf("jpg")==0 || fileExtensionLower.indexOf("jpeg")==0){
			FileNamePath = filePath;
			FileNameNoExtension = fileName;
			fileLoad_contentFormat = fileExtension;
		}

		// if it is .dwg, .dxf .dwf, we call the conversion setup
		if (fileExtensionLower.indexOf("dwg")==0 || fileExtensionLower.indexOf("dwf")==0 || fileExtensionLower.indexOf("dxf")==0){
			// Now I will have the rest server pick up the dwg file at http://creator.vizquery.com/City_base_map.dwg, which is not password protected,
			// If the file is on the same server as the converter, I can pass over a local file and path: /home/cadviewer/creator/City_skyway_map.dwg
			// convert it, and send it up to CADViewer JS in this document for display

			if (fileExtensionLower.indexOf("dwg")==0) cvjs_conversion_setContentFormat("DWG");
			if (fileExtensionLower.indexOf("dwf")==0) cvjs_conversion_setContentFormat("DWF");
			if (fileExtensionLower.indexOf("dxf")==0) cvjs_conversion_setContentFormat("DXF");

			// 3.0.13e
			cvjs_preConversionFileExtension[cvjs_active_floorplan_div_nr] = fileExtensionLower; 
						
			cvjs_LoadDrawing_Conversion(floorplan_div, FileNamePath, FileNameNoExtension, cvjs_conversion_originatingUsername[cvjs_active_floorplan_div_nr ], cvjs_conversion_originatingPassword[cvjs_active_floorplan_div_nr ]);
			return;
		}


		// if it is .dgn we call the conversion setup
		if (fileExtensionLower.indexOf("dgn")==0){
if (cvjs_debug) console.log("IN DGN BRANCH");


			// 3.0.13e
			cvjs_preConversionFileExtension[cvjs_active_floorplan_div_nr] = fileExtensionLower; 


			if (fileExtensionLower.indexOf("dgn")==0) cvjs_conversion_setContentFormat("DGN");
			cvjs_LoadDrawing_Conversion(floorplan_div, FileNamePath, FileNameNoExtension, cvjs_conversion_originatingUsername[cvjs_active_floorplan_div_nr ], cvjs_conversion_originatingPassword[cvjs_active_floorplan_div_nr ]);
			return;
		}

		// if it is .dgn we call the conversion setup
		if (fileExtensionLower.indexOf("pcf")==0){
if (cvjs_debug) console.log("IN PCF BRANCH");


			// 3.0.13e
			cvjs_preConversionFileExtension[cvjs_active_floorplan_div_nr] = fileExtensionLower; 


			if (fileExtensionLower.indexOf("pcf")==0) cvjs_conversion_setContentFormat("PCF");
			cvjs_LoadDrawing_Conversion(floorplan_div, FileNamePath, FileNameNoExtension, cvjs_conversion_originatingUsername[cvjs_active_floorplan_div_nr ], cvjs_conversion_originatingPassword[cvjs_active_floorplan_div_nr ]);
			return;
		}



		// if it is .svg we pass it over to direct svg load
		// it is is .svgz we pass it over to direct svg load

		if (fileExtensionLower.indexOf("txt")==0 || fileExtensionLower.indexOf("svg")==0 || fileExtensionLower.indexOf("svgz")==0){

		
			// first load of svg from sharepoint server
			if (cvjs_firstLoad && cvjs_fileLoadingFromSharePointServer){  // 3.0.13k
				cvjs_firstLoad = false;
				// 3.0.14d  - if a svg first load, the SVG
				cvjs_preConversionFileExtension[cvjs_active_floorplan_div_nr]
				// first load the file over to local folder
				// then load:
					
				var downloadSharepointPhpUrl = cvjs_serverHandlersPath + "CV-JS_sharepoint_downloadfile.php";
				// we need to wash out %20 and replace by whitespaces, if the filename originates from an external filename. Will not work with a %20 filename on a Sharepoint server
				var svgName=filePath+fileName+"."+fileExtension;
				
				svgName = svgName.replace(/%20/g, ' ');
				var filelist_data = {};
				filelist_data['sharepointfilename'] = svgName;
				filelist_data['targetfile'] = sharePoint_dataServerPath+svgName;
				filelist_data['user_name'] = cvjs_sharepoint_UserName;
				
				if (cvjs_debug) console.log("share point SVG filename="+svgName+"  "+cvjs_sharepoint_UserName+" "+(sharePoint_dataServerPath+svgName)+" "+sharePoint_dataUrlPath);
				jQuery.ajax({
					url : downloadSharepointPhpUrl,
					type: 'post',
					data: filelist_data,
					success:function(Api_response)
							{	
		console.log("download response"+Api_response);
		
							// 3.0.13k
					
								SVGloadFile =	sharePoint_dataUrlPath+svgName;
						


								// We cannot set the PDF multi-page loading page array flag to false, because we are loading the svg directly
								//cvjs_SVG_multiPagesFlag[cvjs_active_floorplan_div_nr] = false;				
								
								//2017-08-01  we load the svg directly from the server json/php stream or file indirection
								if (svgFileFromServer){
												SVGloadFile = FileNamePath;
												svgFileFromServer = false;
								}

								FileNamePath = cvjs_relativeScriptsPath;

								if (cvjs_debug) 			console.log("SVGloadFile "+ SVGloadFile);
								
								
								// 3.0.15c
								// if we are navigating from the page change and we have pre-converted into a fixed pdf folder in /converter/files/pdf
								// we have to strip out the initial path that leads to the location (html/data/)  defined by the sharepoint init file

								var innerHttp = SVGloadFile.lastIndexOf("://");
															
								if (innerHttp>6){
									// the filename internally contains http:// or https:// and we therefore truncate:
									
									if (SVGloadFile.lastIndexOf("http://")>6){
										SVGloadFile = SVGloadFile.substring(SVGloadFile.lastIndexOf("http://"));
									}
									else{
										if (SVGloadFile.lastIndexOf("https://")>6){
											SVGloadFile = SVGloadFile.substring(SVGloadFile.lastIndexOf("https://"));
										}
									}
								}
								
							
								if (cvjs_debug) console.log("After http / httpsSVGloadFile "+ SVGloadFile);


								

								SVGloadFlag = true;

								// we are faking the load of init.js   2018-02-07
								
								nodes_loaded = true;
								floor_loaded = true;
								thumbs_loaded = true;
								
								buildings = {
									BUILDING_NAME_GOES_HERE: {
										name: "",
										company: "",
										address: "",
										city: "",
										state: "",
										zipcode: "",
										country: "",
										FacMgr: "",
										FacMgr_title: "",
										FacMgr_email: "",
										FacMgr_phone: "",
										floors: {
											FLOOR_NAME_GOES_HERE: {
												name: "name_of_file_to_appear",
												file: "file_name",
												rooms: {

												}
											}
										}
									}
									
								}
								
								//console.log("ÖÖÖ  "+cvjs_rPaper[cvjs_active_floorplan_div_nr]);
								
								
								if (cvjs_rPaper[cvjs_active_floorplan_div_nr] == null || cvjs_rPaper[cvjs_active_floorplan_div_nr] == undefined){
													
									cvjs_rPaper[cvjs_active_floorplan_div_nr] = Snap("#"+floorplan_div_Array[cvjs_active_floorplan_div_nr]);
									console.log(cvjs_active_floorplan_div_nr+"  "+floorplan_div_Array[cvjs_active_floorplan_div_nr]);
													
								}
								
								if (fileOverlay){   // we only initialize if not overlay!!!   2018-05-05
									if (cvjs_debug) console.log("file overlay we do nothing, setup after SVG");
								}
								else{
									layers_all = cvjs_rPaper[cvjs_active_floorplan_div_nr].g();
									cvjs_redlineStickyNoteLayer[cvjs_active_floorplan_div_nr] = cvjs_rPaper[cvjs_active_floorplan_div_nr].g();  // 2018-03-21		
								}
											
								SetUpVq(1,15);
								return;

								// 3.0.13k
							

							},
					error:function(data_e)
							{
								console.log("2 json getEngines error="+data_e);
							}
				});	
				return;
				
			}
			else{  // standard SVG load, can be first load or second load 
	

				// 3.0.14d  we cannot set the extension to SVG in second run			
				if (cvjs_firstLoad){
					cvjs_preConversionFileExtension[cvjs_active_floorplan_div_nr] = fileExtensionLower; 
					cvjs_firstLoad = false;
				}
	
			
				SVGloadFile = filePath+fileName+"."+fileExtension;
				

				// 3.1.21j
				// IF foldertree structure, we encapsulate the drawing into the load-file handler, otherwise there will be cross-domain
				// loading issues

				//window.alert(cvjs_buildFolderTree_crossDomain+" "+SVGloadFile);

				if (cvjs_buildFolderTree_crossDomain){
					if (SVGloadFile.indexOf("converters/files/pdf")>0){
						
								SVGloadFile = cvjs_serverHandlersPath+cvjs_serverLoadFileController+"?file="+cvjs_ServerLocation+SVGloadFile.substring(SVGloadFile.indexOf("/converters/files/pdf"));
//						window.alert("this is a pdf!"+SVGloadFile);
					}
					else{
						SVGloadFile = cvjs_serverHandlersPath+cvjs_serverLoadFileController+"?file="+SVGloadFile;
					}
				}
				
				// We cannot set the PDF multi-page loading page array flag to false, because we are loading the svg directly
				//cvjs_SVG_multiPagesFlag[cvjs_active_floorplan_div_nr] = false;				
				
				//2017-08-01  we load the svg directly from the server json/php stream or file indirection
				if (svgFileFromServer){
								SVGloadFile = FileNamePath;
								svgFileFromServer = false;
				}

				FileNamePath = cvjs_relativeScriptsPath;

				if (cvjs_debug) 			console.log("SVGloadFile "+ SVGloadFile);

				SVGloadFlag = true;

				// we are faking the load of init.js   2018-02-07
				
				nodes_loaded = true;
				floor_loaded = true;
				thumbs_loaded = true;
				
				buildings = {
					BUILDING_NAME_GOES_HERE: {
						name: "",
						company: "",
						address: "",
						city: "",
						state: "",
						zipcode: "",
						country: "",
						FacMgr: "",
						FacMgr_title: "",
						FacMgr_email: "",
						FacMgr_phone: "",
						floors: {
							FLOOR_NAME_GOES_HERE: {
								name: "name_of_file_to_appear",
								file: "file_name",
								rooms: {

								}
							}
						}
					}
					
				}
								
				if (cvjs_debug) console.log("ZX1 Standard SVG load cvjs_active_floorplan_div_nr="+cvjs_active_floorplan_div_nr);	
				//if (cvjs_debug) console.log("ZX1 Standard SVG load cvjs_rPaper[cvjs_active_floorplan_div_nr]="+cvjs_rPaper[cvjs_active_floorplan_div_nr]);
				
				if (cvjs_rPaper[cvjs_active_floorplan_div_nr] == null || cvjs_rPaper[cvjs_active_floorplan_div_nr] == undefined){
									
					cvjs_rPaper[cvjs_active_floorplan_div_nr] = Snap("#"+floorplan_div_Array[cvjs_active_floorplan_div_nr]);
					console.log(cvjs_active_floorplan_div_nr+"  "+floorplan_div_Array[cvjs_active_floorplan_div_nr]);
				}
				
				if (fileOverlay){   // we only initialize if not overlay!!!   2018-05-05
					if (cvjs_debug) console.log("file overlay we do nothing, setup after SVG");
				}
				else{
					layers_all = cvjs_rPaper[cvjs_active_floorplan_div_nr].g();
					cvjs_redlineStickyNoteLayer[cvjs_active_floorplan_div_nr] = cvjs_rPaper[cvjs_active_floorplan_div_nr].g();  // 2018-03-21		
				}

//				if (cvjs_debug) console.log("ZX3 Prior SetUpVq Standard SVG load cvjs_active_floorplan_div_nr="+cvjs_active_floorplan_div_nr);		
//				if (cvjs_debug) console.log("ZX4 Prior SetUpVq load cvjs_rPaper[cvjs_active_floorplan_div_nr]="+cvjs_rPaper[cvjs_active_floorplan_div_nr]);

				SetUpVq(1,15);
				return;
				
							
			}	
		
	
		}


		
		
		
		// this is a pdf file
		if (fileExtensionLower.indexOf("pdf")==0){

			//console.log("cvjs_LoadDrawing_PDF "+FileNamePath);
			cvjs_PDFloadFlag = true;   // this flag will ensure loading is displayed for the init load file up until the pdf is converted

			
			cvjs_last_FileName_PDF = FileNamePath.substring(FileNamePath.lastIndexOf("/")+1);
			
			
			if (cvjs_debug) console.log("loading PDF "+cvjs_customPdfFolderFlag+ "    cvjs_customPdfFolderFlag")


			// 3.0.13e
			cvjs_preConversionFileExtension[cvjs_active_floorplan_div_nr] = fileExtensionLower; 

				
			
		    // 2018-05-08, setting customFolder after each load of PDF file				
		  if (cvjs_customPdfFolderFlag){
			  	  
				var pdfFolderName = FileNamePath.substring(FileNamePath.lastIndexOf("/")+1);
				pdfFolderName = pdfFolderName.substring(0,pdfFolderName.lastIndexOf("."));
				
				//cvjs_setCustomPdfFolder(pdfFolderName, false);	
			  
			  	  
				// 3.0.15b  - if the folder status has been set elsewhere, we repeat the status setting
				cvjs_setCustomPdfFolder(pdfFolderName, cvjs_customPdfFolderForcedUpdate);	
			  
			  
			  
		  };
			
							

			// We check if the file starts with http and are assuming that we need to change to the local file path
			// NOTE: this will not correct a file that is entered using fileName=  with http.

			cvjs_ClearDrawing(floorplan_div);
			
//if (cvjs_debug) window.alert("pdf cvjs_fileLoadingFromSharePointServer"+cvjs_fileLoadingFromSharePointServer+" FileNamePath "+FileNamePath+" cvjs_filepathServer "+cvjs_filepathServer );			
			// new 2017-12-31
			if (cvjs_fileLoadingFromSharePointServer){
				
				// first load the file over to local folder
				// then load:
			
				var downloadSharepointPhpUrl = cvjs_serverHandlersPath + "CV-JS_sharepoint_downloadfile.php";
				
				var filelist_data = {};
				filelist_data['sharepointfilename'] = FileNamePath;
				filelist_data['targetfile'] = sharePoint_dataServerPath+FileNamePath;
				filelist_data['targeturl'] = sharePoint_dataUrlPath+FileNamePath;
				filelist_data['user_name'] = cvjs_sharepoint_UserName;
		
//				window.alert("share point pdf "+cvjs_sharepoint_UserName);
		
				jQuery.ajax({
					url : downloadSharepointPhpUrl,
					type: 'post',
					data: filelist_data,
					success:function(Api_response)
							{	
		//window.alert(Api_response);
								cvjs_loadInProgress = false;
								cvjs_LoadDrawingPDF_base(filelist_data['targetfile']);	

							},
					error:function(data_e)
							{
								console.log("2 json getEngines error="+data_e);
							}
				});
				
			}
			else{   // standard loop

			
			
			
			
				if (FileNamePath.indexOf("http:")>-1 || FileNamePath.indexOf("https:")>-1){

					FileNamePath =  cvjs_filepathServer  + FileNamePath.substring(FileNamePath.lastIndexOf("/"));

				}

				cvjs_LoadDrawingPDF_base(FileNamePath);
			}

			//cvjs_LoadDrawingPDF_base(FileNamePath);

			

		//console.log(floor_loaded+" "+nodes_loaded+" "+thumbs_loaded+" "+default_full_loaded);

			//cvjs_InitializeModals(floorplan_div);

			cvjs_rPaper[cvjs_active_floorplan_div_nr] = null;
			var svgDiv = "#"+floorplan_div_Array[cvjs_active_floorplan_div_nr];
			if (!cvjs_rPaper[cvjs_active_floorplan_div_nr])
				cvjs_rPaper[cvjs_active_floorplan_div_nr] = Snap(svgDiv);


			jQuery('#wait_looper_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).html('<table class=\"waitlooperTable\" width=\"100\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" ><tr><td><div id=\"looper_image_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]+'\"></div></td></tr><tr><td><div class=\"wait_text_4\" id=\"wait_looper_text_id_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]+'\">'+lTable.languages[cvjs_currentLanguage].LoadingModal.Loading+'</div></td></tr></table>');

			jQuery("#wait_looper_text_id_"+floorplan_div_Array[cvjs_active_floorplan_div_nr]).html(lTable.languages[cvjs_currentLanguage].LoadingModal.Loading);
			
			cvjs_setLooperPosition();

			jQuery("#wait_looper_"+floorplan_div_Array[cvjs_active_floorplan_div_nr]).show();


			// we are not loading in init.js, but simply setting the variables. 	
			nodes_loaded = true;
			floor_loaded = true;
			thumbs_loaded = true;
			
			buildings = {
				BUILDING_NAME_GOES_HERE: {
					name: "",
					company: "",
					address: "",
					city: "",
					state: "",
					zipcode: "",
					country: "",
					FacMgr: "",
					FacMgr_title: "",
					FacMgr_email: "",
					FacMgr_phone: "",
					floors: {
						FLOOR_NAME_GOES_HERE: {
							name: "name_of_file_to_appear",
							file: "file_name",
							rooms: {

							}
						}
					}
				}
				
			}
			
			layers_all = cvjs_rPaper[cvjs_active_floorplan_div_nr].g();
			
			cvjs_redlineStickyNoteLayer[cvjs_active_floorplan_div_nr] = cvjs_rPaper[cvjs_active_floorplan_div_nr].g();  // 2018-03-21
			

			return;

			
		
			// while file is converting load the init file
//			FileNamePath = cvjs_relativeScriptsPath;
//			FileNameNoExtension = "init";
//			fileLoad_contentFormat = "JS";
//			cvjs_FileNameNoExtension = "init";

		}

	}

	try{


		//SVGloadFlag = false;  // 2017-08-07, we need to test this MMMMM
		SVGloadedFragment = false;


		if (cvjs_initMasterBackground){
//if (cvjs_debug) 			console.log("C remove all "+cvjs_initMasterBackground);  // only remove if initMasterGround true (false=compare drawings)
//			cvjs_rPaper[cvjs_active_floorplan_div_nr].selectAll("*").remove();
//if (cvjs_debug) console.log("blocked cvjs_rPaper[cvjs_active_floorplan_div_nr] select all ");


			// new, we clear the element  IE 11 fix  2017-12-19
			//var element = document.getElementById(floorplan_div_Array[cvjs_active_floorplan_div_nr]);
			//	element.parentNode.removeChild(element);			
			var myNode = document.getElementById(floorplan_div_Array[cvjs_active_floorplan_div_nr]);
			while (myNode.firstChild) {
				myNode.removeChild(myNode.firstChild);
			}


			try{ if (cvjs_debug) console.log("before remove "+vqRooms[0].length);} catch(err) {console.log(err);}			

			cvjs_rPaper[cvjs_active_floorplan_div_nr] = null;
			var svgDiv = "#"+floorplan_div;   //  floorPlan_div
 			if (!cvjs_rPaper[cvjs_active_floorplan_div_nr])
					cvjs_rPaper[cvjs_active_floorplan_div_nr] = Snap(svgDiv);

//	if (cvjs_debug) console.log("1 MMMMMMMMMMMMMM setting active floorplan "+cvjs_active_floorplan_div_nr+"  snap() "+svgDiv);
//	try{ if (cvjs_debug) console.log("after remove "+vqRooms[0].length);} catch(err) {console.log(err);}			

			
		}
//		}else   // 2017-08-31 , removed
//			cvjs_rPaper[cvjs_active_floorplan_div_nr].selectAll("*").remove();

if (cvjs_debug) 		console.log("REMOVED removed  SVGloadFlag"+SVGloadFlag+" SVGloadedFragment"+SVGloadedFragment);

	}
	catch (err){};

	jQuery('#wait_looper_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).html('<table class=\"waitlooperTable\" width=\"100\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" ><tr><td><div id=\"looper_image_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]+'\"></div></td></tr><tr><td><div class=\"wait_text_4\" id=\"wait_looper_text_id_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]+'\">'+lTable.languages[cvjs_currentLanguage].LoadingModal.Loading+'</div></td></tr></table>');

	jQuery("#wait_looper_text_id_"+floorplan_div_Array[cvjs_active_floorplan_div_nr]).html(lTable.languages[cvjs_currentLanguage].LoadingModal.Loading);
	
	cvjs_setLooperPosition();

	jQuery("#wait_looper_"+floorplan_div_Array[cvjs_active_floorplan_div_nr]).show();


	jQuery('#floorPlanCanvasObject_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).hide();

	// 3.3.01e
	if (printDebugFlag) jQuery('#floorPlanCanvasObject_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).show();
	
	
	cvjs_objectIsZoomedExtents = true;

	cvjs_loadDrawing_conversionMode = false;
	cvjs_loaddrawing_FileNamePath[cvjs_active_floorplan_div_nr ] = FileNamePath;


	jQuery("#"+floorplan_div).html('');
	floor_loaded = false;
	nodes_loaded = false;
	thumbs_loaded = false;

	VqSetup = false;

	current_FileNamePath = FileNamePath;


	js_loaded_flag = 0;

	//console.log("tms_LoadDrawing 1 current_js_initialized="+current_js_initialized+"  "+FileNamePath+FileNameNoExtension+".js");


	if (fileLoad_contentFormat.indexOf("JS")==0){

	if (current_js_initialized == 1){

if (cvjs_debug) console.log(FileNameNoExtension.indexOf('Type=')+ " JS ileNamePath.indexOf('Type=')  replacing current_jsFloorNames="+current_jsFloorNames+"  "+FileNamePath+FileNameNoExtension);

	if (FileNameNoExtension.indexOf('Type=')>-1) // 2017-08-31
		replacejscssfile(current_jsFloorNames, FileNamePath+FileNameNoExtension, "js");
	else
		replacejscssfile(current_jsFloorNames, FileNamePath+FileNameNoExtension+".js", "js");


		if (!cvjs_FourFilesInOne){
			replacejscssfile(current_jsNodesFloorNames, FileNamePath+FileNameNoExtension+"-nodes.js", "js");
			replacejscssfile(current_jsThumbFloorNames, FileNamePath+FileNameNoExtension+"-thumb.js", "js");
			replacejscssfile(current_jsFullFloorNames, FileNamePath+FileNameNoExtension+"-full.js", "js");
		}
	}
	else{

if (cvjs_debug) console.log("initial loading .js file files! "+FileNamePath+FileNameNoExtension);
		current_js_initialized = 1;

		if (FileNamePath.indexOf('Type=')>-1) // 2017-08-31
			loadJSbase(FileNamePath+FileNameNoExtension, "js");
		else
			loadJSbase(FileNamePath+FileNameNoExtension+".js");
		if (!cvjs_FourFilesInOne){
			loadJSbase(FileNamePath+FileNameNoExtension+"-nodes.js");
			loadJSbase(FileNamePath+FileNameNoExtension+"-thumb.js");
			loadJSbase(FileNamePath+FileNameNoExtension+"-full.js");
		}
	}

//console.log("replaced to: "+jsNodesFloorNames[drawing_nr]+"  "+jsFullFloorNames[drawing_nr]+" "+jsFloorNames[drawing_nr]+" "+jsThumbFloorNames[drawing_nr]);
	if (!cvjs_FourFilesInOne){
		current_jsNodesFloorNames = FileNamePath+FileNameNoExtension+"-nodes.js";
		current_jsThumbFloorNames = FileNamePath+FileNameNoExtension+"-thumb.js"
		current_jsFullFloorNames =  FileNamePath+FileNameNoExtension+"-full.js"
	}

	if (FileNameNoExtension.indexOf('Type=')>-1) // 2017-08-31
		current_jsFloorNames =  FileNamePath+FileNameNoExtension;
	else
		current_jsFloorNames =  FileNamePath+FileNameNoExtension+".js";

	rebuild_drop_spaces =1;  // make sure drop spaces are regenerated in spaces menu

//console.log("end of loadDrawing current_jsNodesFloorNames="+current_jsNodesFloorNames);

		// check if filename or path is incorrect

		waitForJSLoaded();


/*
		jQuery.getScript( FileNamePath+FileNameNoExtension+".js" )
		  .done(function( script, textStatus ) {
		    //console.log( textStatus );
		    console.log("ok");
		  })
		  .fail(function( jqxhr, settings, exception ) {
		    console.log("fail "+jqxhr+" "+settings+" "+exception);
		});


		var len = jQuery('script[src*="FileNamePath+FileNameNoExtension+".js"]').length;
		if (len == 0){
			jQuery("#looper").hide();
			jQuery('#wait_looper_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).hide();
			var status = "Path to file not found: "+FileNamePath+FileNameNoExtension+".js";
			jQuery('#cvjs_informationModalText').html(status);
			jQuery('#info_messageModal').modal('show');
		}


*/

	}
	else{   // We are loading PNG

	
			// 3.0.13e
			cvjs_preConversionFileExtension[cvjs_active_floorplan_div_nr] = fileExtensionLower; 
	
	
	
		// We set the PDF multi-page loading page array flag to false
		cvjs_SVG_multiPagesFlag[cvjs_active_floorplan_div_nr] = false;				
	
	
		// because it is png we need to load default_full_loaded		
		cvjs_bitmapLoadFlag = true;
		
		try{
			cvjs_rPaper[cvjs_active_floorplan_div_nr] = Snap("#"+floorplan_div);
			var fileName=FileNamePath+FileNameNoExtension+"."+fileLoad_contentFormat
			
			
			// 3.1.21j
			// IF foldertree structure, we encapsulate the drawing into the load-file handler, otherwise there will be cross-domain
			// loading issues
			if (cvjs_buildFolderTree_crossDomain)
				fileName = cvjs_serverHandlersPath+cvjs_serverLoadFileController+"?file="+fileName;

					

if (cvjs_debug) console.log("calling setup Png "+fileName);

			default_full_loaded = true;

			SetUpVqPngDefault( fileName, floorplan_div_Array[cvjs_active_floorplan_div_nr] );
		}catch(err) {console.log(err);}

	}

 }


function waitForJSLoaded(){

		try{	// check if layers in -full are there
				layers_all.length;
				
				if (cvjs_debug) console.log("waitForJSLoaded");

			}
		catch (err){

			if (load_failures < 40){
				load_failures++;
				jQuery("#loading").html(lTable.languages[cvjs_currentLanguage].LoadingModal.Loading);
				setTimeout(function(){waitForJSLoaded()},256);
			}
			else{
				jQuery("#looper").hide();
				jQuery('#wait_looper_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).hide();
				//var status = "Path to file not found: "+FileNamePath+FileNameNoExtension+".js";
				//jQuery('#cvjs_informationModalText').html(status);
				//jQuery('#info_messageModal').modal('show');

				var textString = "Path to file not found: "+current_FileNamePath+cvjs_FileNameNoExtension+".js";
					
				cvjs_displayInformationModal(floorplan_div_Array[cvjs_active_floorplan_div_nr], textString);

			}
		}
}


var cvjs_rasterImageLoaded;

var sharePoint_dataServerPath = "";
var sharePoint_dataUrlPath = "";
var cvjs_sharepoint_UserName = "";
var cvjs_sharepoint_DocLib = "";



function SetUpVqPngDefault(fileName)
{

	if (cvjs_fileLoadingFromSharePointServer){
		
		// first load the file over to local folder
		// then load:
			
		var downloadSharepointPhpUrl = cvjs_serverHandlersPath + "CV-JS_sharepoint_downloadfile.php";
		
		// we need to wash out %20 and replace by whitespaces, if the filename originates from an external filename. Will not work with a %20 filename on a Sharepoint server
		
		fileName = fileName.replace(/%20/g, ' ');
		
		
		var filelist_data = {};
		filelist_data['sharepointfilename'] = fileName;
		filelist_data['targetfile'] = sharePoint_dataServerPath+fileName;
		filelist_data['user_name'] = cvjs_sharepoint_UserName;
		
		if (cvjs_debug) console.log("share point bitmap filename="+fileName+"  "+cvjs_sharepoint_UserName+" "+(sharePoint_dataServerPath+fileName)+" "+sharePoint_dataUrlPath);

			

		jQuery.ajax({
			url : downloadSharepointPhpUrl,
			type: 'post',
			data: filelist_data,
			success:function(Api_response)
					{	
console.log("download response"+Api_response);
						SetUpVqPngDefault_base(sharePoint_dataUrlPath+fileName);	

					},
			error:function(data_e)
					{
						console.log("2 json getEngines error="+data_e);
					}
		});

		
	}
	else{
		SetUpVqPngDefault_base(fileName);	
	}

}


function SetUpVqPngDefault_base(fileName)
{


	// we are not loading in init.js, but simply setting the variables. 	
	nodes_loaded = true;
	floor_loaded = true;
	thumbs_loaded = true;
	
	buildings = {
		BUILDING_NAME_GOES_HERE: {
			name: "",
			company: "",
			address: "",
			city: "",
			state: "",
			zipcode: "",
			country: "",
			FacMgr: "",
			FacMgr_title: "",
			FacMgr_email: "",
			FacMgr_phone: "",
			floors: {
				FLOOR_NAME_GOES_HERE: {
					name: "name_of_file_to_appear",
					file: "file_name",
					rooms: {

					}
				}
			}
		}
		
	}
	layers_all = cvjs_rPaper[cvjs_active_floorplan_div_nr].g();
	cvjs_redlineStickyNoteLayer[cvjs_active_floorplan_div_nr] = cvjs_rPaper[cvjs_active_floorplan_div_nr].g();  // 2018-03-21




//console.log(floor_loaded+" "+nodes_loaded+" "+thumbs_loaded+" "+default_full_loaded);

	//cvjs_InitializeModals(floorplan_div);

	cvjs_rPaper[cvjs_active_floorplan_div_nr] = null;
	var svgDiv = "#"+floorplan_div_Array[cvjs_active_floorplan_div_nr];
	if (!cvjs_rPaper[cvjs_active_floorplan_div_nr])
    	cvjs_rPaper[cvjs_active_floorplan_div_nr] = Snap(svgDiv);

		
//	// remove all content of the floorplan, we may be loading another page...
//	cvjs_rPaper[cvjs_active_floorplan_div_nr].selectAll("*").remove();

//  NOTE; WE ARE NOT READING init.js  , we are faking the variable settings
	if ((floor_loaded) && (nodes_loaded) && (thumbs_loaded) && (default_full_loaded)){
		
		load_failures = 0;
		thumb_loaded = false;
				
		cvjs_rasterImageLoaded = new Image();
	
		cvjs_rasterImageLoaded.onload = function(){

			var layer_Bitmap_Layer = cvjs_rPaper[cvjs_active_floorplan_div_nr].g();
		
			if (cvjs_bitmapFileNameIsServerPath_flag){	
				var callName = cvjs_serverHandlersPath+cvjs_serverLoadFileController+"?file="+fileName;
				layer_Bitmap_Layer = cvjs_rPaper[cvjs_active_floorplan_div_nr].image( callName, 0, 0, this.width, this.height);		
			}
			else{
				layer_Bitmap_Layer = cvjs_rPaper[cvjs_active_floorplan_div_nr].image( fileName, 0, 0, this.width, this.height);				
			}

			var bbox = layer_Bitmap_Layer.getBBox();

			layers_all = cvjs_rPaper[cvjs_active_floorplan_div_nr].g();
			cvjs_redlineStickyNoteLayer[cvjs_active_floorplan_div_nr] = cvjs_rPaper[cvjs_active_floorplan_div_nr].g();  // 2018-03-21

			layers_all.add(layer_Bitmap_Layer);

			
			var boundingbox = "M0,0V"+this.height+"H"+(this.width)+"V0.0H0.0"
			if (cvjs_debug) console.log("boundingbox "+boundingbox);
			var layer_Bitmap_Layer_frame = cvjs_rPaper[cvjs_active_floorplan_div_nr].path(boundingbox).attr({stroke : "rgb(164,164,164)" , "stroke-width" : "0.1", fill : "none"});
			layers_all.add(layer_Bitmap_Layer_frame);

			// we do not want to pan with thumb layer
			panWithThumb = false;

			boundingbox = "M0,0V"+bbox.height+"H"+bbox.width+"V0.0H0.0";			
			layer_thumb = cvjs_rPaper[cvjs_active_floorplan_div_nr].group(
				cvjs_rPaper[cvjs_active_floorplan_div_nr].path(boundingbox).attr({stroke: "rgba(153,153,153,0.5)" , "stroke-width" : "2", fill: "none"})
			);
		
			var bbox = layers_all.getBBox();
					
			// set variables sizes
			actualLLX[cvjs_active_floorplan_div_nr] = 0;
			actualLLY[cvjs_active_floorplan_div_nr] = 0;
			actualURX[cvjs_active_floorplan_div_nr] = bbox.width;
			actualURY[cvjs_active_floorplan_div_nr] = bbox.height;
			// build
			
			
			
			
			
			
			if (cvjs_debug) console.log("XXXXXXXXXXXXXXXX   boundingbox "+bbox.width+"  "+bbox.height);
			
			
			// 2017-09-02
//window.alert("making master 1");
			
			cvjs_masterBackground[cvjs_active_floorplan_div_nr] = cvjs_rPaper[cvjs_active_floorplan_div_nr].group(cvjs_rPaper[cvjs_active_floorplan_div_nr].rect(actualLLX[cvjs_active_floorplan_div_nr],actualLLY[cvjs_active_floorplan_div_nr], actualURX[cvjs_active_floorplan_div_nr]-actualLLX[cvjs_active_floorplan_div_nr], actualURY[cvjs_active_floorplan_div_nr]-actualLLY[cvjs_active_floorplan_div_nr]));
			cvjs_masterBackground[cvjs_active_floorplan_div_nr].attr({fill: "#ffffff", "fill-opacity":"0.01", "stroke-width": 0});

			//cvjs_masterBackground[cvjs_active_floorplan_div_nr].attr({fill: "#ff0000", "fill-opacity":"1.00", "stroke-width": 0});
			
			
			cvjs_masterBackground[cvjs_active_floorplan_div_nr].data("id", "master_"+floorplan_div_Array[cvjs_active_floorplan_div_nr]);
			cvjs_masterBackground[cvjs_active_floorplan_div_nr].attr({id: "master_"+floorplan_div_Array[cvjs_active_floorplan_div_nr]});

			
			// how to make drag for bitmaps


		//	cvjs_masterBackground[cvjs_active_floorplan_div_nr].after(layers_all);
			// 2018-01-30
			
			layers_all.after(cvjs_masterBackground[cvjs_active_floorplan_div_nr]);

			
			// 3.0.14d    - we put masterbackground on top instead as else no drag on image
			//cvjs_masterBackground[cvjs_active_floorplan_div_nr].before(layers_all);
			viewBox[cvjs_active_floorplan_div_nr].X = actualLLX[cvjs_active_floorplan_div_nr];
			viewBox[cvjs_active_floorplan_div_nr].Y = actualLLY[cvjs_active_floorplan_div_nr];
			viewBox[cvjs_active_floorplan_div_nr].width = actualURX[cvjs_active_floorplan_div_nr];
			viewBox[cvjs_active_floorplan_div_nr].height = actualURY[cvjs_active_floorplan_div_nr];
			cvjs_floorplan_div = floorplan_div_Array[cvjs_active_floorplan_div_nr];
			cvjs_masterBackground[cvjs_active_floorplan_div_nr].drag(dragMove, dragStart, dragEnd);
			
			//console.log("before 2"+viewBox[cvjs_active_floorplan_div_nr].X+"  "+viewBox[cvjs_active_floorplan_div_nr].Y);





			
			
			cvjs_addMouseWheelControls(cvjs_active_floorplan_div_nr);
			
			jQuery("#looper").hide();
			jQuery('#wait_looper_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).hide();

			//cvjs_windowResize_position(true, floorplan_div_Array[cvjs_active_floorplan_div_nr].slice(0, -4));
			
			//console.log(cvjs_active_floorplan_div_nr+" floorplan is "+floorplan_div_Array[cvjs_active_floorplan_div_nr]+"  "+'#floatNavigationMenu_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]);
			
			var position = jQuery("#"+floorplan_div_Array[cvjs_active_floorplan_div_nr]).position();
	
			var floorplan_div = floorplan_div_Array[cvjs_active_floorplan_div_nr];
			jQuery("#tip"+"_"+floorplan_div).css({position: 'absolute'});
			jQuery("#tip"+"_"+floorplan_div).css({border: '1px solid gray'});
			jQuery("#tip"+"_"+floorplan_div).css({'z-index': 2000});
			jQuery("#tip"+"_"+floorplan_div).css({color: "#333"});
			jQuery("#tip"+"_"+floorplan_div).css({'background-color': "#efefef"});
			jQuery("#tip"+"_"+floorplan_div).css({padding: "3px"});
			jQuery("#tip"+"_"+floorplan_div).css({'max-width': "300px"});
			jQuery("#tip"+"_"+floorplan_div).css({'white-space': "nowrap"});
			jQuery("#tip"+"_"+floorplan_div).css({'font-family': "arial, verdana, sans-serif"});
			jQuery("#tip"+"_"+floorplan_div).css({'font-size': "0.75em"});

			tip[cvjs_active_floorplan_div_nr] = jQuery("#tip"+"_"+floorplan_div);
			tip[cvjs_active_floorplan_div_nr].hide();

			ResizeVq(jQuery("#"+floorplan_div_Array[cvjs_active_floorplan_div_nr].width), jQuery("#"+floorplan_div_Array[cvjs_active_floorplan_div_nr].height));

			if( jQuery('#floatNavigationMenu_'+floorplan_div).is(':visible')){			
					// do nothing
			}
			else{
	
				if (pageChangeInterface[cvjs_interfaceCounterIndex(floorplan_div_Array[cvjs_active_floorplan_div_nr])]){
					jQuery('#floatNavigationMenu_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).show();
					var pos = jQuery('#'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).position();
					var posmenu_x = pos.top+5;
//					var posmenu_y = pos.left+jQuery('#'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).width()-415;
					var posmenu_y = pos.left+jQuery('#'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).width()-475;
					if (posmenu_y <40) posmenu_y = 40;
					jQuery('#floatNavigationMenu_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).offset({ top: posmenu_x, left: posmenu_y });

//					jQuery('#floatpagemenuText_'+floorplan_div).offset({ left: posmenu_y+168 });
				}
			}
				
			var pageNr ="&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp" +  "&nbsp&nbsp&nbsp1/1&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp";		
			var pageText = "Single Page";
			var pageString = pageNr+"  "+pageText;
			
			jQuery('#floatpagemenuText_'+floorplan_div).html(pageString);			
	
			// 3.3.01b
			jQuery('#floatpagemenuText1_topBar_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).html("1/1");
			jQuery('#floatpagemenuText2_topBar_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).html("Single Page");
	
	

	
			multiPages[cvjs_active_floorplan_div_nr] = { multiPages: 1,
                   currentPage:1,
                   pages : [
                        { fileName:"default", pageName:"Single Page"}
                   ]	
			};				   
			
			
			layerTable[cvjs_active_floorplan_div_nr] = { numberOfLayers: 0,
			layers: []};
					
			console.log("multiPages[ "+ multiPages[cvjs_active_floorplan_div_nr].multiPages);
						
			// 2018-05-07   With xlinks, the hyperlinks are in the SVG we need to have the masterbackground first in the set. For NODE_, we create them on masterBackground so do not need (but still use)
			try{
				cvjs_SVGGroup[cvjs_active_floorplan_div_nr].before(cvjs_masterBackground[cvjs_active_floorplan_div_nr]);

				

/******* moved to cvjs_InitializeSVGHyperlinkClick				
				// 2018-05-09  05-11
			    var isSmartPhoneOrTablet = /Android|webOS|iPhone|iPad|iPod|BlackBerry|Touch/i.test(navigator.userAgent);
				var isWindowsNT = /Windows NT/i.test(navigator.userAgent);

console.log("here2");				
				
				if(isSmartPhoneOrTablet && !isWindowsNT){
					
				}
				else{
					cvjs_SVGGroup[cvjs_active_floorplan_div_nr].drag(dragMove, dragStart, dragEnd);
				}
				
***************/				
				
			}
			catch(err1){console.log("error setting masterbackground first");}
			
			
			// set the tooltip, which is done in the vq arrays for standard load
			// 2017-09-22
			if (cvjs_customMethodForOnLoadEnd){
				
				// 2018-05-10;
				cvjs_loadInProgress = false;
				
				cvjs_myOnLoadEndMethod();  // call my OnLoadEndMethod as an alternative to OnLoadEnd();
			}
			else{
				try{
//					cvjs_resetZoomPan_SetMasterBackground(cvjs_active_floorplan_div_nr);	

					var fplan = floorplan_div_Array[cvjs_active_floorplan_div_nr].slice(0, -4);
					// allowing load of drawings
					cvjs_loadInProgress = false;
										
					console.log("NOTE_ End of png load loop booleans in init");
	
					// we set the rotation to 0 with page change or new drawing
					cvjs_currentRotationAngle[cvjs_active_floorplan_div_nr] = 0;

	//				window.alert("dragback "+floorplan_div_Array[cvjs_active_floorplan_div_nr]+"  "+cvjs_preConversionFileExtension[cvjs_active_floorplan_div_nr])			
					// 3.0.14d   - if pdf we put masterbackground on top for bitmaps 
					if (cvjs_preConversionFileExtension[cvjs_active_floorplan_div_nr].indexOf("pdf")==0){
						cvjs_dragBackgroundToFront_SVG(fplan);
					}
						
					cvjs_OnLoadEnd(fplan);        // generic method name OnLoadEnd();
					
				}catch(exception) { console.log("Please define cvjs_OnLoadEnd in your encapsulating code: "+exception); }
			}
			//cvjs_loadCurrentLoadedDrawingAsString = false;
			jQuery("#looper").hide();
			jQuery('#wait_looper_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).hide();
			cvjs_bitmapLoadFlag = false;
			// 2017-09-02  We
	//		  DoSetUpVq();
		}
		

//      NEW 2018-02-05   try to set the cross origin attribute so it can be handled in toDataUrl when printing
			cvjs_rasterImageLoaded.setAttribute('crossOrigin', 'anonymous'); 
		
	
//      HERE WE SET THE 		
//		cvjs_rasterImageLoaded.src = fileName;
			if (cvjs_bitmapFileNameIsServerPath_flag){	
				var callName = cvjs_serverHandlersPath + cvjs_serverLoadFileController + "?file=" + fileName;
				cvjs_rasterImageLoaded.src = callName;
				console.log("After calling - loading server bitmaps through php setting cvjs_rasterImageLoaded.src="+callName);
				}
			else{
				cvjs_rasterImageLoaded.src = fileName;
				console.log("After calling - loading bitmap direct from url cvjs_rasterImageLoaded.src="+fileName);
			}
		
		}
	else if (load_failures < 40)    // 40- 5  NOTE TEST PHASE ONLY!!!
		{
		load_failures++;
		jQuery("#loading").html(lTable.languages[cvjs_currentLanguage].LoadingModal.Loading);
	    setTimeout(function(){SetUpVqPngDefault(fileName, floorplan_div_Array[cvjs_active_floorplan_div_nr])},256);
    	}
    else
	    {

		load_failures = 0;
		jQuery("#looper").hide();
		jQuery('#wait_looper_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).hide();






//		var status = "Failure loading file: "+FileNamePath+FileNameNoExtension+".js";
//		jQuery('#cvjs_informationModalText').html(status);
//		jQuery('#info_messageModal').modal('show');



		var textString = "Failure loading file: "+current_FileNamePath+cvjs_FileNameNoExtension+".js";
		cvjs_displayInformationModal(floorplan_div_Array[cvjs_active_floorplan_div_nr], textString);



	    }
}


/**
 * Clear all redlines currently visible
 * @param {String} floorplan_div - div of the CADViewerJS canvas
 */
 
function cvjs_clearCurrentRedline(floorplan_div){

	// 3.0.15c   - add "_svg" to div, if called through external API
	if (floorplan_div.lastIndexOf("_svg") == floorplan_div.length-4){
			// do nothing
	}
	else{
		floorplan_div = floorplan_div + "_svg";
	}

	if (floorplan_div == undefined){
		// do nothing;
	}
	else{
		// find active floorplan number and set that
		cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(floorplan_div);	
	}



	cvjs_clearDrawingStickyNotes();

	var lockedRedFlag = false;

    for (i = 0; i < vqRedlines.length; i++) {
          if (vqRedlines[i].data("locked")) {
          	lockedRedFlag = true;
          	break;
          }
    }

	if (!lockedRedFlag){  	// there are no locked redlines so we can remove everything

		cvjs_deleteAllRedlines();
		
		for (i=0; i<vqRedlines.length; i++){
			vqRedlines[i].remove();
		}
		vqRedlines.length = 0;
	}
	else{  // there are locked redlines, so we neeed to do things differently
		// here we do something else

		//window.alert("we do things differently here");

		var maxNode = cvjs_findMaxRedlineStickyNote(); // cvjs_findMaxRedlineNode();

		//window.alert(maxNode);

		for (i=0; i<maxNode; i++){
			var redl="RED_"+(i+1);
			//window.alert(redl);
			cvjs_setUpVqRedlines_deleteNode_direct(redl);
		}
		//cvjs_deleteAllRedlines();
	}


// WE NO NOT REMOVE STICKYNOTES HERE, WE WANT THAT THROUGH STICKYNOTE INTERFACE
// WE NEED TO UPDATE THAT INTERFACE TOO, SO THAT DELETE ON LOCKED NOTES IS PREVENTED

// 2018-03-07  WE HAVE REACTIVATED, SO STICKYNOTES CAN BE DELETED

	var lockedNotesFlag = false;

    for (i = 0; i < vqStickyNotes.length; i++) {
          if (vqStickyNotes[i].data("locked")) {
          	lockedNotesFlag = true;
          }

    }

    if (!lockedNotesFlag){  	// there are no locked notes so we can remove everything

/*
		for (i=0; i<vqStickyNotes.length; i++){
			vqStickyNotes[i].remove();
		}
		cvjs_deleteAllStickyNotes();
		vqStickyNotes.length = 0;
*/

		// alternative route

		var maxNode = cvjs_findMaxRedlineStickyNote(); // cvjs_findMaxRedlineNode();

//		window.alert("no locked before stickynotes "+maxNode);

		for (i=0; i<maxNode; i++){
			var note="SNOTE_"+(i+1);
			//window.alert(note);
			cvjs_setUpStickyNotes_deleteNode_direct(note);
		}
		//cvjs_deleteAllRedlines();

	}
	else{

		var maxNode = cvjs_findMaxRedlineStickyNote(); // cvjs_findMaxRedlineNode();
//		window.alert("before stickynotes "+maxNode);
		for (i=0; i<maxNode; i++){
			var note="SNOTE_"+(i+1);
			//window.alert(note);
			cvjs_setUpStickyNotes_deleteNode_direct(note);
		}
		//cvjs_deleteAllRedlines();
	}




}


function cvjs_findMaxRedlineStickyNote(){

	var max_node = 0;
	for (var redl in vqRedlines){
		var redline_node = vqRedlines[redl].data("node");
		var c_Node = parseInt(redline_node.substring(4));  // RED_
		if (c_Node>max_node) max_node=c_Node;
	}

	var max_note = 0;
	for (var note in vqStickyNotes){
		var s_note = vqStickyNotes[note].data("node");
		var s_Note = parseInt(s_note.substring(6));  // RED_
		if (s_Note>max_note) max_note=s_Note;
	}

	var max = max_node+max_note;
	return (max);
}


function cvjs_findMaxStickyNote(){
	var max_node = 0;
	for (var redl in vqRedlines){
		redline_node = vqRedlines[redl].data("node");
		var c_Node = parseInt(redline_node.substring(4));  // RED_
		if (c_Node>max_node) max_node=c_Node;
	}
	return (max_node);
}


function cvjs_setUpVqRedlines_deleteNode_direct(delete_redline){
	var redline_node;
	for (var redl in vqRedlines){
		redline_node = vqRedlines[redl].data("node");

		//console.log(redline_node+" "+delete_redline);
		var locked = vqRedlines[redl].data("locked");
		//console.log(redline_node+" "+locked+" delete_redline "+delete_redline);

		if (locked){
			if (redline_node == delete_redline){

				//var status = lTable.languages[cvjs_currentLanguage].InfoMessageModal.RedlinesLocked+vqRedlines[redl].data("username");
				//jQuery('#cvjs_informationModalText').html(status);
				//jQuery('#info_messageModal').modal('show');
			}
		}
		else{
			if (redline_node == delete_redline){
				// we simply hide it by making it very small - remove the item when save
				//window.alert(vqRedlines[redl]);

				vqRedlines[redl].data("deleted", true);
				var dTransform = "S0.001";
				vqRedlines[redl].attr({'transform': dTransform, "opacity" : "0.01"});
			}
		}
	}
	// cvjs_setUpVqRedlines_currentNode not implemented
	//console.log("remove current redline");
}


function cvjs_setUpStickyNotes_deleteNode_direct(delete_note)
{
	var sticky_note;
	for (var note in vqStickyNotes){
		sticky_note = vqStickyNotes[note].data("node");


		//window.alert(sticky_note+" "+delete_note);


		//console.log("delete in arrary note="+note);
		if (sticky_note == delete_note){

//			window.alert(sticky_note+" lets delete");

			// we simply hide it by making it very small - remove the item when save
			vqStickyNotes[note].data("deleted", true);
			var dTransform = "S0.001";
			vqStickyNotes[note].attr({'transform': dTransform, "opacity" : "0.01"});
			hideOnlyStickyNote(note);

			// we are simply removing the object

			jQuery(vqStickyNotes[note].node).qtip('destroy');
			vqStickyNotes.splice(note, 1);
		}
	}
}





/**
 * Sets the username and password on the server where the converter has to pick up the file for conversion set to "" "" if not protected
 */

function cvjs_setOriginatingFileUsernamePassword(username, password){

	cvjs_conversion_originatingUsername[cvjs_active_floorplan_div_nr ] = username;
	cvjs_conversion_originatingPassword[cvjs_active_floorplan_div_nr ] = password;


}



/**
 * Returns the recommended conversion engine php controller for this library, use this to intialize the conversion server setup, this value gets overwritten using cvjs_Init_ConversionServer
 */

function cvjs_restApiController(){

	return (rest_php_version);

}


/**
 * Returns the recommended conversion engine php controller location for this library, use this to intialize the conversion server setup, this value gets overwritten using cvjs_Init_ConversionServer
 */

function cvjs_restApiControllerLocation(){

	return (tms_rest_api_url1);

}


/**
 * Set the engine controller location for this library,
 * @param {string} myAXlocation - location of the server side autoXchange structure
 */

function cvjs_setRestApiControllerLocation(myAXlocation){

	tms_rest_api_url1 = myAXlocation;

}


/**
 * Set the engine controller document handling conversions
 * @param {string} myConverterDoc - name of the document handling conversions
 */

function cvjs_setRestApiController(myConverterDoc){

	rest_php_version = myConverterDoc;

	if (rest_php_version.indexOf("call-Api_Conversion.php")>-1){
//		rest_converter ="AutoXchange AX2019";   // converter
// 4.1.01a
		rest_converter ="AutoXchange AX2020";   // converter
		rest_version ="V1.00";            // version
	}

 if (cvjs_debug) console.log(rest_converter+"  "+rest_php_version+"  "+myConverterDoc);

}




/**
 * Returns the recommended converter for this library
 */

function cvjs_restApiConverter(){

	return (rest_converter);

}


/**
 * Returns the minimum recommended converter version number for this library
 */

function cvjs_restApiConverterVersion(){

	return (rest_version);

}



/**
 * Set the AutoXchange converter name and version to be used for the Rest conversion call
 * @param {string} converter - converter name
 * @param {string} version - converter version
 */

function cvjs_setConverter(converter, version){

	rest_converter = converter;
	rest_version = version;

}


/**
 * Set the username and password to be used for the Rest conversion call
 * @param {string} username - username on the Rest server where AutoXchange is installed
 * @param {string} password - password on the Rest server where AutoXchange is installed
 */

function cvjs_setConverterCredentials(username, password){

	cvjs_usr = username;
	cvjs_pwd = password;

}



/**
 * Set up CADViewer JS for the call to the server side custom implementation of the API controlling conversions of DWG,DXF, and DWF files through AutoXchange
 * @param {string} rest_api_url - url of conversion rest api on server
 * @param {string} rest_api_php - url of the PHP rest controller on server
 * @param {string} username - the username of the server, "" if no username
 * @param {string} password - the password of the server, "" if no username
 */

function cvjs_Init_ConversionServer(rest_api_url, rest_api_php, username, password){

	tms_rest_api_url1 = rest_api_url;
	rest_php_version = rest_api_php;
	cvjs_usr = username;
	cvjs_pwd = password;
}




// controls for restful API
// Need to set up new updated route

var tms_rest_api_url1 = "http://onlinedemo.vizquery.com/cadviewer_3_0_1/php/"
var rest_php_version ="call-Api_Conversion.php";
var rest_action = "conversion";
//var rest_converter ="AutoXchange AX2019";   // converter
//4.1.01a
var rest_converter ="AutoXchange AX2020";   // converter
var rest_version ="V1.00";            // version

var rest_contentType = "file";
var rest_contentLocation;
var rest_contentStream;
var rest_embeddedContent;
var rest_contentFormat = "DWG";
var rest_contentUserName;
var rest_contentPassword;
var rest_userLabel = "fromCADViewerJS";
var rest_contentResponse = "stream";
var rest_parameters;

// building array
var rest_nname = [[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]]; //new Array();
var rest_vvalue = [[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]];//ew Array();

var rest_nname_custom = [[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]];//new Array();
var rest_vvalue_custom = [[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]]; //new Array();


/**
 * Set SVG conversion control parameter for server based conversion using either SVG or JS as format.
 * @param {boolean} mode - true for SVG as intermediate format false for .js as intermediate format. Default is true.
 */

function cvjs_setSVG_outputFormatInAXConversions(mode){

	cvjs_SVG_outputFormatInAXConversions = mode;
}




/**
 * Clears the custom AutoXchange conversion control parameter for server based conversion
 * @param {string} floorplan_div - name of the div on which the floorplan is places
 */

function cvjs_conversion_clearAXconversionParameters(floorplan_div){

	if (floorplan_div == undefined){
		cvjs_active_floorplan_div_nr = 0;
	}
	else{
		cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(floorplan_div);	
	}
	
	
	rest_nname[cvjs_active_floorplan_div_nr ].length = 0;
	rest_vvalue[cvjs_active_floorplan_div_nr ].length = 0;
	rest_nname[cvjs_active_floorplan_div_nr ][0] = "f";
	rest_vvalue[cvjs_active_floorplan_div_nr ][0] = "js";

	if (cvjs_SVG_outputFormatInAXConversions) rest_vvalue[cvjs_active_floorplan_div_nr ][0] = "svg";    // 2017-08-01


	rest_nname_custom[cvjs_active_floorplan_div_nr ].length = 0;
	rest_vvalue_custom[cvjs_active_floorplan_div_nr ].length = 0;
}



/**
 * Add an AutoXchange conversion control parameter for server based conversion
 * @param {string} name - conversion parameter name
 * @param {string} value- conversion parameter value, if no value set ""
 * @param {string} floorplan_div - name of the div on which the floorplan is places
 */

function cvjs_conversion_addAXconversionParameter(name, value, floorplan_div){


	if (floorplan_div == undefined){
		cvjs_active_floorplan_div_nr = 0;
	}
	else{
		cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(floorplan_div);	
	}
	

	var indexp = rest_nname_custom[cvjs_active_floorplan_div_nr ].length;

	rest_nname_custom[cvjs_active_floorplan_div_nr ][indexp] = name;
	rest_vvalue_custom[cvjs_active_floorplan_div_nr ][indexp] = value;
	//rest_nname_custom[cvjs_active_floorplan_div_nr ].length = indexp+1;

if (cvjs_debug) 	console.log("addAXConversionParameter "+rest_nname_custom[cvjs_active_floorplan_div_nr ][indexp]+" "+rest_vvalue_custom[cvjs_active_floorplan_div_nr ][indexp]+"  "+rest_nname_custom[cvjs_active_floorplan_div_nr ].length);
}



/**
 * Sets control parameter for conversion
 * @param {string} contentType - "file | embedded | stream"
 */

function cvjs_conversion_setContentType(contentType){

	rest_contentType = contentType;
}




/**
 * Sets control parameter for conversion
 * @param {string} contentFormat - "DWG | DXF| DWF | DGN    - DGN currently not implemented",
 */

function cvjs_conversion_setContentFormat(contentFormat){

	rest_contentFormat = contentFormat;
}




/**
 * Sets fileformat for file-load
 * @param {string} fileFormat - "PNG, JPG, GIF", to set bitmap,  "JS" for standard load
 */

function cvjs_fileLoad_setContentFormat(contentFormat){

	if (contentFormat == "PNG" || contentFormat == "png")
		fileLoad_contentFormat = "png";

	if (contentFormat == "JPG" || contentFormat == "jpg")
		fileLoad_contentFormat = "jpg";

	if (contentFormat == "GIF" || contentFormat == "gif")
		fileLoad_contentFormat = "gif";

	if (contentFormat == "JS" || contentFormat == "js")
		fileLoad_contentFormat = "JS";

}



/**
 * Sets control parameter for conversion
 * @param {string} userLabel - " optional label returned in the response",,
 */

function cvjs_conversion_setUserLabel(userLabel){

	rest_userLabel = userLabel;
}


/**
 * Sets control parameter for conversion
 * @param {string} userLabel - " optional label returned in the response",,
 */

function cvjs_conversion_setContentResponse(contentResponse){

	rest_contentResponse = contentResponse;
}


/**
 * Get the current type of content response
 * @return string - Returns type of content response - "file | embedded | stream"
*/


function cvjs_conversion_getContentResponse(){

	return(rest_contentResponse);
}


var cvjs_debug = false;


/**
 * Sets debug mode
 * @param {boolean} debug - true for debug traces, false otherwise
 */

function cvjs_debugMode(debug){

	cvjs_debug = debug;
}



/**
 * Sets password protection for Server Access
 * @param {boolean} passwordprotection - true for passwordprotection, false otherwise
 */

function cvjs_setPasswordProtectionServerAccess(passwordprotection){

	cvjs_passwordProtected  = debug;
}


/**
 * Sets ajax call for server access call for Servlets
 *    jQuery.ajax({
 *        url: "jsonservlet -  cvjs_setRestApiControllerLocation + cvjs_setRestApiController",
 *        type: 'POST',
 *        dataType: 'json',
 *        data: JSON.stringify(article),
 *        contentType: 'application/json',
 *        mimeType: 'application/json',
 *
 * @param {boolean} flag - true for servlets, false standard php case
 */

function cvjs_setServerAccessToServlet(flag){

	cvjs_servlet_handshake = flag;

	if (flag == true){
		cvjs_jsonp_handshake = false;
		cvjs_post_handshake = false;
	}
	else{
		cvjs_jsonp_handshake = true;
		cvjs_post_handshake = false;

	}
}




/**
 * Sets ajax call for server access call for Post
 *    jQuery.ajax({
 *        type: 'POST',
 *		  url: serverUrl,
 *        data: JSON.stringify(object),
 *
 * @param {boolean} flag - true for Post, false standard php case
 */

function cvjs_setServerAccessToPost(flag){

	cvjs_post_handshake = flag;

	if (flag == true){
		cvjs_jsonp_handshake = false;
		cvjs_servlet_handshake = false;
	}
	else{
		cvjs_jsonp_handshake = true;
		cvjs_servlet_handshake = false;
	}

}


// user name and password for restful API
var	cvjs_usr = "guest";
var cvjs_pwd = "guest";

//  var	cvjs_usr = "tms";
//  var cvjs_pwd = "restful";

var cvjs_passwordProtected = false;

var cvjs_servlet_handshake = false;
var cvjs_jsonp_handshake = true;
var cvjs_post_handshake = false;

// 3.2.01g
var contentStreamGraphics;
var contentStreamNodes;
var contentStreamData;
var contentStreamThumb;

var contentLocationGraphics;
var contentLocationNodes;
var contentLocationData;
var contentLocationThumb;




/**
 * Loads a DWG drawing into CADViewer JS, this method can only be used after intialization of CADViewer JS through the cvjs_InitCADViewerJS_ methods
 * The method connects to the TailorMade Restful API for conversion of DWG, DXF,DWF and DGN,PCF files
 * @param {string} floorplan_div - the SVG canvas object to which CADViewer JS is allocated
 * @param {string} originatingContent - the originating content, can be a http path to location, local server side path, stream link or 64 base encoded data
 * @param {string} FileNameNoExtension - file name of the drawing without extension - CADViewer JS will automatically generate naming
 * @param {string} originatingUsername - if the originating file is username/password protected , "" if no username
 * @param {string} originatingPassword - if the originating file is username/password protected , "" if no password
 */


function cvjs_LoadDrawing_Conversion(floorplan_div, originatingContent, originatingFileNameNoExtension, originatingUsername, originatingPassword){

	cvjs_checkLicensePreThenLoad(floorplan_div, originatingContent, originatingFileNameNoExtension, originatingUsername, originatingPassword);

}


function cvjs_LoadDrawing_Conversion_original(floorplan_div, originatingContent, originatingFileNameNoExtension, originatingUsername, originatingPassword){


	// if we loaded a PDF before, then we do not want to have the page-change set
//window.alert("here");
	cvjs_SVG_multiPagesFlag[cvjs_active_floorplan_div_nr] = false;

	try{
//		if (cvjs_debug) console.log("cvjs_LoadDrawing_Conversion_original "+cvjs_initMasterBackground+"  "+cvjs_rPaper[cvjs_active_floorplan_div_nr]);
		if (cvjs_debug) console.log("cvjs_LoadDrawing_Conversion_original  ");
		if (cvjs_initMasterBackground){
			//cvjs_rPaper[cvjs_active_floorplan_div_nr].selectAll("*").remove();


			//if (cvjs_debug) console.log(fileOverlay+"ÅÅÅÅÅÅ    file overlay 3"+cvjs_rPaper[cvjs_active_floorplan_div_nr]);

				// new, we clear the element  IE 11 fix  2017-12-19
				//var element = document.getElementById(floorplan_div_Array[cvjs_active_floorplan_div_nr]);
				//	element.parentNode.removeChild(element);	

			if (fileOverlay){   // we only initialize if not overlay!!!   2018-05-05
			
				if (cvjs_debug) console.log("file overlay we do nothing 3");
			}
			else{
				
				try{
				
					var myNode = document.getElementById(floorplan_div_Array[cvjs_active_floorplan_div_nr]);
					while (myNode.firstChild) {
						myNode.removeChild(myNode.firstChild);
					}

				}catch (err1){ console.log("IE11 clean: "+err1);}

				cvjs_rPaper[cvjs_active_floorplan_div_nr] = null;
				
				var svgDiv = "#"+floorplan_div_Array[cvjs_active_floorplan_div_nr];
				if (!cvjs_rPaper[cvjs_active_floorplan_div_nr])
						cvjs_rPaper[cvjs_active_floorplan_div_nr] = Snap(svgDiv);

	if (cvjs_debug) console.log("cvjs_LoadDrawing_Conversion_original: setting active floorplan "+cvjs_active_floorplan_div_nr+"  snap() ");
//	if (cvjs_debug) console.log("cvjs_LoadDrawing_Conversion_original: setting active floorplan "+cvjs_active_floorplan_div_nr+"  snap() "+svgDiv);

			}
		}
	}
	catch (err){console.log(err);};


//if (cvjs_debug) 		console.log("after remove all "+cvjs_initMasterBackground);


	jQuery('#wait_looper_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).html('<table class=\"waitlooperTable\" width=\"100\" border=\"0\" cellspacing=\"0\" border-spacing=\"0\" ><tr><td><div id=\"looper_image_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]+'\"></div></td></tr><tr><td><div class=\"wait_text_4\" id=\"wait_looper_text_id_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]+'\">'+lTable.languages[cvjs_currentLanguage].LoadingModal.Loading+'</div></td></tr></table>');
	jQuery("#wait_looper_text_id_"+floorplan_div_Array[cvjs_active_floorplan_div_nr]).html(lTable.languages[cvjs_currentLanguage].LoadingModal.Loading);

	cvjs_setLooperPosition();
	
	jQuery("#wait_looper_"+floorplan_div_Array[cvjs_active_floorplan_div_nr]).show();
	
	jQuery('#floorPlanCanvasObject_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).hide();

	// 3.3.01e
	if (printDebugFlag) jQuery('#floorPlanCanvasObject_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).show();

	
	cvjs_objectIsZoomedExtents = true;


	cvjs_loadDrawing_conversionMode = true;
	cvjs_conversion_originatingFile[cvjs_active_floorplan_div_nr ] = originatingContent;
	cvjs_conversion_originatingFileNameNoExtension[cvjs_active_floorplan_div_nr ] = originatingFileNameNoExtension;
	cvjs_conversion_originatingUsername[cvjs_active_floorplan_div_nr ] = originatingUsername;
	cvjs_conversion_originatingPassword[cvjs_active_floorplan_div_nr ] = originatingPassword;

	if (fileOverlay){
		// this is an overlay file, let us keep the content
		if (cvjs_debug) console.log("HERE WE DO NOT REMOVE THE CONTENT OF flooplan");
	
	}
	else{
		
		jQuery("#"+floorplan_div).html('');
		
	}
	
	
	floor_loaded = false;
	nodes_loaded = false;
	thumbs_loaded = false;

	VqSetup = false;



	// if there is no initialization of the parameters we use -f=js
	if (rest_nname[cvjs_active_floorplan_div_nr ].length==undefined || rest_nname[cvjs_active_floorplan_div_nr ].length==0){
		rest_nname[cvjs_active_floorplan_div_nr ][0] = "f";
		rest_vvalue[cvjs_active_floorplan_div_nr ][0] = "js";

		if (cvjs_SVG_outputFormatInAXConversions) rest_vvalue[cvjs_active_floorplan_div_nr ][0] = "svg";    // 2017-08-01
	}

	if (cvjs_compareDrawings)    // 2018-05-05
		for (var i=0; i<rest_nname[cvjs_active_floorplan_div_nr ].length; i++){
			if (rest_nname[cvjs_active_floorplan_div_nr ][i]=="f")  rest_vvalue[cvjs_active_floorplan_div_nr ][i] = "svg";   // 2018-05-06we change into SVG as format
//			if (rest_nname[cvjs_active_floorplan_div_nr ][i]=="f")  rest_vvalue[cvjs_active_floorplan_div_nr ][i] = "js";
			//console.log(rest_nname[cvjs_active_floorplan_div_nr ][i]);
		}





	// if there is no layout defined as page to view or if -basic is not defined, I want the model to be converted
	var modelflag= true;

	for (var i=0; i<rest_nname[cvjs_active_floorplan_div_nr ].length; i++){
		if (rest_nname[cvjs_active_floorplan_div_nr ][i]=="basic")  modelflag = false;
		if (rest_nname[cvjs_active_floorplan_div_nr ][i]=="layout")  modelflag = false;
		if (rest_nname[cvjs_active_floorplan_div_nr ][i]=="model")  modelflag = false;
		if (rest_nname[cvjs_active_floorplan_div_nr ][i]=="layoutsonly")  modelflag = false;
		if (rest_nname[cvjs_active_floorplan_div_nr ][i]=="lastsavedview")  modelflag = false;
		if (rest_nname[cvjs_active_floorplan_div_nr ][i]=="firstlayout")  modelflag = false;

		//console.log(rest_nname[cvjs_active_floorplan_div_nr ][i]);
	}

	if (modelflag){

		var i=rest_nname[cvjs_active_floorplan_div_nr ].length;

		if (rest_contentFormat.toLowerCase().indexOf("dwf")==0){   // for DWF, the first page in the set is found via -lastsavedview

			// if AX2015 , if AX2011
			rest_nname[cvjs_active_floorplan_div_nr ][i] = "lastsavedview";

			// if AX2017
			if (rest_converter.indexOf("AutoXchange AX2017")==0)
				rest_nname[cvjs_active_floorplan_div_nr ][i] = "firstlayout";

			if (rest_converter.indexOf("AutoXchange AX2019")==0)
				rest_nname[cvjs_active_floorplan_div_nr ][i] = "firstlayout";
//4.1.01a
			if (rest_converter.indexOf("AutoXchange AX2020")==0)
				rest_nname[cvjs_active_floorplan_div_nr ][i] = "firstlayout";

		}
		else{
			rest_nname[cvjs_active_floorplan_div_nr ][i] = "model";
		}

		rest_vvalue[cvjs_active_floorplan_div_nr ][i] = "";


		i=rest_nname[cvjs_active_floorplan_div_nr ].length;

		rest_nname[cvjs_active_floorplan_div_nr ][i] = "extents";
		rest_vvalue[cvjs_active_floorplan_div_nr ][i] = "";
	}


	// if we have a pcf file, we have to tell that we are converting a dgn file
	if (rest_contentFormat.toLowerCase().indexOf("pcf")==0){

			var i=rest_nname[cvjs_active_floorplan_div_nr ].length;
			rest_nname[cvjs_active_floorplan_div_nr ][i] = "treatas";
			rest_vvalue[cvjs_active_floorplan_div_nr ][i] = "DGN";

	}



	// if we are converting a FM object we need to set the conversion parameters to RL TL

	//console.log("open file "+cvjs_convertSpaceObject);

	if (cvjs_convertSpaceObject){
		var fm_flag = false;
		var l_len = rest_nname[cvjs_active_floorplan_div_nr ].length;
		for (var i=0; i<l_len; i++){
			if (rest_nname[cvjs_active_floorplan_div_nr ][i]=="RL"){
				rest_vvalue[cvjs_active_floorplan_div_nr ][i] = cvjs_convertRoomLayer;
				fm_flag = true;
			}
		}
		if (!fm_flag){
			rest_nname[cvjs_active_floorplan_div_nr ][l_len]= "RL";
			rest_vvalue[cvjs_active_floorplan_div_nr ][l_len] = cvjs_convertRoomLayer;

			//console.log(l_len+" "+rest_nname[cvjs_active_floorplan_div_nr ][l_len]+ " "+rest_vvalue[cvjs_active_floorplan_div_nr ][l_len]);
		}

		fm_flag = false;
		var l_len = rest_nname[cvjs_active_floorplan_div_nr ].length;
		for (var i=0; i<l_len; i++){
			if (rest_nname[cvjs_active_floorplan_div_nr ][i]=="TL"){
				rest_vvalue[cvjs_active_floorplan_div_nr ][i] = cvjs_convertTextLayer;
				fm_flag = true;
			}
		}
		if (!fm_flag){
			rest_nname[cvjs_active_floorplan_div_nr ][l_len]= "TL";
			rest_vvalue[cvjs_active_floorplan_div_nr ][l_len] = cvjs_convertTextLayer;

			//console.log(l_len+" "+rest_nname[cvjs_active_floorplan_div_nr ][l_len]+ " "+rest_vvalue[cvjs_active_floorplan_div_nr ][l_len]);

		}

		// remove off layers in conversion
		var offLayerList = "";
		var firstLayer = true;

		for (var i=0; i<layerTable[cvjs_active_floorplan_div_nr].numberOfLayers; i++){
			if (layerTable[cvjs_active_floorplan_div_nr].layers[i].status=="OFF"){
				if (firstLayer){
					offLayerList+= layerTable[cvjs_active_floorplan_div_nr].layers[i].layerName
					firstLayer = false;
				}
				else{
					offLayerList+= ";"+ layerTable[cvjs_active_floorplan_div_nr].layers[i].layerName
				}
			}
		}

		if (offLayerList.length>0){   // there is an off layer
			loff_flag = false;
			var l_len = rest_nname[cvjs_active_floorplan_div_nr ].length;
			for (var i=0; i<l_len; i++){
				if (rest_nname[cvjs_active_floorplan_div_nr ][i]=="LOFF"){
					rest_vvalue[cvjs_active_floorplan_div_nr ][i] = offLayerList;
					loff_flag = true;
				}
			}
			if (!loff_flag){
				rest_nname[cvjs_active_floorplan_div_nr ][l_len]= "LOFF";
				rest_vvalue[cvjs_active_floorplan_div_nr ][l_len] = offLayerList;


			}
		}


	}
	else{
			var l_len = rest_nname[cvjs_active_floorplan_div_nr ].length;
			for (var i=0; i<l_len; i++){
				if (rest_nname[cvjs_active_floorplan_div_nr ][i]=="RL"){
					rest_nname[cvjs_active_floorplan_div_nr ].splice(i, 1);
					rest_vvalue[cvjs_active_floorplan_div_nr ].splice(i, 1);
				}
			}

			var l_len = rest_nname[cvjs_active_floorplan_div_nr ].length;
			for (var i=0; i<l_len; i++){
				if (rest_nname[cvjs_active_floorplan_div_nr ][i]=="TL"){
					rest_nname[cvjs_active_floorplan_div_nr ].splice(i, 1);
					rest_vvalue[cvjs_active_floorplan_div_nr ].splice(i, 1);
				}
			}

	}

//console.log(rest_nname[cvjs_active_floorplan_div_nr ].length);

	// here we are adding all customs parameter  2018-08-08

//if (cvjs_debug) console.log("cvjs_LoadDrawing_Conversion_original "+rest_nname_custom[cvjs_active_floorplan_div_nr ].length)

	if (rest_nname_custom[cvjs_active_floorplan_div_nr ].length>0){

			var l_len = rest_nname[cvjs_active_floorplan_div_nr ].length;
			var c_len = rest_nname_custom[cvjs_active_floorplan_div_nr ].length;

			for (var i=0; i<c_len; i++){
				var flag = false;
				for (var j=0; j<l_len; j++){
					if (rest_nname[cvjs_active_floorplan_div_nr ][j]==rest_nname_custom[cvjs_active_floorplan_div_nr ][i])
						flag = true;
					}
				if (!flag){
					rest_nname[cvjs_active_floorplan_div_nr ][l_len] = rest_nname_custom[cvjs_active_floorplan_div_nr ][i];
					rest_vvalue[cvjs_active_floorplan_div_nr ][l_len] = rest_vvalue_custom[cvjs_active_floorplan_div_nr ][i];
					l_len++;

				}
			}


	}





//console.log(rest_nname[cvjs_active_floorplan_div_nr ][0]);

	var conv_extr_request = new Object();
	conv_extr_request.action      = "svg_js_creation";

	if (cvjs_SVG_outputFormatInAXConversions){ 
		conv_extr_request.action  = "svg_creation";  // 2017-08-01
		// if loading from SharePoint REST interface, we let the converter know
		
		if (cvjs_fileLoadingFromSharePointServer){
			conv_extr_request.action  = "svg_creation_sharepoint_REST";  // 2017-11-02

		}	
			
	}	
	
	
	if (cvjs_compareDrawings){
//		conv_extr_request.action  = "svg_js_creation";  // 2017-08-31 - we make the drawing as js, if compare

		conv_extr_request.action  = "svg_creation";  // 2018-05-05   we change to SVG creation on the server side
		
	}

	conv_extr_request.converter  = rest_converter ;
	conv_extr_request.version    = rest_version ;

	conv_extr_request.contentType  = rest_contentType;

	// 3.2.01b	
	originatingContent = originatingContent.replace(/\\/g, "/");	
	// 3.2.01b	
	if (conv_extr_request.contentType == "file"){
		if (originatingContent.indexOf("%")>0) // if %, then it is already URL encoded 
			conv_extr_request.contentLocation  = originatingContent;
		else 
			conv_extr_request.contentLocation  = encodeURIComponent(originatingContent);
			
		}
		
	// 3.2.01b	
	if (conv_extr_request.contentType == "stream"){
		if (originatingContent.indexOf("%")>0) // if %, then it is already URL encoded 
			conv_extr_request.contentStream  = originatingContent;
		else
			conv_extr_request.contentStream  = encodeURIComponent(originatingContent);			
	}

	// 3.2.01b	
	if (conv_extr_request.contentType == "embedded"){
		if (originatingContent.indexOf("%")>0) // if %, then it is already URL encoded 
			conv_extr_request.embeddedContent  = originatingContent;
		else
			conv_extr_request.embeddedContent  = encodeURIComponent(originatingContent);
			
	}

	conv_extr_request.contentFormat  = rest_contentFormat;
	conv_extr_request.contentUsername    = originatingUsername;


	if (cvjs_fileLoadingFromSharePointServer){
		conv_extr_request.contentUsername    = cvjs_sharepoint_UserName;	

	}	
	
	
	conv_extr_request.contentPassword    = originatingPassword;
	conv_extr_request.userLabel  = rest_userLabel;
	conv_extr_request.contentResponse  = rest_contentResponse;
		
	
	if (conv_extr_request.contentResponse == "stream"){
		conv_extr_request.leaveStreamOnServer  = 0;
		if (cvjs_compareDrawings) conv_extr_request.leaveStreamOnServer  = 1;
	}

	
	// 3.2.01g
	if (rest_serviceCall){
		conv_extr_request.userLabel  = rest_ServiceToken;
		conv_extr_request.applicationPlatform = rest_applicationPlatform; 
		conv_extr_request.applicationPlatformUsername = rest_applicationPlatformUsername;
		conv_extr_request.applicationPlatformUserID = rest_applicationPlatformUserID; 
		if (conv_extr_request.contentResponse == "stream")
			conv_extr_request.leaveStreamOnServer = rest_leaveStreamOnServer;
		
	}
	
	
	conv_extr_request.parameters  = new Array();


//console.log(rest_nname[cvjs_active_floorplan_div_nr ].length);

	for (var i=0; i<rest_nname[cvjs_active_floorplan_div_nr ].length; i++){

		var params = new Object

		params.paramName = rest_nname[cvjs_active_floorplan_div_nr ][i];
		params.paramValue = rest_vvalue[cvjs_active_floorplan_div_nr ][i];

		conv_extr_request.parameters[i] = params;
	}

	api_data = JSON.stringify(conv_extr_request);

	tms_rest_api_url = tms_rest_api_url1+rest_php_version;


//if (cvjs_debug) console.log(" index of"+tms_rest_api_url1.indexOf("tms-restful-api"));


	if (tms_rest_api_url1.indexOf("tms-restful-api")>-1){
		cvjs_passwordProtected = true;
		//cvjs_checkLicensePre();
		if (cvjs_isLicensed){
			cvjs_usr = "tms";
			cvjs_pwd = "restful";
		}

if (cvjs_debug) console.log(cvjs_isLicensed+" "+cvjs_usr+" "+cvjs_pwd);

	}

	var tms_rest_api_url_pw;


	if (cvjs_passwordProtected){
		var loc_1 = tms_rest_api_url.indexOf("//");
		var protocol_1 = tms_rest_api_url.substring(0,loc_1+2);
		var url_1 = tms_rest_api_url.substring(loc_1+2);
		tms_rest_api_url_pw = protocol_1+cvjs_usr+":"+cvjs_pwd+"@"+url_1;

	}else{
		tms_rest_api_url_pw = tms_rest_api_url;
	}

	
	// Encoding for Tomcat 8, xerces PHP server, we encode the json stream encodeURIComponent(api_data), previously only api_data

//if (cvjs_debug) console.log(tms_rest_api_url_pw+" in makeConversion  request="+ encodeURIComponent(api_data));
if (cvjs_debug) console.log(tms_rest_api_url_pw+" in makeConversion  request="+ encodeURIComponent(api_data)+"  non encoded request: "+api_data);

	var url_json = "";
	if (cvjs_encodeURIcall_server)
		url_json = tms_rest_api_url_pw+"?json="+encodeURIComponent(api_data);
	else
		url_json = tms_rest_api_url_pw+"?json="+api_data;


	if (cvjs_debug) console.log(" url_json:"+url_json);



	if (cvjs_jsonp_handshake){


		if (cvjs_debug) console.log("before ajax call to php ");

		
		jQuery.ajax({
			url : url_json,
       		jsonp: "tms_restful_api",
        	dataType: 'jsonp',
			success:function(Api_response)
					{
	if (cvjs_debug) console.log("jsonP Conversion success: "+Api_response);

						parseServerResponse(Api_response);

					},
			error:function(xhr, status, error)
					{

						console.log("1 jsonp getEngines error="+xhr.responseText+" status="+status+" error="+error);
					}
		});
	}


	if (cvjs_servlet_handshake){

		if (cvjs_debug) console.log("3 before ajax call to Servlet");

		var filelist_data = {};
		filelist_data['request'] = api_data;
		
		if (cvjs_debug) console.log("before ajax call to Servlet filelist_data['request'] "+ filelist_data['request']);
	
		jQuery.ajax({
			url : tms_rest_api_url_pw,
			type: 'post',
			data: filelist_data,
			success:function(Api_response)
					{
	if (cvjs_debug) console.log("Conversion success parseServerResponse: "+Api_response);
						parseServerResponse(Api_response);

					},
			error:function(data_e)
					{
						console.log("2 json getEngines error="+data_e);
					}
		});
	}


	if (cvjs_post_handshake){

	if (cvjs_debug) console.log("before ajax post call");
			// not working for cross domain

		var json_data = {};
		json_data['json_data'] = api_data;

		jQuery.ajax({
			url : tms_rest_api_url_pw,
			type: 'POST',
        	data: json_data,
			success:function(Api_response)
					{
						if (cvjs_debug) console.log("post Conversion: "+Api_response);
						parseServerResponse(Api_response);

					},
			error:function(data_e)
					{
						console.log("2 json getEngines error="+data_e);
					}
		});
	}







};

var cvjs_svgCreationContentLocation = "";
var cvjs_svgCreatedFromConversion = false;


function parseServerResponse(Api_response){

	var q = jQuery.parseJSON(Api_response);

	if (q.errorCode == "E0"){

		//console.log("Everything is fine");

	}
	else{
		// the file did not convert
		jQuery("#looper").hide();
		jQuery('#wait_looper_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).hide();
		//var status = "Server side conversion error, AutoXchange responded with errorcode: "+q.errorCode;
		//jQuery('#cvjs_informationModalText').html(status);
		//jQuery('#info_messageModal').modal('show');


		var textString = "Server side conversion error, AutoXchange responded with errorcode: "+q.errorCode;
		cvjs_displayInformationModal(floorplan_div_Array[cvjs_active_floorplan_div_nr], textString);


		return;
	}

	// 2017-08-01  separation between js response and svg response file

	// standard JS response and handling
	if (q.completedAction=="svg_js_creation"){

		if (rest_contentResponse == "stream"){

			contentStreamGraphics = q.contentStreamGraphics;
			contentStreamNodes = q.contentStreamNodes;
			contentStreamData = q.contentStreamData;
			contentStreamThumb = q.contentStreamThumb;


			// 2017-09-01 : If we are loading a compare drawing we need to tell it is a js file
			if (cvjs_drawingLoadCounter == 1)
					cvjs_compareDrawingsFirstDrawing = contentStreamData;

			if (current_js_initialized == 1){
				replacejscssfile(current_jsFloorNames, contentStreamData, "js");

			if (!cvjs_FourFilesInOne){
				replacejscssfile(current_jsNodesFloorNames, contentStreamNodes, "js");
				replacejscssfile(current_jsThumbFloorNames, contentStreamThumb, "js");
				replacejscssfile(current_jsFullFloorNames, contentStreamGraphics, "js");
			}

			}
			else{
				current_js_initialized = 1;
				loadJSbase(contentStreamData);
				if (!cvjs_FourFilesInOne){
					loadJSbase(contentStreamNodes);
					loadJSbase(contentStreamThumb);
					loadJSbase(contentStreamGraphics);
				}

			}
			current_jsFloorNames =  contentStreamData;
			if (!cvjs_FourFilesInOne){
				current_jsNodesFloorNames = contentStreamNodes;
				current_jsThumbFloorNames = contentStreamThumb;
				current_jsFullFloorNames =  contentStreamGraphics;
			}
			rebuild_drop_spaces =1;  // make sure drop spaces are regenerated in spaces menu

		}
		else{
				if (rest_contentResponse == "file"){

					contentLocationGraphics = q.contentLocationGraphics;
					contentLocationNodes = q.contentLocationNodes;
					contentLocationData = q.contentLocationData;
					contentLocationThumb = q.contentLocationThumb;

					// we want the path to the files location on server
					cvjs_loaddrawing_FileNamePath[cvjs_active_floorplan_div_nr ] = q.contentLocationGraphics.substring(0,(q.contentLocationGraphics.lastIndexOf("/")+1));


					// 2017-09-01 : If we are loading a compare drawing we need to tell it is a js file
					if (cvjs_drawingLoadCounter == 1)
							cvjs_compareDrawingsFirstDrawing = contentLocationData;



	//console.log("loading file 2 "+cvjs_FourFilesInOne +"  "+q.contentLocationData);

					if (current_js_initialized == 1){
						replacejscssfile(current_jsFloorNames, contentLocationData, "js");

						if (!cvjs_FourFilesInOne){
							replacejscssfile(current_jsNodesFloorNames, contentLocationNodes, "js");
							replacejscssfile(current_jsThumbFloorNames, contentLocationThumb, "js");
							replacejscssfile(current_jsFullFloorNames, contentLocationGraphics, "js");
						}
					}
					else{
						current_js_initialized = 1;
						loadJSbase(contentLocationData);

						if (!cvjs_FourFilesInOne){
							loadJSbase(contentLocationNodes);
							loadJSbase(contentLocationThumb);
							loadJSbase(contentLocationGraphics);
						}
					}

					current_jsFloorNames =  contentLocationData;

					if (!cvjs_FourFilesInOne){
						current_jsNodesFloorNames = contentLocationNodes;
						current_jsThumbFloorNames = contentLocationThumb;
						current_jsFullFloorNames =  contentLocationGraphics;
					}
					rebuild_drop_spaces =1;  // make sure drop spaces are regenerated in spaces menu


				}else{

					if (cvjs_debug) console.log("currently contentStream and contentLocation are implemented!! embedded to follow...");

				}
		}
	}

	// loading an SVG from the server
	if (q.completedAction=="svg_creation_sharepoint_REST"){

				cvjs_svgCreationContentLocation = q.contentLocation;
				cvjs_svgCreatedFromConversion = true;

				if (rest_contentResponse == "stream"){

if (cvjs_debug) 					console.log(" svg_creation_sharepoint_REST 1 svg server response " +q.contentStream);

					cvjs_LoadDrawing(floorplan_div_Array[cvjs_active_floorplan_div_nr], q.contentStream, undefined, true);

				}
				else{
						if (rest_contentResponse == "file"){

if (cvjs_debug) 								console.log("svg_creation_sharepoint_REST 2 here we parse an svg server response " +q.contentLocation);

								cvjs_LoadDrawing(floorplan_div_Array[cvjs_active_floorplan_div_nr], q.contentLocation, undefined, true);

						}else{

							if (cvjs_debug) console.log("currently contentStream and contentLocation are implemented!! embedded to follow...");

						}
				}

	}
				
				
	if (q.completedAction=="svg_creation"){

				cvjs_svgCreationContentLocation = q.contentLocation;
				cvjs_svgCreatedFromConversion = true;

				if (rest_contentResponse == "stream"){

if (cvjs_debug) 					console.log(" 1 REST parse svg server response " +q.contentStreamData+" "+q.contentLocation);  // we add the callback case

					contentStreamData = q.contentStreamData; // 3.2.01g

					cvjs_LoadDrawing(floorplan_div_Array[cvjs_active_floorplan_div_nr], q.contentStreamData, undefined, true);

				}
				else{
						if (rest_contentResponse == "file"){

if (cvjs_debug) 								console.log("2 REST parse svg server response " +q.contentLocationData+" "+q.contentLocation);  // we add the callback case

							    contentLocationData = q.contentLocationData; // 3.2.01g

								cvjs_LoadDrawing(floorplan_div_Array[cvjs_active_floorplan_div_nr], q.contentLocationData, undefined, true);

						}else{

							if (cvjs_debug) console.log("currently contentStream and contentLocation are implemented!! embedded to follow...");

						}
				}

	}

}





function createjscssfile(filename, filetype){
	if (filetype=="js"){ //if filename is a external JavaScript file
		var fileref=document.createElement('script');
		fileref.setAttribute("type","text/javascript");
		fileref.setAttribute("src", filename);
	}
	else if (filetype=="css"){ //if filename is an external CSS file
		var fileref=document.createElement("link");
		fileref.setAttribute("rel", "stylesheet");
		fileref.setAttribute("type", "text/css");
		fileref.setAttribute("href", filename);
	}
	
	// 3.1.21k    
	if (cvjs_buildFolderTree_crossDomain){
		filename = filename.substring(0, filename.indexOf("?dummy"));
		fileref.src = cvjs_serverHandlersPath+cvjs_serverLoadFileController+"?file="+filename;			
	}
	
	return fileref;
}


var cvjs_currentLoadedDrawingAsString = "";
var cvjs_loadCurrentLoadedDrawingAsString = false;


function replacejscssfile(oldfilename, newfilename, filetype){


	if (!cvjs_initMasterBackground && (filetype=="js")){
		// we do not clear the master background, lets load in the one on top

if (cvjs_debug) 		console.log("load base");

		loadJSbase(newfilename);
		return;
	}

if (cvjs_debug) 	console.log("replacejscssfile "+oldfilename+"  "+newfilename+"  "+filetype);

	try{

		var targetelement=(filetype=="js")? "script" : (filetype=="css")? "link" : "none" ; //determine element type to create nodelist using
		var targetattr=(filetype=="js")? "src" : (filetype=="css")? "href" : "none" ; //determine corresponding attribute to test for
		var allsuspects=document.getElementsByTagName(targetelement);

		
	// 3.1.21k    
	if (cvjs_buildFolderTree_crossDomain){
		//newfilename = newfilename.substring(0, newfilename.indexOf("?dummy"));
		newfilename = cvjs_serverHandlersPath+cvjs_serverLoadFileController+"?file="+newfilename;			
	}
//window.alert("25421 "+newfilename);		

	
		
		for (var i=allsuspects.length; i>=0; i--){ //search backwards within nodelist for matching elements to remove
				//console.log(" i "+" "+i+" "+allsuspects[i]);
			if (allsuspects[i] && allsuspects[i].getAttribute(targetattr)!=null && allsuspects[i].getAttribute(targetattr).indexOf(oldfilename)!=-1){

				if (cvjs_debug) console.log(" i "+" "+i+" "+allsuspects[i].getAttribute(targetattr));

				if (!cvjs_loadMultipleRedlinesStickyNotes && !cvjs_collab_mode) {
						cvjs_clearCurrentRedline(floorplan_div_Array[cvjs_active_floorplan_div_nr]);   // clear if not loading multiple redlines  and not in collab
				}else{
					// cvjs_loadMultipleRedlinesStickyNotes = true;                 cvjs_collab_mode = false;
				}
				
if (cvjs_debug) 	console.log("replacejscssfile  create new element "+newfilename+" old "+oldfilename);					
				
				var newelement="";
				
				if (filetype=="js"){
					newelement=createjscssfile(newfilename+"?dummy="+Math.random(), filetype);
				}
				else{
					newelement=createjscssfile(newfilename, filetype);
				}
					
				allsuspects[i].parentNode.replaceChild(newelement, allsuspects[i]);

if (cvjs_debug) 	console.log("replacejscssfile  replace child");					
				
				
				// if (cvjs_collab_mode) 	jQuery("#wait_looper_"+floorplan_div_Array[cvjs_active_floorplan_div_nr]).fadeOut(500);   // tell we have updated the redline

			// now the .js file ls loaded
			js_loaded_flag = 1;

			}
		}
	}
	catch(err){
		console.log(err);
	}

	// IF CAFM - we are loading the entire structure up as a string and pasting that into the publish folder result

	if (cvjs_loadCurrentLoadedDrawingAsString){

		var saveSettingsUrl = cvjs_serverHandlersPath + cvjs_serverLoadFileController; //					var saveSettingsUrl = settings_data_url+'save-file-p1.php';
		var settings_data_location = newfilename;
		var settings_data = {};
		settings_data['file'] = settings_data_location;
		//console.log(" "+settings_data['file']);
		jQuery.ajax({
		  url:saveSettingsUrl,
		  type: 'post',
		  data: settings_data,
		  success: function(html){

				cvjs_currentLoadedDrawingAsString = html;
				//console.log(cvjs_currentLoadedDrawingAsString);

		  }  // end success

		});
	}






}

function loadJSbase(file) {


//console.log("loadJSbase "+file);

//window.alert("loadJSbase");

	/*
	jQuery.getScript(file, function(){
	   alert("Script loaded and executed. "+file);
	  // here you can use anything you defined in the loaded script

	 });
	*/

		
	if (cvjs_debug) console.log("loadJSbase "+file);

	try{
		// DOM: Create the script element
		var jsElm = document.createElement("script");
		// set the type attribute
		jsElm.type = "application/javascript";
		// make the script element load file
		jsElm.src = file + "?dummy="+Math.random();
		// finally insert the element to the body element in order to load the script

		
		// 3.1.21j    
		// we strip off the ?dummy= and then we simply enclose the path into the load file controller
		if (cvjs_buildFolderTree_crossDomain)
			jsElm.src = cvjs_serverHandlersPath+cvjs_serverLoadFileController+"?file="+file;
	
		document.body.appendChild(jsElm);

		// if (cvjs_collab_mode) 	jQuery("#wait_looper_"+floorplan_div_Array[cvjs_active_floorplan_div_nr]).fadeOut(500);   // tell we have updated the redline

	//console.log("joadJSbase="+jsElm);
	}
	catch(err){
		console.log(err);
	}

	//*/


	if (cvjs_loadCurrentLoadedDrawingAsString){

		var saveSettingsUrl = cvjs_serverHandlersPath + cvjs_serverLoadFileController; //					var saveSettingsUrl = settings_data_url+'save-file-p1.php';
		var settings_data_location = file;
		var settings_data = {};
		settings_data['file'] = settings_data_location;
if (cvjs_debug) 		console.log(" "+settings_data['file']);
		jQuery.ajax({
		  url:saveSettingsUrl,
		  type: 'post',
		  data: settings_data,
		  success: function(html){

				cvjs_currentLoadedDrawingAsString = html;
				// console.log(cvjs_currentLoadedDrawingAsString);

		  }  // end success

		});
	}


}


var SVGloadFile = "";
var SVGloadFlag = false;

/**
 * Loads a SVG drawing into CADViewer JS, this method can only be used after intialization of CADViewer JS through the cvjs_InitCADViewerJS_ methods
 * @param {string} floorplan_div - the SVG canvas object to which CADViewer JS is allocated
 * @param {string} FileNamePath - the filepath to the location of the SVG drawing files to load in, the path is either absolute or relative to the document in which CADViewer JS is invoked
 * @param {string} FileName - file name of the SVG drawing
 * @param {string} ScriptPath - relative location of the javascript folder from the calling document
 */

function cvjs_LoadDrawing_SVG(floorplan_div, FileNamePath, FileName, ScriptPath){

	jQuery('#floorPlanCanvasObject_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).hide();

	// 3.3.01e
	if (printDebugFlag) jQuery('#floorPlanCanvasObject_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).show();

	
	SVGloadFile = FileNamePath+FileName;
	SVGloadFlag = true;


//console.log("before load drawing with init");

	// we load the init file in script directory, then we overlay that with the svg file
	cvjs_LoadDrawing(floorplan_div, ScriptPath, "init");
 }


var _label;
var Header1;
var BackgroundColor = "#FFF";
var rDrawing;

function setView(paper, x, y, wid, hgt)
{
	// CH
	//x = Math.min(cvjs_rPaper[cvjs_active_floorplan_div_nr].width-viewBoxWidth[cvjs_active_floorplan_div_nr], x);
	//viewBox[cvjs_active_floorplan_div_nr].X = Math.max(0, x);
	//y = Math.min(cvjs_rPaper[cvjs_active_floorplan_div_nr].height-viewBoxHeight[cvjs_active_floorplan_div_nr], y);
	//viewBox[cvjs_active_floorplan_div_nr].Y = Math.max(0, y);

	// CH - we allow zoom and pan outside border of drawing
	viewBox[cvjs_active_floorplan_div_nr].X = x;
	viewBox[cvjs_active_floorplan_div_nr].Y = y;
	//return paper.setViewBox(viewBox[cvjs_active_floorplan_div_nr].X, viewBox[cvjs_active_floorplan_div_nr].Y, wid, hgt);  CH - no good with an empty return

//NNN console.log("setView before paper..."+viewBox[cvjs_active_floorplan_div_nr].X+" "+viewBox[cvjs_active_floorplan_div_nr].Y+" "+wid+"  "+hgt);
//Snap 	paper.setViewBox(viewBox[cvjs_active_floorplan_div_nr].X, viewBox[cvjs_active_floorplan_div_nr].Y, wid, hgt);

	var attr_2 = "{\"viewBox\" : \""+viewBox[cvjs_active_floorplan_div_nr].X+" "+viewBox[cvjs_active_floorplan_div_nr].Y+" "+wid+" "+hgt+"\" }";
	var json_obj = jQuery.parseJSON(attr_2);
	cvjs_rPaper[cvjs_active_floorplan_div_nr].attr(json_obj);


}

var bbox;

function ResizeVq(wid,hgt)
{

	try{

    viewBoxWidth[cvjs_active_floorplan_div_nr] = wid;
	viewBoxHeight[cvjs_active_floorplan_div_nr] = hgt;

// 2014-12-11
//    cvjs_rPaper[cvjs_active_floorplan_div_nr].setSize(wid, hgt);

	rpWidth[cvjs_active_floorplan_div_nr] = actualURX[cvjs_active_floorplan_div_nr] - actualLLX[cvjs_active_floorplan_div_nr];
	rpHeight[cvjs_active_floorplan_div_nr] = actualURY[cvjs_active_floorplan_div_nr] - actualLLY[cvjs_active_floorplan_div_nr];
    rpX = actualLLX[cvjs_active_floorplan_div_nr];
	rpY = actualLLY[cvjs_active_floorplan_div_nr];

//console.log("actualURX[cvjs_active_floorplan_div_nr]="+actualURX[cvjs_active_floorplan_div_nr]+" actualLLX[cvjs_active_floorplan_div_nr]="+actualLLX[cvjs_active_floorplan_div_nr]);
//console.log("actualURY[cvjs_active_floorplan_div_nr]="+actualURY[cvjs_active_floorplan_div_nr]+" actualLLY[cvjs_active_floorplan_div_nr]="+actualLLY[cvjs_active_floorplan_div_nr]);
//console.log("rpWidth[cvjs_active_floorplan_div_nr]="+rpWidth[cvjs_active_floorplan_div_nr]+" viewBoxWidth[cvjs_active_floorplan_div_nr]="+viewBoxWidth[cvjs_active_floorplan_div_nr]);


	var xfactor = rpWidth[cvjs_active_floorplan_div_nr] / viewBoxWidth[cvjs_active_floorplan_div_nr];
    var yfactor = rpHeight[cvjs_active_floorplan_div_nr] / viewBoxHeight[cvjs_active_floorplan_div_nr];

//console.log("xfactor="+xfactor+" yfactor="+yfactor);

    if (xfactor > yfactor)
        zoomScale = yfactor;
    else
        zoomScale = xfactor;

//    zoomScale = 1.;

	//setView(cvjs_rPaper[cvjs_active_floorplan_div_nr], rpX, rpY, rpWidth[cvjs_active_floorplan_div_nr], rpHeight[cvjs_active_floorplan_div_nr]);
//NNN    cvjs_rPaper[cvjs_active_floorplan_div_nr].setViewBox(rpX, rpY, rpWidth[cvjs_active_floorplan_div_nr], rpHeight[cvjs_active_floorplan_div_nr]);

//console.log("xx5 zoomScale "+zoomScale);


    	var attr_2 = "{\"viewBox\" : \""+rpX+" "+rpY+" "+rpWidth[cvjs_active_floorplan_div_nr]+" "+rpHeight[cvjs_active_floorplan_div_nr]+"\" }";

//console.log("x5 attr_2="+attr_2);

    	var json_obj = jQuery.parseJSON(attr_2);
    	cvjs_rPaper[cvjs_active_floorplan_div_nr].attr(json_obj);

	viewBox[cvjs_active_floorplan_div_nr].X = rpX;
	viewBox[cvjs_active_floorplan_div_nr].Y = rpY;
    viewBoxWidth[cvjs_active_floorplan_div_nr] = rpWidth[cvjs_active_floorplan_div_nr];
	viewBoxHeight[cvjs_active_floorplan_div_nr] = rpHeight[cvjs_active_floorplan_div_nr];

//if (cvjs_debug) console.log("ResizeVq: viewBox[cvjs_active_floorplan_div_nr].X="+viewBox[cvjs_active_floorplan_div_nr].X+" viewBox[cvjs_active_floorplan_div_nr].Y="+viewBox[cvjs_active_floorplan_div_nr].X+" viewBoxWidth[cvjs_active_floorplan_div_nr]="+viewBoxWidth[cvjs_active_floorplan_div_nr]+" viewBoxHeight[cvjs_active_floorplan_div_nr]="+viewBoxHeight[cvjs_active_floorplan_div_nr]+" zoomScale="+zoomScale);

	vBHo = viewBoxHeight[cvjs_active_floorplan_div_nr];
	vBWo = viewBoxWidth[cvjs_active_floorplan_div_nr];

	}catch(err){}

}


var thumb_loaded = false;
var load_failures = 0;


var SVGloadedFragment = "";
var SVGfragmentIsLoaded = false;


function SetUpVq(maj,min, floorplan_div)
{


	if (cvjs_debug) console.log("In SetUpVq: cvjs_bitmapLoadFlag="+cvjs_bitmapLoadFlag+" floor: "+floor_loaded+" nodes: "+nodes_loaded+" thumb: "+thumbs_loaded);

	// if we are loading bitmaps we do not want init.js setupvq to take over!
	if (cvjs_bitmapLoadFlag) return;
	
	
//console.log("SetUpVq init floor_loaded="+floor_loaded+" nodes_loaded="+nodes_loaded+" load_failures="+load_failures);


	if ((floor_loaded) && (nodes_loaded) && (thumbs_loaded))
		{
		load_failures = 0;
		thumb_loaded = false;

//console.log(" floor_loaded + nodes_loaded + thumbs_loaded all true ");
		// new: if we also have to load a SVG file on top of init file, we need to do that



		if (SVGloadFlag){

			// 2017-08-01, removing this part till we are regenerating canvas, so we know if we have to regen stuff from <metadata> section
			//SVGloadFlag = false;
						
			if (floorplan_div == undefined){
				for (var i=0; i<floorplan_div_Array.length; i++){
					if (floorplan_div_Array_current_Drawing[i] == SVGloadFile){
						floorplan_div = floorplan_div_Array[i];
					}
				}
			}
				
if (cvjs_debug) console.log("ZX5 Loading SVG "+SVGloadFile+" "+SVGfragmentIsLoaded+"  floorplan_div "+floorplan_div+" cvjs_active_floorplan_div_nr "+cvjs_active_floorplan_div_nr);
	
			
			if (!SVGfragmentIsLoaded){
					SVGfragmentIsLoaded = true;



					
if (cvjs_debug) 	console.log("Snap.load SVG SVGfragmentIsLoaded  "+SVGfragmentIsLoaded+" SVG load file="+SVGloadFile);

					try{

					var tux = Snap.load(SVGloadFile, function ( loadedFragment ) {
							SVGloadedFragment = loadedFragment;
if (cvjs_debug) 	console.log("before DoSetUpVq, SVGfragmentIsLoaded "+SVGfragmentIsLoaded+" loadedFragment "+loadedFragment);
	//                      removing this on 2017-08-04, it seems that SVG load is called twice with this
							VqSetup = false;  // make sure DoSetUpVq is run again
if (cvjs_debug)							console.log("Snap.load before DoSetUpVq "+VqSetup);
							DoSetUpVq(floorplan_div);
							} );			
					}
					catch (err){
						console.log("Err 1: "+err);
					}
			
			}
		}
		else{   // standard setup of -full, -nodes , .js
if (cvjs_debug) 			console.log("Standard .js load of DoSetUpVq");
			DoSetUpVq(floorplan_div);
		}


		}
	else if (load_failures < 80)    // 40- 5  NOTE TEST PHASE ONLY!!!
		{
		load_failures++;
		jQuery("#loading").html(lTable.languages[cvjs_currentLanguage].LoadingModal.Loading);
//console.log("2x");
	    setTimeout(function(){SetUpVq(maj,min, floorplan_div)},256);
    	}
    else
	    {
//if (cvjs_debug) console.log("3x load_failures="+load_failures);
		load_failures = 0;
//		jQuery("#loading").html("Failure to load drawing");
		jQuery("#loading").html("Failure to load drawing, floor: "+floor_loaded+" ,nodes: "+nodes_loaded);

		jQuery("#looper").hide();
		jQuery("#waitpane").show();
//console.log("4x");
	    setTimeout(function(){jQuery("#waitpane").hide();jQuery("#looper").show();},5120);
	    }
}




var cvjs_addSVGClickHandler = false;


/**
 * Set the clickhandler mode for SVG on load. The default is false
 * All SVG objects with an 'id' implemented will be associated with a clickhandler
 * The method will call a number of user implemented call-back methods:
 * cvjs_SVGfileObjectClicked(id, x, y) : callback for click on an object, this method is user implemented
 * cvjs_SVGfileObjectMouseEnter(id, x, y) : callback for mouse entering an object, this method is user implemented
 * cvjs_SVGfileObjectMouseLeave(id, x, y) : callback for mouse leaving an object, this method is user implemented
 * cvjs_SVGfileObjectMouseMove(id, x, y) : callback for mouse move on an object, this method is user implemented
 * @param {boolean} mode - true: click handlers are added to objects on load, false: no handers added on load
 */

function cvjs_addSVGClickHandler_onLoad(mode){

	cvjs_addSVGClickHandler = mode;
}






var mousedown_SVGCanvas = function() {
	if (cvjs_debug) console.log("SVG we have clicked "+jQuery(this).attr('id'));
}


var page_change_modal_offset_flag = [true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true];



var cvjs_SVGGroup = new Array();
var cvjs_svgviewBox;
var cvjs_svgHeight;
var cvjs_svgwidth;
var cvjs_svgScaleTrans;

var	cvjs_svgTransX;
var	cvjs_svgTransY;
var	cvjs_svgScale;


var cvjs_svgWidthHeight100percent = false;


function DoSetUpVq(floorplan_div)
	{

	
	if (cvjs_debug) console.log("DoSetUpVq ");	
	
	
	// this method is being called twice.. ?
	if (VqSetup) {if (cvjs_debug) console.log("returning DoSetUpVq()"); return;}
	else VqSetup = true;


	cvjs_svgviewBox ="";
	cvjs_svgHeight ="";
	cvjs_svgwidth ="";
	cvjs_svgScaleTrans ="";

	cvjs_svgTransX ="";
	cvjs_svgTransY ="";
	cvjs_svgScale ="";
	cvjs_svgWidthHeight100percent = false;


	DefaultZoomFactor = 1.1;

    hgt = jQuery(window).height() - (jQuery("#logorow").height() + jQuery("#navrow").height()+20);
    wid = jQuery(window).width() - 128;

	var svgDiv = "#"+floorplan_div;  // floorPlan_div
//	jQuery(svgDiv).empty();


	// 2017-12-08
	if (floorplan_div == undefined){
			// we are loading from a .js file probably?
//if (cvjs_debug) console.log("QQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQ");				
		floorplan_div = floorplan_div_Array[cvjs_active_floorplan_div_nr];
	}	
if (cvjs_debug) console.log("2 DoSetUpVq" + floorplan_div);

	// 2017-12-08

	// 	set the active rPaper floorplan number to correspond to floorplan_div
	cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(floorplan_div)

	
//try{ if (cvjs_debug) console.log("   "+vqRooms[0].length);} catch(err) {console.log(err);}			
	
	
	
	// initialize only if undefined
	
	
	if (fileOverlay){   // we only initialize if not overlay!!!   2018-05-05
	
		if (cvjs_debug) console.log("file overlay we do nothing");
	}
	else{
		cvjs_rPaper[cvjs_active_floorplan_div_nr] = null;
		svgDiv = "#"+floorplan_div;
	
		if (!cvjs_rPaper[cvjs_active_floorplan_div_nr])
			cvjs_rPaper[cvjs_active_floorplan_div_nr] = Snap(svgDiv);

	}
	

	 if (SVGloadFlag && !SVGfragmentIsLoaded) {if (cvjs_debug) console.log("we are loading SVG but the fragment is False, therefore return");  return;}


	if (SVGfragmentIsLoaded){
		SVGfragmentIsLoaded = false;

		try{
//if (cvjs_debug) 			console.log("B remove all "+cvjs_initMasterBackground)

			if (cvjs_initMasterBackground){
				//cvjs_rPaper[cvjs_active_floorplan_div_nr].selectAll("*").remove();
//if (cvjs_debug) console.log("blocked cvjs_rPaper[cvjs_active_floorplan_div_nr] select all ");


			// new, we clear the element  IE 11 fix  2017-12-19
			//var element = document.getElementById(floorplan_div_Array[cvjs_active_floorplan_div_nr]);
			//	element.parentNode.removeChild(element);			


//try{ if (cvjs_debug) console.log("before remove "+vqRooms[0].length);} catch(err) {console.log(err);}			


			if (fileOverlay){   // we only initialize if not overlay!!!   2018-05-05
	
				if (cvjs_debug) console.log("file overlay we do nothing 2");
			}
			else{


				var myNode = document.getElementById(floorplan_div_Array[cvjs_active_floorplan_div_nr]);
				while (myNode.firstChild) {
					myNode.removeChild(myNode.firstChild);
				}

				cvjs_rPaper[cvjs_active_floorplan_div_nr] = null;


	//			cvjs_rPaper[cvjs_active_floorplan_div_nr] = null;
				if (!cvjs_rPaper[cvjs_active_floorplan_div_nr])
						cvjs_rPaper[cvjs_active_floorplan_div_nr] = Snap(svgDiv);

				}


				
			}

			
						
				
//try{if (cvjs_debug) console.log("after remove "+vqRooms[0].length);} catch(err) {console.log(err);}			
			
			
			cvjs_svgWidthHeight100percent = false;

			hgt = jQuery(svgDiv).height();
			wid = jQuery(svgDiv).width();

			// 	2017-01-19: Setting this value high is OK, it adjusts itself from the cvjs_rPaper[cvjs_active_floorplan_div_nr].getBBox below.
			hgt = 10000; //3500;
			wid = 10000; // 3500;
	// 		2017-01-19:  The SVG from AX has viewbox larger than the JS canvas size in pixels therefore hgt,wid does clipping on the svg file
	//                   now testing to set the cvjs_rPaper[cvjs_active_floorplan_div_nr].svg() without setting the actual size of the svg sub element.
	//                   Without a physical setting of wid and hgt, dragging will not work.

		

if (cvjs_debug) console.log("before adding SVG with or without _secondfile ");		
			
			cvjs_SVGGroup[cvjs_active_floorplan_div_nr] = cvjs_rPaper[cvjs_active_floorplan_div_nr].group();
			
			if (fileOverlay){  // we put the second floorplan on its own main_master_
				cvjs_SVGGroup[cvjs_active_floorplan_div_nr].attr({id: "main_master_"+floorplan_div_Array[cvjs_active_floorplan_div_nr]+"_secondfile"});				
			}
			else{				
				cvjs_SVGGroup[cvjs_active_floorplan_div_nr].attr({id: "main_master_"+floorplan_div_Array[cvjs_active_floorplan_div_nr]});				
			}
			var myGroup = cvjs_SVGGroup[cvjs_active_floorplan_div_nr].svg(0,0, wid, hgt, 0,0, wid, hgt); 
			myGroup.add(SVGloadedFragment);
			cvjs_SVGGroup[cvjs_active_floorplan_div_nr].add(myGroup);
			
						
			
			
			
//if (cvjs_debug)	console.log("cvjs_SVGGroup:  "+cvjs_SVGGroup.toString());

			var pString_org = cvjs_rPaper[cvjs_active_floorplan_div_nr].toString();

//if (cvjs_debug)	console.log("SVG FFIRST  "+pString_org.substring(0,400));

			// for SVG/SVGZ files, determine text search location and overlay object location
			var pString = pString_org;

/*
			// 2017-08-04

			var start_index = pString.indexOf("viewBox");
			var SVGEndIndex = 0;
			var SVGStartIndex = 0;
			if (start_index>-1){
				SVGEndIndex = pString.indexOf('>', start_index);
				SVGStartIndex = pString.lastIndexOf("<svg");
				pString_org = pString.substring(SVGStartIndex, SVGEndIndex);
				pString = pString_org;
			}
*/

			// 2017-08-28
			// find the second SVG elememt, use the Viewbox from that
			var start_index = pString.indexOf("<svg");
			var SVGEndIndex = 0;
			var SVGStartIndex = 0;

			//console.log("first svg"+start_index);
			if (start_index>-1){

				SVGEndIndex = pString.indexOf('<svg', start_index+4);
				//console.log( SVGEndIndex);

				// first SVG statement
				var firstSVGDefinition = pString.substring(0, SVGEndIndex);

				// pString after the first SVG is cut out
				pString= pString.substring(SVGEndIndex);


if (cvjs_debug)	console.log("pString after first svg is cut out: "+pString.substring(0,400));

				// is there a 3rd svg declaration?

				var pString_tmp = pString.substring(4);

				SVGStartIndex = pString_tmp.indexOf('<svg');

				if (SVGStartIndex>-1){
					//console.log("WE HAVE A 3RD SVG");

					SVGEndIndex = pString.indexOf('<svg', SVGStartIndex+4);
					//console.log( SVGEndIndex);

					// pString after the third SVG is cut
					pString= pString.substring(SVGEndIndex);

					//console.log("pString after second svg is cut out: "+pString.substring(0,400));



				}
				else{
					//console.log("WE DO NOT HAVE THAT, ONLY 2 SVG STATEMENTS");
				}

			}

			pString_org = pString;

if (cvjs_debug)	console.log("After viewBox search "+pString_org.substring(0,100));

			if (pString.indexOf("viewBox")>0){
				// we have the right viewbox
				//pString = pString.substring(pString.indexOf("viewBox")+9);
				pString = pString.substring(pString.indexOf("viewBox")+9);
				pString = pString.substring(0, pString.indexOf("\""));
				var values = pString.split(" ");
//				console.log("SVG after Split "+values.length+" "+values[0]+" "+values[1]+" "+values[2]+" "+values[3]);
			}

			pString = pString_org;

			if (pString.indexOf("width=")>0){

				// 2017-08-04  we have hashed out the proper svg definition
	//			pString = pString.substring(pString.indexOf("viewBox")+9);
	//			pString = pString.substring(pString.indexOf("viewBox")+9);


	//			console.log("lastindex viewBox:"+pString);
				pString = pString.substring(pString.indexOf("width=")+7);
	//			console.log("first width"+pString);
				pString = pString.substring(0, pString.indexOf("\""));
	//			console.log("width "+pString);
				cvjs_svgWidth= Number(pString);
			}

			if (pString.indexOf("100%")==0){

	//			console.log("we have 100% here!");
				cvjs_svgWidthHeight100percent = true;
				cvjs_svgWidth = cvjs_svgviewBox[2];
			}

			pString = pString_org;

			if (pString.indexOf("height=")>0){
//				pString = pString.substring(pString.indexOf("viewBox")+9);   // 2017-08-20
//				pString = pString.substring(pString.indexOf("viewBox")+9);

				pString = pString.substring(pString.indexOf("height=")+8);
				pString = pString.substring(0, pString.indexOf("\""));
	//			console.log("height "+pString);
				cvjs_svgHeight= Number(pString);

			}

			if (pString.indexOf("100%")==0){
	//			console.log("we have 100% here!");

				cvjs_svgHeight = cvjs_svgviewBox[3];
				cvjs_svgWidthHeight100percent = true;
			}


//if (cvjs_debug)	console.log("cvjs_svgHeight="+cvjs_svgHeight+"  cvjs_svgWidth="+cvjs_svgWidth+" active floorplan "+cvjs_active_floorplan_div_nr);

			try{
				cvjs_svgviewBox = values.map(Number);
				
				if (cvjs_debug) console.log(cvjs_svgviewBox[0]+" cvjs_active_floorplan_div_nr "+cvjs_active_floorplan_div_nr+" "+actualLLX[cvjs_active_floorplan_div_nr] );
				
				if (cvjs_svgviewBox[2]!=cvjs_svgWidth || cvjs_svgviewBox[3]!=cvjs_svgHeight){

					actualLLX[cvjs_active_floorplan_div_nr] = 0;
					actualLLY[cvjs_active_floorplan_div_nr] = 0;
					actualURX[cvjs_active_floorplan_div_nr] = cvjs_svgWidth;
					actualURY[cvjs_active_floorplan_div_nr] = cvjs_svgHeight;
					
					//if (cvjs_debug) console.log("In HERE 1 "+actualLLX[cvjs_active_floorplan_div_nr]);
										
				}
				else{

					actualLLX[cvjs_active_floorplan_div_nr] = cvjs_svgviewBox[0];
					actualLLY[cvjs_active_floorplan_div_nr] = cvjs_svgviewBox[1];
					actualURX[cvjs_active_floorplan_div_nr] = cvjs_svgviewBox[2];
					actualURY[cvjs_active_floorplan_div_nr] = cvjs_svgviewBox[3];


					//if (cvjs_debug) console.log("In HERE 2 "+ actualLLX[cvjs_active_floorplan_div_nr]);

				}
				
							
if (cvjs_debug) console.log("SETTING OF MASTERBACKGROUND "+actualURX[cvjs_active_floorplan_div_nr]+"  "+actualURY[cvjs_active_floorplan_div_nr]);


//window.alert("making master 2 "+ cvjs_masterBackground[cvjs_active_floorplan_div_nr]);

				if (cvjs_masterBackground[cvjs_active_floorplan_div_nr]!=undefined) cvjs_masterBackground[cvjs_active_floorplan_div_nr].remove();

				cvjs_masterBackground[cvjs_active_floorplan_div_nr] = cvjs_rPaper[cvjs_active_floorplan_div_nr].group(cvjs_rPaper[cvjs_active_floorplan_div_nr].rect(actualLLX[cvjs_active_floorplan_div_nr],actualLLY[cvjs_active_floorplan_div_nr], actualURX[cvjs_active_floorplan_div_nr]-actualLLX[cvjs_active_floorplan_div_nr], actualURY[cvjs_active_floorplan_div_nr]-actualLLY[cvjs_active_floorplan_div_nr]));
				
				cvjs_masterBackground[cvjs_active_floorplan_div_nr].data("id", "master_"+floorplan_div_Array[cvjs_active_floorplan_div_nr]);
				cvjs_masterBackground[cvjs_active_floorplan_div_nr].attr({id: "master_"+floorplan_div_Array[cvjs_active_floorplan_div_nr]});
					
				cvjs_masterBackground[cvjs_active_floorplan_div_nr].after(cvjs_SVGGroup);
				
				
			}
			catch(err1){if (cvjs_debug) console.log("values.map cvjs_svgviewBox "+err1);
			
			// we want to give a value if values are not working when reading from Batik
			
					actualLLX[cvjs_active_floorplan_div_nr] = 0;
					actualLLY[cvjs_active_floorplan_div_nr] = 0;
					actualURX[cvjs_active_floorplan_div_nr] = cvjs_svgWidth;
					actualURY[cvjs_active_floorplan_div_nr] = cvjs_svgHeight;
					
			
			
			}



if (cvjs_debug)	console.log("MASTERBACKGROUND actualLLX="+actualLLX[cvjs_active_floorplan_div_nr]);


			var scale = cvjs_svgHeight/(cvjs_svgviewBox[3]);
	//		console.log("scale "+scale);
			var wh_fac = cvjs_svgviewBox[2]/cvjs_svgviewBox[3];

			var wdiff = ((cvjs_svgWidth-(cvjs_svgHeight*wh_fac))/2.0)/scale;

	//		console.log("wdiff "+wdiff);

	//		cvjs_svgScaleTrans = "T"+(0-cvjs_svgviewBox[0])+","+(0-cvjs_svgviewBox[1])+"S"+scale+",0,0";
	//		cvjs_svgScaleTrans = "T"+(wdiff-cvjs_svgviewBox[0])+","+(0-cvjs_svgviewBox[1])+"S"+scale+",0,0";
			cvjs_svgScaleTrans = "T"+(wdiff-cvjs_svgviewBox[0])+","+(0-cvjs_svgviewBox[1])+"S"+scale+",0,0";

			cvjs_svgTransX = wdiff-cvjs_svgviewBox[0];
			cvjs_svgTransY = 0-cvjs_svgviewBox[1];
			cvjs_svgScale = scale;


	// 2017-08-28  MOVING calculation of Masterbackgound after the actual width and height of SVG is found

		if (cvjs_debug) console.log("cvjs_addSVGClickHandler "+cvjs_addSVGClickHandler);

			if (cvjs_addSVGClickHandler){

					// add a click handler to all objects in the SVG file
				   var oArr = {};
				   jQuery("*[id]").each(function() {
					   var id = jQuery(this).attr('id');
					   if (!oArr[id]) oArr[id] = true;
				   });

				   for (var prop in oArr){

						try{
							var target = "#"+prop;

							// find stroke width, for some reason defined inside path, not as style object
							// Mitchell - parsing of files

							var strokeW = jQuery(target).attr('stroke-width');
							if (strokeW == undefined){
							}
							else{
								jQuery( target ).data("original_stroke_width", strokeW);
							}


							// find the original color
							var styles = jQuery(target).attr('style');

							if (styles == undefined){
								jQuery( target ).data("original_stroke", "Undefined");
							}
							else{
								//console.log(styles +" before split");
								var attributes = styles.split(';');
								for (var i = 0; i < attributes.length; i++) {
									var entry = attributes[i].split(':');
									if (entry[0].trim()=='stroke'){
										jQuery( target ).data("original_stroke", entry[1].trim());
									}
			//						if (entry[0].trim()=='stroke-width'){
			//							jQuery( target ).data("original_stroke_width", entry[1].trim());
			//						}
								}
							}


							jQuery( target ).click(function(event) {
							 //console.log("calling with "+jQuery(this).attr('id'));
							  cvjs_SVGfileObjectClicked(jQuery(this).attr('id'), event.pageX, event.pageY);
							  // if selected then unselect

							});


							jQuery( target ).mouseenter(function(event) {
							 //console.log("mouseover "+jQuery(this).attr('id'));
							  cvjs_SVGfileObjectMouseEnter(jQuery(this).attr('id'), event.pageX, event.pageY);
							  // if selected then unselect

							});


							jQuery( target ).mouseleave(function(event) {
							 //console.log("mouse out "+jQuery(this).attr('id'));
							  cvjs_SVGfileObjectMouseLeave(jQuery(this).attr('id'), event.pageX, event.pageY);
							  // if selected then unselect

							});


							jQuery( target ).mousemove(function(event) {
							 //console.log("mouse out "+jQuery(this).attr('id'));
							  cvjs_SVGfileObjectMouseMove(jQuery(this).attr('id'), event.pageX, event.pageY);
							  // if selected then unselect

							});



						}
						catch(err){
							console.log("Err 2: "+err);
						}
					   // alert(prop);
				}
		   }
		}catch(err){console.log("Err 3 "+err);}

		//console.log(prop+" last-last "+target);

	//		cvjs_masterBackground[cvjs_active_floorplan_div_nr].add(SVGGroup);


	}
	else{
	
if (cvjs_debug) 		console.log("BEFORE INIT MASTERBACKGROUND "+cvjs_initMasterBackground)
		if (cvjs_initMasterBackground){
			
//			window.alert("making master 3");

			cvjs_masterBackground[cvjs_active_floorplan_div_nr] = cvjs_rPaper[cvjs_active_floorplan_div_nr].group(cvjs_rPaper[cvjs_active_floorplan_div_nr].rect(actualLLX[cvjs_active_floorplan_div_nr],actualLLY[cvjs_active_floorplan_div_nr], actualURX[cvjs_active_floorplan_div_nr]-actualLLX[cvjs_active_floorplan_div_nr], actualURY[cvjs_active_floorplan_div_nr]-actualLLY[cvjs_active_floorplan_div_nr]));
		
			cvjs_masterBackground[cvjs_active_floorplan_div_nr].data("id", "master_"+floorplan_div_Array[cvjs_active_floorplan_div_nr]);
			cvjs_masterBackground[cvjs_active_floorplan_div_nr].attr({id: "master_"+floorplan_div_Array[cvjs_active_floorplan_div_nr]});

		}
		else{
		}

	}

	try{
		// console.log("make funny color"+printDebugFlag);
		// fill cvjs_masterbackground[cvjs_active_floorplan_div_nr] with funny color
		if (printDebugFlag)
			cvjs_masterBackground[cvjs_active_floorplan_div_nr].attr({fill: "#aa0fc0", "fill-opacity":"1.0"});
		//	Normal cvjs_masterbackground[cvjs_active_floorplan_div_nr] setting
		else
			cvjs_masterBackground[cvjs_active_floorplan_div_nr].attr({fill: "#fff", "fill-opacity":"0.01", "stroke-width": 0});

	}
	catch(errM){

		// this is a hack when loading batik PDF to SVG  , 2018-02-13
		
//		window.alert("making master 4");

		
		cvjs_masterBackground[cvjs_active_floorplan_div_nr] = cvjs_rPaper[cvjs_active_floorplan_div_nr].group(cvjs_rPaper[cvjs_active_floorplan_div_nr].rect(actualLLX[cvjs_active_floorplan_div_nr],actualLLY[cvjs_active_floorplan_div_nr], actualURX[cvjs_active_floorplan_div_nr]-actualLLX[cvjs_active_floorplan_div_nr], actualURY[cvjs_active_floorplan_div_nr]-actualLLY[cvjs_active_floorplan_div_nr]));
	
		cvjs_masterBackground[cvjs_active_floorplan_div_nr].data("id", "master_"+floorplan_div_Array[cvjs_active_floorplan_div_nr]);
		cvjs_masterBackground[cvjs_active_floorplan_div_nr].attr({id: "master_"+floorplan_div_Array[cvjs_active_floorplan_div_nr]});

		

		cvjs_masterBackground[cvjs_active_floorplan_div_nr].attr({fill: "#0000ff", "fill-opacity":"0.3", "stroke-width": 0});	
		
		
		
		if (printDebugFlag)
			cvjs_masterBackground[cvjs_active_floorplan_div_nr].attr({fill: "#aa0fc0", "fill-opacity":"1.0"});
		//	Normal cvjs_masterbackground[cvjs_active_floorplan_div_nr] setting
		else
			cvjs_masterBackground[cvjs_active_floorplan_div_nr].attr({fill: "#fff", "fill-opacity":"0.01", "stroke-width": 0});

	
		
	}
	
	
	
// removing viewbox
//	cvjs_rPaper[cvjs_active_floorplan_div_nr].attr({viewBox : "50 0 500 400"});

   	viewBoxWidth[cvjs_active_floorplan_div_nr] = fpWidth;
	viewBoxHeight[cvjs_active_floorplan_div_nr] = winHeight;

	rpWidth[cvjs_active_floorplan_div_nr] = actualURX[cvjs_active_floorplan_div_nr] - actualLLX[cvjs_active_floorplan_div_nr];
	rpHeight[cvjs_active_floorplan_div_nr] = actualURY[cvjs_active_floorplan_div_nr] - actualLLY[cvjs_active_floorplan_div_nr];
    rpX = actualLLX[cvjs_active_floorplan_div_nr];
	rpY = actualLLY[cvjs_active_floorplan_div_nr];

	vBHo = viewBoxHeight[cvjs_active_floorplan_div_nr];
	vBWo = viewBoxWidth[cvjs_active_floorplan_div_nr];


	xfactor = rpWidth[cvjs_active_floorplan_div_nr] / viewBoxWidth[cvjs_active_floorplan_div_nr];
    yfactor = rpHeight[cvjs_active_floorplan_div_nr] / viewBoxHeight[cvjs_active_floorplan_div_nr];

    if (xfactor > yfactor)
        zoomScale = yfactor;
    else
        zoomScale = xfactor;

    var lastDx = 0;
    var lastDy = 0;


if (cvjs_debug) console.log("zoomScale="+zoomScale+" vBHo"+vBHo+" vBWo "+vBWo+"  viewBoxHeight[cvjs_active_floorplan_div_nr]="+viewBoxHeight[cvjs_active_floorplan_div_nr]+"   viewBoxWidth[cvjs_active_floorplan_div_nr]="+viewBoxWidth[cvjs_active_floorplan_div_nr]);
if (cvjs_debug)console.log("actualLLX[cvjs_active_floorplan_div_nr]="+actualLLX[cvjs_active_floorplan_div_nr]+" actualLLY[cvjs_active_floorplan_div_nr]"+actualLLY[cvjs_active_floorplan_div_nr]);


	var attr_2 = "{\"viewBox\" : \""+actualLLX[cvjs_active_floorplan_div_nr]+" "+actualLLY[cvjs_active_floorplan_div_nr]+" "+rpWidth[cvjs_active_floorplan_div_nr]+" "+rpHeight[cvjs_active_floorplan_div_nr]+"\" }";

if (cvjs_debug) console.log("x6 attr_2="+attr_2);

	var json_obj = jQuery.parseJSON(attr_2);
	cvjs_rPaper[cvjs_active_floorplan_div_nr].attr(json_obj);

	viewBox[cvjs_active_floorplan_div_nr] = { X:0, Y:0, width:0, height:0};
	viewBox[cvjs_active_floorplan_div_nr].X = actualLLX[cvjs_active_floorplan_div_nr];
	viewBox[cvjs_active_floorplan_div_nr].Y = actualLLY[cvjs_active_floorplan_div_nr];

//console.log(cvjs_rPaper[cvjs_active_floorplan_div_nr]);

    viewBoxWidth[cvjs_active_floorplan_div_nr] = rpWidth[cvjs_active_floorplan_div_nr];
	viewBoxHeight[cvjs_active_floorplan_div_nr] = rpHeight[cvjs_active_floorplan_div_nr];

	objArr = new Array();
	pathArr = new Array();



	try{
		drawDrawing(cvjs_rPaper[cvjs_active_floorplan_div_nr]);
		drawPaths(cvjs_rPaper[cvjs_active_floorplan_div_nr]);
		setUpVqRooms(cvjs_rPaper[cvjs_active_floorplan_div_nr], cvjs_active_floorplan_div_nr);
	} catch(err) { if (cvjs_debug) console.log("Err 5: "+"Note: .js loading: drawDrawing, drawPaths, setUpVqRooms  "+err); }



	try{
		drawThumb(cvjs_rPaper[cvjs_active_floorplan_div_nr]);  // 2016-01-11
	} catch(err) { if (cvjs_debug)console.log("Err 6: "+"Note: .js loading:  drawThumb  "+err); }


	try{
		setUpVqStickyNotes(cvjs_rPaper[cvjs_active_floorplan_div_nr]);
		setUpVqRedlines(cvjs_rPaper[cvjs_active_floorplan_div_nr]);
		setUpVqURLs(cvjs_rPaper[cvjs_active_floorplan_div_nr]);
	} catch(err) { if (cvjs_debug) console.log("Err 7: "+"Note: .js loading:  setUpVqStickyNotes, setUpVqRedlines, setUpVqURLs "+err); }



if (cvjs_debug) console.log("before cvjs_masterBackground[cvjs_active_floorplan_div_nr] "+cvjs_initMasterBackground);
	//layers_all.attr(show);  // XXXXXXXX

	if (cvjs_initMasterBackground)
		cvjs_masterBackground[cvjs_active_floorplan_div_nr].add(layers_all);
	else{

//		cvjs_rPaper[cvjs_active_floorplan_div_nr].add(layers_all_overlay);
//		layers_all_overlay.add(layers_all);
//		new_layer.before(layers_all);
//		cvjs_masterBackground[cvjs_active_floorplan_div_nr].add(new_layer);
//		cvjs_masterBackground[cvjs_active_floorplan_div_nr].add(layers_all);

	}
	//if (!cvjs_initMasterBackground) cvjs_rPaper[cvjs_active_floorplan_div_nr].add(layers_all_overlay);

	//cvjs_masterBackground[cvjs_active_floorplan_div_nr].add(layers_all);

//	if (cvjs_initMasterBackground) cvjs_masterBackground[cvjs_active_floorplan_div_nr].add(layers_all);

	cvjs_addMouseWheelControls(cvjs_active_floorplan_div_nr);


	if (!SVGloadFlag){
if (cvjs_debug) 		console.log("before parsing Layers ");

		try{
			for (id=0; id<layerTable[cvjs_active_floorplan_div_nr].numberOfLayers; id++){
				layerTable[cvjs_active_floorplan_div_nr].layers[id].layer.data("layerClass", layerTable[cvjs_active_floorplan_div_nr].layers[id].layerClass);
				layerTable[cvjs_active_floorplan_div_nr].layers[id].layer.mousedown(function (e){
					if (cvjs_turnDrawingLayerOffFlag ){
						cvjs_turnDrawingLayerOffFlag = false;
						// turn layer off
						var layerClass = this.data("layerClass");
						for (jj=0; jj<layerTable[cvjs_active_floorplan_div_nr].numberOfLayers; jj++){
							if (layerTable[cvjs_active_floorplan_div_nr].layers[jj].layerClass == layerClass && layerTable[cvjs_active_floorplan_div_nr].layers[jj].status == "ON" ){
								cvjs_LayerOff(layerTable[cvjs_active_floorplan_div_nr].layers[jj].layer);
								layerTable[cvjs_active_floorplan_div_nr].layers[jj].status = "OFF";
							}
						}
					}
				});
			}
		}
		catch (err2){console.log("we could not add Layer handlers to objects"+err2);}

	}


	if (SVGloadFlag){
		// 2017-08-01, removing this part till we are regenerating canvas, so we know if we have to regen stuff from <metadata> section
		SVGloadFlag = false;

		// we have to enable navigation from the SVG, but only if the SVG is created from conversion
		if (cvjs_svgCreatedFromConversion){
			cvjs_svgCreatedFromConversion = false;
			cvjs_loaddrawing_FileNamePath[cvjs_active_floorplan_div_nr ] = cvjs_svgCreationContentLocation;
			cvjs_loadDrawing_conversionMode = true;
		}
if (cvjs_debug) console.log("META-DATA SECTION");

		// we are pulling content from <metadata> section
		var attr2 = "";
		try{

			var elems = document.querySelectorAll('[id^="cadviewer_multiPages"]');
	
			var idFlag = false; 
			for (var i = 0, len = elems.length; i < len; i++){
				//window.alert(elems[i]);  //.disabled = false; // to make them all enabled
				//window.alert(elems[i].textContent);  //.disabled = false; // to make them all enabled
				var pagesID = elems[i].id;  //.disabled = false; // to make them all enabled
			
				var searchString = "[id^="+floorplan_div_Array[cvjs_active_floorplan_div_nr]+"]";
				var metatextID = jQuery("#"+pagesID).parents(searchString).attr('id');
			
				if (metatextID == floorplan_div_Array[cvjs_active_floorplan_div_nr] && !idFlag){		
					idFlag = true;
					//attr2 = document.getElementById('cadviewer_multiPages').textContent;
					attr2 = elems[i].textContent;
					attr2 = attr2.substring(attr2.indexOf("=")+1);
					
		//			attr2 = attr2.replace(/(\r\n|\n|\r)/gm,"");
		//			attr2 = attr2.replace(/\s+/g, '');
					multiPages[cvjs_active_floorplan_div_nr] = jQuery.parseJSON(attr2);
					if (cvjs_debug) console.log("INSIDE LOOP cadviewer_multiPages_xxx  cvjs_active_floorplan_div_nr="+cvjs_active_floorplan_div_nr);			
				}
			}
			
			if (!idFlag){
					attr2 = document.getElementById('cadviewer_multiPages').textContent;
					attr2 = attr2.substring(attr2.indexOf("=")+1);
					multiPages[cvjs_active_floorplan_div_nr] = jQuery.parseJSON(attr2);
					if (cvjs_debug) console.log("AFTER LOOP cadviewer_multiPages  cvjs_active_floorplan_div_nr="+cvjs_active_floorplan_div_nr);		
			}
	
//console.log("MULTIIIIIIIIIIIIIIIIIIIIIIIIII multiPages[cvjs_active_floorplan_div_nr].multiPages "+multiPages[cvjs_active_floorplan_div_nr].multiPages+"  "+multiPages[0].multiPages);

		}catch(err){
			if (cvjs_debug) console.log("no multiPages["+cvjs_active_floorplan_div_nr+"] defined in metadata"+err);
				
		}

		try{
			
			var elems = document.querySelectorAll('[id^="cadviewer_worldUnits"]');
			var idFlag = false; 
			for (var i = 0, len = elems.length; i < len; i++){
				var pagesID = elems[i].id;  //.disabled = false; // to make them all enabled
				var searchString = "[id^="+floorplan_div_Array[cvjs_active_floorplan_div_nr]+"]";
				var metatextID = jQuery("#"+pagesID).parents(searchString).attr('id');
			
				if (metatextID == floorplan_div_Array[cvjs_active_floorplan_div_nr] && !idFlag){		
					idFlag = true;
					attr2 = elems[i].textContent;
					attr2 = attr2.substring(attr2.indexOf("=")+1);
					if (cvjs_debug) console.log("XX"+attr2+"XX");
					worldUnits= jQuery.parseJSON(attr2);
				}
			}
			
			if (!idFlag){
				attr2 = document.getElementById('cadviewer_worldUnits').textContent;
				attr2 = attr2.substring(attr2.indexOf("=")+1);
				if (cvjs_debug) console.log("XX"+attr2+"XX");
				worldUnits= jQuery.parseJSON(attr2);
			}
			
			
			// assignment of scale arrays
			// 3.3.01g  

			if (worldUnits.svgToWorldUnits == 0) worldUnits.svgToWorldUnits = 1;
 			
			// we are used the reverse value compared to what AX is providing
			
			worldUnits.svgToWorldUnits = 1.0/ worldUnits.svgToWorldUnits;
			
			cvjs_svgToWorldUnits[cvjs_active_floorplan_div_nr] =  worldUnits.svgToWorldUnits
			cvjs_units[cvjs_active_floorplan_div_nr] = worldUnits.units;
			// NOTE:  WE ARE NOT SETTING THE globalorigin , X, Y !!!!!!
			
						
if (cvjs_debug)	console.log("worldUnits.units "+worldUnits.units);



		}catch(err){if (cvjs_debug) console.log("no worldUnits defined in metadata"+err);}

		
		try{
							
			var elems = document.querySelectorAll('[id^="cadviewer_drawingCoordinates"]');
			var idFlag = false; 
			for (var i = 0, len = elems.length; i < len; i++){
				var pagesID = elems[i].id;  //.disabled = false; // to make them all enabled
				var searchString = "[id^="+floorplan_div_Array[cvjs_active_floorplan_div_nr]+"]";
				var metatextID = jQuery("#"+pagesID).parents(searchString).attr('id');
			
				if (metatextID == floorplan_div_Array[cvjs_active_floorplan_div_nr] && !idFlag){		
					idFlag = true;
					attr2 = elems[i].textContent;
					attr2 = attr2.replace(/(\r\n|\n|\r)/gm,"");			
					if (cvjs_debug)	console.log("cadviewer_drawingCoordinates="+attr2+"XXX");
					cvjs_drawingCoordinates[multiPages[cvjs_active_floorplan_div_nr].currentPage] = jQuery.parseJSON(attr2);
				}
			}
			
			if (!idFlag){
				attr2 = document.getElementById('cadviewer_drawingCoordinates').textContent;
				attr2 = attr2.replace(/(\r\n|\n|\r)/gm,"");			
				if (cvjs_debug)	console.log("cadviewer_drawingCoordinates="+attr2+"XXX");
	//			attr2 = attr2.replace(/\s+/g, '');
				cvjs_drawingCoordinates[multiPages[cvjs_active_floorplan_div_nr].currentPage] = jQuery.parseJSON(attr2);
			}
			
if (cvjs_debug)	console.log("drawingCoordinates "+cvjs_drawingCoordinates[multiPages[cvjs_active_floorplan_div_nr].currentPage]);

		}catch(err){if (cvjs_debug) console.log("no drawingCoordinates defined in metadata or parsing error "+err);}

		
		
if (cvjs_debug) 		console.log("Now we add handler to SVG layers:");

		// 2017-08-18 , new structure of SVG file

		layerTable[cvjs_active_floorplan_div_nr] = { numberOfLayers: 0,
					layers: []
		};


		var oArr = {};

///* 2017-11-27, what is this?

		jQuery("[id^=layer_]").each(function() {
		   var id = jQuery(this).attr('id');
		   // here we flush out the \u of the id and change the id again
		   var  newid = id.toString();
		   
		   if (newid.indexOf('\\u')>-1){   // this is a unicode layer name id definition
				newid = newid.replace(/\\u/g,"__u");
				//console.log(id+"  "+newid);
				document.getElementById(id).setAttribute("id",newid);
		   }
		
		});

//*/

		// LAYERS

		//var oArr = {};
		jQuery("[id^=layer_]").each(function() {
		   var id = jQuery(this).attr('id');
		   
		   

//				   jQuery(this).hide();

		   
	
			// new 2018-01-17  find only layers within the right div
			var searchString = "[id^="+floorplan_div_Array[cvjs_active_floorplan_div_nr]+"]";
			var svgID = jQuery("#"+id).parents(searchString).attr('id');
					
//console.log("layer loop "+id+"  "+svgID+"  "+floorplan_div_Array[cvjs_active_floorplan_div_nr]);			
			
			if (svgID == floorplan_div_Array[cvjs_active_floorplan_div_nr]){
				if (!oArr[id]) oArr[id] = true;
		      
					// 3.0.13i
				   // first we hide  all layers
				   //jQuery(this).hide();
				   jQuery(this).attr(hide);
				   	   
		   		   		   
			}
		   
		   //if (!oArr[id]) oArr[id] = true;
		});


		var nodeVal = 0;
		for (var prop in oArr){
			
			// 3.0.13h then we display all
//		   jQuery(this).show();
	
			
//console.log("oArr  prop:"+prop);
			var target = "#"+prop;
			//var layer_id = jQuery(target).attr('id');
			var layer_id = prop;
			var layer_class= "";			
			var layer_name="";
			var layer_status="ON";
//		if (cvjs_debug) console.log("  ");	
//		if (cvjs_debug) console.log("  target "+target);
			layer_class = jQuery(target).attr('class');		
			jQuery(target).each(function() {
			  jQuery.each(this.attributes, function() {
				if(this.specified) {
				  var cvname = (this.name).toString().toLowerCase();
				  
//				  if (cvjs_debug) console.log("cvname="+cvname+" value:"+this.value+"XX");
				  
				  if (cvname == "id") layer_id = this.value;  // all lowercase
				  if (cvname == "class") layer_class = this.value;  // all lowercase
				  if (cvname == "cvjs:layername") layer_name = this.value;  // all lowercase
				  if (cvname == "cvjs:status") layer_status = this.value;
				}
			  });
			});
			layer_name = JSON.parse('"' + layer_name + '"');

			
//			if (cvjs_debug) console.log(nodeVal+"  "+layer_class+"  "+layer_class.toString().endsWith('_block'));
			try{
				if (layer_class.toString().indexOf('\\u') > -1 || layer_class.toString().endsWith('_block')){  
				
				//console.log("inside " +layer_class);
				
					// this is a unicode class name definition, we are replacing it, we are assuming there is a layer already with this name
					if (layer_class.toString().indexOf('\\u') > -1){
						jQuery(target).removeClass(layer_class);		
						var newclass = layer_class.toString().replace(/\\u/g, "_u");
						jQuery(target).addClass(newclass);		
						layer_class = jQuery(target).attr('class');
						//if (cvjs_debug) console.log("new XXXX"+layer_class+"XXXX");
						var existing_layer = target.toString().replace(/__u/g, "_u");			
						if (jQuery(existing_layer).length){  // there is an existing layer preprocessed with the same name, so we remove and add to that					
	//						if (cvjs_debug) console.log(target+" move to: "+existing_layer+" with name: "+layer_name);
							jQuery(target).detach().appendTo(existing_layer);			
						}else{
							// the layer is not dublicate, and it contain a \u class, so we add it to the layer list
							var singleLayer ={ layer: layer_id, layerClass: layer_class, layerName: layer_name, status : layer_status};
				//			if (cvjs_debug) console.log(layer_id +"  "+layer_status+"  "+nodeVal+"  "+layer_class+"  "+layer_name+"XXXX") ;
							//console.log("layer: "+singleLayer);
							layerTable[cvjs_active_floorplan_div_nr].layers[nodeVal] = singleLayer;
							nodeVal++;
							layerTable[cvjs_active_floorplan_div_nr].numberOfLayers = nodeVal;				
						}
					}

					// this is a block layer
					if (layer_class.toString().endsWith('_block')){
						
						var existing_layer = target.substring(0, target.toString().indexOf('_block'));
						//console.log(existing_layer);
						if (jQuery(existing_layer).length){  // there is an existing layer preprocessed with the same name, so we remove and add to that	

							jQuery(target).removeClass(layer_class);		
							var newclass = layer_class.toString().substring(0, layer_class.toString().indexOf('_block'));
							jQuery(target).addClass(newclass);		
							layer_class = jQuery(target).attr('class');
						
	//						if (cvjs_debug) console.log(target+" move block to: "+existing_layer+" with name: "+layer_name);
							jQuery(target).detach().appendTo(existing_layer);			
						}else{
							// the layer is not dublicate, and it contain a \u class, so we add it to the layer list
							var singleLayer ={ layer: layer_id, layerClass: layer_class, layerName: layer_name, status : layer_status};
	//						if (cvjs_debug) console.log(layer_id +" block layer  "+layer_status+"  "+nodeVal+"  "+layer_class+"  "+layer_name+"XXXX") ;
							//console.log("layer: "+singleLayer);
							layerTable[cvjs_active_floorplan_div_nr].layers[nodeVal] = singleLayer;
							nodeVal++;
							layerTable[cvjs_active_floorplan_div_nr].numberOfLayers = nodeVal;				
						}
					}				
				}		
				else{
					// standard case, we are building the layer list
									
					var singleLayer ={ layer: layer_id, layerClass: layer_class, layerName: layer_name, status : layer_status};
		//			if (cvjs_debug) console.log(layer_id +"  "+layer_status+"  "+nodeVal+"  "+layer_class+"  "+layer_name+"XXXX") ;
					//console.log("layer: "+singleLayer);
					layerTable[cvjs_active_floorplan_div_nr].layers[nodeVal] = singleLayer;
					nodeVal++;
					layerTable[cvjs_active_floorplan_div_nr].numberOfLayers = nodeVal;
				}
				//console.log("prop "+prop);
			
			}
			catch (err){  // standard case, no class definition on layer

				// 3.0.13b
				layer_class = layer_id;				
				layer_name = layer_id.substring(layer_id.indexOf("layer_")+6);
				layer_status = "ON";
			
				// standard case, we are building the layer list
				var singleLayer ={ layer: layer_id, layerClass: layer_class, layerName: layer_name, status : layer_status};
	//			if (cvjs_debug) console.log(layer_id +"  "+layer_status+"  "+nodeVal+"  "+layer_class+"  "+layer_name+"XXXX") ;
				//console.log("layer: "+singleLayer);
				layerTable[cvjs_active_floorplan_div_nr].layers[nodeVal] = singleLayer;
				nodeVal++;
				layerTable[cvjs_active_floorplan_div_nr].numberOfLayers = nodeVal;				
			}
			
			
		}

		if (cvjs_debug) console.log("layerTable[cvjs_active_floorplan_div_nr].numberOfLayers  "+layerTable[cvjs_active_floorplan_div_nr].numberOfLayers);


///*** 3.0.13i testing		
		
			for (id=0; id<layerTable[cvjs_active_floorplan_div_nr].numberOfLayers; id++){
					// 3.0.13h
					for (j=0; j<layerTable[cvjs_active_floorplan_div_nr].numberOfLayers; j++){
						//	if (id!=j)	jQuery("#"+layerTable[cvjs_active_floorplan_div_nr].layers[id].layer).hide();
						//else
						//	jQuery("#"+layerTable[cvjs_active_floorplan_div_nr].layers[id].layer).show();
//							if (id!=j)	jQuery("#"+layerTable[cvjs_active_floorplan_div_nr].layers[j].layer).hide();
							if (id!=j)	jQuery("#"+layerTable[cvjs_active_floorplan_div_nr].layers[j].layer).attr(hide);
						else{
//							jQuery("#"+layerTable[cvjs_active_floorplan_div_nr].layers[j].layer).show();
							jQuery("#"+layerTable[cvjs_active_floorplan_div_nr].layers[j].layer).attr(show);
							//console.log("show "+j);
						}
					}

					bbox = cvjs_SVGGroup[cvjs_active_floorplan_div_nr].getBBox();

					
					if (cvjs_debug) console.log(" cvjs_active_floorplan_div_nr:"+cvjs_active_floorplan_div_nr+" "+layerTable[cvjs_active_floorplan_div_nr].layers[id].layer); 	
					
					
//					if (cvjs_debug) console.log("BBOX layer "+bbox.x+"  "+bbox.y+"  "+bbox.width+"  "+bbox.height+"  "+layerTable[cvjs_active_floorplan_div_nr].layers[id].layer); 	
//					if (cvjs_debug) console.log(" viewbox "+bbox.vb);			
				}
//**/

		// 3.0.13i   , all layers are turned on again for extents calculation
		try{
			for (id=0; id<layerTable[cvjs_active_floorplan_div_nr].numberOfLayers; id++){
				jQuery("#"+layerTable[cvjs_active_floorplan_div_nr].layers[id].layer).attr(show);
//				jQuery("#"+layerTable[cvjs_active_floorplan_div_nr].layers[id].layer).show();
			}
			
		}
		catch(err1) {console.log(err+" show layers");}
	


				
	
/*
			for (id=0; id<layerTable[cvjs_active_floorplan_div_nr].numberOfLayers; id++){
					jQuery("#"+layerTable[cvjs_active_floorplan_div_nr].layers[id].layer).show();
			}
*/	

		try{
			for (id=0; id<layerTable[cvjs_active_floorplan_div_nr].numberOfLayers; id++){

					// let us hide the Thumb layer
					if (layerTable[cvjs_active_floorplan_div_nr].layers[id].layerName == "cvjs_Thumb"){
						cvjs_LayerOff(layerTable[cvjs_active_floorplan_div_nr].layers[id].layer);
						layerTable[cvjs_active_floorplan_div_nr].layers[id].status = "OFF";
					}

					//  let us build the layer off by click method
					
									
					
					jQuery("#"+layerTable[cvjs_active_floorplan_div_nr].layers[id].layer).mousedown(function (e){
						//console.log("in function mousedown layer");
						if (cvjs_turnDrawingLayerOffFlag ){
							cvjs_turnDrawingLayerOffFlag = false;
							// turn layer off
							var id = jQuery(this).attr('id');
							var layerClass = id; 		// this.data("layerClass");
							for (jj=0; jj<layerTable[cvjs_active_floorplan_div_nr].numberOfLayers; jj++){
								if (layerTable[cvjs_active_floorplan_div_nr].layers[jj].layerClass == layerClass && layerTable[cvjs_active_floorplan_div_nr].layers[jj].status == "ON" ){
									cvjs_LayerOff(layerTable[cvjs_active_floorplan_div_nr].layers[jj].layer);
									layerTable[cvjs_active_floorplan_div_nr].layers[jj].status = "OFF";
								}
							}
						}
					});
			}
		}
		catch (err2){console.log("we could not add Layer handlers to objects"+err2);}

		try{
			// 2017-12-11 blocked
			// vqRooms = new Array();
			if (vqRooms[cvjs_active_floorplan_div_nr] == undefined){
				//window.alert("we define again!");
				vqRooms[cvjs_active_floorplan_div_nr] = new Array();
				
				
				
				console.log("QQQQQQQQQQQQQQQQQ third init vqRooms "+cvjs_active_floorplan_div_nr);
				

				
			}


if (cvjs_debug) 			console.log("AAAA BEFORE setupVqRoom  vqRooms.length "+vqRooms[cvjs_active_floorplan_div_nr].length+" buildings[vqBuilding].floors[vqFloor].rooms.length "+Object.keys(buildings[vqBuilding].floors[vqFloor].rooms).length);
			
			
			var uItem = new Array();
			//for (i=0; i<myNodes.numberOfNodes;i++){
			//	uItem[i]=cvjs_rPaper[cvjs_active_floorplan_div_nr].path(myNodes.nodes[i].path).data("node",myNodes.nodes[i].node);
			//	vqRooms[cvjs_active_floorplan_div_nr].push(uItem1);
			//}

			vqBuilding = "BUILDING_NAME_GOES_HERE";
			vqFloor = "FLOOR_NAME_GOES_HERE";

/*
			buildings = {
				BUILDING_NAME_GOES_HERE: {
					name: "",
					company: "",
					address: "",
					city: "",
					state: "",
					zipcode: "",
					country: "",
					FacMgr: "",
					FacMgr_title: "",
					FacMgr_email: "",
					FacMgr_phone: "",
					floors: {
						FLOOR_NAME_GOES_HERE: {
							name: "name_of_file_to_appear",
							file: "file_name",
							rooms: {
								NODE_1: {
									name: "",
									id: "",
									type: "",
									attributeStatus: "unpopulated",
									attributes: [{ name: "Room Id", value: ""},
											{ name: "FirstName", value: ""},
											{ name: "LastName", value: ""},
											{ name: "Phone", value: ""},
											{ name: "Building", value: ""},
											{ name: "Floor", value: ""},
											{ name: "Department", value: ""},
											{ name: "Division", value: ""},
											{ name: "Dept Name", value: ""},
											{ name: "Category", value: ""},
											{ name: "Type", value: ""},
											{ name: "Standard", value: ""}],
									occupancy: "",
									tags: { 1: ""},
									linked: false
									},
							}
						}
					}
				}
			}
*/

			buildings = {
				BUILDING_NAME_GOES_HERE: {
					name: "",
					company: "",
					address: "",
					city: "",
					state: "",
					zipcode: "",
					country: "",
					FacMgr: "",
					FacMgr_title: "",
					FacMgr_email: "",
					FacMgr_phone: "",
					floors: {
						FLOOR_NAME_GOES_HERE: {
							name: "name_of_file_to_appear",
							file: "file_name",
							rooms: {
							}
						}
					}
				}
			}

						
			//buildings[vqBuilding].floors[vqFloor].rooms = {};

if (cvjs_debug) console.log("before cvjs_nodes loop buildings[vqBuilding].floors[vqFloor].rooms "+buildings[vqBuilding].floors[vqFloor].rooms.length);


			// ROOMS LAYER, TEXT LAYER PARSING

			if (true){
				
				
					// we have to clear the vqRooms layer, prior to creation:
					// 2018-02-09
					vqRooms[cvjs_active_floorplan_div_nr] = new Array();
					
					
				
				

					// add a click handler to all cvjs_nodes objects in the SVG file
				   var oArr = {};
				   jQuery(".cvjs_nodes").each(function() {
						var id = jQuery(this).attr('id');

					    // new 2018-01-09   
						var searchString = "[id^="+floorplan_div_Array[cvjs_active_floorplan_div_nr]+"]";
					   	var svgID = jQuery("#"+id).parents(searchString).attr('id');
						
						if (svgID == floorplan_div_Array[cvjs_active_floorplan_div_nr])
							if (!oArr[id]) oArr[id] = true;
				   });

					var nodeVal = 0;

			//console.log("oArr.length"+oArr.length);

//			window.alert("cvjs_units "+cvjs_units);
					// 3.2.02d
					try {  // we set the units from the SVG matrix
						cvjs_units[cvjs_active_floorplan_div_nr] = worldUnits.units;
					}
					catch(err){  // if not, we default to mm
						cvjs_units[cvjs_active_floorplan_div_nr] = "mm";
					}
			
			
			
			
				   for (var prop in oArr){
			//console.log("oArr  prop"+prop);
						try{
							var target = "#"+prop;
							var Node_path = jQuery(target).attr('d');
							nodeVal++;
							//var NodeX = "NODE_"+nodeVal.toString();
							var cvjsNode = "";  //  jQuery(target).attr('cvjs:node');
							var cvjsName = ""; // jQuery(target).attr('cvjs:name');
							var cvjsId = ""; // jQuery(target).attr('cvjs:roomId');
							var cvjsType = ""; // jQuery(target).attr('cvjs:type');
							var cvjsArea = ""; // jQuery(target).attr('cvjs:area');   // 3.1.20g
							jQuery(target).each(function() {
							  jQuery.each(this.attributes, function() {
								// this.attributes is not a plain object, but an array
								// of attribute nodes, which contain both the name and value
								if(this.specified) {
								  //console.log(this.name, this.value);
								  var cvname = (this.name).toString().toLowerCase();
								  if (cvname == "cvjs:roomid") cvjsId = this.value;  // all lowercase
								  if (cvname == "cvjs:name") cvjsName = this.value;
								  if (cvname == "cvjs:type") cvjsType = this.value;
								  if (cvname == "cvjs:node") cvjsNode = this.value;
								  if (cvname == "cvjs:area") cvjsArea = this.value;// 3.1.20g

								}
							  });
							});

							uItem[i]=cvjs_rPaper[cvjs_active_floorplan_div_nr].path(Node_path).data("node", cvjsNode);						
//console.log(i+" "+uItem[i]);							
							
							
							vqRooms[cvjs_active_floorplan_div_nr].push(uItem[i]);
							if (cvjsName == "") cvjsName = cvjsId;
							if (cvjsType == "") cvjsType = "Space";

// console.log(cvjs_units[cvjs_active_floorplan_div_nr]+" 1 ÅÅÅÅ "+cvjsArea+"  "+(Number(cvjsArea)/1550.003).toFixed(2)+" "+cvjsId);								
														
							
							// 3.2.02d							
							if (cvjs_units[cvjs_active_floorplan_div_nr] == "m"){
								if (cvjsArea != "") cvjsType += " <br>"+(Number(cvjsArea)).toFixed(2)+" m<sup>2</sup>";   // 3.1.20g
								if (cvjsArea != "") cvjsArea=(Number(cvjsArea)).toFixed(2)+" m2";
								
							}else if (cvjs_units[cvjs_active_floorplan_div_nr] == "cm"){
								// 3.1.20h
								if (cvjsArea != "") cvjsType += " <br>"+(Number(cvjsArea)/10000).toFixed(2)+" m<sup>2</sup>";   // 3.1.20g
								if (cvjsArea != "") cvjsArea=(Number(cvjsArea)/10000).toFixed(2)+" m2";
							}
							else if (cvjs_units[cvjs_active_floorplan_div_nr] == "mm"){
								// 3.1.20h
								if (cvjsArea != "") cvjsType += " <br>"+(Number(cvjsArea)/1000000).toFixed(2)+" m<sup>2</sup>";   // 3.1.20g
								if (cvjsArea != "") cvjsArea=(Number(cvjsArea)/1000000).toFixed(2)+" m2";
							}
							else if (cvjs_units[cvjs_active_floorplan_div_nr] == "in"){
								// 3.2.02g                     1550,003 in2 -> 1m
								
								if (cvjsArea != "") cvjsType += " <br>"+(Number(cvjsArea)/1550.003).toFixed(2)+" m<sup>2</sup>";   
								if (cvjsArea != "") cvjsArea=(Number(cvjsArea)/1550.003).toFixed(2)+" m2";
							}
							else{
								// 3.1.20h
								if (cvjsArea != "") cvjsType += " <br>"+(Number(cvjsArea)/1000000).toFixed(2)+" m<sup>2</sup>";   // 3.1.20g
								if (cvjsArea != "") cvjsArea=(Number(cvjsArea)/1000000).toFixed(2)+" m2";
								
							}
							
														
							//							console.log("Id "+cvjsId+" node "+cvjsNode+" name "+cvjsName+" type "+cvjsType);
							var node = {
											name: cvjsName,
											id: cvjsId,   // cvjsId
											type: cvjsType,
											area: cvjsArea,
											attributeStatus: "unpopulated",
											attributes: [{ name: "Room Id", value: ""},
													{ name: "FirstName", value: ""},
													{ name: "LastName", value: ""},
													{ name: "Phone", value: ""},
													{ name: "Building", value: ""},
													{ name: "Floor", value: ""},
													{ name: "Department", value: ""},
													{ name: "Division", value: ""},
													{ name: "Dept Name", value: ""},
													{ name: "Category", value: ""},
													{ name: "Type", value: ""},
													{ name: "Standard", value: ""}],
											occupancy: "",
											tags: { 1: ""},
											linked: true,
											handle: ""                     // 3.2.02e
									};
//							console.log(" Node "+NodeX+"     "+node);
							buildings[vqBuilding].floors[vqFloor].rooms[cvjsNode] = node;
						}
						catch(err){
							console.log("Err 8: "+err);
						}
					   // alert(prop);
				}
			}

			
			

			// AUTOCAD HANDLE PARSING
			if (true){

					// add a click handler to all cvjs_handle objects in the SVG file
				   var oArr = {};
				   jQuery(".cvjs_handles").each(function() {
					   var id = jQuery(this).attr('id');
					   
					    // new 2018-01-09
						var searchString = "[id^="+floorplan_div_Array[cvjs_active_floorplan_div_nr]+"]";
					   	var svgID = jQuery("#"+id).parents(searchString).attr('id');
						
						if (svgID == floorplan_div_Array[cvjs_active_floorplan_div_nr])
							if (!oArr[id]) oArr[id] = true;
				   
				   });

					var nodeVal = 0;

					var cccount = 0;
				    for (var prop in oArr){
						cccount++;
					}

console.log("HERE QQQQQQQQQQQQQQQQQQQQQQQ    oArr.length " +oArr.size+"  floorplan "+"[id^="+floorplan_div_Array[cvjs_active_floorplan_div_nr]+"]");
//window.alert("HERE QQQQQQQQQQQQQQQQQQQQQQQ    oArr.length " +cccount+"  floorplan "+"[id^="+floorplan_div_Array[cvjs_active_floorplan_div_nr]+"]");



				   for (var prop in oArr){
			//console.log("oArr  prop"+prop);
						try{
							var target = "#"+prop;
							var Node_path = jQuery(target).attr('d');
							nodeVal++;
							//var NodeX = "NODE_"+nodeVal.toString();
							var cvjsNode = "";  //  jQuery(target).attr('cvjs:node');
							var cvjsName = ""; // jQuery(target).attr('cvjs:name');
							var cvjsId = ""; // jQuery(target).attr('cvjs:handle');
							var cvjsType = ""; // jQuery(target).attr('cvjs:type');
							var cvjsArea = ""; // jQuery(target).attr('cvjs:area');   // 3.1.20g

							var cvjsXdata = ""; // 3.2.02c
							var cvjsHandle = ""; // 3.2.02e;


							jQuery(target).each(function() {
							  jQuery.each(this.attributes, function() {
								// this.attributes is not a plain object, but an array
								// of attribute nodes, which contain both the name and value
								if(this.specified) {
								  //console.log(this.name, this.value);
								  var cvname = (this.name).toString().toLowerCase();
								  if (cvname == "cvjs:handle"){
									  cvjsId = this.value;  // all lowercase
									  cvjsHandle = this.value;
									  
									  // demosetting ONLY ONLY   NOTE NOTE NOTE
									  if (demoonly_customHandleChange){
										  if (cvjsId=="4E43"){cvjsId="BASIN-W1";cvjsHandle="BASIN-W1";} 
										  if (cvjsId=="4E4F"){cvjsId="BLK1000";cvjsHandle="BLK1000";} 
										  if (cvjsId=="4E59"){cvjsId="BLK2000";cvjsHandle="BLK2000";} 
										  if (cvjsId=="4E63"){cvjsId="BLK3000";cvjsHandle="BLK3000";} 
										  if (cvjsId=="4E6D"){cvjsId="BOILER";cvjsHandle="BOILER";} 
										  if (cvjsId=="5297"){cvjsId="BOSTON";cvjsHandle="BOSTON";} 
										  if (cvjsId=="4C27"){cvjsId="ADDR2002";cvjsHandle="ADDR2002";} 
										  if (cvjsId=="4C48"){cvjsId="BRK531";cvjsHandle="BRK531";} 
										  if (cvjsId=="4CC2"){cvjsId="BRK471";cvjsHandle="BRK471";} 
										  if (cvjsId=="4C09"){cvjsId="ADDR2001";cvjsHandle="ADDR2001";} 
										  if (cvjsId=="4C14"){cvjsId="BR450";cvjsHandle="BR450";} 
										  if (cvjsId=="4C21"){cvjsId="BR451";cvjsHandle="BR451";} 
										  if (cvjsId=="4B79"){cvjsId="CSPOLE30";cvjsHandle="CSPOLE30";} 
										  if (cvjsId=="4B97"){cvjsId="DATASTAR";cvjsHandle="DATASTAR";} 
										  if (cvjsId=="4B90"){cvjsId="CSTRA402";cvjsHandle="CSTRA402";} 
										  if (cvjsId=="4B5D"){cvjsId="CSECC220";cvjsHandle="CSECC220";} 
										  if (cvjsId=="4B55"){cvjsId="CSBRK571";cvjsHandle="CSBRK571";} 
										  if (cvjsId=="ED20"){cvjsId="BPM3100";cvjsHandle="BPM3100";} 
										  if (cvjsId=="ECED"){cvjsId="BPM3200";cvjsHandle="BPM3200";} 										  
										  if (cvjsId=="109F8"){cvjsId="BRK431";cvjsHandle="BRK431";} 
										  if (cvjsId=="ECEC"){cvjsId="BR460";cvjsHandle="BR460";} 										  
										  if (cvjsId=="ED23"){cvjsId="ECC210";cvjsHandle="ECC210";} 
										  if (cvjsId=="106F8"){cvjsId="FENWAY PARK";cvjsHandle="FENWAY PARK";} 										  
										  if (cvjsId=="ECF9"){cvjsId="ECC220";cvjsHandle="ECC220";} 
										  if (cvjsId=="93DD1"){cvjsId="BOW-W1";cvjsHandle="BOW-W1";} 										  
										  if (cvjsId=="93DE6"){cvjsId="BPBPB";cvjsHandle="BPBPB";} 
										  if (cvjsId=="93E60"){cvjsId="BRK451";cvjsHandle="BRK451";} 										  
										  if (cvjsId=="93E8E"){cvjsId="EAST";cvjsHandle="EAST";} 
									  }
									  // demosetting ONLY ONLY   NOTE NOTE NOTE
									  
									  
									  
									  
								  }
								  if (cvname == "cvjs:name") cvjsName = this.value;
								  if (cvname == "cvjs:type") cvjsType = this.value;
								  if (cvname == "cvjs:node") cvjsNode = this.value;
								  if (cvname == "cvjs:area") cvjsArea = this.value;// 3.1.20g

								  if (cvname == "cvjs:altname") cvjsXdata = this.value;// 3.2.02c
													//3.2.02e 
								  
								}
							  });
							});

							uItem[i]=cvjs_rPaper[cvjs_active_floorplan_div_nr].path(Node_path).data("node", cvjsNode);
//console.log(i+" "+uItem[i]);							

							// 3.2.02c
							var Objectlinked = false;
							if (cvjsXdata != ""){
								//
									console.log(i+" xdata field "+cvjsXdata);
									// if there is an xdata object we set linked to true and use the xdata as the Id
									Objectlinked = true;			
									cvjsId = cvjsXdata;
							}
							
							vqRooms[cvjs_active_floorplan_div_nr].push(uItem[i]);
							if (cvjsName == "") cvjsName = cvjsId;
							if (cvjsType == "") cvjsType = "Space";
							
							
//console.log(cvjs_units+" 2 ÅÅÅÅ "+cvjsArea+"  "+(Number(cvjsArea)/1550.003).toFixed(2));								
							
console.log(cvjs_units[cvjs_active_floorplan_div_nr]+" Before 2 ÅÅÅÅ "+cvjsArea+"  "+cvjsId);								
							
														
							// 3.2.02d							
							//window.alert("cvjs_units="+cvjs_units);
							if (cvjs_units[cvjs_active_floorplan_div_nr] == "m"){						
								//window.alert("we have m");
								if (cvjsArea != "") cvjsType += " <br>"+(Number(cvjsArea)).toFixed(2)+" m<sup>2</sup>";   // 3.1.20g
								if (cvjsArea != "") cvjsArea=(Number(cvjsArea)).toFixed(2)+" m2";
								
							}else if (cvjs_units[cvjs_active_floorplan_div_nr] == "cm"){
							
								//window.alert("we have cm");
								// 3.1.20h
								if (cvjsArea != "") cvjsType += " <br>"+(Number(cvjsArea)/10000.0).toFixed(2)+" m<sup>2</sup>";   // 3.1.20g
								if (cvjsArea != "") cvjsArea=(Number(cvjsArea)/10000.0).toFixed(2)+" m2";
							
							}							
							else if (cvjs_units[cvjs_active_floorplan_div_nr] == "mm"){
								//window.alert("we have mm");

								// 3.1.20h
								if (cvjsArea != "") cvjsType += " <br>"+(Number(cvjsArea)/1000000.0).toFixed(2)+" m<sup>2</sup>";   // 3.1.20g
								if (cvjsArea != "") cvjsArea=(Number(cvjsArea)/1000000.0).toFixed(2)+" m2";
							}
							else if (cvjs_units[cvjs_active_floorplan_div_nr] == "in"){
								// 3.2.02g                     1550,003 in2 -> 1m
								if (cvjsArea != "") cvjsType += " <br>"+(Number(cvjsArea)/1550.003).toFixed(2)+" m<sup>2</sup>";   
								if (cvjsArea != "") cvjsArea=(Number(cvjsArea)/1550.003).toFixed(2)+" m2";
							}
							else{
								//window.alert("we have no unit, use mm");
								// 3.1.20h
								if (cvjsArea != "") cvjsType += " <br>"+(Number(cvjsArea)/1000000.0).toFixed(2)+" m<sup>2</sup>";   // 3.1.20g
								if (cvjsArea != "") cvjsArea=(Number(cvjsArea)/1000000.0).toFixed(2)+" m2";
							}
							

console.log(cvjs_units[cvjs_active_floorplan_div_nr]+" after Area 2 ÅÅÅÅ "+cvjsArea+" "+cvjsId);								
							
							
							//if (cvjsArea != "") cvjsType += " <br>"+(Number(cvjsArea)/1000000).toFixed(2)+" m<sup>2</sup>";   // 3.1.20g
							//if (cvjsArea != "") cvjsArea=(Number(cvjsArea)/1000000).toFixed(2)+" m2";
							
// WE DO NOT YET HAVE AN USER MEAUREMENT UNIT FROM AX 
							
//							console.log("Id "+cvjsId+" node "+cvjsNode+" name "+cvjsName+" type "+cvjsType);
							var node = {
											name: cvjsName,
											id: cvjsId,   // cvjsId
											type: cvjsType,
											area: cvjsArea,
											attributeStatus: "unpopulated",
											attributes: [{ name: "Room Id", value: ""},
													{ name: "FirstName", value: ""},
													{ name: "LastName", value: ""},
													{ name: "Phone", value: ""},
													{ name: "Building", value: ""},
													{ name: "Floor", value: ""},
													{ name: "Department", value: ""},
													{ name: "Division", value: ""},
													{ name: "Dept Name", value: ""},
													{ name: "Category", value: ""},
													{ name: "Type", value: ""},
													{ name: "Standard", value: ""}],
											occupancy: "",
											tags: { 1: ""},
											linked: Objectlinked,   // 3.2.02c
											handle: cvjsHandle      // 3.2.02e

									};
//							console.log(" Node "+NodeX+"     "+node);
							buildings[vqBuilding].floors[vqFloor].rooms[cvjsNode] = node;
						}
						catch(err){
							console.log("Err 9: "+err);
						}
					   // alert(prop);
				}
			}

			


			
			
			
			
			//console.log("QQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQ");
if (cvjs_debug) 			console.log("BEFORE setupVqRoom  vqRooms.length "+vqRooms[cvjs_active_floorplan_div_nr].length+" buildings[vqBuilding].floors[vqFloor].rooms.length "+Object.keys(buildings[vqBuilding].floors[vqFloor].rooms).length);

			setUpVqRooms(cvjs_rPaper[cvjs_active_floorplan_div_nr], cvjs_active_floorplan_div_nr);

			// I cannot see how these are executed, they are executed above, so we omit these for now
			// setUpVqStickyNotes(cvjs_rPaper[cvjs_active_floorplan_div_nr]);
			// setUpVqRedlines(cvjs_rPaper[cvjs_active_floorplan_div_nr]);
			// setUpVqURLs(cvjs_rPaper[cvjs_active_floorplan_div_nr]);

			cvjs_MinWidth = -1;   // if we have loaded a SVG but we started with a .JS, we have to tell the thickness method (indirectly) we have an SVG


		}catch(err){console.log("no buildings defined in metadata"+err);}
		//NOTE!     we need to build the vqRooms NODE arrays
		//NOTE!     we need to build the layer lists so the layer table can control them
	}


	// 2017-08-18  Capture key interaction to be able to cancel commands

//	var mainDiv = '#'+floorplan_div_Array[cvjs_active_floorplan_div_nr];
//	window.alert(mainDiv);
/*
	jQuery(mainDiv).bind('keydown', function(event) {
		window.alert(event.keyCode);
		switch(event.keyCode){
		   //....your actions for the keys .....
		}
	 });

*/


/*
	jQuery(document).keydown(function(e) {

		console.log("X key pressed document");
		if (e.keyCode == 27) {
			console.log("main declaration");
		}
	});
*/


	try{

		try{

		cvjs_rPaper[cvjs_active_floorplan_div_nr].selectAll('text').attr({"stroke-width":"0"});
		cvjs_rPaper[cvjs_active_floorplan_div_nr].selectAll('path').attr({"stroke-linejoin":"round"});

		//jQuery("#wait_looper_"+floorplan_div_Array[cvjs_active_floorplan_div_nr]).fadeOut(500);

		if (cvjs_PDFloadFlag){
			// if pdf conversion let the wait looper appear till pdfs are converted
		}
		else{
			// in all other cases, hide the wait-looper
			jQuery("#wait_looper_"+floorplan_div_Array[cvjs_active_floorplan_div_nr]).hide(500);
		}


		if (page_change_modal_offset_flag[cvjs_active_floorplan_div_nr]){
			page_change_modal_offset_flag[cvjs_active_floorplan_div_nr] = false;

			// set the location of the navigation menu if enabled
			if (pageChangeInterface[cvjs_interfaceCounterIndex(floorplan_div_Array[cvjs_active_floorplan_div_nr])]){
				jQuery('#floatNavigationMenu_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).show();
				var pos = jQuery('#'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).position();
				var posmenu_x = pos.top+5;
//				var posmenu_x = pos.top+20;
//				var posmenu_y = pos.left+jQuery('#'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).width()-350;
//				var posmenu_y = pos.left+jQuery('#'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).width()-415;
				var posmenu_y = pos.left+jQuery('#'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).width()-475;

				if (posmenu_y <40) posmenu_y = 40;
				jQuery('#floatNavigationMenu_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).offset({ top: posmenu_x, left: posmenu_y });

//				jQuery('#floatpagemenuText_'+floorplan_div).offset({ left: posmenu_y+168 });

			}
		}

		}
		catch (change_modal_err){console.log("LoadEnd: change_modal: "+change_modal_err);}


		try{



		var pageNr = "";

		// now we set the pagesArray to the SVG multipage Array, if we have multipage SVG files
		if (cvjs_SVG_multiPagesFlag[cvjs_active_floorplan_div_nr]){
				//window.alert("before multiPages[cvjs_active_floorplan_div_nr] "+cvjs_SVG_multiPages[cvjs_active_floorplan_div_nr].multiPages+" "+multiPages[cvjs_active_floorplan_div_nr].multiPages+" currentpage "+multiPages[cvjs_active_floorplan_div_nr].currentPage);
				pageNr = cvjs_SVG_multiPages[cvjs_active_floorplan_div_nr].currentPage+"/"+cvjs_SVG_multiPages[cvjs_active_floorplan_div_nr].multiPages;
		}
		else  // normal case
			pageNr = multiPages[cvjs_active_floorplan_div_nr].currentPage+"/"+multiPages[cvjs_active_floorplan_div_nr].multiPages;


		//var pageNr="1/11";
		var len = pageNr.length;


		// 3.3.01b
		jQuery('#floatpagemenuText1_topBar_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).html(pageNr);
//		jQuery('#floatpagemenuText2_topBar_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).html(pageText);


		
		pageNr = "&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp" + pageNr;
		
//window.alert(len);		
		
		if (len>=7) {
			// do nothing
			pageNr = pageNr+"";
			len +=1 ;
		}
		else
		if (len==6) {
			pageNr = "&nbsp" + pageNr;
			len = 9;
		}
		else
		if (len==5) {
			pageNr = "&nbsp&nbsp" + pageNr;
			len = 9;
		}
		else
		if (len==4) {
			pageNr = "&nbsp&nbsp&nbsp&nbsp" + pageNr;
			len = 9;
			}
		else
		if (len==3){
			pageNr = "&nbsp&nbsp&nbsp&nbsp&nbsp" + pageNr+ "&nbsp";
			len = 9;
		}
		

//		window.alert(len+"  "+pageNr.length+"X"+pageNr+"X");


		pageNr = pageNr + "&nbsp&nbsp&nbsp&nbsp";
		
		
		
		
		var pageText;

		if (cvjs_SVG_multiPagesFlag[cvjs_active_floorplan_div_nr]){


			// 3.1.21d
			var myPageName = "";
			//window.alert(multiPages[cvjs_active_floorplan_div_nr].pages[i].pageName)
			
			if (cvjs_SVG_multiPages[cvjs_active_floorplan_div_nr].pages[cvjs_SVG_multiPages[cvjs_active_floorplan_div_nr].currentPage-1].pageName.indexOf("com.autodesk")>-1)
				myPageName = "Layout"
			else
				myPageName = cvjs_SVG_multiPages[cvjs_active_floorplan_div_nr].pages[cvjs_SVG_multiPages[cvjs_active_floorplan_div_nr].currentPage-1].pageName;
		
			pageText = myPageName;
			//pageText = cvjs_SVG_multiPages[cvjs_active_floorplan_div_nr].pages[cvjs_SVG_multiPages[cvjs_active_floorplan_div_nr].currentPage-1].pageName;
		}
		else {// normal case
		
			// 3.1.21d
			var myPageName = "";
			//window.alert(multiPages[cvjs_active_floorplan_div_nr].pages[i].pageName)
			
			if (multiPages[cvjs_active_floorplan_div_nr].pages[multiPages[cvjs_active_floorplan_div_nr].currentPage-1].pageName.indexOf("com.autodesk")>-1)
				myPageName = "Layout"
			else
				myPageName = multiPages[cvjs_active_floorplan_div_nr].pages[multiPages[cvjs_active_floorplan_div_nr].currentPage-1].pageName;
		
			pageText = myPageName;

			//pageText = multiPages[cvjs_active_floorplan_div_nr].pages[multiPages[cvjs_active_floorplan_div_nr].currentPage-1].pageName;
		}	
			
		//window.alert(pageText);


		//var pageText = "Xxxxxxxxxxxxxxxxxxxxxxxxx";
		len = pageText.length;
		if (len>24) pageText = pageText.substring(0,22)+"..";
	

			// 3.3.01b
//		jQuery('#floatpagemenuText1_topBar_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).html(pageNr);
		jQuery('#floatpagemenuText2_topBar_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).html(pageText);
		//console.log("floatpagemenuText2_topBar_"+floorplan_div_Array[cvjs_active_floorplan_div_nr]+"  "+pageText);	

		
		
		var pageString = pageNr+"  "+pageText;
		jQuery('#floatpagemenuText_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).html(pageString);

	
		
		// now we set the pagesArray to the SVG multipage Array for navigation
		if (cvjs_SVG_multiPagesFlag[cvjs_active_floorplan_div_nr]) multiPages[cvjs_active_floorplan_div_nr] = cvjs_SVG_multiPages[cvjs_active_floorplan_div_nr];


		}
		catch (pageNr_err){
			
			console.log("LoadEnd: pageNr_err: "+pageNr_err);
			
			pageNr ="&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp" +  "&nbsp&nbsp&nbsp1/1&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp";
		
			pageText = "Single Page";
		
			var pageString = pageNr+"  "+pageText;

			jQuery('#floatpagemenuText_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).html(pageString);			


			// 3.3.01b
			jQuery('#floatpagemenuText1_topBar_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).html("1/1");
			jQuery('#floatpagemenuText2_topBar_'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).html("Single Page");

			
		}



		// set the scale parameter for redline thickness

/// normalized factor for redline thickness based on size of loaded drawing, typically
/// 1/300 of a 2000 width drawing



		try{

			var lfactor = Math.sqrt(Math.pow((actualURX[cvjs_active_floorplan_div_nr]-actualLLX[cvjs_active_floorplan_div_nr]) ,2)+Math.pow((actualURX[cvjs_active_floorplan_div_nr]-actualLLX[cvjs_active_floorplan_div_nr]) ,2))
			cvjs_redlineThickness_scaleFactor = cvjs_redlineThickness_drawingFactor * lfactor;
			first_thickness = true;
			//console.log("cvjs_redlineThickness_scaleFactor "+cvjs_redlineThickness_scaleFactor);


			// reset Birds-Eye:
			if (cvjs_displayMagnifyingGlassFlag[cvjs_active_floorplan_div_nr]){ cvjs_displayMagnifyingGlassFlag[cvjs_active_floorplan_div_nr] = false; cvjs_exitBirdsEye(floorplan_div_Array[cvjs_active_floorplan_div_nr]);}

			cvjs_calibratedMeasurement = false;   // we reset calibration with each page load  2016-08-04
			cvjs_clearDrawingStickyNotes();   //2016-09-04
			
			cvjs_updateDrawingRedlines(cvjs_redlineStickyNoteLayer[cvjs_active_floorplan_div_nr]);
			
			
			// 3.0.13k   removing double key check
			//cvjs_checkLicense();




		}
		catch (license_div_err){console.log("LoadEnd: magnify, clear, update, checkLicense: "+license_div_err);}


//window.alert(cvjs_customMethodForOnLoadEnd+"  "+ cvjs_myOnLoadEndMethod());

	}
	catch(err){
		console.log(" 1 LoadEnd: "+err);
	}


	var radius = 40;
	var r1;
	var lastx, lasty;



function pausecomp(millis){
var date = new Date();
var curDate = null;

do { curDate = new Date(); }
while(curDate-date < millis);

}

		// this has been moved from OnLoadEnd, which is now behind the drag defintions of masterbackground
		cvjs_resetZoomPan_SetMasterBackground(cvjs_active_floorplan_div_nr);	

// if (cvjs_debug) console.log("cvjs_masterbackground[cvjs_active_floorplan_div_nr] "+cvjs_masterbackground[cvjs_active_floorplan_div_nr]+" drag definition dragMove, dragStart, dragEnd");


	cvjs_floorplan_div = floorplan_div;

	cvjs_masterBackground[cvjs_active_floorplan_div_nr].drag(dragMove, dragStart, dragEnd);

	
	cvjs_masterBackground[cvjs_active_floorplan_div_nr].mousedown(function (e) {
		currentMasterDiv = this.data("id");
		currentMasterDiv = currentMasterDiv.substring(7);  //  master_floorPlan1_svg, etc....		
		cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(floorplan_div);
		if (cvjs_debug) console.log(currentMasterDiv+"  "+cvjs_active_floorplan_div_nr+"    active_floorplan_div_nr");
	});

	cvjs_masterBackground[cvjs_active_floorplan_div_nr].mouseup(function (e) {
			layer_vqrooms[cvjs_active_floorplan_div_nr].attr(show);

		// focus on room polygons is taken over by this class
		if (dragInsidePolygon && totalDragStart == 0){
			dragInsidePolygon = false;
			DoMouseUp(e.clientX+document.body.scrollLeft, e.clientY+document.body.scrollTop);
			setRoomAfterPanPC();
		}

	});
	cvjs_masterBackground[cvjs_active_floorplan_div_nr].mousemove(function (e) {

	try{

		mousex = e.clientX+document.body.scrollLeft;
		mousey = e.clientY+document.body.scrollTop;

		try{
			if (tooltipLast[cvjs_active_floorplan_div_nr] != lastObj[cvjs_active_floorplan_div_nr]  && cvjs_location_flag && tooltipLast[cvjs_active_floorplan_div_nr]!=-1){

				//vqRooms[cvjs_active_floorplan_div_nr][tooltipLast[active_floorplan_div_nr]].attr(defaultColor);

				if (!cvjs_supressPopUpModal || cvjs_standardHighLightColors){
					vqRooms[cvjs_active_floorplan_div_nr][tooltipLast[active_floorplan_div_nr]].attr(defaultColor);
				}
				else{
					if (vqRooms[cvjs_active_floorplan_div_nr][tooltipLast[active_floorplan_div_nr]].data("linked")){
						vqRooms[cvjs_active_floorplan_div_nr][tooltipLast[active_floorplan_div_nr]].attr(defaultColor_linked);
					}
					else{
						vqRooms[cvjs_active_floorplan_div_nr][tooltipLast[active_floorplan_div_nr]].attr(defaultColor_unlinked);
					}
				}

				tip[cvjs_active_floorplan_div_nr].hide();
			}
		} catch (err2){};

		try{
			if (tooltipLastStickyNote != lastObjStickyNote[cvjs_active_floorplan_div_nr]  && cvjs_location_flag){

				//vqRooms[cvjs_active_floorplan_div_nr][tooltipLast[active_floorplan_div_nr]].attr(defaultColor);

				if (!cvjs_supressPopUpModal){
					vqStickyNotes[tooltipLastStickyNote].attr(defaultColor_StickyNotes);
				}
				else{
					if (vqStickyNotes[tooltipLastStickyNote].data("linked")){
						vqStickyNotes[tooltipLastStickyNote].attr(defaultColor_linked);
					}
					else{
						vqStickyNotes[tooltipLastStickyNote].attr(defaultColor_unlinked);
					}
				}
				tip[cvjs_active_floorplan_div_nr].hide();
			}
		} catch (err3){};


		try{


			if (tooltipLastHyperlink != lastObjHyperlink[cvjs_active_floorplan_div_nr]  && cvjs_location_flag){

//console.log("in loop"+tooltipLastHyperlink+"  "+lastObjHyperlink[cvjs_active_floorplan_div_nr]+"  "+cvjs_location_flag);


				if (!cvjs_supressHyperlinkColors){
					vqURLs[tooltipLastHyperlink].attr(defaultColor_Hyperlinks);
				}
				else{
					vqURLs[tooltipLastHyperlink].attr(defaultColor_Hyperlinks_blank);  // set colors ( note: change attribute name to something more applicable
				}

//console.log("before tip");

				tip[cvjs_active_floorplan_div_nr].hide();
			}
		} catch (err4){};






		// here we have to give control to stuff in setupvqroooms, if a drag operation is in progress on a non touch-device
		// focus on room polygons is taken over by this class

		if (dragInsidePolygon && totalDragStart == 0){


//string_X = "cvjs_masterbackground[cvjs_active_floorplan_div_nr] mouse move e.clientX="+e.clientX+" "+e.clientY+" lastDx="+lastDx+" lastDy="+lastDy;
//jQuery('#temperature').css('color', '#FF00FF');
//jQuery("#temperature").html(string_X);

		dx = e.clientX+document.body.scrollLeft;
		dy = e.clientY+document.body.scrollTop;

//string_X = "cvjs_masterbackground[cvjs_active_floorplan_div_nr] mouse move e.clientX="+e.clientX+" "+e.clientY+" lastDx="+lastDx+" lastDy="+lastDy+" vbx="+vbx+" vby="+vby;
//jQuery('#temperature').css('color', '#FF00FF');
//jQuery("#temperature").html(string_X);

		DoMouseMove(dx, dy);


		}

}
catch(err){

//string_X = "error "+err;
//jQuery('#temperature').css('color', '#FF00FF');
//jQuery("#temperature").html(string_X);

}




				})
			.touchstart(function(event) {	//// TOUCH START

//string_X = "cvjs_masterbackground[cvjs_active_floorplan_div_nr] touch start";
//jQuery('#temperature').css('color', '#FF00FF');
//jQuery("#temperature").html(string_X);

		preventDrag = true;

//console.log("touch start");

ttest=0;
		event.preventDefault();
		event.stopPropagation();

		if (!thumb_loaded){
			thumb_loaded = true;
			try{

// console.log("before drawThumb touchstart");


				drawThumb(cvjs_rPaper[cvjs_active_floorplan_div_nr]);
			}
			catch(err){
				//  allow the code to work with both version 1.1 and 1.2
				//console.log(err);
			}
//console.log("drawThumb");
		}


		try{

			if (totalDragStart == 0){    // only turn layers off in init cast



	//  find the case where the thumb layers should be used
	//			layer_thumb.attr(show);
	//			layers_all.attr(hide);



				if (panWithThumb){
					//layers_all.hide();
					//layer_thumb.show();
					layers_all.attr(hide);
					layer_thumb.attr(show);


					// this is for SVG files created with TMS   2017-09-04
					all_layer_off_thumb_on();


				}

console.log("hide vqrooms");
				
				layer_vqrooms[cvjs_active_floorplan_div_nr].attr(hide);



//ZZZZZZZ
//				layer_thumb.show();
//				layers_all.hide();
//				layer_vqrooms[cvjs_active_floorplan_div_nr].hide();


			}


		}
		catch(err){
			//  allow the code to work with both version 1.1 and 1.2
			console.log("t9 "+err);
		}





			try{


				firstFingerX = event.touches[0].pageX;
				firstFingerY = event.touches[0].pageY;

				//console.log("event.touches[0].pageX="+event.touches[0].pageX+" event.touches[0].pageY="+event.touches[0].pageY);
				totalDragStart = 1;
				preventDrag = false;

				//console.log("event.touches[1].pageX="+event.touches[1].pageX+" event.touches[1].pageY="+event.touches[1].pageY);
				secondFingerX = event.touches[1].pageX;
				secondFingerY = event.touches[1].pageY;
				totalDragStart = 2;
				preventDrag = true;

				allowPinchInPolygons = false;


				deltaXinit= secondFingerX - firstFingerX;
				deltaYinit= secondFingerY - firstFingerY;

				// the difference between two fingers
				deltaBase = Math.sqrt(deltaXinit*deltaXinit + deltaYinit*deltaYinit);

				deltaDynamicPre = deltaBase;

				viewBoxWidthPre = viewBoxWidth[cvjs_active_floorplan_div_nr];
				viewBoxheightPre = viewBoxHeight[cvjs_active_floorplan_div_nr];

				firstFingerX1 = firstFingerX;
				firstFingerY1 = firstFingerY;
				firstFingerX_init = firstFingerX;
				firstFingerY_init = firstFingerY;


				viewBox_initX[cvjs_active_floorplan_div_nr] = viewBox[cvjs_active_floorplan_div_nr].X;
				viewBox_initY[cvjs_active_floorplan_div_nr] = viewBox[cvjs_active_floorplan_div_nr].Y;

				viewBoxWidth_init[cvjs_active_floorplan_div_nr] = viewBoxWidth[cvjs_active_floorplan_div_nr];
				viewBoxHeight_init[cvjs_active_floorplan_div_nr] = viewBoxHeight[cvjs_active_floorplan_div_nr];

				flagOK = true;


				//viewBoxWidth[cvjs_active_floorplan_div_nr]  = cvjs_rPaper[cvjs_active_floorplan_div_nr].width;
				//viewBoxHeight[cvjs_active_floorplan_div_nr] = cvjs_rPaper[cvjs_active_floorplan_div_nr].height;



			}
			catch(err){
				//console.log("vqjs_38 1 : "+err);

				var dummy=1;
			}


//string_X = "touchstart "+totalDragStart;
//string_X = "allowPinchInPolygons "+allowPinchInPolygons;
//jQuery('#occupancy').css('color', '#FF00FF');
//jQuery("#occupancy").html(string_X);

				})

			.touchend(function(event) {         //// TOUCH END

//string_X = "cvjs_masterbackground[cvjs_active_floorplan_div_nr] touch end";
//jQuery('#temperature').css('color', '#FF00FF');
//jQuery("#temperature").html(string_X);

				preventDrag = true;


				if (totalDragStart == 2){

					event.preventDefault();
					event.stopPropagation();
					tip[cvjs_active_floorplan_div_nr].hide();
					hideOnlyPop();
				}




				try{


					if (totalDragStart == 2){


						viewBox[cvjs_active_floorplan_div_nr].X = viewBox_initX[cvjs_active_floorplan_div_nr];
						viewBox[cvjs_active_floorplan_div_nr].Y = viewBox_initY[cvjs_active_floorplan_div_nr];
						vBHo = viewBoxHeight_init[cvjs_active_floorplan_div_nr];
						vBWo = viewBoxWidth_init[cvjs_active_floorplan_div_nr];
						viewBoxWidth[cvjs_active_floorplan_div_nr] = viewBoxWidth_init[cvjs_active_floorplan_div_nr];
						viewBoxHeight[cvjs_active_floorplan_div_nr] = viewBoxHeight_init[cvjs_active_floorplan_div_nr];
						viewBoxWidth[cvjs_active_floorplan_div_nr] /= deltaDynamic/deltaBase;
						viewBoxHeight[cvjs_active_floorplan_div_nr]/= deltaDynamic/deltaBase;

						viewBox[cvjs_active_floorplan_div_nr].X -= (viewBoxWidth[cvjs_active_floorplan_div_nr] - vBWo) / 2;
						viewBox[cvjs_active_floorplan_div_nr].Y -= (viewBoxHeight[cvjs_active_floorplan_div_nr] - vBHo) / 2;


						//viewBox[cvjs_active_floorplan_div_nr].X -= (firstFingerX-firstFingerX_init);
						//viewBox[cvjs_active_floorplan_div_nr].Y -= (firstFingerY-firstFingerY_init);

						//viewBox[cvjs_active_floorplan_div_nr].X -= (firstFingerX-firstFingerX_init)*(deltaDynamic/deltaBase);
						//viewBox[cvjs_active_floorplan_div_nr].Y -= (firstFingerY-firstFingerY_init)*(deltaDynamic/deltaBase);

//NNN						zoomScale = viewBoxWidth[cvjs_active_floorplan_div_nr]/cvjs_rPaper[cvjs_active_floorplan_div_nr].width;

//console.log("xx1 viewBoxWidth[cvjs_active_floorplan_div_nr] "+viewBoxWidth[cvjs_active_floorplan_div_nr]+" rpWidth[cvjs_active_floorplan_div_nr] "+rpWidth[cvjs_active_floorplan_div_nr]);

						zoomScale = viewBoxWidth[cvjs_active_floorplan_div_nr]/rpWidth[cvjs_active_floorplan_div_nr];



						var attr_2 = "{\"viewBox\" : \""+viewBox[cvjs_active_floorplan_div_nr].X+" "+viewBox[cvjs_active_floorplan_div_nr].Y+" "+viewBoxWidth[cvjs_active_floorplan_div_nr]+" "+viewBoxHeight[cvjs_active_floorplan_div_nr]+"\" }";
//console.log("x1 attr_2="+attr_2);
						var json_obj = jQuery.parseJSON(attr_2);
						cvjs_rPaper[cvjs_active_floorplan_div_nr].attr(json_obj);
						//setView(cvjs_rPaper[cvjs_active_floorplan_div_nr], viewBox[cvjs_active_floorplan_div_nr].X, viewBox[cvjs_active_floorplan_div_nr].Y, viewBoxWidth[cvjs_active_floorplan_div_nr], viewBoxHeight[cvjs_active_floorplan_div_nr]);
//NNN						cvjs_rPaper[cvjs_active_floorplan_div_nr].setViewBox(viewBox[cvjs_active_floorplan_div_nr].X, viewBox[cvjs_active_floorplan_div_nr].Y, viewBoxWidth[cvjs_active_floorplan_div_nr], viewBoxHeight[cvjs_active_floorplan_div_nr]);

					}

					totalDragStart = 0;

					layer_vqrooms[cvjs_active_floorplan_div_nr].attr(show);

//					layers_all.show();
//					layer_vqrooms[cvjs_active_floorplan_div_nr].show();
//					layer_thumb.hide();



					if (panWithThumb){
//						layers_all.show();
//						layer_thumb.hide();
						layers_all.attr(show);
						layer_thumb.attr(hide);

						// for SVG drawings from AX, 2017-09-04
						all_layer_on_thumb_off();

					}





				}
				catch(err){
					//  allow the code to work with both version 1.1 and 1.2
					console.log(err);
				}




				})

			.touchmove(function(event) {       //// TOUCH MOVE

string_X = "cvjs_masterbackground[cvjs_active_floorplan_div_nr] touch move event.touches[0].pageXY="+event.touches[0].pageX+"  "+event.touches[0].pageY+"  "+" dragstart="+totalDragStart;
jQuery('#movements3').css('color', '#FF00FF');
jQuery("#movements3").html(string_X);

			 if (preventDrag){
			 	event.stopPropagation();
				event.preventDefault();
			 }

			// disable drag move
			if (totalDragStart == 2){
				event.stopPropagation();
				event.preventDefault();
				tip[cvjs_active_floorplan_div_nr].hide();
				hideOnlyPop();
			}



			if (totalDragStart == 2){


				try{

					firstFingerX = event.touches[0].pageX;
					firstFingerY = event.touches[0].pageY;

					//console.log("event.touches[0].pageX="+event.touches[0].pageX+" event.touches[0].pageY="+event.touches[0].pageY);
					totalDragStart = 1;
					preventDrag = false;

					//console.log("event.touches[1].pageX="+event.touches[1].pageX+" event.touches[1].pageY="+event.touches[1].pageY);
					secondFingerX = event.touches[1].pageX;
					secondFingerY = event.touches[1].pageY;
					totalDragStart = 2;
					preventDrag = true;

					deltaX= secondFingerX - firstFingerX;
					deltaY= secondFingerY - firstFingerY;

					// zoom the difference between fingers

					//
					//deltaDynamic = Math.sqrt(deltaX*deltaX + deltaY*deltaY)/deltaBase;
					deltaDynamic = Math.sqrt(deltaX*deltaX + deltaY*deltaY);


string_X = "event.touches[1].pageX="+event.touches[1].pageX+"  "+deltaDynamic+"  "+" pre="+deltaDynamicPre;
jQuery('#movements').css('color', '#FF00FF');
jQuery("#movements").html(string_X);

					// if deltaDynamic > 1 zoom in
					// if deltaDynamic < 1 zoom out


	if ((deltaDynamic-deltaDynamicPre > 4 || deltaDynamic-deltaDynamicPre < -4 ) && flagOK){

						flagOK = false;

						deltaDynamicPre = deltaDynamic;

						viewBox[cvjs_active_floorplan_div_nr].X = viewBox_initX[cvjs_active_floorplan_div_nr];
						viewBox[cvjs_active_floorplan_div_nr].Y = viewBox_initY[cvjs_active_floorplan_div_nr];

						vBHo = viewBoxHeight_init[cvjs_active_floorplan_div_nr];
						vBWo = viewBoxWidth_init[cvjs_active_floorplan_div_nr];

						viewBoxWidth[cvjs_active_floorplan_div_nr] = viewBoxWidth_init[cvjs_active_floorplan_div_nr];
						viewBoxHeight[cvjs_active_floorplan_div_nr] = viewBoxHeight_init[cvjs_active_floorplan_div_nr];
						viewBoxWidth[cvjs_active_floorplan_div_nr] /= deltaDynamic/deltaBase;
						viewBoxHeight[cvjs_active_floorplan_div_nr]/= deltaDynamic/deltaBase;

						viewBox[cvjs_active_floorplan_div_nr].X -= (viewBoxWidth[cvjs_active_floorplan_div_nr] - vBWo) / 2;
						viewBox[cvjs_active_floorplan_div_nr].Y -= (viewBoxHeight[cvjs_active_floorplan_div_nr] - vBHo) / 2;

						//viewBox[cvjs_active_floorplan_div_nr].X -= (firstFingerX-firstFingerX_init);
						//viewBox[cvjs_active_floorplan_div_nr].Y -= (firstFingerY-firstFingerY_init);

						//viewBox[cvjs_active_floorplan_div_nr].X -= (firstFingerX-firstFingerX_init)*(deltaDynamic/deltaBase);
						//viewBox[cvjs_active_floorplan_div_nr].Y -= (firstFingerY-firstFingerY_init)*(deltaDynamic/deltaBase);

						//setView(cvjs_rPaper[cvjs_active_floorplan_div_nr], viewBox[cvjs_active_floorplan_div_nr].X,viewBox[cvjs_active_floorplan_div_nr].Y,viewBoxWidth[cvjs_active_floorplan_div_nr],viewBoxHeight[cvjs_active_floorplan_div_nr]);

//NNN						zoomScale = viewBoxWidth[cvjs_active_floorplan_div_nr]/cvjs_rPaper[cvjs_active_floorplan_div_nr].width;

//console.log("xx2 viewBoxWidth[cvjs_active_floorplan_div_nr] "+viewBoxWidth[cvjs_active_floorplan_div_nr]+" rpWidth[cvjs_active_floorplan_div_nr] "+rpWidth[cvjs_active_floorplan_div_nr]);

						zoomScale = viewBoxWidth[cvjs_active_floorplan_div_nr]/rpWidth[cvjs_active_floorplan_div_nr];

						var attr_2 = "{\"viewBox\" : \""+viewBox[cvjs_active_floorplan_div_nr].X+" "+viewBox[cvjs_active_floorplan_div_nr].Y+" "+viewBoxWidth[cvjs_active_floorplan_div_nr]+" "+viewBoxHeight[cvjs_active_floorplan_div_nr]+"\" }";
//console.log("x4 attr_2="+attr_2);
						var json_obj = jQuery.parseJSON(attr_2);
						cvjs_rPaper[cvjs_active_floorplan_div_nr].attr(json_obj);


//NNN						setView(cvjs_rPaper[cvjs_active_floorplan_div_nr], viewBox[cvjs_active_floorplan_div_nr].X, viewBox[cvjs_active_floorplan_div_nr].Y, viewBoxWidth[cvjs_active_floorplan_div_nr], viewBoxHeight[cvjs_active_floorplan_div_nr]);
						//cvjs_rPaper[cvjs_active_floorplan_div_nr].setViewBox(viewBox[cvjs_active_floorplan_div_nr].X, viewBox[cvjs_active_floorplan_div_nr].Y, viewBoxWidth[cvjs_active_floorplan_div_nr], viewBoxHeight[cvjs_active_floorplan_div_nr]);


						var vb1X = viewBox[cvjs_active_floorplan_div_nr].X;
						var vb1Y = viewBox[cvjs_active_floorplan_div_nr].Y;


						firstFingerX1 = firstFingerX;
						firstFingerY1 = firstFingerY;

						flagOK = true;


				}




				}
				catch(err){
					//console.log(err);

					//console.log("vqjs_38 2 : "+err);

					var dummy2=1;

				}



			}

//console.log("touch move event="+event);
// make a zoom based on finger touch
	});

	

	jQuery("#waitpane").hide();

//		console.log("XXXX");

	 cvjs_change_space(0);  // clear the spaces   2014-01-19

	 
	 
	 ////    ONLOAD END         ONLOAD END 

	// 2018-01-31  forcing Resize for PDF load	
	
	
//	if (cvjs_debug) console.log("prior to resizeVq:  width="+jQuery("#"+floorplan_div_Array[cvjs_active_floorplan_div_nr]).width()+"  height= "+jQuery("#"+floorplan_div_Array[cvjs_active_floorplan_div_nr]).height());
	
	ResizeVq(jQuery("#"+floorplan_div_Array[cvjs_active_floorplan_div_nr]).width(), jQuery("#"+floorplan_div_Array[cvjs_active_floorplan_div_nr]).height());

	
		// 2018-01-31  forcing Resize for PDF load	
	//ResizeVq(	jQuery("#"+floorplan_div_Array[cvjs_active_floorplan_div_nr].width) , jQuery("#"+floorplan_div_Array[cvjs_active_floorplan_div_nr].height));

	



		// 2018-05-07   With xlinks, the hyperlinks are in the SVG we need to have the masterbackground first in the set. For NODE_, we create them on masterBackground so do not need (but still use)
		try{
			cvjs_SVGGroup[cvjs_active_floorplan_div_nr].before(cvjs_masterBackground[cvjs_active_floorplan_div_nr]);
			

			
					//		cvjs_SVGGroup[cvjs_active_floorplan_div_nr].drag(dragMove, dragStart, dragEnd);


/******* moved to cvjs_InitializeSVGHyperlinkClick		

			// 2018-05-09   05-11			
			var isSmartPhoneOrTablet = /Android|webOS|iPhone|iPad|iPod|BlackBerry|Touch/i.test(navigator.userAgent);
			var isWindowsNT = /Windows NT/i.test(navigator.userAgent);

//			var isSmartPhoneOrTablet =false;
//			var isWindowsNT = false;
			console.log(isSmartPhoneOrTablet+" "+isWindowsNT);
			
			if(isSmartPhoneOrTablet && !isWindowsNT){
			
//alert("do nothing! ");
			
			}
			else{
				cvjs_SVGGroup[cvjs_active_floorplan_div_nr].drag(dragMove, dragStart, dragEnd);
			}

*********/			
			
		}
		catch(err1){console.log("error setting masterbackground first");}
			





	
	 
	 	if (cvjs_customMethodForOnLoadEnd){
			try{
				
				// 2018-05-10;
				cvjs_loadInProgress = false;
				
				
				cvjs_myOnLoadEndMethod();  // call my OnLoadEndMethod as an alternative to OnLoadEnd();
			}catch(exception) { console.log("Please define cvjs_myOnLoadEndMethod in your encapsulating code: "+exception); }
		}
		else{
			try{
				
//console.log("before reset zoompan "+cvjs_active_floorplan_div_nr+"  "+cvjs_rPaper[cvjs_active_floorplan_div_nr].toString().substring(0,100));
				var fplan = floorplan_div_Array[cvjs_active_floorplan_div_nr].slice(0, -4);								

				// allowing load of drawings
				cvjs_loadInProgress = false;

				// we set the rotation to 0 with page change or new drawing
				cvjs_currentRotationAngle[cvjs_active_floorplan_div_nr] = 0;

//				window.alert("dragback 2 "+floorplan_div_Array[cvjs_active_floorplan_div_nr]+"  "+cvjs_preConversionFileExtension[cvjs_active_floorplan_div_nr])				
				// 3.0.14d   - if pdf we put masterbackground on top for bitmaps 
				if (cvjs_preConversionFileExtension[cvjs_active_floorplan_div_nr].indexOf("pdf")==0){
					cvjs_dragBackgroundToFront_SVG(fplan);
				}
//window.alert("before cvjs_OnLoadEnd("+fplan+")");
												
				cvjs_OnLoadEnd(fplan);        // generic method name OnLoadEnd();
				
			}catch(exception) { console.log("Please define cvjs_OnLoadEnd in your encapsulating code: "+exception); }
		}

		if (cvjs_compareDrawings){
			try{
				cvjs_OnLoadEndCompareDrawings();        // generic method name OnLoadEnd();
			}catch(exception) { console.log("Please define cvjs_OnLoadEndCompareDrawings in your encapsulating code: "+exception); }
		}

	 
	 


}  // END OF VQSETUP  - END OF VQSETUP - END OF VQSETUP - END OF VQSETUP


var scroll_locationX;
var scroll_locationY;
//var cvjs_scrollMouse_intialized = false;
var cvjs_scrollMouse_intialized = new Array();


function cvjs_addMouseWheelControls(floorplan_div_nr){


	if (cvjs_debug) console.log(floorplan_div_nr+"   "+cvjs_scrollMouse_intialized[floorplan_div_nr]);

	if (cvjs_scrollMouse_intialized[floorplan_div_nr]){	
		return;   // we return because it already is initalized
	}
	else{
		cvjs_scrollMouse_intialized[floorplan_div_nr] = true;   // we set to true and continue
	}
	
	
	var floorplan_div = floorplan_div_Array[floorplan_div_nr]
	
	
	// implement scrollwheel
    var isFirefox = /Firefox/i.test(navigator.userAgent);

	if (isFirefox){

	   jQuery('#'+floorplan_div).mousemove(function(e){
			scroll_locationX = e.pageX;
			scroll_locationY = e.pageY;
		});



		jQuery('#'+floorplan_div).bind('DOMMouseScroll', function(e){

			var x = scroll_locationX;     // Get the horizontal coordinate
			var y = scroll_locationY;     // Get the vertical coordinate


			 if(e.originalEvent.detail > 0) {
				 //scroll down
if (cvjs_debug) 				 console.log('Down Firefox '+floorplan_div);
				 cvjs_zoomOutMouseWheel(x , y, floorplan_div);
			 }else {
				 //scroll up
if (cvjs_debug) 				 console.log('Up Firefox '+floorplan_div);
				 cvjs_zoomInMouseWheel(x, y, floorplan_div);
			 }

			 //prevent page fom scrolling
			 return false;
		 });
	}
	else{
		 //IE, Opera, Safari, Chrome
		 jQuery('#'+floorplan_div).bind('mousewheel', function(e){


			var x = event.clientX;     // Get the horizontal coordinate
			var y = event.clientY;     // Get the vertical coordinate

			 if(e.originalEvent.wheelDelta < 0) {
				 //scroll down
if (cvjs_debug) 				 console.log('Down  Chrome IE Safari '+floorplan_div);
				 cvjs_zoomOutMouseWheel(x ,y , floorplan_div);
			 }else {
				 //scroll up
if (cvjs_debug) 				 console.log('Up Chrome IE Safari '+floorplan_div);
				 cvjs_zoomInMouseWheel(x ,y , floorplan_div, x, y);
			 }

			 //prevent page fom scrolling
			 return false;
		 });
	}

}

var cvjs_SVGCallbackMethod;

function cvjs_addHandleFunc_findSVGcoordinates(mySVGCallbackMethod) {

	cvjs_SVGCallbackMethod = mySVGCallbackMethod;
	canvas_width = jQuery("#"+floorplan_div_Array[cvjs_active_floorplan_div_nr]).width();
	canvas_height = jQuery("#"+floorplan_div_Array[cvjs_active_floorplan_div_nr]).height();

	var position = jQuery("#"+floorplan_div_Array[cvjs_active_floorplan_div_nr]).position();

	global_scale_X = canvas_width/viewBoxWidth[cvjs_active_floorplan_div_nr];
	global_scale_Y = canvas_height/viewBoxHeight[cvjs_active_floorplan_div_nr];

	if (global_scale_X<global_scale_Y)
		global_scale = global_scale_X;
	else
		global_scale = global_scale_Y;

	delta_x = (canvas_width - viewBoxWidth[cvjs_active_floorplan_div_nr]*global_scale)/2 -viewBox[cvjs_active_floorplan_div_nr].X*global_scale + position.left;
	delta_y = (canvas_height - viewBoxHeight[cvjs_active_floorplan_div_nr]*global_scale)/2 -viewBox[cvjs_active_floorplan_div_nr].Y*global_scale + position.top;

	handleGroup = cvjs_rPaper[cvjs_active_floorplan_div_nr].rect(actualLLX[cvjs_active_floorplan_div_nr],actualLLY[cvjs_active_floorplan_div_nr], actualURX[cvjs_active_floorplan_div_nr]-actualLLX[cvjs_active_floorplan_div_nr], actualURY[cvjs_active_floorplan_div_nr]-actualLLY[cvjs_active_floorplan_div_nr]).attr({fill: "#fff", "fill-opacity":"0.01"});
	handleGroup.mousedown(mousedown_cvjs_svgCoord);
}


var mousedown_cvjs_svgCoord = function(e,x,y) {

	var svg_x = (x - delta_x)/global_scale;
	var svg_y = (y - delta_y)/global_scale;

	//window.alert("SVG coordinates: " + svg_x+"  "+svg_y);

	cvjs_SVGCallbackMethod(svg_x, svg_y);

	handleGroup.selectAll('handler').remove();
	handleGroup.remove();

}




var cvjs_SVGCallbackMethod2;

function cvjs_addHandleFunc_clickSVGobject(mySVGCallbackMethod) {

	cvjs_SVGCallbackMethod2 = mySVGCallbackMethod;
	canvas_width = jQuery("#"+floorplan_div_Array[cvjs_active_floorplan_div_nr]).width();
	canvas_height = jQuery("#"+floorplan_div_Array[cvjs_active_floorplan_div_nr]).height();

	var position = jQuery("#"+floorplan_div_Array[cvjs_active_floorplan_div_nr]).position();

	global_scale_X = canvas_width/viewBoxWidth[cvjs_active_floorplan_div_nr];
	global_scale_Y = canvas_height/viewBoxHeight[cvjs_active_floorplan_div_nr];

	if (global_scale_X<global_scale_Y)
		global_scale = global_scale_X;
	else
		global_scale = global_scale_Y;

	delta_x = (canvas_width - viewBoxWidth[cvjs_active_floorplan_div_nr]*global_scale)/2 -viewBox[cvjs_active_floorplan_div_nr].X*global_scale + position.left;
	delta_y = (canvas_height - viewBoxHeight[cvjs_active_floorplan_div_nr]*global_scale)/2 -viewBox[cvjs_active_floorplan_div_nr].Y*global_scale + position.top;

	handleGroup = cvjs_rPaper[cvjs_active_floorplan_div_nr].rect(actualLLX[cvjs_active_floorplan_div_nr],actualLLY[cvjs_active_floorplan_div_nr], actualURX[cvjs_active_floorplan_div_nr]-actualLLX[cvjs_active_floorplan_div_nr], actualURY[cvjs_active_floorplan_div_nr]-actualLLY[cvjs_active_floorplan_div_nr]).attr({fill: "#fff", "fill-opacity":"0.01"});
	handleGroup.mousedown(mousedown_cvjs_svgObject);




}


var mousedown_cvjs_svgObject = function(e,x,y) {

	var svg_x = (x - delta_x)/global_scale;
	var svg_y = (y - delta_y)/global_scale;

	window.alert("Hello world!");

//	cvjs_SVGCallbackMethod(svg_x, svg_y);

	handleGroup.selectAll('handler').remove();
	handleGroup.remove();

}
















function cvjs_zoomWindow(floorplan_div)
{

	// 3.0.15c   - add "_svg" to div, if called through external API
	if (cvjs_debug) console.log(floorplan_div.lastIndexOf("_svg")+"  "+(floorplan_div.length-4));
	if (floorplan_div.lastIndexOf("_svg") == floorplan_div.length-4){
			// do nothing
	}
	else{
		floorplan_div = floorplan_div + "_svg";
	}
	


	if (panWithThumb){

		try{
	
			layers_all.attr(hide);
			layer_thumb.attr(show);
			layer_vqrooms[cvjs_active_floorplan_div_nr].attr(show);

			// this is for SVG files created with TMS   2017-09-04
			all_layer_off_thumb_on();

		}
		catch(err) { console.log("ZoomWindow "+err);}
		
	}

	
	
	
	firstX_r = 0;
	firstY_r = 0;
	lastX_r = 0;
	lastY_r = 0;
	flag_rectangle = false;	
	
	

	// 2017-08-20  block double click or additional single click
	if (cvjs_interactiveMethod_Active[cvjs_active_floorplan_div_nr]) return;
	cvjs_interactiveMethod_Active[cvjs_active_floorplan_div_nr] = true;

	hideOnlyPop();
	
	cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(floorplan_div);  // we are telling what the active winedow is
	cvjs_addHandleFunc_ZoomWindow(floorplan_div);





if (cvjs_debug) console.log("Zoom Window!!!"+floorplan_div);

//NNN	setView(cvjs_rPaper[cvjs_active_floorplan_div_nr], viewBox[cvjs_active_floorplan_div_nr].X+50,viewBox[cvjs_active_floorplan_div_nr].Y,viewBoxWidth[cvjs_active_floorplan_div_nr],viewBoxHeight[cvjs_active_floorplan_div_nr]);

}




function cvjs_addHandleFunc_ZoomWindow(floorplan_div) {

	tPath_r = "M" + firstX_r + "," + firstY_r;
	tRubberBand_r = cvjs_rPaper[cvjs_active_floorplan_div_nr].path(tPath_r).attr({stroke: "#b00000", fill : "none"});

	//myText = cvjs_rPaper[cvjs_active_floorplan_div_nr].text(40,90, '');

	canvas_width = jQuery("#"+floorplan_div).width();
	canvas_height = jQuery("#"+floorplan_div).height();

//console.log(floorplan_div+"  "+canvas_width+"  "+canvas_height+"  "+viewBoxWidth[cvjs_active_floorplan_div_nr]+"  "+viewBoxHeight[cvjs_active_floorplan_div_nr]);	
	
	var position = jQuery("#"+floorplan_div).position();

	global_scale_X = canvas_width/viewBoxWidth[cvjs_active_floorplan_div_nr];
	global_scale_Y = canvas_height/viewBoxHeight[cvjs_active_floorplan_div_nr];

	if (global_scale_X<global_scale_Y)
		global_scale = global_scale_X;
	else
		global_scale = global_scale_Y;

	delta_x = (canvas_width - viewBoxWidth[cvjs_active_floorplan_div_nr]*global_scale)/2 -viewBox[cvjs_active_floorplan_div_nr].X*global_scale + position.left;
	delta_y = (canvas_height - viewBoxHeight[cvjs_active_floorplan_div_nr]*global_scale)/2 -viewBox[cvjs_active_floorplan_div_nr].Y*global_scale + position.top;


//	console.log("svg canvas"+canvas_width+" "+canvas_height+" "+global_scale);
//	console.log("handle group"+actualLLX[cvjs_active_floorplan_div_nr]+" "+actualLLY[cvjs_active_floorplan_div_nr]+" "+(actualURX[cvjs_active_floorplan_div_nr]-actualLLX[cvjs_active_floorplan_div_nr])+" "+(actualURY[cvjs_active_floorplan_div_nr]-actualLLY[cvjs_active_floorplan_div_nr]));
//	console.log("viewBox"+viewBox[cvjs_active_floorplan_div_nr].X+" "+viewBox[cvjs_active_floorplan_div_nr].Y+" "+viewBoxWidth[cvjs_active_floorplan_div_nr]+" "+viewBoxHeight[cvjs_active_floorplan_div_nr]);

	handleGroup = cvjs_rPaper[cvjs_active_floorplan_div_nr].rect(actualLLX[cvjs_active_floorplan_div_nr],actualLLY[cvjs_active_floorplan_div_nr], actualURX[cvjs_active_floorplan_div_nr]-actualLLX[cvjs_active_floorplan_div_nr], actualURY[cvjs_active_floorplan_div_nr]-actualLLY[cvjs_active_floorplan_div_nr]).attr({fill: "#fff", "fill-opacity":"0.01"});
	handleGroup.drag(move_cvjs_create_zoomwindow_rectangle,start_cvjs_create_zoomwindow_rectangle,stop_cvjs_create_zoomwindow_rectangle);

	// we scale up the handleGroup for zoom operations		
	var Ttrans_hG = "T0,0S5.0";
	//var my_color = "#FF0000";		
	handleGroup.attr({
	//	'fill-opacity': 0.8,
	//	 fill: my_color,
		 transform: Ttrans_hG
	});


	
	
}


function cvjs_removeHandleFunc_ZoomWindowRectangle() {
	handleGroup.selectAll('handler').remove();
	handleGroup.remove();
	//console.log("handler removed");

	cvjs_objectIsZoomedExtents = false;

}



var start_cvjs_create_zoomwindow_rectangle = function(floorplan_nr) {

	flag_rectangle= false;

	//var attr_2 = '{ \"fill\" : '+fill_var+' , \"fill-opacity\": '+fillopacity_var+' , \"stroke\": '+stroke_var+', \"stroke-width\": '+strokewidth_var+', \"stroke-opacity\": '+strokeopacity_var+',  \"stroke-linejoin\": '+strokelinejoin_var+' }';

	var zoomwindow_stroke = viewBoxWidth[cvjs_active_floorplan_div_nr]/400;

	var rectColor = "#0b0b0b";
	if (cvjs_blackBackground) rectColor = "#FbFbFb";
	console.log(cvjs_blackBackground+"  "+rectColor);

	var attr_2 =  '{\"stroke\": \"'+rectColor+'\", \"fill\" : \"none\", \"stroke-opacity\": \"0.5\", \"stroke-width\": \"'+zoomwindow_stroke+'\"}';

//console.log(zoomwindow_stroke);


//{stroke: "#0b0b0b", fill : \"none\", \"stroke-opacity\": \"'+0.1+'\"}

	var json_obj = jQuery.parseJSON(attr_2);

	tRubberBand_r.attr(json_obj);
}


var zoomwindow_counter = 0;

var move_cvjs_create_zoomwindow_rectangle = function(dx,dy,x,y) {

	var text = x+" "+y+" dx="+dx+" dy="+dy;
//	myText.attr({'text': text});

	zoomwindow_counter++;


		// 2016-04-11
		x = x+document.body.scrollLeft;
		y = y+document.body.scrollTop;


		if (!flag_rectangle){
			firstX_r = x;
			firstY_r = y;
			lastX_r = dx;
			lastY_r = dy;
			flag_rectangle = true;
		}
		else{
			lastX_r = dx;
			lastY_r = dy;

		}

	tPath_r = "M" + (firstX_r-delta_x)/global_scale + "," + (firstY_r-delta_y)/global_scale;
	tPath_r += "h" + lastX_r/global_scale + "v" + lastY_r/global_scale+"h"+(-lastX_r/global_scale)+"v"+(-lastY_r/global_scale+" Z");

	if (zoomwindow_counter == 1){
		zoomwindow_counter = 0;
		tRubberBand_r.attr({'path': tPath_r});
	}

}

var stop_cvjs_create_zoomwindow_rectangle = function() {

// selected unlinked red: #ff9999 : 255, 153, 153
// #5BBEF6

	tRubberBand_r.attr({'path': "M0,0"});

	// change viewbox startpoint if in a different quardrant
	if (lastX_r<0) firstX_r+=lastX_r;
	if (lastY_r<0) firstY_r+=lastY_r;

	viewBox[cvjs_active_floorplan_div_nr].X = (firstX_r-delta_x)/global_scale;
	viewBox[cvjs_active_floorplan_div_nr].Y = (firstY_r-delta_y)/global_scale;

	viewBoxHeight[cvjs_active_floorplan_div_nr] = Math.abs(lastY_r/global_scale);    // 2016-10-02 replace window/
	viewBoxWidth[cvjs_active_floorplan_div_nr] = Math.abs(lastX_r/global_scale);

	var attr_2 = "{\"viewBox\" : \""+viewBox[cvjs_active_floorplan_div_nr].X+" "+viewBox[cvjs_active_floorplan_div_nr].Y+" "+viewBoxWidth[cvjs_active_floorplan_div_nr]+" "+viewBoxHeight[cvjs_active_floorplan_div_nr]+"\" }";
	var json_obj = jQuery.parseJSON(attr_2);
	cvjs_rPaper[cvjs_active_floorplan_div_nr].attr(json_obj);


	tRubberBand_r.attr({fill: '#ff9999', "fill-opacity": "0.5", stroke: '#ff9999', 'stroke-opacity': "1"});

	cvjs_removeHandleFunc_ZoomWindowRectangle();

	cvjs_interactiveMethod_Active[cvjs_active_floorplan_div_nr] = false;


	if (panWithThumb){

		try{
			layers_all.attr(show);
			layer_thumb.attr(hide);
			layer_vqrooms[cvjs_active_floorplan_div_nr].attr(show);
			// this is for SVG files created with TMS   2017-09-04
			all_layer_on_thumb_off();


		}
		catch(err) { console.log("ZoomWindowEnd "+err);}



		}

		// 5.1.04a
		cvjs_zoomZeroWidth();

};
// END - Draw Rectangle






function cvjs_panRight()
{


	try{
//		layers_all.show();
//		layer_vqrooms[cvjs_active_floorplan_div_nr].show();
//		layer_thumb.hide();

	}
	catch(err){
		//  allow the code to work with both version 1.1 and 1.2
		var i=0;
		//console.log(err);
	}
	hideOnlyPop();

//	viewBox[cvjs_active_floorplan_div_nr].X+= 50;
	viewBox[cvjs_active_floorplan_div_nr].X+= viewBoxWidth[cvjs_active_floorplan_div_nr]/10;



	var attr_2 = "{\"viewBox\" : \""+viewBox[cvjs_active_floorplan_div_nr].X+" "+viewBox[cvjs_active_floorplan_div_nr].Y+" "+viewBoxWidth[cvjs_active_floorplan_div_nr]+" "+viewBoxHeight[cvjs_active_floorplan_div_nr]+"\" }";
	var json_obj = jQuery.parseJSON(attr_2);
	cvjs_rPaper[cvjs_active_floorplan_div_nr].attr(json_obj);

//NNN	setView(cvjs_rPaper[cvjs_active_floorplan_div_nr], viewBox[cvjs_active_floorplan_div_nr].X+50,viewBox[cvjs_active_floorplan_div_nr].Y,viewBoxWidth[cvjs_active_floorplan_div_nr],viewBoxHeight[cvjs_active_floorplan_div_nr]);

	cvjs_objectIsZoomedExtents = false;
}


function cvjs_panUp()
{

	try{
//		layers_all.show();
//		layer_vqrooms[cvjs_active_floorplan_div_nr].show();
//		layer_thumb.hide();

	}
	catch(err){
		//  allow the code to work with both version 1.1 and 1.2
		var i=0;
		//console.log(err);
	}


	hideOnlyPop();

//	viewBox[cvjs_active_floorplan_div_nr].Y-= 50;
	viewBox[cvjs_active_floorplan_div_nr].Y-= viewBoxHeight[cvjs_active_floorplan_div_nr]/10;




	var attr_2 = "{\"viewBox\" : \""+viewBox[cvjs_active_floorplan_div_nr].X+" "+viewBox[cvjs_active_floorplan_div_nr].Y+" "+viewBoxWidth[cvjs_active_floorplan_div_nr]+" "+viewBoxHeight[cvjs_active_floorplan_div_nr]+"\" }";
	var json_obj = jQuery.parseJSON(attr_2);
	cvjs_rPaper[cvjs_active_floorplan_div_nr].attr(json_obj);

	cvjs_objectIsZoomedExtents = false;

//NNN	setView(cvjs_rPaper[cvjs_active_floorplan_div_nr], viewBox[cvjs_active_floorplan_div_nr].X,viewBox[cvjs_active_floorplan_div_nr].Y-50,viewBoxWidth[cvjs_active_floorplan_div_nr],viewBoxHeight[cvjs_active_floorplan_div_nr]);
}


function cvjs_panDown()
{

	try{
//		layers_all.show();
//		layer_vqrooms[cvjs_active_floorplan_div_nr].show();
//		layer_thumb.hide();

	}
	catch(err){
		//  allow the code to work with both version 1.1 and 1.2
		var i=0;
		//console.log(err);
	}

	hideOnlyPop();

	//viewBox[cvjs_active_floorplan_div_nr].Y+= 50;
	viewBox[cvjs_active_floorplan_div_nr].Y+= viewBoxHeight[cvjs_active_floorplan_div_nr]/10;


	var attr_2 = "{\"viewBox\" : \""+viewBox[cvjs_active_floorplan_div_nr].X+" "+viewBox[cvjs_active_floorplan_div_nr].Y+" "+viewBoxWidth[cvjs_active_floorplan_div_nr]+" "+viewBoxHeight[cvjs_active_floorplan_div_nr]+"\" }";
	var json_obj = jQuery.parseJSON(attr_2);
	cvjs_rPaper[cvjs_active_floorplan_div_nr].attr(json_obj);

	cvjs_objectIsZoomedExtents = false;
//NNN	setView(cvjs_rPaper[cvjs_active_floorplan_div_nr], viewBox[cvjs_active_floorplan_div_nr].X,viewBox[cvjs_active_floorplan_div_nr].Y+50,viewBoxWidth[cvjs_active_floorplan_div_nr],viewBoxHeight[cvjs_active_floorplan_div_nr]);
}

function cvjs_panLeft()
{

	try{
//		layers_all.show();
//		layer_vqrooms[cvjs_active_floorplan_div_nr].show();
//		layer_thumb.hide();

	}
	catch(err){
		//  allow the code to work with both version 1.1 and 1.2
		var i=0;
		//console.log(err);
	}
	hideOnlyPop();

//	viewBox[cvjs_active_floorplan_div_nr].X-= 50;
	viewBox[cvjs_active_floorplan_div_nr].X-= viewBoxWidth[cvjs_active_floorplan_div_nr]/10;

	var attr_2 = "{\"viewBox\" : \""+viewBox[cvjs_active_floorplan_div_nr].X+" "+viewBox[cvjs_active_floorplan_div_nr].Y+" "+viewBoxWidth[cvjs_active_floorplan_div_nr]+" "+viewBoxHeight[cvjs_active_floorplan_div_nr]+"\" }";
	var json_obj = jQuery.parseJSON(attr_2);
	cvjs_rPaper[cvjs_active_floorplan_div_nr].attr(json_obj);

//NNN	setView(cvjs_rPaper[cvjs_active_floorplan_div_nr], viewBox[cvjs_active_floorplan_div_nr].X-50,viewBox[cvjs_active_floorplan_div_nr].Y,viewBoxWidth[cvjs_active_floorplan_div_nr],viewBoxHeight[cvjs_active_floorplan_div_nr]);

	cvjs_objectIsZoomedExtents = false;


}




/**
 * Zoom Extents on the drawing
 */
 
 
function cvjs_zoomExtents(floorplan_div){
	
	cvjs_resetZoomPan(floorplan_div);
}



function cvjs_resetZoomPan(floorplan_div)
{

	cvjs_addedObjectsToExtents = true;    // we are forcing a calculated extents for all cases

	if (floorplan_div == undefined){	
		// do nothing;
		return false;
	}
	else{
		// find active floorplan number and set that
		cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(floorplan_div);
	}

	
	
	// 3.0.15c   - add "_svg" to div, if called through external API
	if (cvjs_debug) console.log(floorplan_div.lastIndexOf("_svg")+"  "+(floorplan_div.length-4));
	if (floorplan_div.lastIndexOf("_svg") == floorplan_div.length-4){
			// do nothing
	}
	else{
		floorplan_div = floorplan_div + "_svg";
	}
	
	
	
	
	
	
if (cvjs_debug) console.log("cvjs_resetZoomPan: cvjs_active_floorplan_div_nr "+cvjs_active_floorplan_div_nr+" rpWidth[cvjs_active_floorplan_div_nr] "+rpWidth[cvjs_active_floorplan_div_nr]+" rpHeight[cvjs_active_floorplan_div_nr] "+rpHeight[cvjs_active_floorplan_div_nr]+"  "+floorplan_div);

//	window.alert(cvjs_SVG_multiPagesFlag[cvjs_active_floorplan_div_nr]+"  "+cvjs_addedObjectsToExtents);
	bbox = cvjs_rPaper[cvjs_active_floorplan_div_nr].getBBox();
		
	try{
//		layer_thumb.attr(show);
//		layer_vqrooms[cvjs_active_floorplan_div_nr].attr(show);
//		layers_all.show();              // 2016-01-11
//		layer_vqrooms[cvjs_active_floorplan_div_nr].show();
//		layer_thumb.hide();
		layers_all.attr(show);              // 2016-01-11
		layer_vqrooms[cvjs_active_floorplan_div_nr].attr(show);
		layer_thumb.attr(hide);

	}
	catch(err){
		//  allow the code to work with both version 1.1 and 1.2
		var i=0;
		//console.log(err);
	}

	hideOnlyPop();

	if (cvjs_addedObjectsToExtents){  // custom case, added objects to canvas, so calculating extents before zoom extents

		// the masterbackground is scaled 
		var Ttrans = "T0,0S1.0";
		//var my_color = "#FF0000";
		cvjs_masterBackground[cvjs_active_floorplan_div_nr].attr({
		//	'fill-opacity': 0.8,
		//	 fill: my_color,
			 transform: Ttrans
		});
	
	
		bbox = cvjs_rPaper[cvjs_active_floorplan_div_nr].getBBox();
		if (cvjs_SVG_multiPagesFlag[cvjs_active_floorplan_div_nr]){   // 2018-03-21 
		
				
			bbox = cvjs_SVGGroup[cvjs_active_floorplan_div_nr].getBBox();
			// we have to add the extents of the stamp later
						
			// we have added stamp  (or other stuff)
			if (cvjs_customLayerContentAdded){
				var bbox2 = cvjs_customLayerContent.getBBox();
				var bbox3 = cvjs_SVGGroup[cvjs_active_floorplan_div_nr].getBBox();  // dummy
				if (bbox2.x<bbox3.x) bbox.x = bbox2.x; 
				if (bbox2.y<bbox3.y) bbox.y = bbox2.y;
			
				if (cvjs_debug) console.log("YYYYYYYYYYYYYYY"+bbox2.x+" "+bbox2.width);
				if (cvjs_debug) console.log("YYYYYYYYYYYYYYY"+bbox3.x+" "+bbox3.width);
				
				if ( (bbox2.x+bbox2.width) > (bbox3.x+bbox3.width) ) bbox.width = bbox2.x+bbox2.width - bbox3.x;
				if ( (bbox2.y+bbox2.height) > (bbox3.y+bbox3.height) ) bbox.height = bbox2.x+bbox2.width - bbox3.y;
			}
		}
			
		if (cvjs_debug) console.log("bounding box rpaper "+bbox.x+"  "+bbox.y+" "+bbox.width+" "+bbox.height)

			
		// we scale up the masterbackground for drag and paint operations		
		var Ttrans = "T0,0S3.0";
		//var my_color = "#FF0000";		
		cvjs_masterBackground[cvjs_active_floorplan_div_nr].attr({
		//	'fill-opacity': 0.8,
		//	 fill: my_color,
			 transform: Ttrans
		});
	
		viewBox[cvjs_active_floorplan_div_nr].X = bbox.x;
		viewBox[cvjs_active_floorplan_div_nr].Y = bbox.y;
		viewBoxWidth[cvjs_active_floorplan_div_nr] = bbox.width;
		viewBoxHeight[cvjs_active_floorplan_div_nr] = bbox.height;

			
		vBHo = viewBoxHeight[cvjs_active_floorplan_div_nr];
		vBWo = viewBoxWidth[cvjs_active_floorplan_div_nr];
		zoomScale = 1.0;

		var attr_2 = "{\"viewBox\" : \""+viewBox[cvjs_active_floorplan_div_nr].X+" "+viewBox[cvjs_active_floorplan_div_nr].Y+" "+viewBoxWidth[cvjs_active_floorplan_div_nr] +" "+viewBoxHeight[cvjs_active_floorplan_div_nr]+"\" }";

//window.alert("zoom extents "+attr_2);
		
		var json_obj = jQuery.parseJSON(attr_2);
		cvjs_rPaper[cvjs_active_floorplan_div_nr].attr(json_obj);
				
	}
	else{  // standard case, extents value from input file or intial calculation

	
		// the masterbackground is scaled down to original size
		var Ttrans = "T0,0S1.0";
		//var my_color = "#FF0000";
			
		cvjs_masterBackground[cvjs_active_floorplan_div_nr].attr({
		//	'fill-opacity': 0.8,
		//	 fill: my_color,
			 transform: Ttrans
		});
		
	
	
	//console.log("viewbox "+rpWidth[cvjs_active_floorplan_div_nr]+" "+rpHeight[cvjs_active_floorplan_div_nr]);
		viewBox[cvjs_active_floorplan_div_nr].X = actualLLX[cvjs_active_floorplan_div_nr];
		viewBox[cvjs_active_floorplan_div_nr].Y = actualLLY[cvjs_active_floorplan_div_nr];
	//    viewBoxWidth[cvjs_active_floorplan_div_nr] = actualURX[cvjs_active_floorplan_div_nr];
	//	viewBoxHeight[cvjs_active_floorplan_div_nr] = actualURY[cvjs_active_floorplan_div_nr];

		viewBoxWidth[cvjs_active_floorplan_div_nr] = rpWidth[cvjs_active_floorplan_div_nr];
		viewBoxHeight[cvjs_active_floorplan_div_nr] = rpHeight[cvjs_active_floorplan_div_nr];
		
		vBHo = viewBoxHeight[cvjs_active_floorplan_div_nr];
		vBWo = viewBoxWidth[cvjs_active_floorplan_div_nr];
		zoomScale = 1.0;

		var attr_2 = "{\"viewBox\" : \""+viewBox[cvjs_active_floorplan_div_nr].X+" "+viewBox[cvjs_active_floorplan_div_nr].Y+" "+rpWidth[cvjs_active_floorplan_div_nr]+" "+rpHeight[cvjs_active_floorplan_div_nr]+"\" }";

		var json_obj = jQuery.parseJSON(attr_2);
		cvjs_rPaper[cvjs_active_floorplan_div_nr].attr(json_obj);	
		
	
		// the masterbackground is scaled up for drag and paint operations	
		var Ttrans = "T0,0S3.0";
		//var my_color = "#FF0000";	
		cvjs_masterBackground[cvjs_active_floorplan_div_nr].attr({
		//	'fill-opacity': 0.8,
		//	 fill: my_color,
			 transform: Ttrans
		});
		
		
	}	
		
	
//NNN	viewBox = cvjs_rPaper[cvjs_active_floorplan_div_nr].setViewBox(actualLLX[cvjs_active_floorplan_div_nr],actualLLY[cvjs_active_floorplan_div_nr],rpWidth[cvjs_active_floorplan_div_nr], rpHeight[cvjs_active_floorplan_div_nr]);
//console.log(vBHo+" "+vBWo+" "+zoomScale);
	cvjs_objectIsZoomedExtents = true;

	
		// 5.1.04a
		cvjs_zoomZeroWidth();
		
}



function cvjs_resetZoomPan_SetMasterBackground(active_floorplan_div_nr)
{

// 3.0.13h
//if (true) return;


	if (active_floorplan_div_nr == undefined){
	
		active_floorplan_div_nr = 0;
	}
	else{
		// find active floorplan number and set that
		cvjs_active_floorplan_div_nr = active_floorplan_div_nr;
	
	}

if (cvjs_debug) console.log("cvjs_resetZoomPan_SetMasterBackground: cvjs_active_floorplan_div_nr "+cvjs_active_floorplan_div_nr+" rpWidth[cvjs_active_floorplan_div_nr] "+rpWidth[cvjs_active_floorplan_div_nr]+" rpHeight[cvjs_active_floorplan_div_nr] "+rpHeight[cvjs_active_floorplan_div_nr]);


	var bbox;
	
	if( jQuery('#'+floorplan_div_Array[cvjs_active_floorplan_div_nr]).is(':visible')){	// WE CAN ONLY MAKE THIS CALCULATED EXTENTS IF THE <DIV> IS VISIBLE

	
	try{ // 3.0.13h
	
		// what if the masterbackground is already there, we need to remove

/***		
		console.log(cvjs_active_floorplan_div_nr+" "+cvjs_masterBackground[cvjs_active_floorplan_div_nr])
		bbox = cvjs_masterBackground[cvjs_active_floorplan_div_nr].getBBox();	
if (cvjs_debug) console.log(" master_bounding "+bbox.x+"  "+bbox.y+"  "+bbox.width+"  "+bbox.height+"  "+bbox.path); 	
**/		
		cvjs_masterBackground[cvjs_active_floorplan_div_nr].remove();

/**
		bbox = cvjs_SVGGroup[cvjs_active_floorplan_div_nr].getBBox();	
if (cvjs_debug) console.log(" cvjs_SVGGroup "+bbox.x+"  "+bbox.y+"  "+bbox.width+"  "+bbox.height+"  "+bbox.path); 	
**/

		}
	catch(err){
		console.log(err);
	}	
	
//if (cvjs_debug) console.log("1"); 	
	
		bbox = cvjs_rPaper[cvjs_active_floorplan_div_nr].getBBox();	
		

//if (cvjs_debug) console.log(" rPaper_bounding "+bbox.x+"  "+bbox.y+"  "+bbox.width+"  "+bbox.height+"  "+bbox.path); 	
		
		
		
	}
	else{  // HIDDEN  = standard case, then return
	
//if (cvjs_debug) console.log("2"); 	
	
	
	//console.log("viewbox "+rpWidth[cvjs_active_floorplan_div_nr]+" "+rpHeight[cvjs_active_floorplan_div_nr]);
		viewBox[cvjs_active_floorplan_div_nr].X = actualLLX[cvjs_active_floorplan_div_nr];
		viewBox[cvjs_active_floorplan_div_nr].Y = actualLLY[cvjs_active_floorplan_div_nr];
	//    viewBoxWidth[cvjs_active_floorplan_div_nr] = actualURX[cvjs_active_floorplan_div_nr];
	//	viewBoxHeight[cvjs_active_floorplan_div_nr] = actualURY[cvjs_active_floorplan_div_nr];

		viewBoxWidth[cvjs_active_floorplan_div_nr] = rpWidth[cvjs_active_floorplan_div_nr];
		viewBoxHeight[cvjs_active_floorplan_div_nr] = rpHeight[cvjs_active_floorplan_div_nr];
		
		vBHo = viewBoxHeight[cvjs_active_floorplan_div_nr];
		vBWo = viewBoxWidth[cvjs_active_floorplan_div_nr];
		zoomScale = 1.0;

		var attr_2 = "{\"viewBox\" : \""+viewBox[cvjs_active_floorplan_div_nr].X+" "+viewBox[cvjs_active_floorplan_div_nr].Y+" "+rpWidth[cvjs_active_floorplan_div_nr]+" "+rpHeight[cvjs_active_floorplan_div_nr]+"\" }";
		var json_obj = jQuery.parseJSON(attr_2);
		cvjs_rPaper[cvjs_active_floorplan_div_nr].attr(json_obj);	
	
		// we return here...... if div is hidded then extents are zero
		
		//	cvjs_objectIsZoomedExtents = true;
		
		return;
				
	}


//if (true) return;	
	
	
	try{

		layers_all.attr(show);              // 2016-01-11		
		layer_vqrooms[cvjs_active_floorplan_div_nr].attr(show);
		layer_thumb.attr(hide);
	}
	catch(err){
		//  allow the code to work with both version 1.1 and 1.2
		var i=0;
		//console.log(err);
	}

	hideOnlyPop();

	if (true){  // custom case, added objects to canvas, so calculating extents before zoom extents



//if (cvjs_debug) console.log("4"); 	

		bbox = cvjs_rPaper[cvjs_active_floorplan_div_nr].getBBox();
		
				
//if (cvjs_debug) console.log(""+bbox.x+"  "+bbox.y+"  "+bbox.width+"  "+bbox.height); 	
		
		
		
		if (cvjs_SVG_multiPagesFlag[cvjs_active_floorplan_div_nr]){   // 2018-03-21 
			bbox = cvjs_SVGGroup[cvjs_active_floorplan_div_nr].getBBox();
			// we have to add the extents of the stamp later
			
			// we have added stamp  (or other stuff)
			if (cvjs_customLayerContentAdded){
				var bbox2 = cvjs_customLayerContent.getBBox();
				var bbox3 = cvjs_SVGGroup[cvjs_active_floorplan_div_nr].getBBox();  // dummy
				if (bbox2.x<bbox3.x) bbox.x = bbox2.x; 
				if (bbox2.y<bbox3.y) bbox.y = bbox2.y;
			
				if (cvjs_debug) console.log("YYYYYYYYYYYYYYY"+bbox2.x+" "+bbox2.width);
				if (cvjs_debug) console.log("YYYYYYYYYYYYYYY"+bbox3.x+" "+bbox3.width);
				
				if ( (bbox2.x+bbox2.width) > (bbox3.x+bbox3.width) ) bbox.width = bbox2.x+bbox2.width - bbox3.x;
				if ( (bbox2.y+bbox2.height) > (bbox3.y+bbox3.height) ) bbox.height = bbox2.x+bbox2.width - bbox3.y;
			}
									
		}

     //3.0.13h

		
		
		viewBox[cvjs_active_floorplan_div_nr].X = bbox.x;
		viewBox[cvjs_active_floorplan_div_nr].Y = bbox.y;

		viewBoxWidth[cvjs_active_floorplan_div_nr] = bbox.width;
		viewBoxHeight[cvjs_active_floorplan_div_nr] = bbox.height;

				
		
//		if (cvjs_debug) console.log(bbox.x+" "+bbox.y+" "+bbox.width+" "+bbox.height);
		
		
		vBHo = viewBoxHeight[cvjs_active_floorplan_div_nr];
		vBWo = viewBoxWidth[cvjs_active_floorplan_div_nr];
		zoomScale = 1.0;

		var attr_2 = "{\"viewBox\" : \""+viewBox[cvjs_active_floorplan_div_nr].X+" "+viewBox[cvjs_active_floorplan_div_nr].Y+" "+viewBoxWidth[cvjs_active_floorplan_div_nr] +" "+viewBoxHeight[cvjs_active_floorplan_div_nr]+"\" }";
		var json_obj = jQuery.parseJSON(attr_2);
		cvjs_rPaper[cvjs_active_floorplan_div_nr].attr(json_obj);
	

		if (cvjs_masterBackground[cvjs_active_floorplan_div_nr]!=undefined) cvjs_masterBackground[cvjs_active_floorplan_div_nr].remove();

		var myid = "#master_"+floorplan_div_Array[cvjs_active_floorplan_div_nr];
//		window.alert(myid);
		if (cvjs_masterBackground[cvjs_active_floorplan_div_nr]!=undefined) jQuery(myid).remove();
		if (cvjs_masterBackground[cvjs_active_floorplan_div_nr]!=undefined) jQuery(myid).empty();
		
 // window.alert("making master 5 "+cvjs_masterBackground[cvjs_active_floorplan_div_nr]);
	
		
		cvjs_masterBackground[cvjs_active_floorplan_div_nr] = cvjs_rPaper[cvjs_active_floorplan_div_nr].group(cvjs_rPaper[cvjs_active_floorplan_div_nr].rect( viewBox[cvjs_active_floorplan_div_nr].X, viewBox[cvjs_active_floorplan_div_nr].Y, viewBoxWidth[cvjs_active_floorplan_div_nr], viewBoxHeight[cvjs_active_floorplan_div_nr]));
		cvjs_masterBackground[cvjs_active_floorplan_div_nr].attr({fill: "#fff", "fill-opacity":"0.01", "stroke-width": 0});	
//		cvjs_masterBackground[cvjs_active_floorplan_div_nr].attr({fill: "#ff0000", "fill-opacity":"0.3", "stroke-width": 0});	

		
		
		cvjs_masterBackground[cvjs_active_floorplan_div_nr].data("id", "master_"+floorplan_div_Array[cvjs_active_floorplan_div_nr]);
		cvjs_masterBackground[cvjs_active_floorplan_div_nr].attr({id: "master_"+floorplan_div_Array[cvjs_active_floorplan_div_nr]});
		
		
		
		// 2018-01-09
		//cvjs_masterBackground[cvjs_active_floorplan_div_nr].prepend(layer_vqrooms[cvjs_active_floorplan_div_nr]);
		layer_vqrooms[cvjs_active_floorplan_div_nr].prepend(cvjs_masterBackground[cvjs_active_floorplan_div_nr]);

		//window.alert("hi");
		
		
	//	console.log(actualLLX[cvjs_active_floorplan_div_nr]+" "+actualLLY[cvjs_active_floorplan_div_nr]+" "+actualURX[cvjs_active_floorplan_div_nr]+" "+actualURY[cvjs_active_floorplan_div_nr]);
		

		actualLLX[cvjs_active_floorplan_div_nr] = viewBox[cvjs_active_floorplan_div_nr].X;
		actualLLY[cvjs_active_floorplan_div_nr] = viewBox[cvjs_active_floorplan_div_nr].Y 
		actualURX[cvjs_active_floorplan_div_nr] = actualLLX[cvjs_active_floorplan_div_nr] + viewBoxWidth[cvjs_active_floorplan_div_nr];
		actualURY[cvjs_active_floorplan_div_nr] = actualLLY[cvjs_active_floorplan_div_nr] + viewBoxHeight[cvjs_active_floorplan_div_nr];
		
		var lfactor = Math.sqrt(Math.pow((actualURX[cvjs_active_floorplan_div_nr]-actualLLX[cvjs_active_floorplan_div_nr]) ,2)+Math.pow((actualURX[cvjs_active_floorplan_div_nr]-actualLLX[cvjs_active_floorplan_div_nr]) ,2))
		cvjs_redlineThickness_scaleFactor = cvjs_redlineThickness_drawingFactor * lfactor;	


		//3.0.13i	
		cvjs_checkLicense();
		
		
				
	}
	else{  // standard case, extents value from input file or intial calculation

	}	

	cvjs_objectIsZoomedExtents = true;

}






function cvjs_zoomIn(floorplan_div)
{


	if (floorplan_div == undefined){
	
		// do nothing;
	}
	else{
		// find active floorplan number and set that
		cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(floorplan_div);
	
	}
	
	
	// 3.0.15c   - add "_svg" to div, if called through external API
	if (cvjs_debug) console.log(floorplan_div.lastIndexOf("_svg")+"  "+(floorplan_div.length-4));
	if (floorplan_div.lastIndexOf("_svg") == floorplan_div.length-4){
			// do nothing
	}
	else{
		floorplan_div = floorplan_div + "_svg";
	}
	
	
	
	
//window.alert(cvjs_active_floorplan_div_nr);
//window.alert(cvjs_rPaper[0]);
//window.alert(cvjs_rPaper[1]);

	
	try{
//		layers_all.show();
//		layer_vqrooms[cvjs_active_floorplan_div_nr].show();
//		layer_thumb.hide();

	}
	catch(err){
		//  allow the code to work with both version 1.1 and 1.2
		var i=0;
		//console.log(err);
	}

	hideOnlyPop();
	vBHo = viewBoxHeight[cvjs_active_floorplan_div_nr];
	vBWo = viewBoxWidth[cvjs_active_floorplan_div_nr];

//console.log("viewBoxHeight[cvjs_active_floorplan_div_nr]="+viewBoxHeight[cvjs_active_floorplan_div_nr]+" viewBoxWidth[cvjs_active_floorplan_div_nr]="+viewBoxWidth[cvjs_active_floorplan_div_nr]+" DefaultZoomFactor="+DefaultZoomFactor);

	viewBoxWidth[cvjs_active_floorplan_div_nr] /= DefaultZoomFactor;
	viewBoxHeight[cvjs_active_floorplan_div_nr]/= DefaultZoomFactor;
	viewBox[cvjs_active_floorplan_div_nr].X -= (viewBoxWidth[cvjs_active_floorplan_div_nr] - vBWo) / 2;
	viewBox[cvjs_active_floorplan_div_nr].Y -= (viewBoxHeight[cvjs_active_floorplan_div_nr] - vBHo) / 2;


	var attr_1 = "{ \"viewBox\" : \""+viewBox[cvjs_active_floorplan_div_nr].X+" "+viewBox[cvjs_active_floorplan_div_nr].Y+" "+viewBoxWidth[cvjs_active_floorplan_div_nr]+" "+viewBoxHeight[cvjs_active_floorplan_div_nr]+"\" }";
	var pan_x = jQuery.parseJSON(attr_1);
	cvjs_rPaper[cvjs_active_floorplan_div_nr].attr(pan_x);

//NNN	setView(cvjs_rPaper[cvjs_active_floorplan_div_nr], viewBox[cvjs_active_floorplan_div_nr].X,viewBox[cvjs_active_floorplan_div_nr].Y,viewBoxWidth[cvjs_active_floorplan_div_nr],viewBoxHeight[cvjs_active_floorplan_div_nr]);
//NNN	zoomScale = viewBoxWidth[cvjs_active_floorplan_div_nr]/cvjs_rPaper[cvjs_active_floorplan_div_nr].width;


//console.log("xx3 viewBoxWidth[cvjs_active_floorplan_div_nr] "+viewBoxWidth[cvjs_active_floorplan_div_nr]+" rpWidth[cvjs_active_floorplan_div_nr] "+rpWidth[cvjs_active_floorplan_div_nr]);

	zoomScale = viewBoxWidth[cvjs_active_floorplan_div_nr]/rpWidth[cvjs_active_floorplan_div_nr];

//	var string_X = "vBHo ="+vBHo+" vBWo ="+vBWo+" viewBox[cvjs_active_floorplan_div_nr].X="+viewBox[cvjs_active_floorplan_div_nr].X+" viewBox[cvjs_active_floorplan_div_nr].Y="+viewBox[cvjs_active_floorplan_div_nr].Y+" cvjs_rPaper[cvjs_active_floorplan_div_nr].width="+cvjs_rPaper[cvjs_active_floorplan_div_nr].width+" viewBoxWidth[cvjs_active_floorplan_div_nr]="+viewBoxWidth[cvjs_active_floorplan_div_nr]+" vBWo="+vBWo+" zoomScale="+zoomScale;
//	jQuery('#temperature').css('color', '#00FF00');
//	jQuery("#temperature").html(string_X);

	cvjs_objectIsZoomedExtents = false;
	
	
	// 5.1.04a
	cvjs_zoomZeroWidth();
	

}







function cvjs_zoomInMouseWheel(x_pos, y_pos, floorplan_div)
{


	if (floorplan_div == undefined){
	
		// do nothing;
	}
	else{
		// find active floorplan number and set that
		cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(floorplan_div);
	
	}


	var canvas_width = jQuery("#"+floorplan_div).width();
	var canvas_height = jQuery("#"+floorplan_div).height();

	var position = jQuery("#"+floorplan_div).position();

	var global_scale_X = canvas_width/viewBoxWidth[cvjs_active_floorplan_div_nr];
	var global_scale_Y = canvas_height/viewBoxHeight[cvjs_active_floorplan_div_nr];

	if (global_scale_X<global_scale_Y)
		global_scale = global_scale_X;
	else
		global_scale = global_scale_Y;

	var delta_x = (canvas_width - viewBoxWidth[cvjs_active_floorplan_div_nr]*global_scale)/2 -viewBox[cvjs_active_floorplan_div_nr].X*global_scale + position.left;
	var delta_y = (canvas_height - viewBoxHeight[cvjs_active_floorplan_div_nr]*global_scale)/2 -viewBox[cvjs_active_floorplan_div_nr].Y*global_scale + position.top;
	
	
	var x_pos = x_pos+document.body.scrollLeft;
	var y_pos = y_pos+document.body.scrollTop;
	var mypointX = (x_pos-delta_x)/global_scale;
	var mypointY = (y_pos-delta_y)/global_scale;
	var x_offset =  (mypointX- viewBox[cvjs_active_floorplan_div_nr].X)/viewBoxWidth[cvjs_active_floorplan_div_nr];
	var y_offset =  (mypointY- viewBox[cvjs_active_floorplan_div_nr].Y)/viewBoxHeight[cvjs_active_floorplan_div_nr];
	


	try{
//		layers_all.show();
//		layer_vqrooms[cvjs_active_floorplan_div_nr].show();
//		layer_thumb.hide();

	}
	catch(err){
		//  allow the code to work with both version 1.1 and 1.2
		var i=0;
		//console.log(err);
	}

	hideOnlyPop();
	vBHo = viewBoxHeight[cvjs_active_floorplan_div_nr];
	vBWo = viewBoxWidth[cvjs_active_floorplan_div_nr];
	viewBoxWidth[cvjs_active_floorplan_div_nr] /= DefaultZoomFactor_mouseWheel;
	viewBoxHeight[cvjs_active_floorplan_div_nr]/= DefaultZoomFactor_mouseWheel;

	// offset runs from -50 t0 +50
	// when offset = -50  0
	// when offset = 0  (viewBoxWidth[cvjs_active_floorplan_div_nr] - vBWo) / 2
	// when offset = 50  (viewBoxWidth[cvjs_active_floorplan_div_nr] - vBWo)
	//viewBox[cvjs_active_floorplan_div_nr].X -= (viewBoxWidth[cvjs_active_floorplan_div_nr] - vBWo)*(50.0+x_offset)/100.0 ;
	//viewBox[cvjs_active_floorplan_div_nr].Y -= (viewBoxHeight[cvjs_active_floorplan_div_nr] - vBHo)*(50.0+x_offset)/100.0 ;
	

	
	// offset runs from 0 to 1
	viewBox[cvjs_active_floorplan_div_nr].X -= (viewBoxWidth[cvjs_active_floorplan_div_nr] - vBWo)*(x_offset);
	viewBox[cvjs_active_floorplan_div_nr].Y -= (viewBoxHeight[cvjs_active_floorplan_div_nr] - vBHo)*(y_offset);
	

	var attr_1 = "{ \"viewBox\" : \""+viewBox[cvjs_active_floorplan_div_nr].X+" "+viewBox[cvjs_active_floorplan_div_nr].Y+" "+viewBoxWidth[cvjs_active_floorplan_div_nr]+" "+viewBoxHeight[cvjs_active_floorplan_div_nr]+"\" }";
	var pan_x = jQuery.parseJSON(attr_1);
	cvjs_rPaper[cvjs_active_floorplan_div_nr].attr(pan_x);

//NNN	setView(cvjs_rPaper[cvjs_active_floorplan_div_nr], viewBox[cvjs_active_floorplan_div_nr].X,viewBox[cvjs_active_floorplan_div_nr].Y,viewBoxWidth[cvjs_active_floorplan_div_nr],viewBoxHeight[cvjs_active_floorplan_div_nr]);
//NNN	zoomScale = viewBoxWidth[cvjs_active_floorplan_div_nr]/cvjs_rPaper[cvjs_active_floorplan_div_nr].width;


//console.log("xx3 viewBoxWidth[cvjs_active_floorplan_div_nr] "+viewBoxWidth[cvjs_active_floorplan_div_nr]+" rpWidth[cvjs_active_floorplan_div_nr] "+rpWidth[cvjs_active_floorplan_div_nr]);

	zoomScale = viewBoxWidth[cvjs_active_floorplan_div_nr]/rpWidth[cvjs_active_floorplan_div_nr];

//	var string_X = "vBHo ="+vBHo+" vBWo ="+vBWo+" viewBox[cvjs_active_floorplan_div_nr].X="+viewBox[cvjs_active_floorplan_div_nr].X+" viewBox[cvjs_active_floorplan_div_nr].Y="+viewBox[cvjs_active_floorplan_div_nr].Y+" cvjs_rPaper[cvjs_active_floorplan_div_nr].width="+cvjs_rPaper[cvjs_active_floorplan_div_nr].width+" viewBoxWidth[cvjs_active_floorplan_div_nr]="+viewBoxWidth[cvjs_active_floorplan_div_nr]+" vBWo="+vBWo+" zoomScale="+zoomScale;
//	jQuery('#temperature').css('color', '#00FF00');
//	jQuery("#temperature").html(string_X);

	cvjs_objectIsZoomedExtents = false;
	
	
	// 5.1.04a
	cvjs_zoomZeroWidth();
	

}





function cvjs_zoomOut(floorplan_div)
{


	if (floorplan_div == undefined){
	
		// do nothing;
	}
	else{
		// find active floorplan number and set that
		cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(floorplan_div);
	
	}


	// 3.0.15c   - add "_svg" to div, if called through external API
	if (cvjs_debug) console.log(floorplan_div.lastIndexOf("_svg")+"  "+(floorplan_div.length-4));
	if (floorplan_div.lastIndexOf("_svg") == floorplan_div.length-4){
			// do nothing
	}
	else{
		floorplan_div = floorplan_div + "_svg";
	}



	try{
//		layers_all.show();
//		layer_vqrooms[cvjs_active_floorplan_div_nr].show();
//		layer_thumb.hide();

	}
	catch(err){
		//  allow the code to work with both version 1.1 and 1.2
		var i=0;
		//console.log(err);
	}

	hideOnlyPop();
	vBHo = viewBoxHeight[cvjs_active_floorplan_div_nr];
	vBWo = viewBoxWidth[cvjs_active_floorplan_div_nr];
	viewBoxWidth[cvjs_active_floorplan_div_nr] *= DefaultZoomFactor;
	viewBoxHeight[cvjs_active_floorplan_div_nr]*= DefaultZoomFactor;
	viewBox[cvjs_active_floorplan_div_nr].X -= (viewBoxWidth[cvjs_active_floorplan_div_nr] - vBWo) / 2;
	viewBox[cvjs_active_floorplan_div_nr].Y -= (viewBoxHeight[cvjs_active_floorplan_div_nr] - vBHo) / 2;


	var attr_1 = "{ \"viewBox\" : \""+viewBox[cvjs_active_floorplan_div_nr].X+" "+viewBox[cvjs_active_floorplan_div_nr].Y+" "+viewBoxWidth[cvjs_active_floorplan_div_nr]+" "+viewBoxHeight[cvjs_active_floorplan_div_nr]+"\" }";
	var pan_x = jQuery.parseJSON(attr_1);
	cvjs_rPaper[cvjs_active_floorplan_div_nr].attr(pan_x);

//NNN	setView(cvjs_rPaper[cvjs_active_floorplan_div_nr], viewBox[cvjs_active_floorplan_div_nr].X,viewBox[cvjs_active_floorplan_div_nr].Y,viewBoxWidth[cvjs_active_floorplan_div_nr],viewBoxHeight[cvjs_active_floorplan_div_nr]);
//NNN	zoomScale = viewBoxWidth[cvjs_active_floorplan_div_nr]/cvjs_rPaper[cvjs_active_floorplan_div_nr].width;


//console.log("xx4 viewBoxWidth[cvjs_active_floorplan_div_nr] "+viewBoxWidth[cvjs_active_floorplan_div_nr]+" rpWidth[cvjs_active_floorplan_div_nr] "+rpWidth[cvjs_active_floorplan_div_nr]);

	zoomScale = viewBoxWidth[cvjs_active_floorplan_div_nr]/rpWidth[cvjs_active_floorplan_div_nr];

//	var string_X = "vBHo ="+vBHo+" vBWo ="+vBWo+" viewBox[cvjs_active_floorplan_div_nr].X="+viewBox[cvjs_active_floorplan_div_nr].X+" viewBox[cvjs_active_floorplan_div_nr].Y="+viewBox[cvjs_active_floorplan_div_nr].Y+" cvjs_rPaper[cvjs_active_floorplan_div_nr].width="+cvjs_rPaper[cvjs_active_floorplan_div_nr].width+" viewBoxWidth[cvjs_active_floorplan_div_nr]="+viewBoxWidth[cvjs_active_floorplan_div_nr]+" vBWo="+vBWo+" zoomScale="+zoomScale;
//	jQuery('#temperature').css('color', '#0000FF');
//	jQuery("#temperature").html(string_X);


	cvjs_objectIsZoomedExtents = false;

	
	// 5.1.04a
	cvjs_zoomZeroWidth();
	
}


function cvjs_zoomOutCustomFactor(floorplan_div, customZoomFactor)
{


	if (floorplan_div == undefined){
	
		// do nothing;
	}
	else{
		// find active floorplan number and set that
		cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(floorplan_div);
	
	}





	try{
//		layers_all.show();
//		layer_vqrooms[cvjs_active_floorplan_div_nr].show();
//		layer_thumb.hide();

	}
	catch(err){
		//  allow the code to work with both version 1.1 and 1.2
		var i=0;
		//console.log(err);
	}

	hideOnlyPop();
	vBHo = viewBoxHeight[cvjs_active_floorplan_div_nr];
	vBWo = viewBoxWidth[cvjs_active_floorplan_div_nr];
	viewBoxWidth[cvjs_active_floorplan_div_nr] *= customZoomFactor;
	viewBoxHeight[cvjs_active_floorplan_div_nr]*= customZoomFactor;
	viewBox[cvjs_active_floorplan_div_nr].X -= (viewBoxWidth[cvjs_active_floorplan_div_nr] - vBWo) / 2;
	viewBox[cvjs_active_floorplan_div_nr].Y -= (viewBoxHeight[cvjs_active_floorplan_div_nr] - vBHo) / 2;


	var attr_1 = "{ \"viewBox\" : \""+viewBox[cvjs_active_floorplan_div_nr].X+" "+viewBox[cvjs_active_floorplan_div_nr].Y+" "+viewBoxWidth[cvjs_active_floorplan_div_nr]+" "+viewBoxHeight[cvjs_active_floorplan_div_nr]+"\" }";
	var pan_x = jQuery.parseJSON(attr_1);
	cvjs_rPaper[cvjs_active_floorplan_div_nr].attr(pan_x);

//NNN	setView(cvjs_rPaper[cvjs_active_floorplan_div_nr], viewBox[cvjs_active_floorplan_div_nr].X,viewBox[cvjs_active_floorplan_div_nr].Y,viewBoxWidth[cvjs_active_floorplan_div_nr],viewBoxHeight[cvjs_active_floorplan_div_nr]);
//NNN	zoomScale = viewBoxWidth[cvjs_active_floorplan_div_nr]/cvjs_rPaper[cvjs_active_floorplan_div_nr].width;


//console.log("xx4 viewBoxWidth[cvjs_active_floorplan_div_nr] "+viewBoxWidth[cvjs_active_floorplan_div_nr]+" rpWidth[cvjs_active_floorplan_div_nr] "+rpWidth[cvjs_active_floorplan_div_nr]);

	zoomScale = viewBoxWidth[cvjs_active_floorplan_div_nr]/rpWidth[cvjs_active_floorplan_div_nr];

//	var string_X = "vBHo ="+vBHo+" vBWo ="+vBWo+" viewBox[cvjs_active_floorplan_div_nr].X="+viewBox[cvjs_active_floorplan_div_nr].X+" viewBox[cvjs_active_floorplan_div_nr].Y="+viewBox[cvjs_active_floorplan_div_nr].Y+" cvjs_rPaper[cvjs_active_floorplan_div_nr].width="+cvjs_rPaper[cvjs_active_floorplan_div_nr].width+" viewBoxWidth[cvjs_active_floorplan_div_nr]="+viewBoxWidth[cvjs_active_floorplan_div_nr]+" vBWo="+vBWo+" zoomScale="+zoomScale;
//	jQuery('#temperature').css('color', '#0000FF');
//	jQuery("#temperature").html(string_X);


	cvjs_objectIsZoomedExtents = false;

	
	// 5.1.04a
	cvjs_zoomZeroWidth();
	
}





function cvjs_zoomOutMouseWheel(x_pos,y_pos, floorplan_div)
{

	if (floorplan_div == undefined){
	
		// do nothing;
	}
	else{
		// find active floorplan number and set that
		cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(floorplan_div);
	
	}

	
	var canvas_width = jQuery("#"+floorplan_div).width();
	var canvas_height = jQuery("#"+floorplan_div).height();

	var position = jQuery("#"+floorplan_div).position();

	var global_scale_X = canvas_width/viewBoxWidth[cvjs_active_floorplan_div_nr];
	var global_scale_Y = canvas_height/viewBoxHeight[cvjs_active_floorplan_div_nr];

	if (global_scale_X<global_scale_Y)
		global_scale = global_scale_X;
	else
		global_scale = global_scale_Y;

	var delta_x = (canvas_width - viewBoxWidth[cvjs_active_floorplan_div_nr]*global_scale)/2 -viewBox[cvjs_active_floorplan_div_nr].X*global_scale + position.left;
	var delta_y = (canvas_height - viewBoxHeight[cvjs_active_floorplan_div_nr]*global_scale)/2 -viewBox[cvjs_active_floorplan_div_nr].Y*global_scale + position.top;
	
	
	var x_pos = x_pos+document.body.scrollLeft;
	var y_pos = y_pos+document.body.scrollTop;
	var mypointX = (x_pos-delta_x)/global_scale;
	var mypointY = (y_pos-delta_y)/global_scale;
	var x_offset =  (mypointX- viewBox[cvjs_active_floorplan_div_nr].X)/viewBoxWidth[cvjs_active_floorplan_div_nr];
	var y_offset =  (mypointY- viewBox[cvjs_active_floorplan_div_nr].Y)/viewBoxHeight[cvjs_active_floorplan_div_nr];
	


	try{
//		layers_all.show();
//		layer_vqrooms[cvjs_active_floorplan_div_nr].show();
//		layer_thumb.hide();

	}
	catch(err){
		//  allow the code to work with both version 1.1 and 1.2
		var i=0;
		//console.log(err);
	}

	hideOnlyPop();
	vBHo = viewBoxHeight[cvjs_active_floorplan_div_nr];
	vBWo = viewBoxWidth[cvjs_active_floorplan_div_nr];
	viewBoxWidth[cvjs_active_floorplan_div_nr] *= DefaultZoomFactor_mouseWheel;
	viewBoxHeight[cvjs_active_floorplan_div_nr]*= DefaultZoomFactor_mouseWheel;

	
	// offset runs from 0 to 1
	viewBox[cvjs_active_floorplan_div_nr].X -= (viewBoxWidth[cvjs_active_floorplan_div_nr] - vBWo)*(x_offset);
	viewBox[cvjs_active_floorplan_div_nr].Y -= (viewBoxHeight[cvjs_active_floorplan_div_nr] - vBHo)*(y_offset);
	
	
	
	var attr_1 = "{ \"viewBox\" : \""+viewBox[cvjs_active_floorplan_div_nr].X+" "+viewBox[cvjs_active_floorplan_div_nr].Y+" "+viewBoxWidth[cvjs_active_floorplan_div_nr]+" "+viewBoxHeight[cvjs_active_floorplan_div_nr]+"\" }";
	var pan_x = jQuery.parseJSON(attr_1);
	cvjs_rPaper[cvjs_active_floorplan_div_nr].attr(pan_x);

//NNN	setView(cvjs_rPaper[cvjs_active_floorplan_div_nr], viewBox[cvjs_active_floorplan_div_nr].X,viewBox[cvjs_active_floorplan_div_nr].Y,viewBoxWidth[cvjs_active_floorplan_div_nr],viewBoxHeight[cvjs_active_floorplan_div_nr]);
//NNN	zoomScale = viewBoxWidth[cvjs_active_floorplan_div_nr]/cvjs_rPaper[cvjs_active_floorplan_div_nr].width;


//console.log("xx4 viewBoxWidth[cvjs_active_floorplan_div_nr] "+viewBoxWidth[cvjs_active_floorplan_div_nr]+" rpWidth[cvjs_active_floorplan_div_nr] "+rpWidth[cvjs_active_floorplan_div_nr]);

	zoomScale = viewBoxWidth[cvjs_active_floorplan_div_nr]/rpWidth[cvjs_active_floorplan_div_nr];

//	var string_X = "vBHo ="+vBHo+" vBWo ="+vBWo+" viewBox[cvjs_active_floorplan_div_nr].X="+viewBox[cvjs_active_floorplan_div_nr].X+" viewBox[cvjs_active_floorplan_div_nr].Y="+viewBox[cvjs_active_floorplan_div_nr].Y+" cvjs_rPaper[cvjs_active_floorplan_div_nr].width="+cvjs_rPaper[cvjs_active_floorplan_div_nr].width+" viewBoxWidth[cvjs_active_floorplan_div_nr]="+viewBoxWidth[cvjs_active_floorplan_div_nr]+" vBWo="+vBWo+" zoomScale="+zoomScale;
//	jQuery('#temperature').css('color', '#0000FF');
//	jQuery("#temperature").html(string_X);


	cvjs_objectIsZoomedExtents = false;

	
	// 5.1.04a
	cvjs_zoomZeroWidth();
	
}





function cvjs_zoomPositionFactor(x_pos,y_pos, wportx, wporty, floorplan_div, zoomfactor)
{

	if (floorplan_div == undefined){
	
		// do nothing;
	}
	else{
		// find active floorplan number and set that
		cvjs_active_floorplan_div_nr = cvjs_rPaperIndex(floorplan_div);
	
	}

	
	var canvas_width = jQuery("#"+floorplan_div).width();
	var canvas_height = jQuery("#"+floorplan_div).height();

	var position = jQuery("#"+floorplan_div).position();

	var global_scale_X = canvas_width/viewBoxWidth[cvjs_active_floorplan_div_nr];
	var global_scale_Y = canvas_height/viewBoxHeight[cvjs_active_floorplan_div_nr];

	if (global_scale_X<global_scale_Y)
		global_scale = global_scale_X;
	else
		global_scale = global_scale_Y;

		
	hideOnlyPop();
	vBHo = viewBoxHeight[cvjs_active_floorplan_div_nr];
	vBWo = viewBoxWidth[cvjs_active_floorplan_div_nr];
	viewBoxWidth[cvjs_active_floorplan_div_nr] *= zoomfactor;
	viewBoxHeight[cvjs_active_floorplan_div_nr]*= zoomfactor;

	

	viewBox[cvjs_active_floorplan_div_nr].X = wportx -x_pos/global_scale;
	viewBox[cvjs_active_floorplan_div_nr].Y = wporty -y_pos/global_scale;
	
	
	var attr_1 = "{ \"viewBox\" : \""+viewBox[cvjs_active_floorplan_div_nr].X+" "+viewBox[cvjs_active_floorplan_div_nr].Y+" "+viewBoxWidth[cvjs_active_floorplan_div_nr]+" "+viewBoxHeight[cvjs_active_floorplan_div_nr]+"\" }";

	console.log("attr_l "+attr_1);

	var pan_x = jQuery.parseJSON(attr_1);
	cvjs_rPaper[cvjs_active_floorplan_div_nr].attr(pan_x);

	zoomScale = viewBoxWidth[cvjs_active_floorplan_div_nr]/rpWidth[cvjs_active_floorplan_div_nr];
	
	cvjs_objectIsZoomedExtents = false;

	
		// 5.1.04a
	cvjs_zoomZeroWidth();

}












function cvjs_redrawViewBox()
{


	try{
//		layers_all.show();
//		layer_vqrooms[cvjs_active_floorplan_div_nr].show();
//		layer_thumb.hide();

	}
	catch(err){
		//  allow the code to work with both version 1.1 and 1.2
		var i=0;
		//console.log(err);
	}
	hideOnlyPop();

	viewBox[cvjs_active_floorplan_div_nr].X-= 0.01;
	var attr_2 = "{\"viewBox\" : \""+viewBox[cvjs_active_floorplan_div_nr].X+" "+viewBox[cvjs_active_floorplan_div_nr].Y+" "+viewBoxWidth[cvjs_active_floorplan_div_nr]+" "+viewBoxHeight[cvjs_active_floorplan_div_nr]+"\" }";
	var json_obj = jQuery.parseJSON(attr_2);
	cvjs_rPaper[cvjs_active_floorplan_div_nr].attr(json_obj);


if (cvjs_debug) console.log("after pan 1");
}





function d2h(d) {
	var h = d.toString(16);
	if (d < 16)
		return '0'+h;
	return h;
	}
function h2d(h) {return parseInt(h,16);}

function rgb2hex(r, g, b)
{
	var lastHex = d2h(r)+d2h(g)+d2h(b);

	return lastHex;
}


// MMMMMMMMMMMMMMM   fileload modal objects


var fnArr_FileName = new Array();  // load from .rw file
var fnArr_ShortName = new Array();  // load from .rw file
var fnArr_listdirectory_FileName = new Array();   // generate from list directory at load time of Add/Edit
var fnArr_listdirectory_ShortName = new Array();  // generate from list directory at load time of Add/Edit